{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Track Awesome Malware Persistence Updates Weekly",
  "_seo_title": "Track Awesome Malware Persistence (Karneades/awesome-malware-persistence) Updates Weekly - Track Awesome List",
  "_site_title": "Track Awesome List",
  "description": "A curated list of awesome malware persistence tools and resources. ",
  "home_page_url": "https://www.trackawesomelist.com/Karneades/awesome-malware-persistence/week/",
  "feed_url": "https://www.trackawesomelist.com/Karneades/awesome-malware-persistence/week/feed.json",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/2024/49/",
      "title": "Awesome Malware Persistence Updates on Dec 02 - Dec 08, 2024",
      "_short_title": "Dec 02 - Dec 08, 2024",
      "_slug": "2024/49/",
      "summary": "2 awesome projects updated on Dec 02 - Dec 08, 2024",
      "_filepath": "/content/2024/49/README.md",
      "url": "https://www.trackawesomelist.com/2024/49/",
      "date_published": "2024-12-02T15:47:59.000Z",
      "date_modified": "2024-12-02T15:47:59.000Z",
      "content_text": "\n\n### Techniques / Linux\n\n*   [Linux LKM Persistence](https://righteousit.com/2024/11/18/linux-lkm-persistence/) - Rootkit leveraging Linux loadable kernel module (LKM).\n\n### Detection Testing / Linux\n\n*   [Diamorphine (⭐2.1k)](https://github.com/m0nad/Diamorphine) -  A loadable kernel module (LKM) rootkit for Linux Kernels (x86/x86\\_64 and ARM64).",
      "content_html": "<h3><p>Techniques / Linux</p>\n</h3>\n<ul>\n<li><a href=\"https://righteousit.com/2024/11/18/linux-lkm-persistence/\" rel=\"noopener noreferrer\">Linux LKM Persistence</a> - Rootkit leveraging Linux loadable kernel module (LKM).</li>\n</ul>\n<h3><p>Detection Testing / Linux</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/m0nad/Diamorphine\" rel=\"noopener noreferrer\">Diamorphine (⭐2.1k)</a> -  A loadable kernel module (LKM) rootkit for Linux Kernels (x86/x86_64 and ARM64).</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/35/",
      "title": "Awesome Malware Persistence Updates on Aug 26 - Sep 01, 2024",
      "_short_title": "Aug 26 - Sep 01, 2024",
      "_slug": "2024/35/",
      "summary": "6 awesome projects updated on Aug 26 - Sep 01, 2024",
      "_filepath": "/content/2024/35/README.md",
      "url": "https://www.trackawesomelist.com/2024/35/",
      "date_published": "2024-08-26T07:02:38.000Z",
      "date_modified": "2024-08-30T09:25:24.000Z",
      "content_text": "\n\n### Techniques / Linux\n\n*   [PANIX - Persistence Against \\*NIX - Features (⭐673)](https://github.com/Aegrah/PANIX?tab=readme-ov-file#features) - List of persistence techniques.\n*   [Linux Detection Engineering -  A primer on persistence mechanisms](https://www.elastic.co/security-labs/primer-on-persistence-mechanisms) - List of Linux persistence mechanisms.\n\n### Techniques / Cloud\n\n*   [Persisting on Entra ID applications and User Managed Identities with Federated Credentials](https://dirkjanm.io/persisting-with-federated-credentials-entra-apps-managed-identities/) - Persist on Entra ID applications and User Managed Identities with Federated Credentials.\n\n### Detection Testing / Linux\n\n*   [PANIX (⭐673)](https://github.com/Aegrah/PANIX) - A highly customizable Linux persistence tool. Perform various persistence techniques against Linux systems, among others Debian and RHEL.\n\n### Detection Testing / macOS\n\n*   [PoisonApple (⭐226)](https://github.com/CyborgSecurity/PoisonApple) - Perform various persistence techniques on macOS.\n\n### Detection Testing / Windows\n\n*   [hasherezade persistence demos (⭐222)](https://github.com/hasherezade/persistence_demos) - Various (also non standard) persistence methods used by malware for testing own detection, among others COM hijacking demo is found in the repo.",
      "content_html": "<h3><p>Techniques / Linux</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Aegrah/PANIX?tab=readme-ov-file#features\" rel=\"noopener noreferrer\">PANIX - Persistence Against *NIX - Features (⭐673)</a> - List of persistence techniques.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.elastic.co/security-labs/primer-on-persistence-mechanisms\" rel=\"noopener noreferrer\">Linux Detection Engineering -  A primer on persistence mechanisms</a> - List of Linux persistence mechanisms.</li>\n</ul>\n<h3><p>Techniques / Cloud</p>\n</h3>\n<ul>\n<li><a href=\"https://dirkjanm.io/persisting-with-federated-credentials-entra-apps-managed-identities/\" rel=\"noopener noreferrer\">Persisting on Entra ID applications and User Managed Identities with Federated Credentials</a> - Persist on Entra ID applications and User Managed Identities with Federated Credentials.</li>\n</ul>\n<h3><p>Detection Testing / Linux</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Aegrah/PANIX\" rel=\"noopener noreferrer\">PANIX (⭐673)</a> - A highly customizable Linux persistence tool. Perform various persistence techniques against Linux systems, among others Debian and RHEL.</li>\n</ul>\n<h3><p>Detection Testing / macOS</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/CyborgSecurity/PoisonApple\" rel=\"noopener noreferrer\">PoisonApple (⭐226)</a> - Perform various persistence techniques on macOS.</li>\n</ul>\n<h3><p>Detection Testing / Windows</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/hasherezade/persistence_demos\" rel=\"noopener noreferrer\">hasherezade persistence demos (⭐222)</a> - Various (also non standard) persistence methods used by malware for testing own detection, among others COM hijacking demo is found in the repo.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/28/",
      "title": "Awesome Malware Persistence Updates on Jul 08 - Jul 14, 2024",
      "_short_title": "Jul 08 - Jul 14, 2024",
      "_slug": "2024/28/",
      "summary": "43 awesome projects updated on Jul 08 - Jul 14, 2024",
      "_filepath": "/content/2024/28/README.md",
      "url": "https://www.trackawesomelist.com/2024/28/",
      "date_published": "2024-07-11T12:21:46.000Z",
      "date_modified": "2024-07-11T12:21:46.000Z",
      "content_text": "\n\n### Techniques / Generic\n\n*   [MITRE ATT\\&CK tactic \"TA0003 - Persistence\"](https://attack.mitre.org/tactics/TA0003/) - MITRE ATT\\&CK tactic \"TA0003 - Persistence\".\n*   [forensic artifact repository (⭐1.1k)](https://github.com/ForensicArtifacts/artifacts) - Forensic artifact repository covers persistence techniques in their artifacts.\n*   [Sigma rules (⭐9.4k)](https://github.com/Neo23x0/sigma/tree/master/rules) - Sigma rules which covers persistence techniques. You can even use filters such as `--filter tag=attack.persistence` or specifically for one technique `tag=attack.t1084`.\n\n### Techniques / Linux\n\n*   [Linux Malware Persistence with Cron](https://www.sandflysecurity.com/blog/linux-malware-persistence-with-cron/) - Blog post about linux persistence using cron jobs.\n*   [Linux Persistence Techniques](https://research.splunk.com/stories/linux_persistence_techniques/) - List of persistence techniques.\n*   [Linux Red Team Persistence Techniques](https://www.linode.com/docs/guides/linux-red-team-persistence-techniques/) - List of persistence techniques.\n*   [ebpfkit (⭐802)](https://github.com/Gui774ume/ebpfkit) - Rootkit leveraging eBPF.\n*   [TripleCross (⭐1.9k)](https://github.com/h3xduck/TripleCross) - Rootkit leveraging eBPF.\n\n### Techniques / macOS\n\n*   [theevilbit's series \"Beyond the good ol' LaunchAgents\"](https://theevilbit.github.io/tags/beyond/) - List of macOS persistence beyond just the LaunchDaemons or LaunchAgents.\n*   [KnockKnock (⭐560)](https://github.com/objective-see/KnockKnock/blob/main/Plugins) - A persistence detection tool for macOS to scan for persistence mechanisms on macOS. Specific persistence locations are found in the [plugins (⭐560)](https://github.com/objective-see/KnockKnock/tree/main/Plugins) folder, e.g. [LaunchItems (⭐560)](https://github.com/objective-see/KnockKnock/blob/main/Plugins/LaunchItems.m#L21) or [StartupScripts (⭐560)](https://github.com/objective-see/KnockKnock/blob/main/Plugins/StartupScripts.m#L22).\n*   [PoisonApple (⭐226)](https://github.com/CyborgSecurity/PoisonApple/blob/master/poisonapple/techniques.py) - Learn about various macOS persistence techniques by looking at the source code of PoisonApple.\n*   [How malware persists on macOS](https://www.sentinelone.com/blog/how-malware-persists-on-macos/) - List of macOS persistence mechanisms.\n\n### Techniques / Windows\n\n*   [Hexacorn's blog](http://www.hexacorn.com/blog/category/autostart-persistence/) - Hexacorn's blog category for persistence category including the series \"Beyond good ol' Run key\".\n*   [Autoruns](https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns) - You can learn which Windows persistence mechanisms are checked by looking at the output of Autoruns on your own client. Categories and the different locations where things were found are seen in the output. A disassembly of Autoruns lists a subset of the entries which are scanned.\n*   [PowerShell implementation of Autoruns (⭐275)](https://github.com/p0w3rsh3ll/AutoRuns/blob/master/AutoRuns.psm1) - Another way to find Windows persistence locations is to look at the source code of the PowerShell version of Autoruns. Bonus: A history of the covered persistence locations for each Autoruns version is found at the end of the module file too, which is so awesome!\n*   [Common malware persistence mechanisms](https://resources.infosecinstitute.com/common-malware-persistence-mechanisms/) - Different persistence mechanisms for different vectors are described.\n*   [Malware persistence techniques](https://www.andreafortuna.org/2017/07/06/malware-persistence-techniques/) - Good summary of multiple persistence mechanisms, ranging from multiple registry keys to more advanced one, like COM hijacking.\n*   [Detecting & Removing an Attacker's WMI Persistence](https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96) - Blog post about detecting and removing WMI persistence.\n*   [Windows Persistence using WinLogon](https://www.hackingarticles.in/windows-persistence-using-winlogon/) - Blog post about abusing WinLogon.\n*   [Untangling Kovter's persistence methods](https://blog.malwarebytes.com/threat-analysis/2016/07/untangling-kovter/) - Blog post about Kovter's persistens methos, among others, hiding in registry. Another one is [Threat Spotlight: Kovter Malware Fileless Persistence Mechanism](https://threatvector.cylance.com/en_us/home/threat-spotlight-kovter-malware-fileless-persistence-mechanism.html).\n*   [Persistence using GlobalFlags in Image File Execution Options – Hidden from Autoruns.exe](https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/) - Blog post about abusing GlobalFlag for process execution.\n*   [Uncovering a MyKings Variant With Bootloader Persistence via Managed Detection and Response](https://blog.trendmicro.com/trendlabs-security-intelligence/uncovering-a-mykings-variant-with-bootloader-persistence-via-managed-detection-and-response/) - Blog post about bootloader persistence.\n*   Various blog posts about COM/CLSID hijacking\n    *   [COM Object hijacking: the discreet way of persistence, 2014](https://www.gdatasoftware.com/blog/2014/10/23941-com-object-hijacking-the-discreet-way-of-persistence)\n    *   [Persistence – COM Hijacking, 2020](https://pentestlab.blog/2020/05/20/persistence-com-hijacking/)\n    *   [Abusing COM hijacking in combination with scheduled tasks, 2016](https://enigma0x3.net/2016/05/25/userland-persistence-with-scheduled-tasks-and-com-handler-hijacking/)\n*   [Hunting for persistence via Microsoft Exchange Server or Outlook](https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook) - Blog post about Microsoft Exchange server persistence.\n\n### Techniques / Cloud\n\n*   [Shadow Linking: The Persistence Vector of SaaS Identity Threat](https://www.obsidiansecurity.com/blog/shadow-linking-the-persistence-vector-of-saas-identity-threat/) - Abuse of additional identity providers to persist in an environment.\n\n### Techniques / Firmware\n\n*   [MoonBounce: the dark side of UEFI firmware](https://securelist.com/moonbounce-the-dark-side-of-uefi-firmware/105468) - An in-depth write up about one particular UEFI bootkit.\n\n### Persistence Removal / Generic\n\n*   [Awesome Incident Response (⭐8.3k)](https://github.com/meirwah/awesome-incident-response) - Use the tools and resources for security incident response, aimed to help security analysts and DFIR teams.\n\n### Persistence Removal / Windows\n\n*   [PowerSponse (⭐38)](https://github.com/swisscom/PowerSponse) - PowerSponse includes various commands for cleanup of persistence mechanisms.\n*   [Removing Backdoors – Powershell Empire Edition](https://www.n00py.io/2017/01/removing-backdoors-powershell-empire-edition/) - Various blog posts handle the removal of WMI implants.\n*   [RegDelNull](https://docs.microsoft.com/en-us/sysinternals/downloads/regdelnull) - Removal of registry keys with null bytes - used e.g. in run keys for evasion.\n\n### Detection Testing / Generic\n\n*   [Atomic Red Team (⭐11k)](https://github.com/redcanaryco/atomic-red-team) - Atomic Red Team supports also the MITRE ATT\\&CK persistence techniques, see e.g. [T1044 \"File System Permissions Weakness\" (⭐11k)](https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1044/T1044.yaml).\n\n### Prevention / macOS\n\n*   [BlockBlock (⭐698)](https://github.com/objective-see/BlockBlock) - A tool which provides continual protection by monitoring persistence locations and protects them accordingly. Similar to KnockKnock but for blocking.\n\n### Collection / Generic\n\n*   [Awesome Forensics (⭐4.4k)](https://github.com/Cugu/awesome-forensics) - Use the tools from this list which includes awesome free (mostly open source) forensic analysis tools and resources. They help collecting the persistence mechanisms at scale, e.g. by using remote forensics tools.\n*   [osquery](https://osquery.readthedocs.io) - Query persistence mechanisms on clients.\n*   [OSSEC (⭐4.8k)](https://github.com/ossec/ossec-hids) - Use rules and logs from the HIDS to detection configuration changes.\n\n### Collection / macOS\n\n*   [KnockKnock](https://www.objective-see.com/products/knockknock.html) - A tool to uncover persistently installed software in order to generically reveal such malware. See [GitHub repository too for the source code (⭐560)](https://github.com/objective-see/KnockKnock).\n*   [Dylib Hijack Scanner or DHS](https://www.objective-see.com/products/dhs.html) - A simple utility that will scan your computer for applications that are either susceptible to dylib hijacking or have been hijacked. See [GitHub repository too for the source code (⭐97)](https://github.com/objective-see/DylibHijackScanner).\n\n### Collection / Windows\n\n*   [AutorunsToWinEventLog.ps1 (⭐1.3k)](https://github.com/palantir/windows-event-forwarding/blob/master/AutorunsToWinEventLog/AutorunsToWinEventLog.ps1) - Instead of using CSV output and copy these file to the server, you can use the AutorunsToWinEventLog script to convert the Autoruns output to Windows event logs and rely on standard Windows event log forwarding.\n*   [PowerShell Autoruns (⭐275)](https://github.com/p0w3rsh3ll/AutoRuns) - A PowerShell version of Autoruns.\n*   [PersistenceSniper (⭐2k)](https://github.com/last-byte/PersistenceSniper) - Powershell module to hunt for persistence implanted in Windows machines.\n*   [RegRipper](https://github.com/keydet89/RegRipper2.8) - Extracts various persistence mechanisms from the registry files directly.\n*   [RECmd (⭐150)](https://github.com/EricZimmerman/RECmd) - Extract various persistence mechanisms, e.g. by using the config file [UserClassesASEPs (⭐150)](https://github.com/EricZimmerman/RECmd/blob/master/BatchExamples/UserClassesASEPs.reb) to extract user's CLSID information.\n*   [KAPE](https://www.kroll.com/en/insights/publications/cyber/kroll-artifact-parser-extractor-kape) - The tool allows collecting various predefined artifactgs using targets and modules, see [KapeFiles (⭐747)](https://github.com/EricZimmerman/KapeFiles) which include persistence mechanisms, among others there's a collection of [LNK files (⭐747)](https://github.com/EricZimmerman/KapeFiles/blob/master/Targets/Windows/LNKFilesAndJumpLists.tkape), [scheduled task files (⭐747)](https://github.com/EricZimmerman/KapeFiles/blob/master/Targets/Windows/ScheduledTasks.tkape) and [scheduled task listing (⭐747)](https://github.com/EricZimmerman/KapeFiles/blob/master/Modules/LiveResponse/schtasks.mkape) or a [WMI repository auditing (⭐747)](https://github.com/EricZimmerman/KapeFiles/blob/master/Modules/LiveResponse/WMI-Repository-Auditing.mkape) module.",
      "content_html": "<h3><p>Techniques / Generic</p>\n</h3>\n<ul>\n<li><a href=\"https://attack.mitre.org/tactics/TA0003/\" rel=\"noopener noreferrer\">MITRE ATT&amp;CK tactic \"TA0003 - Persistence\"</a> - MITRE ATT&amp;CK tactic \"TA0003 - Persistence\".</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ForensicArtifacts/artifacts\" rel=\"noopener noreferrer\">forensic artifact repository (⭐1.1k)</a> - Forensic artifact repository covers persistence techniques in their artifacts.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/Neo23x0/sigma/tree/master/rules\" rel=\"noopener noreferrer\">Sigma rules (⭐9.4k)</a> - Sigma rules which covers persistence techniques. You can even use filters such as <code>--filter tag=attack.persistence</code> or specifically for one technique <code>tag=attack.t1084</code>.</li>\n</ul>\n<h3><p>Techniques / Linux</p>\n</h3>\n<ul>\n<li><a href=\"https://www.sandflysecurity.com/blog/linux-malware-persistence-with-cron/\" rel=\"noopener noreferrer\">Linux Malware Persistence with Cron</a> - Blog post about linux persistence using cron jobs.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://research.splunk.com/stories/linux_persistence_techniques/\" rel=\"noopener noreferrer\">Linux Persistence Techniques</a> - List of persistence techniques.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.linode.com/docs/guides/linux-red-team-persistence-techniques/\" rel=\"noopener noreferrer\">Linux Red Team Persistence Techniques</a> - List of persistence techniques.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/Gui774ume/ebpfkit\" rel=\"noopener noreferrer\">ebpfkit (⭐802)</a> - Rootkit leveraging eBPF.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/h3xduck/TripleCross\" rel=\"noopener noreferrer\">TripleCross (⭐1.9k)</a> - Rootkit leveraging eBPF.</li>\n</ul>\n<h3><p>Techniques / macOS</p>\n</h3>\n<ul>\n<li><a href=\"https://theevilbit.github.io/tags/beyond/\" rel=\"noopener noreferrer\">theevilbit's series \"Beyond the good ol' LaunchAgents\"</a> - List of macOS persistence beyond just the LaunchDaemons or LaunchAgents.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/objective-see/KnockKnock/blob/main/Plugins\" rel=\"noopener noreferrer\">KnockKnock (⭐560)</a> - A persistence detection tool for macOS to scan for persistence mechanisms on macOS. Specific persistence locations are found in the <a href=\"https://github.com/objective-see/KnockKnock/tree/main/Plugins\" rel=\"noopener noreferrer\">plugins (⭐560)</a> folder, e.g. <a href=\"https://github.com/objective-see/KnockKnock/blob/main/Plugins/LaunchItems.m#L21\" rel=\"noopener noreferrer\">LaunchItems (⭐560)</a> or <a href=\"https://github.com/objective-see/KnockKnock/blob/main/Plugins/StartupScripts.m#L22\" rel=\"noopener noreferrer\">StartupScripts (⭐560)</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/CyborgSecurity/PoisonApple/blob/master/poisonapple/techniques.py\" rel=\"noopener noreferrer\">PoisonApple (⭐226)</a> - Learn about various macOS persistence techniques by looking at the source code of PoisonApple.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sentinelone.com/blog/how-malware-persists-on-macos/\" rel=\"noopener noreferrer\">How malware persists on macOS</a> - List of macOS persistence mechanisms.</li>\n</ul>\n<h3><p>Techniques / Windows</p>\n</h3>\n<ul>\n<li><a href=\"http://www.hexacorn.com/blog/category/autostart-persistence/\" rel=\"noopener noreferrer\">Hexacorn's blog</a> - Hexacorn's blog category for persistence category including the series \"Beyond good ol' Run key\".</li>\n</ul>\n\n<ul>\n<li><a href=\"https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns\" rel=\"noopener noreferrer\">Autoruns</a> - You can learn which Windows persistence mechanisms are checked by looking at the output of Autoruns on your own client. Categories and the different locations where things were found are seen in the output. A disassembly of Autoruns lists a subset of the entries which are scanned.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/p0w3rsh3ll/AutoRuns/blob/master/AutoRuns.psm1\" rel=\"noopener noreferrer\">PowerShell implementation of Autoruns (⭐275)</a> - Another way to find Windows persistence locations is to look at the source code of the PowerShell version of Autoruns. Bonus: A history of the covered persistence locations for each Autoruns version is found at the end of the module file too, which is so awesome!</li>\n</ul>\n\n<ul>\n<li><a href=\"https://resources.infosecinstitute.com/common-malware-persistence-mechanisms/\" rel=\"noopener noreferrer\">Common malware persistence mechanisms</a> - Different persistence mechanisms for different vectors are described.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.andreafortuna.org/2017/07/06/malware-persistence-techniques/\" rel=\"noopener noreferrer\">Malware persistence techniques</a> - Good summary of multiple persistence mechanisms, ranging from multiple registry keys to more advanced one, like COM hijacking.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96\" rel=\"noopener noreferrer\">Detecting &amp; Removing an Attacker's WMI Persistence</a> - Blog post about detecting and removing WMI persistence.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.hackingarticles.in/windows-persistence-using-winlogon/\" rel=\"noopener noreferrer\">Windows Persistence using WinLogon</a> - Blog post about abusing WinLogon.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://blog.malwarebytes.com/threat-analysis/2016/07/untangling-kovter/\" rel=\"noopener noreferrer\">Untangling Kovter's persistence methods</a> - Blog post about Kovter's persistens methos, among others, hiding in registry. Another one is <a href=\"https://threatvector.cylance.com/en_us/home/threat-spotlight-kovter-malware-fileless-persistence-mechanism.html\" rel=\"noopener noreferrer\">Threat Spotlight: Kovter Malware Fileless Persistence Mechanism</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/\" rel=\"noopener noreferrer\">Persistence using GlobalFlags in Image File Execution Options – Hidden from Autoruns.exe</a> - Blog post about abusing GlobalFlag for process execution.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://blog.trendmicro.com/trendlabs-security-intelligence/uncovering-a-mykings-variant-with-bootloader-persistence-via-managed-detection-and-response/\" rel=\"noopener noreferrer\">Uncovering a MyKings Variant With Bootloader Persistence via Managed Detection and Response</a> - Blog post about bootloader persistence.</li>\n</ul>\n\n<ul>\n<li>Various blog posts about COM/CLSID hijacking<ul>\n<li><a href=\"https://www.gdatasoftware.com/blog/2014/10/23941-com-object-hijacking-the-discreet-way-of-persistence\" rel=\"noopener noreferrer\">COM Object hijacking: the discreet way of persistence, 2014</a></li>\n<li><a href=\"https://pentestlab.blog/2020/05/20/persistence-com-hijacking/\" rel=\"noopener noreferrer\">Persistence – COM Hijacking, 2020</a></li>\n<li><a href=\"https://enigma0x3.net/2016/05/25/userland-persistence-with-scheduled-tasks-and-com-handler-hijacking/\" rel=\"noopener noreferrer\">Abusing COM hijacking in combination with scheduled tasks, 2016</a></li>\n</ul>\n</li>\n</ul>\n\n<ul>\n<li><a href=\"https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook\" rel=\"noopener noreferrer\">Hunting for persistence via Microsoft Exchange Server or Outlook</a> - Blog post about Microsoft Exchange server persistence.</li>\n</ul>\n<h3><p>Techniques / Cloud</p>\n</h3>\n<ul>\n<li><a href=\"https://www.obsidiansecurity.com/blog/shadow-linking-the-persistence-vector-of-saas-identity-threat/\" rel=\"noopener noreferrer\">Shadow Linking: The Persistence Vector of SaaS Identity Threat</a> - Abuse of additional identity providers to persist in an environment.</li>\n</ul>\n<h3><p>Techniques / Firmware</p>\n</h3>\n<ul>\n<li><a href=\"https://securelist.com/moonbounce-the-dark-side-of-uefi-firmware/105468\" rel=\"noopener noreferrer\">MoonBounce: the dark side of UEFI firmware</a> - An in-depth write up about one particular UEFI bootkit.</li>\n</ul>\n<h3><p>Persistence Removal / Generic</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/meirwah/awesome-incident-response\" rel=\"noopener noreferrer\">Awesome Incident Response (⭐8.3k)</a> - Use the tools and resources for security incident response, aimed to help security analysts and DFIR teams.</li>\n</ul>\n<h3><p>Persistence Removal / Windows</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/swisscom/PowerSponse\" rel=\"noopener noreferrer\">PowerSponse (⭐38)</a> - PowerSponse includes various commands for cleanup of persistence mechanisms.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.n00py.io/2017/01/removing-backdoors-powershell-empire-edition/\" rel=\"noopener noreferrer\">Removing Backdoors – Powershell Empire Edition</a> - Various blog posts handle the removal of WMI implants.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://docs.microsoft.com/en-us/sysinternals/downloads/regdelnull\" rel=\"noopener noreferrer\">RegDelNull</a> - Removal of registry keys with null bytes - used e.g. in run keys for evasion.</li>\n</ul>\n<h3><p>Detection Testing / Generic</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/redcanaryco/atomic-red-team\" rel=\"noopener noreferrer\">Atomic Red Team (⭐11k)</a> - Atomic Red Team supports also the MITRE ATT&amp;CK persistence techniques, see e.g. <a href=\"https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1044/T1044.yaml\" rel=\"noopener noreferrer\">T1044 \"File System Permissions Weakness\" (⭐11k)</a>.</li>\n</ul>\n<h3><p>Prevention / macOS</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/objective-see/BlockBlock\" rel=\"noopener noreferrer\">BlockBlock (⭐698)</a> - A tool which provides continual protection by monitoring persistence locations and protects them accordingly. Similar to KnockKnock but for blocking.</li>\n</ul>\n<h3><p>Collection / Generic</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Cugu/awesome-forensics\" rel=\"noopener noreferrer\">Awesome Forensics (⭐4.4k)</a> - Use the tools from this list which includes awesome free (mostly open source) forensic analysis tools and resources. They help collecting the persistence mechanisms at scale, e.g. by using remote forensics tools.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://osquery.readthedocs.io\" rel=\"noopener noreferrer\">osquery</a> - Query persistence mechanisms on clients.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ossec/ossec-hids\" rel=\"noopener noreferrer\">OSSEC (⭐4.8k)</a> - Use rules and logs from the HIDS to detection configuration changes.</li>\n</ul>\n<h3><p>Collection / macOS</p>\n</h3>\n<ul>\n<li><a href=\"https://www.objective-see.com/products/knockknock.html\" rel=\"noopener noreferrer\">KnockKnock</a> - A tool to uncover persistently installed software in order to generically reveal such malware. See <a href=\"https://github.com/objective-see/KnockKnock\" rel=\"noopener noreferrer\">GitHub repository too for the source code (⭐560)</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.objective-see.com/products/dhs.html\" rel=\"noopener noreferrer\">Dylib Hijack Scanner or DHS</a> - A simple utility that will scan your computer for applications that are either susceptible to dylib hijacking or have been hijacked. See <a href=\"https://github.com/objective-see/DylibHijackScanner\" rel=\"noopener noreferrer\">GitHub repository too for the source code (⭐97)</a>.</li>\n</ul>\n<h3><p>Collection / Windows</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/palantir/windows-event-forwarding/blob/master/AutorunsToWinEventLog/AutorunsToWinEventLog.ps1\" rel=\"noopener noreferrer\">AutorunsToWinEventLog.ps1 (⭐1.3k)</a> - Instead of using CSV output and copy these file to the server, you can use the AutorunsToWinEventLog script to convert the Autoruns output to Windows event logs and rely on standard Windows event log forwarding.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/p0w3rsh3ll/AutoRuns\" rel=\"noopener noreferrer\">PowerShell Autoruns (⭐275)</a> - A PowerShell version of Autoruns.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/last-byte/PersistenceSniper\" rel=\"noopener noreferrer\">PersistenceSniper (⭐2k)</a> - Powershell module to hunt for persistence implanted in Windows machines.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/keydet89/RegRipper2.8\" rel=\"noopener noreferrer\">RegRipper</a> - Extracts various persistence mechanisms from the registry files directly.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/EricZimmerman/RECmd\" rel=\"noopener noreferrer\">RECmd (⭐150)</a> - Extract various persistence mechanisms, e.g. by using the config file <a href=\"https://github.com/EricZimmerman/RECmd/blob/master/BatchExamples/UserClassesASEPs.reb\" rel=\"noopener noreferrer\">UserClassesASEPs (⭐150)</a> to extract user's CLSID information.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.kroll.com/en/insights/publications/cyber/kroll-artifact-parser-extractor-kape\" rel=\"noopener noreferrer\">KAPE</a> - The tool allows collecting various predefined artifactgs using targets and modules, see <a href=\"https://github.com/EricZimmerman/KapeFiles\" rel=\"noopener noreferrer\">KapeFiles (⭐747)</a> which include persistence mechanisms, among others there's a collection of <a href=\"https://github.com/EricZimmerman/KapeFiles/blob/master/Targets/Windows/LNKFilesAndJumpLists.tkape\" rel=\"noopener noreferrer\">LNK files (⭐747)</a>, <a href=\"https://github.com/EricZimmerman/KapeFiles/blob/master/Targets/Windows/ScheduledTasks.tkape\" rel=\"noopener noreferrer\">scheduled task files (⭐747)</a> and <a href=\"https://github.com/EricZimmerman/KapeFiles/blob/master/Modules/LiveResponse/schtasks.mkape\" rel=\"noopener noreferrer\">scheduled task listing (⭐747)</a> or a <a href=\"https://github.com/EricZimmerman/KapeFiles/blob/master/Modules/LiveResponse/WMI-Repository-Auditing.mkape\" rel=\"noopener noreferrer\">WMI repository auditing (⭐747)</a> module.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/11/",
      "title": "Awesome Malware Persistence Updates on Mar 13 - Mar 19, 2023",
      "_short_title": "Mar 13 - Mar 19, 2023",
      "_slug": "2023/11/",
      "summary": "1 awesome projects updated on Mar 13 - Mar 19, 2023",
      "_filepath": "/content/2023/11/README.md",
      "url": "https://www.trackawesomelist.com/2023/11/",
      "date_published": "2023-03-18T17:11:50.000Z",
      "date_modified": "2023-03-18T17:11:50.000Z",
      "content_text": "\n\n### Collection / Linux\n\n*   [Linux Security and Monitoring Scripts (⭐324)](https://github.com/sqall01/LSMS) - Security and monitoring scripts you can use to monitor your Linux installation for security-related events or for an investigation. Among other finding systemd unit files used for malware persistence.",
      "content_html": "<h3><p>Collection / Linux</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/sqall01/LSMS\" rel=\"noopener noreferrer\">Linux Security and Monitoring Scripts (⭐324)</a> - Security and monitoring scripts you can use to monitor your Linux installation for security-related events or for an investigation. Among other finding systemd unit files used for malware persistence.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/7/",
      "title": "Awesome Malware Persistence Updates on Feb 14 - Feb 20, 2022",
      "_short_title": "Feb 14 - Feb 20, 2022",
      "_slug": "2022/7/",
      "summary": "1 awesome projects updated on Feb 14 - Feb 20, 2022",
      "_filepath": "/content/2022/7/README.md",
      "url": "https://www.trackawesomelist.com/2022/7/",
      "date_published": "2022-02-15T08:34:23.000Z",
      "date_modified": "2022-02-15T08:34:23.000Z",
      "content_text": "\n\n### Collection / Windows\n\n*   [Autoruns](http://technet.microsoft.com/en-us/sysinternals/bb963902) - A powerful persistence collection tool on Windows is Autoruns. It collects different categories and persistence information from a live system and [in\n    limited ways from offline images](https://www.sans.org/blog/offline-autoruns-revisited-auditing-malware-persistence/). There is a UI and a command line program and the output format can be set to CSV which can then be imported into your log collection system of choice.",
      "content_html": "<h3><p>Collection / Windows</p>\n</h3>\n<ul>\n<li><a href=\"http://technet.microsoft.com/en-us/sysinternals/bb963902\" rel=\"noopener noreferrer\">Autoruns</a> - A powerful persistence collection tool on Windows is Autoruns. It collects different categories and persistence information from a live system and <a href=\"https://www.sans.org/blog/offline-autoruns-revisited-auditing-malware-persistence/\" rel=\"noopener noreferrer\">in\nlimited ways from offline images</a>. There is a UI and a command line program and the output format can be set to CSV which can then be imported into your log collection system of choice.</li>\n</ul>\n"
    }
  ]
}
