{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Jul 30, 2021",
  "_site_title": "Track Awesome List",
  "description": "5 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Jul 30, 2021 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/n2cholas/awesome-jax/",
      "title": "Awesome Jax",
      "_slug": "n2cholas/awesome-jax/",
      "_filepath": "/content/n2cholas/awesome-jax/README.md",
      "url": "https://www.trackawesomelist.com/n2cholas/awesome-jax/",
      "summary": "5 awesome projects updated",
      "content_text": "\n\n### Models and Projects / JAX\n\n*   [Amortized Bayesian Optimization (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/amortized_bo) - Code related to [*Amortized Bayesian Optimization over Discrete Spaces*](http://www.auai.org/uai2020/proceedings/329_main_paper.pdf).\n*   [Accurate Quantized Training (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/aqt) - Tools and libraries for running and analyzing neural network quantization experiments in JAX and Flax.\n*   [BNN-HMC (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/bnn_hmc) - Implementation for the paper [*What Are Bayesian Neural Network Posteriors Really Like?*](https://arxiv.org/abs/2104.14421).\n*   [JAX-DFT (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/jax_dft) - One-dimensional density functional theory (DFT) in JAX, with implementation of [*Kohn-Sham equations as regularizer: building prior knowledge into machine-learned physics*](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.126.036401).\n*   [Robust Loss (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/robust_loss_jax) - Reference code for the paper [*A General and Adaptive Robust Loss Function*](https://arxiv.org/abs/1701.03077).\n\n### Models and Projects / Flax\n\n*   [Performer (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/performer/fast_attention/jax) - Flax implementation of the Performer (linear transformer via FAVOR+) architecture.\n*   [JaxNeRF (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/jaxnerf) - Implementation of [*NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis*](http://www.matthewtancik.com/nerf) with multi-device GPU/TPU support.\n*   [Big Transfer (BiT) (‚≠ê1.5k)](https://github.com/google-research/big_transfer) - Implementation of [*Big Transfer (BiT): General Visual Representation Learning*](https://arxiv.org/abs/1912.11370).\n*   [JAX RL (‚≠ê692)](https://github.com/ikostrikov/jax-rl) - Implementations of reinforcement learning algorithms.\n*   [gMLP](https://github.com/SauravMaheshkar/gMLP) - Implementation of [*Pay Attention to MLPs*](https://arxiv.org/abs/2105.08050).\n*   [MLP Mixer](https://github.com/SauravMaheshkar/MLP-Mixer) - Minimal implementation of [*MLP-Mixer: An all-MLP Architecture for Vision*](https://arxiv.org/abs/2105.01601).\n*   [Distributed Shampoo (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/scalable_shampoo) - Implementation of [*Second Order Optimization Made Practical*](https://arxiv.org/abs/2002.09018).\n*   [NesT (‚≠ê197)](https://github.com/google-research/nested-transformer) - Official implementation of [*Aggregating Nested Transformers*](https://arxiv.org/abs/2105.12723).\n*   [XMC-GAN (‚≠ê97)](https://github.com/google-research/xmcgan_image_generation) - Official implementation of [*Cross-Modal Contrastive Learning for Text-to-Image Generation*](https://arxiv.org/abs/2101.04702).\n*   [FNet (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/f_net) - Official implementation of [*FNet: Mixing Tokens with Fourier Transforms*](https://arxiv.org/abs/2105.03824).\n*   [GFSA (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/gfsa) - Official implementation of [*Learning Graph Structure With A Finite-State Automaton Layer*](https://arxiv.org/abs/2007.04929).\n*   [IPA-GNN (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/ipagnn) - Official implementation of [*Learning to Execute Programs with Instruction Pointer Attention Graph Neural Networks*](https://arxiv.org/abs/2010.12621).\n*   [Flax Models (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/flax_models) - Collection of models and methods implemented in Flax.\n*   [Protein LM (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/protein_lm) - Implements BERT and autoregressive models for proteins, as described in [*Biological Structure and Function Emerge from Scaling Unsupervised Learning to 250 Million Protein Sequences*](https://www.biorxiv.org/content/10.1101/622803v1.full) and [*ProGen: Language Modeling for Protein Generation*](https://www.biorxiv.org/content/10.1101/2020.03.07.982272v2).\n*   [Slot Attention (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/ptopk_patch_selection) - Reference implementation for [*Differentiable Patch Selection for Image Recognition*](https://arxiv.org/abs/2104.03059).\n*   [Vision Transformer (‚≠ê12k)](https://github.com/google-research/vision_transformer) - Official implementation of [*An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale*](https://arxiv.org/abs/2010.11929).\n*   [FID computation (‚≠ê28)](https://github.com/matthias-wright/jax-fid) - Port of [mseitzer/pytorch-fid (‚≠ê3.7k)](https://github.com/mseitzer/pytorch-fid) to Flax.\n\n### Models and Projects / Haiku\n\n*   [AlphaFold (‚≠ê14k)](https://github.com/deepmind/alphafold) - Implementation of the inference pipeline of AlphaFold v2.0, presented in [*Highly accurate protein structure prediction with AlphaFold*](https://www.nature.com/articles/s41586-021-03819-2).\n*   [Adversarial Robustness (‚≠ê14k)](https://github.com/deepmind/deepmind-research/tree/master/adversarial_robustness) - Reference code for [*Uncovering the Limits of Adversarial Training against Norm-Bounded Adversarial Examples*](https://arxiv.org/abs/2010.03593) and [*Fixing Data Augmentation to Improve Adversarial Robustness*](https://arxiv.org/abs/2103.01946).\n*   [Bootstrap Your Own Latent (‚≠ê14k)](https://github.com/deepmind/deepmind-research/tree/master/byol) - Implementation for the paper [*Bootstrap your own latent: A new approach to self-supervised Learning*](https://arxiv.org/abs/2006.07733).\n*   [Gated Linear Networks (‚≠ê14k)](https://github.com/deepmind/deepmind-research/tree/master/gated_linear_networks) - GLNs are a family of backpropagation-free neural networks.\n*   [Glassy Dynamics (‚≠ê14k)](https://github.com/deepmind/deepmind-research/tree/master/glassy_dynamics) - Open source implementation of the paper [*Unveiling the predictive power of static structure in glassy systems*](https://www.nature.com/articles/s41567-020-0842-8).\n*   [MMV (‚≠ê14k)](https://github.com/deepmind/deepmind-research/tree/master/mmv) - Code for the models in [*Self-Supervised MultiModal Versatile Networks*](https://arxiv.org/abs/2006.16228).\n*   [Normalizer-Free Networks (‚≠ê14k)](https://github.com/deepmind/deepmind-research/tree/master/nfnets) - Official Haiku implementation of [*NFNets*](https://arxiv.org/abs/2102.06171).\n*   [NuX (‚≠ê83)](https://github.com/Information-Fusion-Lab-Umass/NuX) - Normalizing flows with JAX.\n*   [OGB-LSC (‚≠ê14k)](https://github.com/deepmind/deepmind-research/tree/master/ogb_lsc) - This repository contains DeepMind's entry to the [PCQM4M-LSC](https://ogb.stanford.edu/kddcup2021/pcqm4m/) (quantum chemistry) and [MAG240M-LSC](https://ogb.stanford.edu/kddcup2021/mag240m/) (academic graph)\n    tracks of the [OGB Large-Scale Challenge](https://ogb.stanford.edu/kddcup2021/) (OGB-LSC).\n*   [Persistent Evolution Strategies (‚≠ê36k)](https://github.com/google-research/google-research/tree/master/persistent_es) - Code used for the paper [*Unbiased Gradient Estimation in Unrolled Computation Graphs with Persistent Evolution Strategies*](http://proceedings.mlr.press/v139/vicol21a.html).\n*   [WikiGraphs (‚≠ê14k)](https://github.com/deepmind/deepmind-research/tree/master/wikigraphs) - Baseline code to reproduce results in [*WikiGraphs: A Wikipedia Text - Knowledge Graph Paired Datase*](https://aclanthology.org/2021.textgraphs-1.7).\n\n### Models and Projects / Trax\n\n*   [Reformer (‚≠ê8.2k)](https://github.com/google/trax/tree/master/trax/models/reformer) - Implementation of the Reformer (efficient transformer) architecture.\n\n### Videos / NumPyro\n\n*   [JAX, Flax & Transformers ü§ó (‚≠ê147k)](https://github.com/huggingface/transformers/blob/9160d81c98854df44b1d543ce5d65a6aa28444a2/examples/research_projects/jax-projects/README.md#talks) - 3 days of talks around JAX / Flax, Transformers, large-scale language modeling and other great topics.",
      "content_html": "<h3><p>Models and Projects / JAX</p>\n</h3><ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/amortized_bo\" rel=\"noopener noreferrer\">Amortized Bayesian Optimization (‚≠ê36k)</a> - Code related to <a href=\"http://www.auai.org/uai2020/proceedings/329_main_paper.pdf\" rel=\"noopener noreferrer\"><em>Amortized Bayesian Optimization over Discrete Spaces</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/aqt\" rel=\"noopener noreferrer\">Accurate Quantized Training (‚≠ê36k)</a> - Tools and libraries for running and analyzing neural network quantization experiments in JAX and Flax.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/bnn_hmc\" rel=\"noopener noreferrer\">BNN-HMC (‚≠ê36k)</a> - Implementation for the paper <a href=\"https://arxiv.org/abs/2104.14421\" rel=\"noopener noreferrer\"><em>What Are Bayesian Neural Network Posteriors Really Like?</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/jax_dft\" rel=\"noopener noreferrer\">JAX-DFT (‚≠ê36k)</a> - One-dimensional density functional theory (DFT) in JAX, with implementation of <a href=\"https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.126.036401\" rel=\"noopener noreferrer\"><em>Kohn-Sham equations as regularizer: building prior knowledge into machine-learned physics</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/robust_loss_jax\" rel=\"noopener noreferrer\">Robust Loss (‚≠ê36k)</a> - Reference code for the paper <a href=\"https://arxiv.org/abs/1701.03077\" rel=\"noopener noreferrer\"><em>A General and Adaptive Robust Loss Function</em></a>.</li>\n</ul>\n<h3><p>Models and Projects / Flax</p>\n</h3><ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/performer/fast_attention/jax\" rel=\"noopener noreferrer\">Performer (‚≠ê36k)</a> - Flax implementation of the Performer (linear transformer via FAVOR+) architecture.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/jaxnerf\" rel=\"noopener noreferrer\">JaxNeRF (‚≠ê36k)</a> - Implementation of <a href=\"http://www.matthewtancik.com/nerf\" rel=\"noopener noreferrer\"><em>NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis</em></a> with multi-device GPU/TPU support.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/big_transfer\" rel=\"noopener noreferrer\">Big Transfer (BiT) (‚≠ê1.5k)</a> - Implementation of <a href=\"https://arxiv.org/abs/1912.11370\" rel=\"noopener noreferrer\"><em>Big Transfer (BiT): General Visual Representation Learning</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ikostrikov/jax-rl\" rel=\"noopener noreferrer\">JAX RL (‚≠ê692)</a> - Implementations of reinforcement learning algorithms.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/SauravMaheshkar/gMLP\" rel=\"noopener noreferrer\">gMLP</a> - Implementation of <a href=\"https://arxiv.org/abs/2105.08050\" rel=\"noopener noreferrer\"><em>Pay Attention to MLPs</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/SauravMaheshkar/MLP-Mixer\" rel=\"noopener noreferrer\">MLP Mixer</a> - Minimal implementation of <a href=\"https://arxiv.org/abs/2105.01601\" rel=\"noopener noreferrer\"><em>MLP-Mixer: An all-MLP Architecture for Vision</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/scalable_shampoo\" rel=\"noopener noreferrer\">Distributed Shampoo (‚≠ê36k)</a> - Implementation of <a href=\"https://arxiv.org/abs/2002.09018\" rel=\"noopener noreferrer\"><em>Second Order Optimization Made Practical</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/nested-transformer\" rel=\"noopener noreferrer\">NesT (‚≠ê197)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2105.12723\" rel=\"noopener noreferrer\"><em>Aggregating Nested Transformers</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/xmcgan_image_generation\" rel=\"noopener noreferrer\">XMC-GAN (‚≠ê97)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2101.04702\" rel=\"noopener noreferrer\"><em>Cross-Modal Contrastive Learning for Text-to-Image Generation</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/f_net\" rel=\"noopener noreferrer\">FNet (‚≠ê36k)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2105.03824\" rel=\"noopener noreferrer\"><em>FNet: Mixing Tokens with Fourier Transforms</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/gfsa\" rel=\"noopener noreferrer\">GFSA (‚≠ê36k)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2007.04929\" rel=\"noopener noreferrer\"><em>Learning Graph Structure With A Finite-State Automaton Layer</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/ipagnn\" rel=\"noopener noreferrer\">IPA-GNN (‚≠ê36k)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2010.12621\" rel=\"noopener noreferrer\"><em>Learning to Execute Programs with Instruction Pointer Attention Graph Neural Networks</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/flax_models\" rel=\"noopener noreferrer\">Flax Models (‚≠ê36k)</a> - Collection of models and methods implemented in Flax.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/protein_lm\" rel=\"noopener noreferrer\">Protein LM (‚≠ê36k)</a> - Implements BERT and autoregressive models for proteins, as described in <a href=\"https://www.biorxiv.org/content/10.1101/622803v1.full\" rel=\"noopener noreferrer\"><em>Biological Structure and Function Emerge from Scaling Unsupervised Learning to 250 Million Protein Sequences</em></a> and <a href=\"https://www.biorxiv.org/content/10.1101/2020.03.07.982272v2\" rel=\"noopener noreferrer\"><em>ProGen: Language Modeling for Protein Generation</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/ptopk_patch_selection\" rel=\"noopener noreferrer\">Slot Attention (‚≠ê36k)</a> - Reference implementation for <a href=\"https://arxiv.org/abs/2104.03059\" rel=\"noopener noreferrer\"><em>Differentiable Patch Selection for Image Recognition</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/vision_transformer\" rel=\"noopener noreferrer\">Vision Transformer (‚≠ê12k)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2010.11929\" rel=\"noopener noreferrer\"><em>An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/matthias-wright/jax-fid\" rel=\"noopener noreferrer\">FID computation (‚≠ê28)</a> - Port of <a href=\"https://github.com/mseitzer/pytorch-fid\" rel=\"noopener noreferrer\">mseitzer/pytorch-fid (‚≠ê3.7k)</a> to Flax.</li>\n</ul>\n<h3><p>Models and Projects / Haiku</p>\n</h3><ul>\n<li><a href=\"https://github.com/deepmind/alphafold\" rel=\"noopener noreferrer\">AlphaFold (‚≠ê14k)</a> - Implementation of the inference pipeline of AlphaFold v2.0, presented in <a href=\"https://www.nature.com/articles/s41586-021-03819-2\" rel=\"noopener noreferrer\"><em>Highly accurate protein structure prediction with AlphaFold</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/deepmind/deepmind-research/tree/master/adversarial_robustness\" rel=\"noopener noreferrer\">Adversarial Robustness (‚≠ê14k)</a> - Reference code for <a href=\"https://arxiv.org/abs/2010.03593\" rel=\"noopener noreferrer\"><em>Uncovering the Limits of Adversarial Training against Norm-Bounded Adversarial Examples</em></a> and <a href=\"https://arxiv.org/abs/2103.01946\" rel=\"noopener noreferrer\"><em>Fixing Data Augmentation to Improve Adversarial Robustness</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/deepmind/deepmind-research/tree/master/byol\" rel=\"noopener noreferrer\">Bootstrap Your Own Latent (‚≠ê14k)</a> - Implementation for the paper <a href=\"https://arxiv.org/abs/2006.07733\" rel=\"noopener noreferrer\"><em>Bootstrap your own latent: A new approach to self-supervised Learning</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/deepmind/deepmind-research/tree/master/gated_linear_networks\" rel=\"noopener noreferrer\">Gated Linear Networks (‚≠ê14k)</a> - GLNs are a family of backpropagation-free neural networks.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/deepmind/deepmind-research/tree/master/glassy_dynamics\" rel=\"noopener noreferrer\">Glassy Dynamics (‚≠ê14k)</a> - Open source implementation of the paper <a href=\"https://www.nature.com/articles/s41567-020-0842-8\" rel=\"noopener noreferrer\"><em>Unveiling the predictive power of static structure in glassy systems</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/deepmind/deepmind-research/tree/master/mmv\" rel=\"noopener noreferrer\">MMV (‚≠ê14k)</a> - Code for the models in <a href=\"https://arxiv.org/abs/2006.16228\" rel=\"noopener noreferrer\"><em>Self-Supervised MultiModal Versatile Networks</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/deepmind/deepmind-research/tree/master/nfnets\" rel=\"noopener noreferrer\">Normalizer-Free Networks (‚≠ê14k)</a> - Official Haiku implementation of <a href=\"https://arxiv.org/abs/2102.06171\" rel=\"noopener noreferrer\"><em>NFNets</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Information-Fusion-Lab-Umass/NuX\" rel=\"noopener noreferrer\">NuX (‚≠ê83)</a> - Normalizing flows with JAX.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/deepmind/deepmind-research/tree/master/ogb_lsc\" rel=\"noopener noreferrer\">OGB-LSC (‚≠ê14k)</a> - This repository contains DeepMind's entry to the <a href=\"https://ogb.stanford.edu/kddcup2021/pcqm4m/\" rel=\"noopener noreferrer\">PCQM4M-LSC</a> (quantum chemistry) and <a href=\"https://ogb.stanford.edu/kddcup2021/mag240m/\" rel=\"noopener noreferrer\">MAG240M-LSC</a> (academic graph)\ntracks of the <a href=\"https://ogb.stanford.edu/kddcup2021/\" rel=\"noopener noreferrer\">OGB Large-Scale Challenge</a> (OGB-LSC).</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/persistent_es\" rel=\"noopener noreferrer\">Persistent Evolution Strategies (‚≠ê36k)</a> - Code used for the paper <a href=\"http://proceedings.mlr.press/v139/vicol21a.html\" rel=\"noopener noreferrer\"><em>Unbiased Gradient Estimation in Unrolled Computation Graphs with Persistent Evolution Strategies</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/deepmind/deepmind-research/tree/master/wikigraphs\" rel=\"noopener noreferrer\">WikiGraphs (‚≠ê14k)</a> - Baseline code to reproduce results in <a href=\"https://aclanthology.org/2021.textgraphs-1.7\" rel=\"noopener noreferrer\"><em>WikiGraphs: A Wikipedia Text - Knowledge Graph Paired Datase</em></a>.</li>\n</ul>\n<h3><p>Models and Projects / Trax</p>\n</h3><ul>\n<li><a href=\"https://github.com/google/trax/tree/master/trax/models/reformer\" rel=\"noopener noreferrer\">Reformer (‚≠ê8.2k)</a> - Implementation of the Reformer (efficient transformer) architecture.</li>\n</ul>\n<h3><p>Videos / NumPyro</p>\n</h3><ul>\n<li><a href=\"https://github.com/huggingface/transformers/blob/9160d81c98854df44b1d543ce5d65a6aa28444a2/examples/research_projects/jax-projects/README.md#talks\" rel=\"noopener noreferrer\">JAX, Flax &amp; Transformers ü§ó (‚≠ê147k)</a> - 3 days of talks around JAX / Flax, Transformers, large-scale language modeling and other great topics.</li>\n</ul>\n",
      "date_published": "2021-07-30T19:34:30.000Z",
      "date_modified": "2021-07-30T19:34:30.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/krzemienski/awesome-video/",
      "title": "Awesome Video",
      "_slug": "krzemienski/awesome-video/",
      "_filepath": "/content/krzemienski/awesome-video/README.md",
      "url": "https://www.trackawesomelist.com/krzemienski/awesome-video/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Adaptive Streaming & Manifest Tools / HLS Tools\n\n*   [soldiermoth/hlsq (‚≠ê67)](https://github.com/soldiermoth/hlsq)  - A CLI for adding some color to your HLS manifests along with some basic filtering",
      "content_html": "<h3><p>Adaptive Streaming &amp; Manifest Tools / HLS Tools</p>\n</h3><ul>\n<li><a href=\"https://github.com/soldiermoth/hlsq\" rel=\"noopener noreferrer\">soldiermoth/hlsq (‚≠ê67)</a>  - A CLI for adding some color to your HLS manifests along with some basic filtering</li>\n</ul>\n",
      "date_published": "2021-07-30T17:37:34.000Z",
      "date_modified": "2021-07-30T17:37:34.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/ebu/awesome-broadcasting/",
      "title": "Awesome Broadcasting",
      "_slug": "ebu/awesome-broadcasting/",
      "_filepath": "/content/ebu/awesome-broadcasting/README.md",
      "url": "https://www.trackawesomelist.com/ebu/awesome-broadcasting/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Video Production\n\n*   [TallyArbiter](http://tallyarbiter.com/) - Cross-platform Tally interfacer & tally lights for any camera via phones or low-cost hardware.",
      "content_html": "<h3><p>Video Production</p>\n</h3><ul>\n<li><a href=\"http://tallyarbiter.com/\" rel=\"noopener noreferrer\">TallyArbiter</a> - Cross-platform Tally interfacer &amp; tally lights for any camera via phones or low-cost hardware.</li>\n</ul>\n",
      "date_published": "2021-07-30T09:48:45.000Z",
      "date_modified": "2021-07-30T09:48:45.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/public-apis/public-apis/",
      "title": "Public Apis",
      "_slug": "public-apis/public-apis/",
      "_filepath": "/content/public-apis/public-apis/README.md",
      "url": "https://www.trackawesomelist.com/public-apis/public-apis/",
      "summary": "7 awesome projects updated",
      "content_text": "\n\n### Cryptocurrency\n\n- API: [apilayer coinlayer](https://coinlayer.com)\n\n  Description: Real-time Crypto Currency Exchange Rates\n\n  Auth: `apiKey`\n\n  HTTPS: Yes\n\n  CORS: Unknown\n\n\n\n### Documents & Productivity\n\n- API: [Airtable](https://airtable.com/api)\n\n  Description: Integrate with Airtable\n\n  Auth: `apiKey`\n\n  HTTPS: Yes\n\n  CORS: Unknown\n\n\n- API: [apilayer pdflayer](https://pdflayer.com)\n\n  Description: HTML/URL to PDF\n\n  Auth: `apiKey`\n\n  HTTPS: Yes\n\n  CORS: Unknown\n\n\n\n### Government\n\n- API: [INEI](http://iinei.inei.gob.pe/microdatos/)\n\n  Description: Peruvian Statistical Government Open Data\n\n  Auth: No\n\n  HTTPS: No\n\n  CORS: Unknown\n\n\n\n### News\n\n- API: [apilayer mediastack](https://mediastack.com/)\n\n  Description: Free, Simple REST API for Live News & Blog Articles\n\n  Auth: `apiKey`\n\n  HTTPS: Yes\n\n  CORS: Unknown\n\n\n\n### Photography\n\n- API: [apilayer screenshotlayer](https://screenshotlayer.com)\n\n  Description: URL 2 Image\n\n  Auth: No\n\n  HTTPS: Yes\n\n  CORS: Unknown\n\n\n\n### Text Analysis\n\n- API: [apilayer languagelayer](https://languagelayer.com/)\n\n  Description: Language Detection JSON API supporting 173 languages\n\n  Auth: `OAuth`\n\n  HTTPS: Yes\n\n  CORS: Unknown\n\n\n\n### Transportation\n\n- API: [Tankerkoenig](https://creativecommons.tankerkoenig.de/swagger/)\n\n  Description: German realtime gas/diesel prices\n\n  Auth: `apiKey`\n\n  HTTPS: Yes\n\n  CORS: Yes\n\n",
      "content_html": "<h3><p>Cryptocurrency</p>\n</h3><ul>\n<li><p>API: <a href=\"https://coinlayer.com\" rel=\"noopener noreferrer\">apilayer coinlayer</a></p>\n<p>Description: Real-time Crypto Currency Exchange Rates</p>\n<p>Auth: <code>apiKey</code></p>\n<p>HTTPS: Yes</p>\n<p>CORS: Unknown</p>\n</li>\n</ul>\n<h3><p>Documents &amp; Productivity</p>\n</h3><ul>\n<li><p>API: <a href=\"https://airtable.com/api\" rel=\"noopener noreferrer\">Airtable</a></p>\n<p>Description: Integrate with Airtable</p>\n<p>Auth: <code>apiKey</code></p>\n<p>HTTPS: Yes</p>\n<p>CORS: Unknown</p>\n</li>\n</ul>\n<ul>\n<li><p>API: <a href=\"https://pdflayer.com\" rel=\"noopener noreferrer\">apilayer pdflayer</a></p>\n<p>Description: HTML/URL to PDF</p>\n<p>Auth: <code>apiKey</code></p>\n<p>HTTPS: Yes</p>\n<p>CORS: Unknown</p>\n</li>\n</ul>\n<h3><p>Government</p>\n</h3><ul>\n<li><p>API: <a href=\"http://iinei.inei.gob.pe/microdatos/\" rel=\"noopener noreferrer\">INEI</a></p>\n<p>Description: Peruvian Statistical Government Open Data</p>\n<p>Auth: No</p>\n<p>HTTPS: No</p>\n<p>CORS: Unknown</p>\n</li>\n</ul>\n<h3><p>News</p>\n</h3><ul>\n<li><p>API: <a href=\"https://mediastack.com/\" rel=\"noopener noreferrer\">apilayer mediastack</a></p>\n<p>Description: Free, Simple REST API for Live News &amp; Blog Articles</p>\n<p>Auth: <code>apiKey</code></p>\n<p>HTTPS: Yes</p>\n<p>CORS: Unknown</p>\n</li>\n</ul>\n<h3><p>Photography</p>\n</h3><ul>\n<li><p>API: <a href=\"https://screenshotlayer.com\" rel=\"noopener noreferrer\">apilayer screenshotlayer</a></p>\n<p>Description: URL 2 Image</p>\n<p>Auth: No</p>\n<p>HTTPS: Yes</p>\n<p>CORS: Unknown</p>\n</li>\n</ul>\n<h3><p>Text Analysis</p>\n</h3><ul>\n<li><p>API: <a href=\"https://languagelayer.com/\" rel=\"noopener noreferrer\">apilayer languagelayer</a></p>\n<p>Description: Language Detection JSON API supporting 173 languages</p>\n<p>Auth: <code>OAuth</code></p>\n<p>HTTPS: Yes</p>\n<p>CORS: Unknown</p>\n</li>\n</ul>\n<h3><p>Transportation</p>\n</h3><ul>\n<li><p>API: <a href=\"https://creativecommons.tankerkoenig.de/swagger/\" rel=\"noopener noreferrer\">Tankerkoenig</a></p>\n<p>Description: German realtime gas/diesel prices</p>\n<p>Auth: <code>apiKey</code></p>\n<p>HTTPS: Yes</p>\n<p>CORS: Yes</p>\n</li>\n</ul>\n",
      "date_published": "2021-07-30T06:36:28.000Z",
      "date_modified": "2021-07-30T15:19:34.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/ellisonleao/magictools/",
      "title": "Magictools",
      "_slug": "ellisonleao/magictools/",
      "_filepath": "/content/ellisonleao/magictools/README.md",
      "url": "https://www.trackawesomelist.com/ellisonleao/magictools/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Engines and Frameworks / Voxel Editors\n\n*   :free: [Mini Micro](https://miniscript.org/MiniMicro/) - Mini Micro is a fantasy computer for making, playing and sharing 2D games and programs written in the modern [MiniScript](https://miniscript.org) language.",
      "content_html": "<h3><p>Engines and Frameworks / Voxel Editors</p>\n</h3><ul>\n<li>üÜì <a href=\"https://miniscript.org/MiniMicro/\" rel=\"noopener noreferrer\">Mini Micro</a> - Mini Micro is a fantasy computer for making, playing and sharing 2D games and programs written in the modern <a href=\"https://miniscript.org\" rel=\"noopener noreferrer\">MiniScript</a> language.</li>\n</ul>\n",
      "date_published": "2021-07-30T00:42:09.000Z",
      "date_modified": "2021-07-30T00:42:09.000Z"
    }
  ]
}
