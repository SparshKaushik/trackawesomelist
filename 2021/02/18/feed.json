{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Feb 18, 2021",
  "_site_title": "Track Awesome List",
  "description": "9 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Feb 18, 2021 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/vuejs/awesome-vue/",
      "title": "Awesome Vue",
      "_slug": "vuejs/awesome-vue/",
      "_filepath": "/content/vuejs/awesome-vue/README.md",
      "url": "https://www.trackawesomelist.com/vuejs/awesome-vue/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Resources / Tutorials\n\n*   [Vue.js Debugging: A Guide to Fixing Your Frontend](https://snipcart.com/blog/vuejs-debugging) - Learn the basics of Vue.js debugging. This guide will walk you through a tutorial on how to fix your application's frontend.",
      "content_html": "<h3><p>Resources / Tutorials</p>\n</h3><ul>\n<li><a href=\"https://snipcart.com/blog/vuejs-debugging\" rel=\"noopener noreferrer\">Vue.js Debugging: A Guide to Fixing Your Frontend</a> - Learn the basics of Vue.js debugging. This guide will walk you through a tutorial on how to fix your application's frontend.</li>\n</ul>\n",
      "date_published": "2021-02-18T19:57:31.000Z",
      "date_modified": "2021-02-18T19:57:31.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/dersvenhesse/awesome-scriptable/",
      "title": "Awesome Scriptable",
      "_slug": "dersvenhesse/awesome-scriptable/",
      "_filepath": "/content/dersvenhesse/awesome-scriptable/README.md",
      "url": "https://www.trackawesomelist.com/dersvenhesse/awesome-scriptable/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Food\n\n*   [scriptable-recipe (⭐6)](https://github.com/shfrmn/scriptable-recipe) - Random food recipe widget that opens cooking video on YouTube.\n\n    <img src=\"https://user-images.githubusercontent.com/12446468/108283292-f11b9e80-717a-11eb-9a79-8848e5803166.PNG\" width=\"400\"/>",
      "content_html": "<h3><p>Food</p>\n</h3><ul>\n<li><p><a href=\"https://github.com/shfrmn/scriptable-recipe\" rel=\"noopener noreferrer\">scriptable-recipe (⭐6)</a> - Random food recipe widget that opens cooking video on YouTube.</p>\n<img src=\"https://user-images.githubusercontent.com/12446468/108283292-f11b9e80-717a-11eb-9a79-8848e5803166.PNG\" width=\"400\" /></li>\n</ul>\n",
      "date_published": "2021-02-18T18:39:22.000Z",
      "date_modified": "2021-02-18T18:39:22.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/AdrienTorris/awesome-blazor/",
      "title": "Awesome Blazor",
      "_slug": "AdrienTorris/awesome-blazor/",
      "_filepath": "/content/AdrienTorris/awesome-blazor/README.md",
      "url": "https://www.trackawesomelist.com/AdrienTorris/awesome-blazor/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### General\n\n*   [themesof.net](https://themesof.net/) - .NET 6 planning process.",
      "content_html": "<h3><p>General</p>\n</h3><ul>\n<li><a href=\"https://themesof.net/\" rel=\"noopener noreferrer\">themesof.net</a> - .NET 6 planning process.</li>\n</ul>\n",
      "date_published": "2021-02-18T14:24:30.000Z",
      "date_modified": "2021-02-18T14:24:30.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/fffaraz/awesome-cpp/",
      "title": "Awesome Cpp",
      "_slug": "fffaraz/awesome-cpp/",
      "_filepath": "/content/fffaraz/awesome-cpp/README.md",
      "url": "https://www.trackawesomelist.com/fffaraz/awesome-cpp/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### CSV\n\n*   [Csv::Parser (⭐31)](https://github.com/ashaduri/csv-parser) - Compile-time and runtime CSV parser written in C++17. \\[Zlib]",
      "content_html": "<h3><p>CSV</p>\n</h3><ul>\n<li><a href=\"https://github.com/ashaduri/csv-parser\" rel=\"noopener noreferrer\">Csv::Parser (⭐31)</a> - Compile-time and runtime CSV parser written in C++17. [Zlib]</li>\n</ul>\n",
      "date_published": "2021-02-18T13:26:18.000Z",
      "date_modified": "2021-02-18T13:26:18.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/MartinMiles/awesome-sitecore/",
      "title": "Awesome Sitecore",
      "_slug": "MartinMiles/awesome-sitecore/",
      "_filepath": "/content/MartinMiles/awesome-sitecore/README.md",
      "url": "https://www.trackawesomelist.com/MartinMiles/awesome-sitecore/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Testing\n\n*   [Minq (⭐1)](https://github.com/valtech/minq) - Mockable, LINQable support for Sitecore and Sitecore MVC.",
      "content_html": "<h3><p>Testing</p>\n</h3><ul>\n<li><a href=\"https://github.com/valtech/minq\" rel=\"noopener noreferrer\">Minq (⭐1)</a> - Mockable, LINQable support for Sitecore and Sitecore MVC.</li>\n</ul>\n",
      "date_published": "2021-02-18T06:20:09.000Z",
      "date_modified": "2021-02-18T06:20:09.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/klaufel/awesome-design-systems/",
      "title": "Awesome Design Systems",
      "_slug": "klaufel/awesome-design-systems/",
      "_filepath": "/content/klaufel/awesome-design-systems/README.md",
      "url": "https://www.trackawesomelist.com/klaufel/awesome-design-systems/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Books / Storybook addons\n\n*   [Introduction to Design Systems](https://fem-design-systems.netlify.app/) - A practical introduction to design systems by using React, Figma and Storybook by Emma Bostian",
      "content_html": "<h3><p>Books / Storybook addons</p>\n</h3><ul>\n<li><a href=\"https://fem-design-systems.netlify.app/\" rel=\"noopener noreferrer\">Introduction to Design Systems</a> - A practical introduction to design systems by using React, Figma and Storybook by Emma Bostian</li>\n</ul>\n",
      "date_published": "2021-02-18T05:00:13.000Z",
      "date_modified": "2021-02-18T05:00:13.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/heynickc/awesome-ddd/",
      "title": "Awesome Ddd",
      "_slug": "heynickc/awesome-ddd/",
      "_filepath": "/content/heynickc/awesome-ddd/README.md",
      "url": "https://www.trackawesomelist.com/heynickc/awesome-ddd/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Sample Projects / GO\n\n*   [BDD in GO (⭐4)](https://github.com/JankariTech/bsDateServer) - Sample app demonstrating the use of Cucumber + GO for a BDD testing approach. Blog post can be found [here](https://dev.to/jankaritech/demonstrating-bdd-behavior-driven-development-in-go-1eci).\n*   [Citerus DDD Sample App GO Port (⭐2.4k)](https://github.com/marcusolsson/goddd) - This is an attempt to port the [DDD Sample App (⭐5.2k)](https://github.com/citerus/dddsample-core) to idiomatic Go. It can be run in a dockerized mode for previewing the application.\n*   [DDD by Refactoring (⭐5.8k)](https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example) - Complete serverless application to show how to apply DDD, Clean Architecture, and CQRS by practical refactoring of a Go project. A full blog series about it can be found at <https://threedots.tech/>.\n*   [DDD Food App (⭐673)](https://github.com/victorsteven/food-app-server) - Sample DDD application implementing the 4 layers (Domain, Infrastructure, Application and Interface) and considering two domain patterns. There's a blog article written for it [here](https://dev.to/stevensunflash/using-domain-driven-design-ddd-in-golang-3ee5).\n*   [DDD Sample in GO (⭐288)](https://github.com/takashabe/go-ddd-sample) - Just another sample application implementing the four layers of DDD.\n*   [Evolutive CRUD API (⭐78)](https://github.com/friendsofgo/gopherapi) - API implementation with full CRUD using a SOLID, Hexagonal Architecture. There is a series of blog post written for it at <https://blog.friendsofgo.tech/>.\n*   [Simple Hexagonal Architecture PoC API (⭐31)](https://github.com/tomiok/patients-API) - PoC for a patients API using the hexagonal architecture pattern.\n\n### Libraries and Frameworks / GO\n\n*   [Ginkgo (⭐8.7k)](https://github.com/onsi/ginkgo) - Ginkgo builds on Go's testing package, allowing expressive Behavior-Driven Development (\"BDD\") style tests.\n*   [GOBDD (⭐124)](https://github.com/go-bdd/gobdd) - Small BDD framework for GO.\n*   [GoConvey (⭐8.4k)](https://github.com/smartystreets/goconvey) - Go testing in the browser. Integrates with `go test`. Write behavioral tests in Go.\n*   [Godog (⭐2.5k)](https://github.com/cucumber/godog) - Package godog is the official Cucumber BDD framework for Golang, it merges specification and test documentation into one cohesive whole, using Gherkin formatted scenarios in the format of Given, When, Then.",
      "content_html": "<h3><p>Sample Projects / GO</p>\n</h3><ul>\n<li><a href=\"https://github.com/JankariTech/bsDateServer\" rel=\"noopener noreferrer\">BDD in GO (⭐4)</a> - Sample app demonstrating the use of Cucumber + GO for a BDD testing approach. Blog post can be found <a href=\"https://dev.to/jankaritech/demonstrating-bdd-behavior-driven-development-in-go-1eci\" rel=\"noopener noreferrer\">here</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/marcusolsson/goddd\" rel=\"noopener noreferrer\">Citerus DDD Sample App GO Port (⭐2.4k)</a> - This is an attempt to port the <a href=\"https://github.com/citerus/dddsample-core\" rel=\"noopener noreferrer\">DDD Sample App (⭐5.2k)</a> to idiomatic Go. It can be run in a dockerized mode for previewing the application.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example\" rel=\"noopener noreferrer\">DDD by Refactoring (⭐5.8k)</a> - Complete serverless application to show how to apply DDD, Clean Architecture, and CQRS by practical refactoring of a Go project. A full blog series about it can be found at <a href=\"https://threedots.tech/\" rel=\"noopener noreferrer\">https://threedots.tech/</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/victorsteven/food-app-server\" rel=\"noopener noreferrer\">DDD Food App (⭐673)</a> - Sample DDD application implementing the 4 layers (Domain, Infrastructure, Application and Interface) and considering two domain patterns. There's a blog article written for it <a href=\"https://dev.to/stevensunflash/using-domain-driven-design-ddd-in-golang-3ee5\" rel=\"noopener noreferrer\">here</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/takashabe/go-ddd-sample\" rel=\"noopener noreferrer\">DDD Sample in GO (⭐288)</a> - Just another sample application implementing the four layers of DDD.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/friendsofgo/gopherapi\" rel=\"noopener noreferrer\">Evolutive CRUD API (⭐78)</a> - API implementation with full CRUD using a SOLID, Hexagonal Architecture. There is a series of blog post written for it at <a href=\"https://blog.friendsofgo.tech/\" rel=\"noopener noreferrer\">https://blog.friendsofgo.tech/</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/tomiok/patients-API\" rel=\"noopener noreferrer\">Simple Hexagonal Architecture PoC API (⭐31)</a> - PoC for a patients API using the hexagonal architecture pattern.</li>\n</ul>\n<h3><p>Libraries and Frameworks / GO</p>\n</h3><ul>\n<li><a href=\"https://github.com/onsi/ginkgo\" rel=\"noopener noreferrer\">Ginkgo (⭐8.7k)</a> - Ginkgo builds on Go's testing package, allowing expressive Behavior-Driven Development (\"BDD\") style tests.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/go-bdd/gobdd\" rel=\"noopener noreferrer\">GOBDD (⭐124)</a> - Small BDD framework for GO.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/smartystreets/goconvey\" rel=\"noopener noreferrer\">GoConvey (⭐8.4k)</a> - Go testing in the browser. Integrates with <code>go test</code>. Write behavioral tests in Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/cucumber/godog\" rel=\"noopener noreferrer\">Godog (⭐2.5k)</a> - Package godog is the official Cucumber BDD framework for Golang, it merges specification and test documentation into one cohesive whole, using Gherkin formatted scenarios in the format of Given, When, Then.</li>\n</ul>\n",
      "date_published": "2021-02-18T04:46:39.000Z",
      "date_modified": "2021-02-18T04:50:40.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/jetli/awesome-yew/",
      "title": "Awesome Yew",
      "_slug": "jetli/awesome-yew/",
      "_filepath": "/content/jetli/awesome-yew/README.md",
      "url": "https://www.trackawesomelist.com/jetli/awesome-yew/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Official\n\n*   [Reddit](https://www.reddit.com/r/yew_web/) - Dedicated Sub Reddit.",
      "content_html": "<h3><p>Official</p>\n</h3><ul>\n<li><a href=\"https://www.reddit.com/r/yew_web/\" rel=\"noopener noreferrer\">Reddit</a> - Dedicated Sub Reddit.</li>\n</ul>\n",
      "date_published": "2021-02-18T02:55:06.000Z",
      "date_modified": "2021-02-18T02:55:06.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/TaptuIT/awesome-devsecops/",
      "title": "Awesome Devsecops",
      "_slug": "TaptuIT/awesome-devsecops/",
      "_filepath": "/content/TaptuIT/awesome-devsecops/README.md",
      "url": "https://www.trackawesomelist.com/TaptuIT/awesome-devsecops/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Toolchains\n\n*   [Periodic Table of DevOps Tools](https://xebialabs.com/periodic-table-of-devops-tools/) - *XebiaLabs* - A collection of DevSecOps tooling categorised by tool functionality.",
      "content_html": "<h3><p>Toolchains</p>\n</h3><ul>\n<li><a href=\"https://xebialabs.com/periodic-table-of-devops-tools/\" rel=\"noopener noreferrer\">Periodic Table of DevOps Tools</a> - <em>XebiaLabs</em> - A collection of DevSecOps tooling categorised by tool functionality.</li>\n</ul>\n",
      "date_published": "2021-02-18T01:34:39.000Z",
      "date_modified": "2021-02-18T01:34:39.000Z"
    }
  ]
}
