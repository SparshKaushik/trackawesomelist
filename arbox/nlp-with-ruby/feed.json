{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Track Nlp with Ruby Updates Daily",
  "_seo_title": "Track Nlp with Ruby (arbox/nlp-with-ruby) Updates Daily - Track Awesome List",
  "_site_title": "Track Awesome List",
  "description": "Curated List: Practical Natural Language Processing done in Ruby",
  "home_page_url": "https://www.trackawesomelist.com/arbox/nlp-with-ruby/",
  "feed_url": "https://www.trackawesomelist.com/arbox/nlp-with-ruby/feed.json",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/2022/08/27/",
      "title": "Nlp with Ruby Updates on Aug 27, 2022",
      "_short_title": "Aug 27, 2022",
      "_slug": "2022/08/27/",
      "summary": "1 awesome projects updated on Aug 27, 2022",
      "_filepath": "/content/2022/08/27/README.md",
      "url": "https://www.trackawesomelist.com/2022/08/27/",
      "date_published": "2022-08-27T19:49:48.000Z",
      "date_modified": "2022-08-27T19:49:48.000Z",
      "content_text": "\n\n### Multipurpose Engines\n\n*   [ruby-spacy (⭐65)](https://github.com/yohasebe/ruby-spacy) —\n    Wrapper module for spaCy NLP library via [PyCall (⭐1.1k)](https://github.com/mrkn/pycall.rb).",
      "content_html": "<h3><p>Multipurpose Engines</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/yohasebe/ruby-spacy\" rel=\"noopener noreferrer\">ruby-spacy (⭐65)</a> —\nWrapper module for spaCy NLP library via <a href=\"https://github.com/mrkn/pycall.rb\" rel=\"noopener noreferrer\">PyCall (⭐1.1k)</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/03/30/",
      "title": "Nlp with Ruby Updates on Mar 30, 2021",
      "_short_title": "Mar 30, 2021",
      "_slug": "2021/03/30/",
      "summary": "1 awesome projects updated on Mar 30, 2021",
      "_filepath": "/content/2021/03/30/README.md",
      "url": "https://www.trackawesomelist.com/2021/03/30/",
      "date_published": "2021-03-30T16:39:40.000Z",
      "date_modified": "2021-03-30T16:39:40.000Z",
      "content_text": "\n\n### Language Aware String Manipulation / Constituency Parsing\n\n*   [iuliia (⭐10)](https://github.com/adnikiforov/iuliia-rb) —\n    transliteration Cyrillic to Latin in many possible ways (defined by the [reference implementation (⭐72)](https://github.com/nalgeon/iuliia)).",
      "content_html": "<h3><p>Language Aware String Manipulation / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/adnikiforov/iuliia-rb\" rel=\"noopener noreferrer\">iuliia (⭐10)</a> —\ntransliteration Cyrillic to Latin in many possible ways (defined by the <a href=\"https://github.com/nalgeon/iuliia\" rel=\"noopener noreferrer\">reference implementation (⭐72)</a>).</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/01/17/",
      "title": "Nlp with Ruby Updates on Jan 17, 2019",
      "_short_title": "Jan 17, 2019",
      "_slug": "2019/01/17/",
      "summary": "5 awesome projects updated on Jan 17, 2019",
      "_filepath": "/content/2019/01/17/README.md",
      "url": "https://www.trackawesomelist.com/2019/01/17/",
      "date_published": "2019-01-17T11:01:14.000Z",
      "date_modified": "2019-01-17T11:37:35.000Z",
      "content_text": "\n\n### Spelling and Error Correction / Constituency Parsing\n\n*   [gingerice (⭐478)](https://github.com/subosito/gingerice) -\n    Spelling and Grammar corrections via the [Ginger](https://www.gingersoftware.com/) API.\n\n### Articles, Posts, Talks, and Presentations / Constituency Parsing\n\n*   2019\n    *   *Extracting Text From Images Using Ruby* by [aonemd](https://twitter.com/aonemd) <sup>\\[[post](https://aonemd.github.io/blog/extracting-text-from-images-using-ruby) |\n        [code](https://gist.github.com/aonemd/7bb3c4760d9e47a9ce8e270198cb40a0)]</sup>\n*   2018\n    *   *Natural Language Processing and Tweet Sentiment Analysis* by [Cassandra Corrales](https://twitter.com/casita305) <sup>\\[[post](https://medium.com/@cmcorrales3/natural-language-processing-and-tweet-sentiment-analysis-fa1edbb5ddd5)]</sup>\n*   2017\n    *   *The Google NLP API Meets Ruby* by [Aja Hammerly](https://twitter.com/the_thagomizer) <sup>\\[[post](http://www.thagomizer.com/blog/2017/04/13/the-google-nlp-api-meets-ruby.html)]</sup>\n    *   *Syntax Isn't Everything: NLP For Rubyists* by [Aja Hammerly](https://twitter.com/the_thagomizer) <sup>\\[[slides](http://www.thagomizer.com/files/NLP_RailsConf2017.pdf)]</sup>\n    *   *Scientific Computing on JRuby* by [Prasun Anand](https://twitter.com/prasun_anand) <sup>\\[[slides](https://www.slideshare.net/PrasunAnand2/fosdem2017-scientific-computing-on-jruby) |\n        [video](https://ftp.fau.de/fosdem/2017/K.4.201/ruby_scientific_computing_on_jruby.mp4) |\n        [slides](https://www.slideshare.net/PrasunAnand2/scientific-computing-on-jruby) |\n        [slides](https://www.slideshare.net/PrasunAnand2/scientific-computation-on-jruby)]</sup>\n    *   *Unicode Normalization in Ruby* by [Starr Horne](https://twitter.com/starrhorne) <sup>\\[[post](https://blog.honeybadger.io/ruby_unicode_normalization/)]</sup>\n\n### Related Resources / Constituency Parsing\n\n*   <a name=\"imagemagic\"></a>\n    [ImageMagick](https://imagemagick.org/index.php)",
      "content_html": "<h3><p>Spelling and Error Correction / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/subosito/gingerice\" rel=\"noopener noreferrer\">gingerice (⭐478)</a> -\nSpelling and Grammar corrections via the <a href=\"https://www.gingersoftware.com/\" rel=\"noopener noreferrer\">Ginger</a> API.</li>\n</ul>\n<h3><p>Articles, Posts, Talks, and Presentations / Constituency Parsing</p>\n</h3>\n<ul>\n<li>2019<ul>\n<li><em>Extracting Text From Images Using Ruby</em> by <a href=\"https://twitter.com/aonemd\" rel=\"noopener noreferrer\">aonemd</a> <sup>[<a href=\"https://aonemd.github.io/blog/extracting-text-from-images-using-ruby\" rel=\"noopener noreferrer\">post</a> |\n<a href=\"https://gist.github.com/aonemd/7bb3c4760d9e47a9ce8e270198cb40a0\" rel=\"noopener noreferrer\">code</a>]</sup></li>\n</ul>\n</li>\n</ul>\n\n<ul>\n<li>2018<ul>\n<li><em>Natural Language Processing and Tweet Sentiment Analysis</em> by <a href=\"https://twitter.com/casita305\" rel=\"noopener noreferrer\">Cassandra Corrales</a> <sup>[<a href=\"https://medium.com/@cmcorrales3/natural-language-processing-and-tweet-sentiment-analysis-fa1edbb5ddd5\" rel=\"noopener noreferrer\">post</a>]</sup></li>\n</ul>\n</li>\n</ul>\n\n<ul>\n<li>2017<ul>\n<li><em>The Google NLP API Meets Ruby</em> by <a href=\"https://twitter.com/the_thagomizer\" rel=\"noopener noreferrer\">Aja Hammerly</a> <sup>[<a href=\"http://www.thagomizer.com/blog/2017/04/13/the-google-nlp-api-meets-ruby.html\" rel=\"noopener noreferrer\">post</a>]</sup></li>\n<li><em>Syntax Isn't Everything: NLP For Rubyists</em> by <a href=\"https://twitter.com/the_thagomizer\" rel=\"noopener noreferrer\">Aja Hammerly</a> <sup>[<a href=\"http://www.thagomizer.com/files/NLP_RailsConf2017.pdf\" rel=\"noopener noreferrer\">slides</a>]</sup></li>\n<li><em>Scientific Computing on JRuby</em> by <a href=\"https://twitter.com/prasun_anand\" rel=\"noopener noreferrer\">Prasun Anand</a> <sup>[<a href=\"https://www.slideshare.net/PrasunAnand2/fosdem2017-scientific-computing-on-jruby\" rel=\"noopener noreferrer\">slides</a> |\n<a href=\"https://ftp.fau.de/fosdem/2017/K.4.201/ruby_scientific_computing_on_jruby.mp4\" rel=\"noopener noreferrer\">video</a> |\n<a href=\"https://www.slideshare.net/PrasunAnand2/scientific-computing-on-jruby\" rel=\"noopener noreferrer\">slides</a> |\n<a href=\"https://www.slideshare.net/PrasunAnand2/scientific-computation-on-jruby\" rel=\"noopener noreferrer\">slides</a>]</sup></li>\n<li><em>Unicode Normalization in Ruby</em> by <a href=\"https://twitter.com/starrhorne\" rel=\"noopener noreferrer\">Starr Horne</a> <sup>[<a href=\"https://blog.honeybadger.io/ruby_unicode_normalization/\" rel=\"noopener noreferrer\">post</a>]</sup></li>\n</ul>\n</li>\n</ul>\n<h3><p>Related Resources / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a></a>\n<a href=\"https://imagemagick.org/index.php\" rel=\"noopener noreferrer\">ImageMagick</a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/09/02/",
      "title": "Nlp with Ruby Updates on Sep 02, 2017",
      "_short_title": "Sep 02, 2017",
      "_slug": "2017/09/02/",
      "summary": "1 awesome projects updated on Sep 02, 2017",
      "_filepath": "/content/2017/09/02/README.md",
      "url": "https://www.trackawesomelist.com/2017/09/02/",
      "date_published": "2017-09-02T23:44:31.000Z",
      "date_modified": "2017-09-02T23:44:31.000Z",
      "content_text": "\n\n### Machine Learning Libraries / Constituency Parsing\n\n*   [rblearn (⭐2)](https://github.com/himkt/rblearn) - Feature Extraction and Crossvalidation library.",
      "content_html": "<h3><p>Machine Learning Libraries / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/himkt/rblearn\" rel=\"noopener noreferrer\">rblearn (⭐2)</a> - Feature Extraction and Crossvalidation library.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/07/27/",
      "title": "Nlp with Ruby Updates on Jul 27, 2017",
      "_short_title": "Jul 27, 2017",
      "_slug": "2017/07/27/",
      "summary": "1 awesome projects updated on Jul 27, 2017",
      "_filepath": "/content/2017/07/27/README.md",
      "url": "https://www.trackawesomelist.com/2017/07/27/",
      "date_published": "2017-07-27T10:47:36.000Z",
      "date_modified": "2017-07-27T10:47:36.000Z",
      "content_text": "\n\n### Language Aware String Manipulation / Constituency Parsing\n\n*   [regex\\_sample](https://github.com/mochizukikotaro/regex_sample) -\n    sample string generation from a given Regular Expression.",
      "content_html": "<h3><p>Language Aware String Manipulation / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/mochizukikotaro/regex_sample\" rel=\"noopener noreferrer\">regex_sample</a> -\nsample string generation from a given Regular Expression.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/07/24/",
      "title": "Nlp with Ruby Updates on Jul 24, 2017",
      "_short_title": "Jul 24, 2017",
      "_slug": "2017/07/24/",
      "summary": "2 awesome projects updated on Jul 24, 2017",
      "_filepath": "/content/2017/07/24/README.md",
      "url": "https://www.trackawesomelist.com/2017/07/24/",
      "date_published": "2017-07-24T06:19:52.000Z",
      "date_modified": "2017-07-24T06:19:52.000Z",
      "content_text": "\n\n### Language Aware String Manipulation / Constituency Parsing\n\n*   [translit\\_kit (⭐7)](https://github.com/AnalyzePlatypus/TranslitKit) -\n    Transliterate Hebrew & Yiddish text into Latin characters.\n*   [re2 (⭐146)](https://github.com/mudge/re2) -\n    hight-speed Regular Expression library for Text Mining and Text Extraction.",
      "content_html": "<h3><p>Language Aware String Manipulation / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/AnalyzePlatypus/TranslitKit\" rel=\"noopener noreferrer\">translit_kit (⭐7)</a> -\nTransliterate Hebrew &amp; Yiddish text into Latin characters.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mudge/re2\" rel=\"noopener noreferrer\">re2 (⭐146)</a> -\nhight-speed Regular Expression library for Text Mining and Text Extraction.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/06/14/",
      "title": "Nlp with Ruby Updates on Jun 14, 2017",
      "_short_title": "Jun 14, 2017",
      "_slug": "2017/06/14/",
      "summary": "1 awesome projects updated on Jun 14, 2017",
      "_filepath": "/content/2017/06/14/README.md",
      "url": "https://www.trackawesomelist.com/2017/06/14/",
      "date_published": "2017-06-14T12:50:29.000Z",
      "date_modified": "2017-06-14T12:50:29.000Z",
      "content_text": "\n\n### Related Resources / Constituency Parsing\n\n*   [Neural Machine Translation Implementations (⭐363)](https://github.com/jonsafari/nmt-list)",
      "content_html": "<h3><p>Related Resources / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/jonsafari/nmt-list\" rel=\"noopener noreferrer\">Neural Machine Translation Implementations (⭐363)</a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/05/24/",
      "title": "Nlp with Ruby Updates on May 24, 2017",
      "_short_title": "May 24, 2017",
      "_slug": "2017/05/24/",
      "summary": "1 awesome projects updated on May 24, 2017",
      "_filepath": "/content/2017/05/24/README.md",
      "url": "https://www.trackawesomelist.com/2017/05/24/",
      "date_published": "2017-05-24T12:48:06.000Z",
      "date_modified": "2017-05-24T12:48:06.000Z",
      "content_text": "\n\n### Community / Constituency Parsing\n\n*   [Stack Overflow](https://stackoverflow.com/search?q=%5Bnlp%5D+and+%5Bruby%5D)",
      "content_html": "<h3><p>Community / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://stackoverflow.com/search?q=%5Bnlp%5D+and+%5Bruby%5D\" rel=\"noopener noreferrer\">Stack Overflow</a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/05/19/",
      "title": "Nlp with Ruby Updates on May 19, 2017",
      "_short_title": "May 19, 2017",
      "_slug": "2017/05/19/",
      "summary": "2 awesome projects updated on May 19, 2017",
      "_filepath": "/content/2017/05/19/README.md",
      "url": "https://www.trackawesomelist.com/2017/05/19/",
      "date_published": "2017-05-19T12:25:18.000Z",
      "date_modified": "2017-05-19T13:18:36.000Z",
      "content_text": "\n\n### Dialog Agents, Assistants, and Chatbots / Constituency Parsing\n\n*   [chatterbot (⭐490)](https://github.com/muffinista/chatterbot) -\n    Straightforward ruby-based Twitter Bot Framework, using OAuth to authenticate.\n*   [lita (⭐1.7k)](https://github.com/litaio/lita) -\n    Highly extensible chat operation bot framework written with persistent storage on [Redis](https://redis.io/).",
      "content_html": "<h3><p>Dialog Agents, Assistants, and Chatbots / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/muffinista/chatterbot\" rel=\"noopener noreferrer\">chatterbot (⭐490)</a> -\nStraightforward ruby-based Twitter Bot Framework, using OAuth to authenticate.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/litaio/lita\" rel=\"noopener noreferrer\">lita (⭐1.7k)</a> -\nHighly extensible chat operation bot framework written with persistent storage on <a href=\"https://redis.io/\" rel=\"noopener noreferrer\">Redis</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/05/17/",
      "title": "Nlp with Ruby Updates on May 17, 2017",
      "_short_title": "May 17, 2017",
      "_slug": "2017/05/17/",
      "summary": "1 awesome projects updated on May 17, 2017",
      "_filepath": "/content/2017/05/17/README.md",
      "url": "https://www.trackawesomelist.com/2017/05/17/",
      "date_published": "2017-05-17T16:40:16.000Z",
      "date_modified": "2017-05-17T16:40:16.000Z",
      "content_text": "\n\n### Articles, Posts, Talks, and Presentations / Constituency Parsing\n\n*   2011\n    *   *Ruby one-liners* by [Benoit Hamelin](https://twitter.com/benoithamelin) <sup>\\[[post](http://benoithamelin.tumblr.com/ruby1line)]</sup>\n    *   *Clustering in Ruby* by [Colin Drake](https://twitter.com/colinfdrake) <sup>\\[[post](https://colindrake.me/post/k-means-clustering-in-ruby/)/)]</sup>",
      "content_html": "<h3><p>Articles, Posts, Talks, and Presentations / Constituency Parsing</p>\n</h3>\n<ul>\n<li>2011<ul>\n<li><em>Ruby one-liners</em> by <a href=\"https://twitter.com/benoithamelin\" rel=\"noopener noreferrer\">Benoit Hamelin</a> <sup>[<a href=\"http://benoithamelin.tumblr.com/ruby1line\" rel=\"noopener noreferrer\">post</a>]</sup></li>\n<li><em>Clustering in Ruby</em> by <a href=\"https://twitter.com/colinfdrake\" rel=\"noopener noreferrer\">Colin Drake</a> <sup>[<a href=\"https://colindrake.me/post/k-means-clustering-in-ruby/\" rel=\"noopener noreferrer\">post</a>/)]</sup></li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/05/16/",
      "title": "Nlp with Ruby Updates on May 16, 2017",
      "_short_title": "May 16, 2017",
      "_slug": "2017/05/16/",
      "summary": "1 awesome projects updated on May 16, 2017",
      "_filepath": "/content/2017/05/16/README.md",
      "url": "https://www.trackawesomelist.com/2017/05/16/",
      "date_published": "2017-05-16T21:38:49.000Z",
      "date_modified": "2017-05-16T21:38:49.000Z",
      "content_text": "\n\n### Multipurpose Engines / On-line APIs\n\n*   [google-cloud-language (⭐1.4k)](https://github.com/googleapis/google-cloud-ruby/tree/master/google-cloud-language) -\n    Google's Natural Language service API for Ruby.",
      "content_html": "<h3><p>Multipurpose Engines / On-line APIs</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/googleapis/google-cloud-ruby/tree/master/google-cloud-language\" rel=\"noopener noreferrer\">google-cloud-language (⭐1.4k)</a> -\nGoogle's Natural Language service API for Ruby.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/05/07/",
      "title": "Nlp with Ruby Updates on May 07, 2017",
      "_short_title": "May 07, 2017",
      "_slug": "2017/05/07/",
      "summary": "2 awesome projects updated on May 07, 2017",
      "_filepath": "/content/2017/05/07/README.md",
      "url": "https://www.trackawesomelist.com/2017/05/07/",
      "date_published": "2017-05-07T17:45:58.000Z",
      "date_modified": "2017-05-07T19:08:12.000Z",
      "content_text": "\n\n### Pipeline Generation\n\n*   [parallel (⭐4.2k)](https://github.com/grosser/parallel) -\n    Supervisor for parallel execution on multiple CPUs or in many threads.\n*   [pwrake (⭐57)](https://github.com/masa16/pwrake) -\n    Rake extensions to run local and remote tasks in parallel.",
      "content_html": "<h3><p>Pipeline Generation</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/grosser/parallel\" rel=\"noopener noreferrer\">parallel (⭐4.2k)</a> -\nSupervisor for parallel execution on multiple CPUs or in many threads.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/masa16/pwrake\" rel=\"noopener noreferrer\">pwrake (⭐57)</a> -\nRake extensions to run local and remote tasks in parallel.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/05/02/",
      "title": "Nlp with Ruby Updates on May 02, 2017",
      "_short_title": "May 02, 2017",
      "_slug": "2017/05/02/",
      "summary": "1 awesome projects updated on May 02, 2017",
      "_filepath": "/content/2017/05/02/README.md",
      "url": "https://www.trackawesomelist.com/2017/05/02/",
      "date_published": "2017-05-02T21:46:45.000Z",
      "date_modified": "2017-05-02T21:46:45.000Z",
      "content_text": "\n\n### Projects and Code Examples / Constituency Parsing\n\n*   [RSyntaxTree](https://yohasebe.com/rsyntaxtree/) -\n    Web based demonstration of the syntactic tree visualization.",
      "content_html": "<h3><p>Projects and Code Examples / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://yohasebe.com/rsyntaxtree/\" rel=\"noopener noreferrer\">RSyntaxTree</a> -\nWeb based demonstration of the syntactic tree visualization.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/04/21/",
      "title": "Nlp with Ruby Updates on Apr 21, 2017",
      "_short_title": "Apr 21, 2017",
      "_slug": "2017/04/21/",
      "summary": "1 awesome projects updated on Apr 21, 2017",
      "_filepath": "/content/2017/04/21/README.md",
      "url": "https://www.trackawesomelist.com/2017/04/21/",
      "date_published": "2017-04-21T14:26:47.000Z",
      "date_modified": "2017-04-21T14:26:47.000Z",
      "content_text": "\n\n### Articles, Posts, Talks, and Presentations / Constituency Parsing\n\n*   2006\n    *   *Speak My Language: Natural Language Processing With Ruby* by [Michael Granger](https://deveiate.org/resume.html) <sup>\\[[slides](https://deveiate.org/misc/Speak-My-Language.pdf) |\n        [write-up](http://blog.nicksieger.com/articles/2006/10/22/rubyconf-natural-language-generation-and-processing-in-ruby/) |\n        [write-up](http://juixe.com/papers/RubyConf2006.pdf)]</sup>",
      "content_html": "<h3><p>Articles, Posts, Talks, and Presentations / Constituency Parsing</p>\n</h3>\n<ul>\n<li>2006<ul>\n<li><em>Speak My Language: Natural Language Processing With Ruby</em> by <a href=\"https://deveiate.org/resume.html\" rel=\"noopener noreferrer\">Michael Granger</a> <sup>[<a href=\"https://deveiate.org/misc/Speak-My-Language.pdf\" rel=\"noopener noreferrer\">slides</a> |\n<a href=\"http://blog.nicksieger.com/articles/2006/10/22/rubyconf-natural-language-generation-and-processing-in-ruby/\" rel=\"noopener noreferrer\">write-up</a> |\n<a href=\"http://juixe.com/papers/RubyConf2006.pdf\" rel=\"noopener noreferrer\">write-up</a>]</sup></li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/04/16/",
      "title": "Nlp with Ruby Updates on Apr 16, 2017",
      "_short_title": "Apr 16, 2017",
      "_slug": "2017/04/16/",
      "summary": "5 awesome projects updated on Apr 16, 2017",
      "_filepath": "/content/2017/04/16/README.md",
      "url": "https://www.trackawesomelist.com/2017/04/16/",
      "date_published": "2017-04-16T16:46:40.000Z",
      "date_modified": "2017-04-16T18:05:15.000Z",
      "content_text": "\n\n### Lexical Processing / Lexical Statistics: Counting Types and Tokens\n\n*   [words\\_counted (⭐162)](https://github.com/abitdodgy/words_counted) -\n    Pure Ruby library counting word statistics with different custom options.\n\n### Full Text Search, Information Retrieval, Indexing / Constituency Parsing\n\n*   [google-api-client (⭐2.8k)](https://github.com/googleapis/google-api-ruby-client) -\n    Ruby API library for [Google](https://developers.google.com/api-client-library/ruby/) services.\n\n### Machine Translation / Constituency Parsing\n\n*   [zipf (⭐3)](https://github.com/pks/zipf) -\n    implementation of BLEU and other base algorithms.\n\n### Text Extraction / Constituency Parsing\n\n*   [yomu (⭐502)](https://github.com/yomurb/yomu) -\n    library for extracting text and metadata from files and documents\n    using the [Apache Tika](https://tika.apache.org/) content analysis toolkit.\n\n### Projects and Code Examples / Constituency Parsing\n\n*   [Words Counted](http://rubywordcount.com/) -\n    examples of customizable word statistics powered by\n    [words\\_counted (⭐162)](https://github.com/abitdodgy/words_counted).",
      "content_html": "<h3><p>Lexical Processing / Lexical Statistics: Counting Types and Tokens</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/abitdodgy/words_counted\" rel=\"noopener noreferrer\">words_counted (⭐162)</a> -\nPure Ruby library counting word statistics with different custom options.</li>\n</ul>\n<h3><p>Full Text Search, Information Retrieval, Indexing / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/googleapis/google-api-ruby-client\" rel=\"noopener noreferrer\">google-api-client (⭐2.8k)</a> -\nRuby API library for <a href=\"https://developers.google.com/api-client-library/ruby/\" rel=\"noopener noreferrer\">Google</a> services.</li>\n</ul>\n<h3><p>Machine Translation / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/pks/zipf\" rel=\"noopener noreferrer\">zipf (⭐3)</a> -\nimplementation of BLEU and other base algorithms.</li>\n</ul>\n<h3><p>Text Extraction / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/yomurb/yomu\" rel=\"noopener noreferrer\">yomu (⭐502)</a> -\nlibrary for extracting text and metadata from files and documents\nusing the <a href=\"https://tika.apache.org/\" rel=\"noopener noreferrer\">Apache Tika</a> content analysis toolkit.</li>\n</ul>\n<h3><p>Projects and Code Examples / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"http://rubywordcount.com/\" rel=\"noopener noreferrer\">Words Counted</a> -\nexamples of customizable word statistics powered by\n<a href=\"https://github.com/abitdodgy/words_counted\" rel=\"noopener noreferrer\">words_counted (⭐162)</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/04/14/",
      "title": "Nlp with Ruby Updates on Apr 14, 2017",
      "_short_title": "Apr 14, 2017",
      "_slug": "2017/04/14/",
      "summary": "4 awesome projects updated on Apr 14, 2017",
      "_filepath": "/content/2017/04/14/README.md",
      "url": "https://www.trackawesomelist.com/2017/04/14/",
      "date_published": "2017-04-14T19:51:39.000Z",
      "date_modified": "2017-04-14T21:25:38.000Z",
      "content_text": "\n\n### Optical Character Recognition / Constituency Parsing\n\n*   [tesseract-ocr (⭐630)](https://github.com/meh/ruby-tesseract-ocr) -\n    FFI based wrapper over the [Tesseract OCR Engine (⭐68k)](https://github.com/tesseract-ocr/tesseract).\n\n### Language Aware String Manipulation / Constituency Parsing\n\n*   [fuzzy\\_match (⭐680)](https://github.com/seamusabshere/fuzzy_match) -\n    Fuzzy string comparison with Distance measures and Regular Expression.\n*   [fuzzy\\_tools (⭐23)](https://github.com/brianhempel/fuzzy_tools) -\n    Toolset for fuzzy searches in Ruby tuned for accuracy.\n\n### Needs your Help! / Constituency Parsing\n\n*   [summarize (⭐205)](https://github.com/ssoper/summarize) -\n    Ruby native wrapper for [Open Text Summarizer (⭐243)](https://github.com/neopunisher/Open-Text-Summarizer).",
      "content_html": "<h3><p>Optical Character Recognition / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/meh/ruby-tesseract-ocr\" rel=\"noopener noreferrer\">tesseract-ocr (⭐630)</a> -\nFFI based wrapper over the <a href=\"https://github.com/tesseract-ocr/tesseract\" rel=\"noopener noreferrer\">Tesseract OCR Engine (⭐68k)</a>.</li>\n</ul>\n<h3><p>Language Aware String Manipulation / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/seamusabshere/fuzzy_match\" rel=\"noopener noreferrer\">fuzzy_match (⭐680)</a> -\nFuzzy string comparison with Distance measures and Regular Expression.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/brianhempel/fuzzy_tools\" rel=\"noopener noreferrer\">fuzzy_tools (⭐23)</a> -\nToolset for fuzzy searches in Ruby tuned for accuracy.</li>\n</ul>\n<h3><p>Needs your Help! / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ssoper/summarize\" rel=\"noopener noreferrer\">summarize (⭐205)</a> -\nRuby native wrapper for <a href=\"https://github.com/neopunisher/Open-Text-Summarizer\" rel=\"noopener noreferrer\">Open Text Summarizer (⭐243)</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/04/11/",
      "title": "Nlp with Ruby Updates on Apr 11, 2017",
      "_short_title": "Apr 11, 2017",
      "_slug": "2017/04/11/",
      "summary": "10 awesome projects updated on Apr 11, 2017",
      "_filepath": "/content/2017/04/11/README.md",
      "url": "https://www.trackawesomelist.com/2017/04/11/",
      "date_published": "2017-04-11T15:05:58.000Z",
      "date_modified": "2017-04-11T17:02:27.000Z",
      "content_text": "\n\n### Machine Learning Libraries / Constituency Parsing\n\n*   [ruby-fann (⭐505)](https://github.com/tangledpath/ruby-fann) -\n    Ruby bindings to the [Fast Artificial Neural Network Library (FANN)](http://leenissen.dk/fann/wp/).\n\n### Full Text Search, Information Retrieval, Indexing / Constituency Parsing\n\n*   [rsolr (⭐420)](https://github.com/rsolr/rsolr) -\n    Ruby and Rails client library for [Apache Solr](http://lucene.apache.org/solr/).\n*   [sunspot (⭐3k)](https://github.com/sunspot/sunspot) -\n    Rails centric client for [Apache Solr](http://lucene.apache.org/solr/).\n*   [thinking-sphinx (⭐1.6k)](https://github.com/pat/thinking-sphinx) -\n    [Active Record](https://guides.rubyonrails.org/active_record_basics.html)\n    plugin for using [Sphinx](http://sphinxsearch.com/) in (not only) Rails based projects.\n*   [elasticsearch (⭐2k)](https://github.com/elastic/elasticsearch-ruby/tree/master/elasticsearch) -\n    Ruby client and API for [Elasticsearch](https://www.elastic.co/).\n*   [elasticsearch-rails (⭐3.1k)](https://github.com/elastic/elasticsearch-rails) -\n    Ruby and Rails integrations for [Elasticsearch](https://www.elastic.co/).\n\n### Articles, Posts, Talks, and Presentations / Constituency Parsing\n\n*   2009\n    *   *Porting the UEA-Lite Stemmer to Ruby* by [Jason Adams](https://twitter.com/ealdent) <sup>\\[[post](https://ealdent.wordpress.com/2009/07/16/porting-the-uea-lite-stemmer-to-ruby/)]</sup>\n    *   *NLP Resources for Ruby* by [Jason Adams](https://twitter.com/ealdent) <sup>\\[[post](https://ealdent.wordpress.com/2009/09/13/nlp-resources-for-ruby/)]</sup>\n\n### Projects and Code Examples / Constituency Parsing\n\n*   [Going the Distance (⭐61)](https://github.com/schneems/going_the_distance) -\n    Implementations of various distance algorithms with example calculations.\n*   [Named entity recognition with Stanford NER and Ruby (⭐20)](https://github.com/mblongii/ruby-ner) -\n    NER Examples in Ruby and Java with some [explanations](https://web.archive.org/web/20120722225402/http://mblongii.com/2012/04/15/named-entity-recognition-with-stanford-ner-and-ruby/).\n\n### Needs your Help! / Constituency Parsing\n\n*   [ferret (⭐280)](https://github.com/dbalmain/ferret) -\n    Information Retrieval in C and Ruby.",
      "content_html": "<h3><p>Machine Learning Libraries / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/tangledpath/ruby-fann\" rel=\"noopener noreferrer\">ruby-fann (⭐505)</a> -\nRuby bindings to the <a href=\"http://leenissen.dk/fann/wp/\" rel=\"noopener noreferrer\">Fast Artificial Neural Network Library (FANN)</a>.</li>\n</ul>\n<h3><p>Full Text Search, Information Retrieval, Indexing / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/rsolr/rsolr\" rel=\"noopener noreferrer\">rsolr (⭐420)</a> -\nRuby and Rails client library for <a href=\"http://lucene.apache.org/solr/\" rel=\"noopener noreferrer\">Apache Solr</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/sunspot/sunspot\" rel=\"noopener noreferrer\">sunspot (⭐3k)</a> -\nRails centric client for <a href=\"http://lucene.apache.org/solr/\" rel=\"noopener noreferrer\">Apache Solr</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/pat/thinking-sphinx\" rel=\"noopener noreferrer\">thinking-sphinx (⭐1.6k)</a> -\n<a href=\"https://guides.rubyonrails.org/active_record_basics.html\" rel=\"noopener noreferrer\">Active Record</a>\nplugin for using <a href=\"http://sphinxsearch.com/\" rel=\"noopener noreferrer\">Sphinx</a> in (not only) Rails based projects.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/elastic/elasticsearch-ruby/tree/master/elasticsearch\" rel=\"noopener noreferrer\">elasticsearch (⭐2k)</a> -\nRuby client and API for <a href=\"https://www.elastic.co/\" rel=\"noopener noreferrer\">Elasticsearch</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/elastic/elasticsearch-rails\" rel=\"noopener noreferrer\">elasticsearch-rails (⭐3.1k)</a> -\nRuby and Rails integrations for <a href=\"https://www.elastic.co/\" rel=\"noopener noreferrer\">Elasticsearch</a>.</li>\n</ul>\n<h3><p>Articles, Posts, Talks, and Presentations / Constituency Parsing</p>\n</h3>\n<ul>\n<li>2009<ul>\n<li><em>Porting the UEA-Lite Stemmer to Ruby</em> by <a href=\"https://twitter.com/ealdent\" rel=\"noopener noreferrer\">Jason Adams</a> <sup>[<a href=\"https://ealdent.wordpress.com/2009/07/16/porting-the-uea-lite-stemmer-to-ruby/\" rel=\"noopener noreferrer\">post</a>]</sup></li>\n<li><em>NLP Resources for Ruby</em> by <a href=\"https://twitter.com/ealdent\" rel=\"noopener noreferrer\">Jason Adams</a> <sup>[<a href=\"https://ealdent.wordpress.com/2009/09/13/nlp-resources-for-ruby/\" rel=\"noopener noreferrer\">post</a>]</sup></li>\n</ul>\n</li>\n</ul>\n<h3><p>Projects and Code Examples / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/schneems/going_the_distance\" rel=\"noopener noreferrer\">Going the Distance (⭐61)</a> -\nImplementations of various distance algorithms with example calculations.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mblongii/ruby-ner\" rel=\"noopener noreferrer\">Named entity recognition with Stanford NER and Ruby (⭐20)</a> -\nNER Examples in Ruby and Java with some <a href=\"https://web.archive.org/web/20120722225402/http://mblongii.com/2012/04/15/named-entity-recognition-with-stanford-ner-and-ruby/\" rel=\"noopener noreferrer\">explanations</a>.</li>\n</ul>\n<h3><p>Needs your Help! / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/dbalmain/ferret\" rel=\"noopener noreferrer\">ferret (⭐280)</a> -\nInformation Retrieval in C and Ruby.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/04/10/",
      "title": "Nlp with Ruby Updates on Apr 10, 2017",
      "_short_title": "Apr 10, 2017",
      "_slug": "2017/04/10/",
      "summary": "1 awesome projects updated on Apr 10, 2017",
      "_filepath": "/content/2017/04/10/README.md",
      "url": "https://www.trackawesomelist.com/2017/04/10/",
      "date_published": "2017-04-10T10:58:49.000Z",
      "date_modified": "2017-04-10T10:58:49.000Z",
      "content_text": "\n\n### Articles, Posts, Talks, and Presentations / Constituency Parsing\n\n*   2016\n    *   *Quickly Create a Telegram Bot in Ruby* by [Ardian Haxha](https://twitter.com/ArdianHaxha) <sup>\\[[tutorial](https://www.sitepoint.com/quickly-create-a-telegram-bot-in-ruby/)]</sup>\n    *   *Deep Learning: An Introduction for Ruby Developers* by [Geoffrey Litt](https://twitter.com/geoffreylitt) <sup>\\[[slides](https://speakerdeck.com/geoffreylitt/deep-learning-an-introduction-for-ruby-developers)]</sup>\n    *   *How I made a pure-Ruby word2vec program more than 3x faster* by [Kei Sawada](https://twitter.com/remore) <sup>\\[[slides](https://speakerdeck.com/remore/how-i-made-a-pure-ruby-word2vec-program-more-than-3x-faster)]</sup>\n    *   *Dōmo arigatō, Mr. Roboto: Machine Learning with Ruby* by [Eric Weinstein](https://twitter.com/ericqweinstein) <sup>\\[[slides](https://speakerdeck.com/ericqweinstein/domo-arigato-mr-roboto-machine-learning-with-ruby) | [video](https://www.youtube.com/watch?v=T1nFQ49TyeA)]</sup>",
      "content_html": "<h3><p>Articles, Posts, Talks, and Presentations / Constituency Parsing</p>\n</h3>\n<ul>\n<li>2016<ul>\n<li><em>Quickly Create a Telegram Bot in Ruby</em> by <a href=\"https://twitter.com/ArdianHaxha\" rel=\"noopener noreferrer\">Ardian Haxha</a> <sup>[<a href=\"https://www.sitepoint.com/quickly-create-a-telegram-bot-in-ruby/\" rel=\"noopener noreferrer\">tutorial</a>]</sup></li>\n<li><em>Deep Learning: An Introduction for Ruby Developers</em> by <a href=\"https://twitter.com/geoffreylitt\" rel=\"noopener noreferrer\">Geoffrey Litt</a> <sup>[<a href=\"https://speakerdeck.com/geoffreylitt/deep-learning-an-introduction-for-ruby-developers\" rel=\"noopener noreferrer\">slides</a>]</sup></li>\n<li><em>How I made a pure-Ruby word2vec program more than 3x faster</em> by <a href=\"https://twitter.com/remore\" rel=\"noopener noreferrer\">Kei Sawada</a> <sup>[<a href=\"https://speakerdeck.com/remore/how-i-made-a-pure-ruby-word2vec-program-more-than-3x-faster\" rel=\"noopener noreferrer\">slides</a>]</sup></li>\n<li><em>Dōmo arigatō, Mr. Roboto: Machine Learning with Ruby</em> by <a href=\"https://twitter.com/ericqweinstein\" rel=\"noopener noreferrer\">Eric Weinstein</a> <sup>[<a href=\"https://speakerdeck.com/ericqweinstein/domo-arigato-mr-roboto-machine-learning-with-ruby\" rel=\"noopener noreferrer\">slides</a> | <a href=\"https://www.youtube.com/watch?v=T1nFQ49TyeA\" rel=\"noopener noreferrer\">video</a>]</sup></li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/04/06/",
      "title": "Nlp with Ruby Updates on Apr 06, 2017",
      "_short_title": "Apr 06, 2017",
      "_slug": "2017/04/06/",
      "summary": "2 awesome projects updated on Apr 06, 2017",
      "_filepath": "/content/2017/04/06/README.md",
      "url": "https://www.trackawesomelist.com/2017/04/06/",
      "date_published": "2017-04-06T13:27:06.000Z",
      "date_modified": "2017-04-06T13:27:06.000Z",
      "content_text": "\n\n### Machine Learning Libraries / Constituency Parsing\n\n*   [decisiontree (⭐1.5k)](https://github.com/igrigorik/decisiontree) -\n    Decision Tree ID3 Algorithm in pure Ruby <sup>\\[[post](https://www.igvita.com/2007/04/16/decision-tree-learning-in-ruby/)]</sup>.\n\n### Articles, Posts, Talks, and Presentations / Constituency Parsing\n\n*   2007\n    *   *Decision Tree Learning in Ruby* by [Ilya Grigorik](https://twitter.com/igrigorik) <sup>\\[[post](https://www.igvita.com/2007/04/16/decision-tree-learning-in-ruby/)]</sup>",
      "content_html": "<h3><p>Machine Learning Libraries / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/igrigorik/decisiontree\" rel=\"noopener noreferrer\">decisiontree (⭐1.5k)</a> -\nDecision Tree ID3 Algorithm in pure Ruby <sup>[<a href=\"https://www.igvita.com/2007/04/16/decision-tree-learning-in-ruby/\" rel=\"noopener noreferrer\">post</a>]</sup>.</li>\n</ul>\n<h3><p>Articles, Posts, Talks, and Presentations / Constituency Parsing</p>\n</h3>\n<ul>\n<li>2007<ul>\n<li><em>Decision Tree Learning in Ruby</em> by <a href=\"https://twitter.com/igrigorik\" rel=\"noopener noreferrer\">Ilya Grigorik</a> <sup>[<a href=\"https://www.igvita.com/2007/04/16/decision-tree-learning-in-ruby/\" rel=\"noopener noreferrer\">post</a>]</sup></li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/04/05/",
      "title": "Nlp with Ruby Updates on Apr 05, 2017",
      "_short_title": "Apr 05, 2017",
      "_slug": "2017/04/05/",
      "summary": "3 awesome projects updated on Apr 05, 2017",
      "_filepath": "/content/2017/04/05/README.md",
      "url": "https://www.trackawesomelist.com/2017/04/05/",
      "date_published": "2017-04-05T12:53:48.000Z",
      "date_modified": "2017-04-05T14:30:04.000Z",
      "content_text": "\n\n### Multipurpose Engines / On-line APIs\n\n*   [wlapi (⭐19)](https://github.com/arbox/wlapi) - Ruby client library for\n    [Wortschatz Leipzig](http://wortschatz.uni-leipzig.de/de) web services.\n\n### Lexical Processing / Filtering Stop Words\n\n*   [stopwords-filter (⭐78)](https://github.com/brenes/stopwords-filter) - Filter and\n    Stop Word Lexicon based on the SnowBall lemmatizer.\n\n### Sentiment Analysis / Constituency Parsing\n\n*   [stimmung (⭐20)](https://github.com/pachacamac/stimmung) -\n    Semantic Polarity based on the\n    [SentiWS](http://wortschatz.uni-leipzig.de/en/download) lexicon.",
      "content_html": "<h3><p>Multipurpose Engines / On-line APIs</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/arbox/wlapi\" rel=\"noopener noreferrer\">wlapi (⭐19)</a> - Ruby client library for\n<a href=\"http://wortschatz.uni-leipzig.de/de\" rel=\"noopener noreferrer\">Wortschatz Leipzig</a> web services.</li>\n</ul>\n<h3><p>Lexical Processing / Filtering Stop Words</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/brenes/stopwords-filter\" rel=\"noopener noreferrer\">stopwords-filter (⭐78)</a> - Filter and\nStop Word Lexicon based on the SnowBall lemmatizer.</li>\n</ul>\n<h3><p>Sentiment Analysis / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/pachacamac/stimmung\" rel=\"noopener noreferrer\">stimmung (⭐20)</a> -\nSemantic Polarity based on the\n<a href=\"http://wortschatz.uni-leipzig.de/en/download\" rel=\"noopener noreferrer\">SentiWS</a> lexicon.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/03/03/",
      "title": "Nlp with Ruby Updates on Mar 03, 2017",
      "_short_title": "Mar 03, 2017",
      "_slug": "2017/03/03/",
      "summary": "2 awesome projects updated on Mar 03, 2017",
      "_filepath": "/content/2017/03/03/README.md",
      "url": "https://www.trackawesomelist.com/2017/03/03/",
      "date_published": "2017-03-03T13:33:22.000Z",
      "date_modified": "2017-03-03T13:46:40.000Z",
      "content_text": "\n\n### Numbers, Dates, and Time Parsing / Constituency Parsing\n\n*   [numerizer (⭐38)](https://github.com/jduff/numerizer) -\n    Ruby parser for English number expressions.\n\n### Articles, Posts, Talks, and Presentations / Constituency Parsing\n\n*   2015\n    *   *N-gram Analysis for Fun and Profit* by [Jesus Castello](https://github.com/matugm) <sup>\\[[tutorial](https://www.rubyguides.com/2015/09/ngram-analysis-ruby/)]</sup>\n    *   *Machine Learning made simple with Ruby* by [Lorenzo Masini](https://github.com/rugginoso) <sup>\\[[tutorial](https://www.leanpanda.com/blog/2015/08/24/machine-learning-automatic-classification/)]</sup>\n    *   *Using Ruby Machine Learning to Find Paris Hilton Quotes* by [Rick Carlino](https://github.com/RickCarlino) <sup>\\[[tutorial](http://web.archive.org/web/20160414072324/http://datamelon.io/blog/2015/using-ruby-machine-learning-id-paris-hilton-quotes.html)]</sup>\n    *   *Exploring Natural Language Processing in Ruby* by [Kevin Dias](https://github.com/diasks2) <sup>\\[[slides](https://www.slideshare.net/diasks2/exploring-natural-language-processing-in-ruby)]</sup>\n    *   *Machine Learning made simple with Ruby* by [Lorenzo Masini](https://twitter.com/rugginoso) <sup>\\[[post](https://www.leanpanda.com/blog/2015/08/24/machine-learning-automatic-classification/)]</sup>\n    *   *Practical Data Science in Ruby* by Bobby Grayson <sup>\\[[slides](http://slides.com/bobbygrayson/p#/)]</sup>",
      "content_html": "<h3><p>Numbers, Dates, and Time Parsing / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/jduff/numerizer\" rel=\"noopener noreferrer\">numerizer (⭐38)</a> -\nRuby parser for English number expressions.</li>\n</ul>\n<h3><p>Articles, Posts, Talks, and Presentations / Constituency Parsing</p>\n</h3>\n<ul>\n<li>2015<ul>\n<li><em>N-gram Analysis for Fun and Profit</em> by <a href=\"https://github.com/matugm\" rel=\"noopener noreferrer\">Jesus Castello</a> <sup>[<a href=\"https://www.rubyguides.com/2015/09/ngram-analysis-ruby/\" rel=\"noopener noreferrer\">tutorial</a>]</sup></li>\n<li><em>Machine Learning made simple with Ruby</em> by <a href=\"https://github.com/rugginoso\" rel=\"noopener noreferrer\">Lorenzo Masini</a> <sup>[<a href=\"https://www.leanpanda.com/blog/2015/08/24/machine-learning-automatic-classification/\" rel=\"noopener noreferrer\">tutorial</a>]</sup></li>\n<li><em>Using Ruby Machine Learning to Find Paris Hilton Quotes</em> by <a href=\"https://github.com/RickCarlino\" rel=\"noopener noreferrer\">Rick Carlino</a> <sup>[<a href=\"http://web.archive.org/web/20160414072324/http://datamelon.io/blog/2015/using-ruby-machine-learning-id-paris-hilton-quotes.html\" rel=\"noopener noreferrer\">tutorial</a>]</sup></li>\n<li><em>Exploring Natural Language Processing in Ruby</em> by <a href=\"https://github.com/diasks2\" rel=\"noopener noreferrer\">Kevin Dias</a> <sup>[<a href=\"https://www.slideshare.net/diasks2/exploring-natural-language-processing-in-ruby\" rel=\"noopener noreferrer\">slides</a>]</sup></li>\n<li><em>Machine Learning made simple with Ruby</em> by <a href=\"https://twitter.com/rugginoso\" rel=\"noopener noreferrer\">Lorenzo Masini</a> <sup>[<a href=\"https://www.leanpanda.com/blog/2015/08/24/machine-learning-automatic-classification/\" rel=\"noopener noreferrer\">post</a>]</sup></li>\n<li><em>Practical Data Science in Ruby</em> by Bobby Grayson <sup>[<a href=\"http://slides.com/bobbygrayson/p#/\" rel=\"noopener noreferrer\">slides</a>]</sup></li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/02/24/",
      "title": "Nlp with Ruby Updates on Feb 24, 2017",
      "_short_title": "Feb 24, 2017",
      "_slug": "2017/02/24/",
      "summary": "3 awesome projects updated on Feb 24, 2017",
      "_filepath": "/content/2017/02/24/README.md",
      "url": "https://www.trackawesomelist.com/2017/02/24/",
      "date_published": "2017-02-24T15:35:08.000Z",
      "date_modified": "2017-02-24T15:43:33.000Z",
      "content_text": "\n\n### Spelling and Error Correction / Constituency Parsing\n\n*   [hunspell-i18n (⭐4)](https://github.com/romanbsd/hunspell) -\n    Ruby bindings to the standard [Hunspell](https://hunspell.github.io/) Spell Checker.\n*   [ffi-hunspell (⭐49)](https://github.com/postmodern/ffi-hunspell) -\n    FFI based Ruby bindings for [Hunspell](https://hunspell.github.io/).\n*   [hunspell (⭐35)](https://github.com/segabor/Hunspell) -\n    Ruby bindings to [Hunspell](https://hunspell.github.io/) via Ruby C API.",
      "content_html": "<h3><p>Spelling and Error Correction / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/romanbsd/hunspell\" rel=\"noopener noreferrer\">hunspell-i18n (⭐4)</a> -\nRuby bindings to the standard <a href=\"https://hunspell.github.io/\" rel=\"noopener noreferrer\">Hunspell</a> Spell Checker.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/postmodern/ffi-hunspell\" rel=\"noopener noreferrer\">ffi-hunspell (⭐49)</a> -\nFFI based Ruby bindings for <a href=\"https://hunspell.github.io/\" rel=\"noopener noreferrer\">Hunspell</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/segabor/Hunspell\" rel=\"noopener noreferrer\">hunspell (⭐35)</a> -\nRuby bindings to <a href=\"https://hunspell.github.io/\" rel=\"noopener noreferrer\">Hunspell</a> via Ruby C API.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/02/17/",
      "title": "Nlp with Ruby Updates on Feb 17, 2017",
      "_short_title": "Feb 17, 2017",
      "_slug": "2017/02/17/",
      "summary": "1 awesome projects updated on Feb 17, 2017",
      "_filepath": "/content/2017/02/17/README.md",
      "url": "https://www.trackawesomelist.com/2017/02/17/",
      "date_published": "2017-02-17T12:05:54.000Z",
      "date_modified": "2017-02-17T12:05:54.000Z",
      "content_text": "\n\n### Pipeline Generation\n\n*   [phobos (⭐219)](https://github.com/phobos/phobos) -\n    Simplified Ruby Client for [Apache Kafka](https://kafka.apache.org/).",
      "content_html": "<h3><p>Pipeline Generation</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/phobos/phobos\" rel=\"noopener noreferrer\">phobos (⭐219)</a> -\nSimplified Ruby Client for <a href=\"https://kafka.apache.org/\" rel=\"noopener noreferrer\">Apache Kafka</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/02/15/",
      "title": "Nlp with Ruby Updates on Feb 15, 2017",
      "_short_title": "Feb 15, 2017",
      "_slug": "2017/02/15/",
      "summary": "1 awesome projects updated on Feb 15, 2017",
      "_filepath": "/content/2017/02/15/README.md",
      "url": "https://www.trackawesomelist.com/2017/02/15/",
      "date_published": "2017-02-15T11:47:33.000Z",
      "date_modified": "2017-02-15T11:47:33.000Z",
      "content_text": "\n\n### Language Identification / On-line APIs\n\n*   [scylla (⭐36)](https://github.com/hashwin/scylla) -\n    Language Categorization and Identification.",
      "content_html": "<h3><p>Language Identification / On-line APIs</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/hashwin/scylla\" rel=\"noopener noreferrer\">scylla (⭐36)</a> -\nLanguage Categorization and Identification.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/02/10/",
      "title": "Nlp with Ruby Updates on Feb 10, 2017",
      "_short_title": "Feb 10, 2017",
      "_slug": "2017/02/10/",
      "summary": "2 awesome projects updated on Feb 10, 2017",
      "_filepath": "/content/2017/02/10/README.md",
      "url": "https://www.trackawesomelist.com/2017/02/10/",
      "date_published": "2017-02-10T16:16:02.000Z",
      "date_modified": "2017-02-10T16:16:02.000Z",
      "content_text": "\n\n### Linguistic Resources / Constituency Parsing\n\n*   [rwordnet (⭐90)](https://github.com/doches/rwordnet) -\n    Pure Ruby self contained API library for the [Princeton WordNet®](https://wordnet.princeton.edu/).\n*   [wordnet (⭐138)](https://github.com/ged/ruby-wordnet/blob/master/README.rdoc) -\n    Performance tuned bindings for the [Princeton WordNet®](https://wordnet.princeton.edu/).",
      "content_html": "<h3><p>Linguistic Resources / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/doches/rwordnet\" rel=\"noopener noreferrer\">rwordnet (⭐90)</a> -\nPure Ruby self contained API library for the <a href=\"https://wordnet.princeton.edu/\" rel=\"noopener noreferrer\">Princeton WordNet®</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ged/ruby-wordnet/blob/master/README.rdoc\" rel=\"noopener noreferrer\">wordnet (⭐138)</a> -\nPerformance tuned bindings for the <a href=\"https://wordnet.princeton.edu/\" rel=\"noopener noreferrer\">Princeton WordNet®</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/02/03/",
      "title": "Nlp with Ruby Updates on Feb 03, 2017",
      "_short_title": "Feb 03, 2017",
      "_slug": "2017/02/03/",
      "summary": "1 awesome projects updated on Feb 03, 2017",
      "_filepath": "/content/2017/02/03/README.md",
      "url": "https://www.trackawesomelist.com/2017/02/03/",
      "date_published": "2017-02-03T12:36:58.000Z",
      "date_modified": "2017-02-03T12:36:58.000Z",
      "content_text": "\n\n### Multipurpose Engines\n\n*   [open\\_nlp (⭐11)](https://github.com/hck/open_nlp) -\n    JRuby Bindings for the [OpenNLP](https://opennlp.apache.org/) Toolkit.",
      "content_html": "<h3><p>Multipurpose Engines</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/hck/open_nlp\" rel=\"noopener noreferrer\">open_nlp (⭐11)</a> -\nJRuby Bindings for the <a href=\"https://opennlp.apache.org/\" rel=\"noopener noreferrer\">OpenNLP</a> Toolkit.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/01/29/",
      "title": "Nlp with Ruby Updates on Jan 29, 2017",
      "_short_title": "Jan 29, 2017",
      "_slug": "2017/01/29/",
      "summary": "2 awesome projects updated on Jan 29, 2017",
      "_filepath": "/content/2017/01/29/README.md",
      "url": "https://www.trackawesomelist.com/2017/01/29/",
      "date_published": "2017-01-29T20:06:32.000Z",
      "date_modified": "2017-01-29T20:06:32.000Z",
      "content_text": "\n\n### Multipurpose Engines\n\n*   [nlp\\_toolz (⭐2)](https://github.com/LeFnord/nlp_toolz) -\n    Wrapper over some [OpenNLP](https://opennlp.apache.org/) classes and\n    the original [Berkeley Parser (⭐182)](https://github.com/slavpetrov/berkeleyparser).\n\n### Machine Learning Libraries / Constituency Parsing\n\n*   [lda-ruby (⭐133)](https://github.com/ealdent/lda-ruby) -\n    Ruby implementation of the [LDA](https://en.wikipedia.org/wiki/Latent_Dirichlet_allocation)\n    (Latent Dirichlet Allocation) for automatic Topic Modelling and Document Clustering.",
      "content_html": "<h3><p>Multipurpose Engines</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/LeFnord/nlp_toolz\" rel=\"noopener noreferrer\">nlp_toolz (⭐2)</a> -\nWrapper over some <a href=\"https://opennlp.apache.org/\" rel=\"noopener noreferrer\">OpenNLP</a> classes and\nthe original <a href=\"https://github.com/slavpetrov/berkeleyparser\" rel=\"noopener noreferrer\">Berkeley Parser (⭐182)</a>.</li>\n</ul>\n<h3><p>Machine Learning Libraries / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ealdent/lda-ruby\" rel=\"noopener noreferrer\">lda-ruby (⭐133)</a> -\nRuby implementation of the <a href=\"https://en.wikipedia.org/wiki/Latent_Dirichlet_allocation\" rel=\"noopener noreferrer\">LDA</a>\n(Latent Dirichlet Allocation) for automatic Topic Modelling and Document Clustering.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/01/23/",
      "title": "Nlp with Ruby Updates on Jan 23, 2017",
      "_short_title": "Jan 23, 2017",
      "_slug": "2017/01/23/",
      "summary": "1 awesome projects updated on Jan 23, 2017",
      "_filepath": "/content/2017/01/23/README.md",
      "url": "https://www.trackawesomelist.com/2017/01/23/",
      "date_published": "2017-01-23T21:25:09.000Z",
      "date_modified": "2017-01-23T21:25:09.000Z",
      "content_text": "\n\n### Articles, Posts, Talks, and Presentations / Constituency Parsing\n\n*   2010\n    *   *bayes\\_motel – Bayesian classification for Ruby* by [Mike Perham](https://twitter.com/mperham) <sup>\\[[post](http://www.mikeperham.com/2010/04/28/bayes_motel-bayesian-classification-for-ruby/)]</sup>",
      "content_html": "<h3><p>Articles, Posts, Talks, and Presentations / Constituency Parsing</p>\n</h3>\n<ul>\n<li>2010<ul>\n<li><em>bayes_motel – Bayesian classification for Ruby</em> by <a href=\"https://twitter.com/mperham\" rel=\"noopener noreferrer\">Mike Perham</a> <sup>[<a href=\"http://www.mikeperham.com/2010/04/28/bayes_motel-bayesian-classification-for-ruby/\" rel=\"noopener noreferrer\">post</a>]</sup></li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/01/10/",
      "title": "Nlp with Ruby Updates on Jan 10, 2017",
      "_short_title": "Jan 10, 2017",
      "_slug": "2017/01/10/",
      "summary": "1 awesome projects updated on Jan 10, 2017",
      "_filepath": "/content/2017/01/10/README.md",
      "url": "https://www.trackawesomelist.com/2017/01/10/",
      "date_published": "2017-01-10T20:48:23.000Z",
      "date_modified": "2017-01-10T20:48:23.000Z",
      "content_text": "\n\n### Multipurpose Engines / On-line APIs\n\n*   [monkeylearn-ruby (⭐80)](https://github.com/monkeylearn/monkeylearn-ruby) - Sentiment\n    Analysis, Topic Modelling, Language Detection, Named Entity Recognition via\n    a Ruby based Web API client.",
      "content_html": "<h3><p>Multipurpose Engines / On-line APIs</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/monkeylearn/monkeylearn-ruby\" rel=\"noopener noreferrer\">monkeylearn-ruby (⭐80)</a> - Sentiment\nAnalysis, Topic Modelling, Language Detection, Named Entity Recognition via\na Ruby based Web API client.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/01/09/",
      "title": "Nlp with Ruby Updates on Jan 09, 2017",
      "_short_title": "Jan 09, 2017",
      "_slug": "2017/01/09/",
      "summary": "4 awesome projects updated on Jan 09, 2017",
      "_filepath": "/content/2017/01/09/README.md",
      "url": "https://www.trackawesomelist.com/2017/01/09/",
      "date_published": "2017-01-09T22:37:11.000Z",
      "date_modified": "2017-01-09T23:08:33.000Z",
      "content_text": "\n\n### Multipurpose Engines\n\n*   [open-nlp (⭐91)](https://github.com/louismullie/open-nlp) -\n    Ruby Bindings for the [OpenNLP](https://opennlp.apache.org/) Toolkit.\n*   [stanford-core-nlp (⭐434)](https://github.com/louismullie/stanford-core-nlp) -\n    Ruby Bindings for the Stanford [CoreNLP (⭐9.9k)](https://github.com/stanfordnlp/CoreNLP) tools.\n\n### Numbers, Dates, and Time Parsing / Constituency Parsing\n\n*   [chronic (⭐3.2k)](https://github.com/mojombo/chronic) -\n    Pure Ruby natural language date parser.\n\n### Articles, Posts, Talks, and Presentations / Constituency Parsing\n\n*   2014\n    *   *Natural Language Parsing with Ruby* by [Glauco Custódio](https://github.com/glaucocustodio) <sup>\\[[tutorial](http://glaucocustodio.github.io/2014/11/10/natural-language-parsing-with-ruby/)]</sup>\n    *   *Demystifying Data Science: Analyzing Conference Talks with Rails and Ngrams* by\n        [Todd Schneider](https://github.com/toddwschneider) <sup>\\[[video](https://www.youtube.com/watch?v=2ZDCxwB29Bg) | [code (⭐34)](https://github.com/Genius/abstractogram)]</sup>\n    *   *Natural Language Processing with Ruby* by [Konstantin Tennhard](https://github.com/t6d) <sup>\\[[video](https://www.youtube.com/watch?v=5u86qVh8r0M) | [video](https://www.youtube.com/watch?v=oFmy_QBQ5DU) |\n        [video](https://www.youtube.com/watch?v=sPkeeWnsMn0) |\n        [slides](http://euruko2013.org/speakers/presentations/natural_language_processing_with_ruby_and_opennlp-tennhard.pdf)]</sup>",
      "content_html": "<h3><p>Multipurpose Engines</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/louismullie/open-nlp\" rel=\"noopener noreferrer\">open-nlp (⭐91)</a> -\nRuby Bindings for the <a href=\"https://opennlp.apache.org/\" rel=\"noopener noreferrer\">OpenNLP</a> Toolkit.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/louismullie/stanford-core-nlp\" rel=\"noopener noreferrer\">stanford-core-nlp (⭐434)</a> -\nRuby Bindings for the Stanford <a href=\"https://github.com/stanfordnlp/CoreNLP\" rel=\"noopener noreferrer\">CoreNLP (⭐9.9k)</a> tools.</li>\n</ul>\n<h3><p>Numbers, Dates, and Time Parsing / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/mojombo/chronic\" rel=\"noopener noreferrer\">chronic (⭐3.2k)</a> -\nPure Ruby natural language date parser.</li>\n</ul>\n<h3><p>Articles, Posts, Talks, and Presentations / Constituency Parsing</p>\n</h3>\n<ul>\n<li>2014<ul>\n<li><em>Natural Language Parsing with Ruby</em> by <a href=\"https://github.com/glaucocustodio\" rel=\"noopener noreferrer\">Glauco Custódio</a> <sup>[<a href=\"http://glaucocustodio.github.io/2014/11/10/natural-language-parsing-with-ruby/\" rel=\"noopener noreferrer\">tutorial</a>]</sup></li>\n<li><em>Demystifying Data Science: Analyzing Conference Talks with Rails and Ngrams</em> by\n<a href=\"https://github.com/toddwschneider\" rel=\"noopener noreferrer\">Todd Schneider</a> <sup>[<a href=\"https://www.youtube.com/watch?v=2ZDCxwB29Bg\" rel=\"noopener noreferrer\">video</a> | <a href=\"https://github.com/Genius/abstractogram\" rel=\"noopener noreferrer\">code (⭐34)</a>]</sup></li>\n<li><em>Natural Language Processing with Ruby</em> by <a href=\"https://github.com/t6d\" rel=\"noopener noreferrer\">Konstantin Tennhard</a> <sup>[<a href=\"https://www.youtube.com/watch?v=5u86qVh8r0M\" rel=\"noopener noreferrer\">video</a> | <a href=\"https://www.youtube.com/watch?v=oFmy_QBQ5DU\" rel=\"noopener noreferrer\">video</a> |\n<a href=\"https://www.youtube.com/watch?v=sPkeeWnsMn0\" rel=\"noopener noreferrer\">video</a> |\n<a href=\"http://euruko2013.org/speakers/presentations/natural_language_processing_with_ruby_and_opennlp-tennhard.pdf\" rel=\"noopener noreferrer\">slides</a>]</sup></li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/01/06/",
      "title": "Nlp with Ruby Updates on Jan 06, 2017",
      "_short_title": "Jan 06, 2017",
      "_slug": "2017/01/06/",
      "summary": "3 awesome projects updated on Jan 06, 2017",
      "_filepath": "/content/2017/01/06/README.md",
      "url": "https://www.trackawesomelist.com/2017/01/06/",
      "date_published": "2017-01-06T13:22:32.000Z",
      "date_modified": "2017-01-06T16:16:57.000Z",
      "content_text": "\n\n### Multipurpose Engines\n\n*   [treat (⭐1.4k)](https://github.com/louismullie/treat) -\n    Natural Language Processing framework for Ruby (like [NLTK](http://www.nltk.org/) for Python).\n\n### Multipurpose Engines / On-line APIs\n\n*   [wit-ruby (⭐282)](https://github.com/wit-ai/wit-ruby) -\n    Ruby client library for the [Wit.ai](https://wit.ai/) Language Understanding Platform.\n\n### Related Resources / Constituency Parsing\n\n*   [Awesome TensorFlow (⭐17k)](https://github.com/jtoy/awesome-tensorflow) -\n    Machine Learning with TensorFlow libraries.",
      "content_html": "<h3><p>Multipurpose Engines</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/louismullie/treat\" rel=\"noopener noreferrer\">treat (⭐1.4k)</a> -\nNatural Language Processing framework for Ruby (like <a href=\"http://www.nltk.org/\" rel=\"noopener noreferrer\">NLTK</a> for Python).</li>\n</ul>\n<h3><p>Multipurpose Engines / On-line APIs</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/wit-ai/wit-ruby\" rel=\"noopener noreferrer\">wit-ruby (⭐282)</a> -\nRuby client library for the <a href=\"https://wit.ai/\" rel=\"noopener noreferrer\">Wit.ai</a> Language Understanding Platform.</li>\n</ul>\n<h3><p>Related Resources / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/jtoy/awesome-tensorflow\" rel=\"noopener noreferrer\">Awesome TensorFlow (⭐17k)</a> -\nMachine Learning with TensorFlow libraries.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/01/04/",
      "title": "Nlp with Ruby Updates on Jan 04, 2017",
      "_short_title": "Jan 04, 2017",
      "_slug": "2017/01/04/",
      "summary": "3 awesome projects updated on Jan 04, 2017",
      "_filepath": "/content/2017/01/04/README.md",
      "url": "https://www.trackawesomelist.com/2017/01/04/",
      "date_published": "2017-01-04T20:47:32.000Z",
      "date_modified": "2017-01-04T21:15:14.000Z",
      "content_text": "\n\n### Multipurpose Engines / On-line APIs\n\n*   [alchemyapi\\_ruby (⭐36)](https://github.com/alchemyapi/alchemyapi_ruby) -\n    Legacy Ruby SDK for AlchemyAPI/Bluemix.\n\n### Related Resources / Constituency Parsing\n\n*   [Awesome Ruby (⭐14k)](https://github.com/markets/awesome-ruby#natural-language-processing) -\n    Among other awesome items a short list of NLP related projects.\n*   [Awesome OCR (⭐3k)](https://github.com/kba/awesome-ocr) -\n    Multitude of OCR (Optical Character Recognition) resources.",
      "content_html": "<h3><p>Multipurpose Engines / On-line APIs</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/alchemyapi/alchemyapi_ruby\" rel=\"noopener noreferrer\">alchemyapi_ruby (⭐36)</a> -\nLegacy Ruby SDK for AlchemyAPI/Bluemix.</li>\n</ul>\n<h3><p>Related Resources / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/markets/awesome-ruby#natural-language-processing\" rel=\"noopener noreferrer\">Awesome Ruby (⭐14k)</a> -\nAmong other awesome items a short list of NLP related projects.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/kba/awesome-ocr\" rel=\"noopener noreferrer\">Awesome OCR (⭐3k)</a> -\nMultitude of OCR (Optical Character Recognition) resources.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2016/12/19/",
      "title": "Nlp with Ruby Updates on Dec 19, 2016",
      "_short_title": "Dec 19, 2016",
      "_slug": "2016/12/19/",
      "summary": "1 awesome projects updated on Dec 19, 2016",
      "_filepath": "/content/2016/12/19/README.md",
      "url": "https://www.trackawesomelist.com/2016/12/19/",
      "date_published": "2016-12-19T19:02:25.000Z",
      "date_modified": "2016-12-19T19:02:25.000Z",
      "content_text": "\n\n### Pipeline Generation\n\n*   [ruby-spark (⭐227)](https://github.com/ondra-m/ruby-spark) -\n    Spark bindings with an easy to understand DSL.",
      "content_html": "<h3><p>Pipeline Generation</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ondra-m/ruby-spark\" rel=\"noopener noreferrer\">ruby-spark (⭐227)</a> -\nSpark bindings with an easy to understand DSL.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2016/12/12/",
      "title": "Nlp with Ruby Updates on Dec 12, 2016",
      "_short_title": "Dec 12, 2016",
      "_slug": "2016/12/12/",
      "summary": "1 awesome projects updated on Dec 12, 2016",
      "_filepath": "/content/2016/12/12/README.md",
      "url": "https://www.trackawesomelist.com/2016/12/12/",
      "date_published": "2016-12-12T09:54:03.000Z",
      "date_modified": "2016-12-12T09:54:03.000Z",
      "content_text": "\n\n### Pipeline Generation\n\n*   [composable\\_operations (⭐46)](https://github.com/t6d/composable_operations) -\n    Definition framework for operation pipelines.",
      "content_html": "<h3><p>Pipeline Generation</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/t6d/composable_operations\" rel=\"noopener noreferrer\">composable_operations (⭐46)</a> -\nDefinition framework for operation pipelines.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2016/12/08/",
      "title": "Nlp with Ruby Updates on Dec 08, 2016",
      "_short_title": "Dec 08, 2016",
      "_slug": "2016/12/08/",
      "summary": "1 awesome projects updated on Dec 08, 2016",
      "_filepath": "/content/2016/12/08/README.md",
      "url": "https://www.trackawesomelist.com/2016/12/08/",
      "date_published": "2016-12-08T16:02:52.000Z",
      "date_modified": "2016-12-08T16:02:52.000Z",
      "content_text": "\n\n### Articles, Posts, Talks, and Presentations / Constituency Parsing\n\n*   2012\n    *   *Machine Learning with Ruby, Part One* by [Vasily Vasinov](https://twitter.com/vasinov) <sup>\\[[tutorial](http://www.vasinov.com/blog/machine-learning-with-ruby-part-one/)]</sup>",
      "content_html": "<h3><p>Articles, Posts, Talks, and Presentations / Constituency Parsing</p>\n</h3>\n<ul>\n<li>2012<ul>\n<li><em>Machine Learning with Ruby, Part One</em> by <a href=\"https://twitter.com/vasinov\" rel=\"noopener noreferrer\">Vasily Vasinov</a> <sup>[<a href=\"http://www.vasinov.com/blog/machine-learning-with-ruby-part-one/\" rel=\"noopener noreferrer\">tutorial</a>]</sup></li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2016/12/07/",
      "title": "Nlp with Ruby Updates on Dec 07, 2016",
      "_short_title": "Dec 07, 2016",
      "_slug": "2016/12/07/",
      "summary": "2 awesome projects updated on Dec 07, 2016",
      "_filepath": "/content/2016/12/07/README.md",
      "url": "https://www.trackawesomelist.com/2016/12/07/",
      "date_published": "2016-12-07T11:26:27.000Z",
      "date_modified": "2016-12-07T11:28:34.000Z",
      "content_text": "\n\n### Articles, Posts, Talks, and Presentations / Constituency Parsing\n\n*   2013\n    *   *How to parse 'go' - Natural Language Processing in Ruby* by\n        [Tom Cartwright](https://twitter.com/tomcartwrightuk) <sup>\\[[slides](https://www.slideshare.net/TomCartwright/natual-language-processing-in-ruby) |\n        [video](https://skillsmatter.com/skillscasts/4883-how-to-parse-go)]</sup>\n    *   *Natural Language Processing in Ruby* by [Brandon Black](https://twitter.com/brandonmblack) <sup>\\[[slides](https://speakerdeck.com/brandonblack/natural-language-processing-in-ruby) |\n        [video](http://confreaks.tv/videos/railsconf2013-natural-language-processing-with-ruby)]</sup>\n    *   *Natural Language Processing with Ruby: n-grams* by [Nathan Kleyn](https://github.com/nathankleyn) <sup>\\[[tutorial](https://www.sitepoint.com/natural-language-processing-ruby-n-grams/) |\n        [code (⭐33)](https://github.com/nathankleyn/ruby-nlp)]</sup>\n    *   *Seeking Lovecraft, Part 1: An introduction to NLP and the Treat Gem* by\n        [Robert Qualls](https://github.com/rlqualls) <sup>\\[[tutorial](https://www.sitepoint.com/seeking-lovecraft-part-1-an-introduction-to-nlp-and-the-treat-gem/)]</sup>\n\n### Related Resources / Constituency Parsing\n\n*   [Speech and Natural Language Processing (⭐2.2k)](https://github.com/edobashira/speech-language-processing) -\n    General List of NLP related resources (mostly not for Ruby programmers).",
      "content_html": "<h3><p>Articles, Posts, Talks, and Presentations / Constituency Parsing</p>\n</h3>\n<ul>\n<li>2013<ul>\n<li><em>How to parse 'go' - Natural Language Processing in Ruby</em> by\n<a href=\"https://twitter.com/tomcartwrightuk\" rel=\"noopener noreferrer\">Tom Cartwright</a> <sup>[<a href=\"https://www.slideshare.net/TomCartwright/natual-language-processing-in-ruby\" rel=\"noopener noreferrer\">slides</a> |\n<a href=\"https://skillsmatter.com/skillscasts/4883-how-to-parse-go\" rel=\"noopener noreferrer\">video</a>]</sup></li>\n<li><em>Natural Language Processing in Ruby</em> by <a href=\"https://twitter.com/brandonmblack\" rel=\"noopener noreferrer\">Brandon Black</a> <sup>[<a href=\"https://speakerdeck.com/brandonblack/natural-language-processing-in-ruby\" rel=\"noopener noreferrer\">slides</a> |\n<a href=\"http://confreaks.tv/videos/railsconf2013-natural-language-processing-with-ruby\" rel=\"noopener noreferrer\">video</a>]</sup></li>\n<li><em>Natural Language Processing with Ruby: n-grams</em> by <a href=\"https://github.com/nathankleyn\" rel=\"noopener noreferrer\">Nathan Kleyn</a> <sup>[<a href=\"https://www.sitepoint.com/natural-language-processing-ruby-n-grams/\" rel=\"noopener noreferrer\">tutorial</a> |\n<a href=\"https://github.com/nathankleyn/ruby-nlp\" rel=\"noopener noreferrer\">code (⭐33)</a>]</sup></li>\n<li><em>Seeking Lovecraft, Part 1: An introduction to NLP and the Treat Gem</em> by\n<a href=\"https://github.com/rlqualls\" rel=\"noopener noreferrer\">Robert Qualls</a> <sup>[<a href=\"https://www.sitepoint.com/seeking-lovecraft-part-1-an-introduction-to-nlp-and-the-treat-gem/\" rel=\"noopener noreferrer\">tutorial</a>]</sup></li>\n</ul>\n</li>\n</ul>\n<h3><p>Related Resources / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/edobashira/speech-language-processing\" rel=\"noopener noreferrer\">Speech and Natural Language Processing (⭐2.2k)</a> -\nGeneral List of NLP related resources (mostly not for Ruby programmers).</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2016/12/06/",
      "title": "Nlp with Ruby Updates on Dec 06, 2016",
      "_short_title": "Dec 06, 2016",
      "_slug": "2016/12/06/",
      "summary": "3 awesome projects updated on Dec 06, 2016",
      "_filepath": "/content/2016/12/06/README.md",
      "url": "https://www.trackawesomelist.com/2016/12/06/",
      "date_published": "2016-12-06T15:50:48.000Z",
      "date_modified": "2016-12-06T16:20:07.000Z",
      "content_text": "\n\n### Related Resources / Constituency Parsing\n\n*   [Ruby NLP (⭐1.3k)](https://github.com/diasks2/ruby-nlp) -\n    State-of-Art collection of Ruby libraries for NLP.\n*   [Scientific Ruby](http://sciruby.com/) -\n    Linear Algebra, Visualization and Scientific Computing for Ruby.\n*   [iRuby (⭐917)](https://github.com/SciRuby/iruby) - IRuby kernel for Jupyter (formelly IPython).",
      "content_html": "<h3><p>Related Resources / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/diasks2/ruby-nlp\" rel=\"noopener noreferrer\">Ruby NLP (⭐1.3k)</a> -\nState-of-Art collection of Ruby libraries for NLP.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://sciruby.com/\" rel=\"noopener noreferrer\">Scientific Ruby</a> -\nLinear Algebra, Visualization and Scientific Computing for Ruby.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/SciRuby/iruby\" rel=\"noopener noreferrer\">iRuby (⭐917)</a> - IRuby kernel for Jupyter (formelly IPython).</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2016/11/30/",
      "title": "Nlp with Ruby Updates on Nov 30, 2016",
      "_short_title": "Nov 30, 2016",
      "_slug": "2016/11/30/",
      "summary": "2 awesome projects updated on Nov 30, 2016",
      "_filepath": "/content/2016/11/30/README.md",
      "url": "https://www.trackawesomelist.com/2016/11/30/",
      "date_published": "2016-11-30T14:13:48.000Z",
      "date_modified": "2016-11-30T14:13:48.000Z",
      "content_text": "\n\n### Community / Constituency Parsing\n\n*   [Reddit](https://www.reddit.com/r/LanguageTechnology/search?q=ruby\\&restrict_sr=on)\n*   [Twitter](https://twitter.com/search?q=Ruby%20NLP%20%23ruby%20OR%20%23nlproc%20OR%20%23rubynlp%20OR%20%23nlp\\&src=typd\\&lang=en)",
      "content_html": "<h3><p>Community / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://www.reddit.com/r/LanguageTechnology/search?q=ruby&amp;restrict_sr=on\" rel=\"noopener noreferrer\">Reddit</a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://twitter.com/search?q=Ruby%20NLP%20%23ruby%20OR%20%23nlproc%20OR%20%23rubynlp%20OR%20%23nlp&amp;src=typd&amp;lang=en\" rel=\"noopener noreferrer\">Twitter</a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2016/11/29/",
      "title": "Nlp with Ruby Updates on Nov 29, 2016",
      "_short_title": "Nov 29, 2016",
      "_slug": "2016/11/29/",
      "summary": "3 awesome projects updated on Nov 29, 2016",
      "_filepath": "/content/2016/11/29/README.md",
      "url": "https://www.trackawesomelist.com/2016/11/29/",
      "date_published": "2016-11-29T16:46:02.000Z",
      "date_modified": "2016-11-29T22:16:52.000Z",
      "content_text": "\n\n### Language Aware String Manipulation / Constituency Parsing\n\n*   [active\\_support (⭐57k)](https://github.com/rails/rails/tree/master/activesupport/lib/active_support) -\n    RoR `ActiveSupport` gem has various string extensions that can handle case.\n\n### Books / Constituency Parsing\n\n*   [Miller, Rob](https://twitter.com/robmil/).\n    *Text Processing with Ruby: Extract Value from the Data That Surrounds You.*\n    Pragmatic Programmers, 2015. <sup>\\[[link](https://www.amazon.com/Text-Processing-Ruby-Extract-Surrounds/dp/1680500708)]</sup>\n*   [Watson, Mark](https://twitter.com/mark_l_watson).\n    *Practical Semantic Web and Linked Data Applications.* Lulu, 2010. <sup>\\[[link](http://www.lulu.com/shop/mark-watson/practical-semantic-web-and-linked-data-applications-java-edition/paperback/product-10915016.html)]</sup>",
      "content_html": "<h3><p>Language Aware String Manipulation / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/tree/master/activesupport/lib/active_support\" rel=\"noopener noreferrer\">active_support (⭐57k)</a> -\nRoR <code>ActiveSupport</code> gem has various string extensions that can handle case.</li>\n</ul>\n<h3><p>Books / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://twitter.com/robmil/\" rel=\"noopener noreferrer\">Miller, Rob</a>.\n<em>Text Processing with Ruby: Extract Value from the Data That Surrounds You.</em>\nPragmatic Programmers, 2015. <sup>[<a href=\"https://www.amazon.com/Text-Processing-Ruby-Extract-Surrounds/dp/1680500708\" rel=\"noopener noreferrer\">link</a>]</sup></li>\n</ul>\n\n<ul>\n<li><a href=\"https://twitter.com/mark_l_watson\" rel=\"noopener noreferrer\">Watson, Mark</a>.\n<em>Practical Semantic Web and Linked Data Applications.</em> Lulu, 2010. <sup>[<a href=\"http://www.lulu.com/shop/mark-watson/practical-semantic-web-and-linked-data-applications-java-edition/paperback/product-10915016.html\" rel=\"noopener noreferrer\">link</a>]</sup></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2016/11/27/",
      "title": "Nlp with Ruby Updates on Nov 27, 2016",
      "_short_title": "Nov 27, 2016",
      "_slug": "2016/11/27/",
      "summary": "52 awesome projects updated on Nov 27, 2016",
      "_filepath": "/content/2016/11/27/README.md",
      "url": "https://www.trackawesomelist.com/2016/11/27/",
      "date_published": "2016-11-27T20:22:21.000Z",
      "date_modified": "2016-11-27T22:30:56.000Z",
      "content_text": "\n\n### Segmentation / On-line APIs\n\n*   [tokenizer (⭐45)](https://github.com/arbox/tokenizer) -\n    Simple multilingual tokenizer. <sup>\\[[tutorial](https://github.com/arbox/nlp-with-ruby/blob/master/readme.md/tutorials/tokenizer.md)]</sup>\n*   [pragmatic\\_tokenizer (⭐91)](https://github.com/diasks2/pragmatic_tokenizer) -\n    Multilingual tokenizer to split a string into tokens.\n*   [textoken (⭐31)](https://github.com/manorie/textoken) -\n    Simple and customizable text tokenization library.\n*   [pragmatic\\_segmenter (⭐572)](https://github.com/diasks2/pragmatic_segmenter) -\n    Word Boundary Disambiguation with many cookies.\n*   [punkt-segmenter (⭐92)](https://github.com/lfcipriani/punkt-segmenter) -\n    Pure Ruby implementation of the Punkt Segmenter.\n*   [tactful\\_tokenizer (⭐80)](https://github.com/zencephalon/Tactful_Tokenizer) -\n    RegExp based tokenizer for different languages.\n*   [scapel (⭐51)](https://github.com/louismullie/scalpel) -\n    Sentence Boundary Disambiguation tool.\n\n### Lexical Processing / Stemming\n\n*   [ruby-stemmer (⭐250)](https://github.com/aurelian/ruby-stemmer) -\n    Ruby-Stemmer exposes the SnowBall API to Ruby.\n*   [uea-stemmer (⭐54)](https://github.com/ealdent/uea-stemmer) -\n    Conservative stemmer for search and indexing.\n\n### Lexical Processing / Lemmatization\n\n*   [lemmatizer (⭐108)](https://github.com/yohasebe/lemmatizer) -\n    WordNet based Lemmatizer for English texts.\n\n### Lexical Processing / Lexical Statistics: Counting Types and Tokens\n\n*   [wc (⭐6)](https://github.com/thesp0nge/wc) -\n    Facilities to count word occurrences in a text.\n*   [word\\_count (⭐5)](https://github.com/AtelierConvivialite/word_count) -\n    Word counter for `String` and `Hash` objects.\n\n### Phrasal Level Processing / Filtering Stop Words\n\n*   [n\\_gram (⭐37)](https://github.com/reddavis/N-Gram) -\n    N-Gram generator.\n*   [ruby-ngram (⭐12)](https://github.com/tkellen/ruby-ngram) -\n    Break words and phrases into ngrams.\n*   [raingrams (⭐69)](https://github.com/postmodern/raingrams) -\n    Flexible and general-purpose ngrams library written in pure Ruby.\n\n### Semantic Analysis / Constituency Parsing\n\n*   [amatch (⭐384)](https://github.com/flori/amatch) -\n    Set of five distance types between strings (including Levenshtein, Sellers, Jaro-Winkler, 'pair distance').\n*   [damerau-levenshtein (⭐146)](https://github.com/GlobalNamesArchitecture/damerau-levenshtein) -\n    Calculates edit distance using the Damerau-Levenshtein algorithm.\n*   [hotwater (⭐80)](https://github.com/colinsurprenant/hotwater) -\n    Fast Ruby FFI string edit distance algorithms.\n*   [levenshtein-ffi (⭐151)](https://github.com/dbalatero/levenshtein-ffi) -\n    Fast string edit distance computation, using the Damerau-Levenshtein algorithm.\n*   [tf\\_idf (⭐35)](https://github.com/reddavis/TF-IDF) -\n    Term Frequency / Inverse Document Frequency in pure Ruby.\n*   [tf-idf-similarity (⭐765)](https://github.com/jpmckinney/tf-idf-similarity) -\n    Calculate the similarity between texts using TF/IDF.\n\n### Pragmatical Analysis / Constituency Parsing\n\n*   [SentimentLib (⭐14)](https://github.com/nzaillian/sentiment_lib) -\n    Simple extensible sentiment analysis gem.\n\n### Text Alignment / Constituency Parsing\n\n*   [alignment (⭐1)](https://github.com/povilasjurcys/alignment) -\n    Alignment routines for bilingual texts (Gale-Church implementation).\n\n### Machine Translation / Constituency Parsing\n\n*   [microsoft\\_translator (⭐21)](https://github.com/ikayzo/microsoft_translator) -\n    Ruby client for the microsoft translator API.\n*   [termit (⭐508)](https://github.com/pawurb/termit) -\n    Google Translate with speech synthesis in your terminal.\n\n### Numbers, Dates, and Time Parsing / Constituency Parsing\n\n*   [chronic\\_between (⭐28)](https://github.com/jrobertson/chronic_between) -\n    Simple Ruby natural language parser for date and time ranges.\n*   [chronic\\_duration (⭐355)](https://github.com/henrypoydar/chronic_duration) -\n    Pure Ruby parser for elapsed time.\n*   [kronic (⭐149)](https://github.com/xaviershay/kronic) -\n    Methods for parsing and formatting human readable dates.\n*   [nickel (⭐117)](https://github.com/iainbeeston/nickel) -\n    Extracts date, time, and message information from naturally worded text.\n*   [tickle (⭐82)](https://github.com/yb66/tickle) -\n    Parser for recurring and repeating events.\n\n### Named Entity Recognition / Constituency Parsing\n\n*   [ruby-ner (⭐20)](https://github.com/mblongii/ruby-ner) -\n    Named Entity Recognition with Stanford NER and Ruby.\n*   [ruby-nlp (⭐92)](https://github.com/tiendung/ruby-nlp) -\n    Ruby Binding for Stanford Pos-Tagger and Name Entity Recognizer.\n\n### Text-to-Speech-to-Text / Constituency Parsing\n\n*   [espeak-ruby (⭐196)](https://github.com/dejan/espeak-ruby) -\n    Small Ruby API for utilizing 'espeak' and 'lame' to create text-to-speech mp3 files.\n*   [tts (⭐94)](https://github.com/c2h2/tts) -\n    Text-to-Speech conversion using the Google translate service.\n*   [att\\_speech (⭐20)](https://github.com/adhearsion/att_speech) -\n    Ruby wrapper over the AT\\&T Speech API for speech to text.\n*   [pocketsphinx-ruby (⭐258)](https://github.com/watsonbox/pocketsphinx-ruby) -\n    Pocketsphinx bindings.\n\n### Machine Learning Libraries / Constituency Parsing\n\n*   [rb-libsvm (⭐278)](https://github.com/febeling/rb-libsvm) -\n    Support Vector Machines with Ruby.\n*   [rtimbl (⭐5)](https://github.com/maspwr/rtimbl) -\n    Memory based learners from the Timbl framework.\n*   [classifier-reborn (⭐555)](https://github.com/jekyll/classifier-reborn) -\n    General classifier module to allow Bayesian and other types of classifications.\n*   [liblinear-ruby-swig (⭐83)](https://github.com/tomz/liblinear-ruby-swig) -\n    Ruby interface to LIBLINEAR (much more efficient than LIBSVM for text classification).\n*   [linnaeus (⭐38)](https://github.com/djcp/linnaeus) -\n    Redis-backed Bayesian classifier.\n*   [maxent\\_string\\_classifier (⭐9)](https://github.com/mccraigmccraig/maxent_string_classifier) -\n    JRuby maximum entropy classifier for string data, based on the OpenNLP Maxent framework.\n*   [naive\\_bayes (⭐49)](https://github.com/reddavis/Naive-Bayes) -\n    Simple Naive Bayes classifier.\n*   [nbayes (⭐154)](https://github.com/oasic/nbayes) -\n    Full-featured, Ruby implementation of Naive Bayes.\n*   [omnicat (⭐11)](https://github.com/mustafaturan/omnicat) -\n    Generalized rack framework for text classifications.\n*   [omnicat-bayes (⭐31)](https://github.com/mustafaturan/omnicat-bayes) -\n    Naive Bayes text classification implementation as an OmniCat classifier strategy.\n\n### Language Aware String Manipulation / Constituency Parsing\n\n*   [fuzzy-string-match (⭐284)](https://github.com/kiyoka/fuzzy-string-match) -\n    Fuzzy string matching library for Ruby.\n*   [u](http://disu.se/software/u-1.0/) -\n    U extends Ruby’s Unicode support.\n*   [unicode (⭐81)](https://github.com/blackwinter/unicode) -\n    Unicode normalization library.\n*   [CommonRegexRuby (⭐80)](https://github.com/talyssonoc/CommonRegexRuby) -\n    Find a lot of kinds of common information in a string.\n*   [regexp-examples (⭐521)](https://github.com/tom-lord/regexp-examples) -\n    Generate strings that match a given regular expression.\n*   [verbal\\_expressions (⭐571)](https://github.com/ryan-endacott/verbal_expressions) -\n    Make difficult regular expressions easy.",
      "content_html": "<h3><p>Segmentation / On-line APIs</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/arbox/tokenizer\" rel=\"noopener noreferrer\">tokenizer (⭐45)</a> -\nSimple multilingual tokenizer. <sup>[<a href=\"https://github.com/arbox/nlp-with-ruby/blob/master/readme.md/tutorials/tokenizer.md\" rel=\"noopener noreferrer\">tutorial</a>]</sup></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/diasks2/pragmatic_tokenizer\" rel=\"noopener noreferrer\">pragmatic_tokenizer (⭐91)</a> -\nMultilingual tokenizer to split a string into tokens.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/manorie/textoken\" rel=\"noopener noreferrer\">textoken (⭐31)</a> -\nSimple and customizable text tokenization library.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/diasks2/pragmatic_segmenter\" rel=\"noopener noreferrer\">pragmatic_segmenter (⭐572)</a> -\nWord Boundary Disambiguation with many cookies.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/lfcipriani/punkt-segmenter\" rel=\"noopener noreferrer\">punkt-segmenter (⭐92)</a> -\nPure Ruby implementation of the Punkt Segmenter.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/zencephalon/Tactful_Tokenizer\" rel=\"noopener noreferrer\">tactful_tokenizer (⭐80)</a> -\nRegExp based tokenizer for different languages.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/louismullie/scalpel\" rel=\"noopener noreferrer\">scapel (⭐51)</a> -\nSentence Boundary Disambiguation tool.</li>\n</ul>\n<h3><p>Lexical Processing / Stemming</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/aurelian/ruby-stemmer\" rel=\"noopener noreferrer\">ruby-stemmer (⭐250)</a> -\nRuby-Stemmer exposes the SnowBall API to Ruby.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ealdent/uea-stemmer\" rel=\"noopener noreferrer\">uea-stemmer (⭐54)</a> -\nConservative stemmer for search and indexing.</li>\n</ul>\n<h3><p>Lexical Processing / Lemmatization</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/yohasebe/lemmatizer\" rel=\"noopener noreferrer\">lemmatizer (⭐108)</a> -\nWordNet based Lemmatizer for English texts.</li>\n</ul>\n<h3><p>Lexical Processing / Lexical Statistics: Counting Types and Tokens</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/thesp0nge/wc\" rel=\"noopener noreferrer\">wc (⭐6)</a> -\nFacilities to count word occurrences in a text.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/AtelierConvivialite/word_count\" rel=\"noopener noreferrer\">word_count (⭐5)</a> -\nWord counter for <code>String</code> and <code>Hash</code> objects.</li>\n</ul>\n<h3><p>Phrasal Level Processing / Filtering Stop Words</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/reddavis/N-Gram\" rel=\"noopener noreferrer\">n_gram (⭐37)</a> -\nN-Gram generator.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/tkellen/ruby-ngram\" rel=\"noopener noreferrer\">ruby-ngram (⭐12)</a> -\nBreak words and phrases into ngrams.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/postmodern/raingrams\" rel=\"noopener noreferrer\">raingrams (⭐69)</a> -\nFlexible and general-purpose ngrams library written in pure Ruby.</li>\n</ul>\n<h3><p>Semantic Analysis / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/flori/amatch\" rel=\"noopener noreferrer\">amatch (⭐384)</a> -\nSet of five distance types between strings (including Levenshtein, Sellers, Jaro-Winkler, 'pair distance').</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/GlobalNamesArchitecture/damerau-levenshtein\" rel=\"noopener noreferrer\">damerau-levenshtein (⭐146)</a> -\nCalculates edit distance using the Damerau-Levenshtein algorithm.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/colinsurprenant/hotwater\" rel=\"noopener noreferrer\">hotwater (⭐80)</a> -\nFast Ruby FFI string edit distance algorithms.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dbalatero/levenshtein-ffi\" rel=\"noopener noreferrer\">levenshtein-ffi (⭐151)</a> -\nFast string edit distance computation, using the Damerau-Levenshtein algorithm.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/reddavis/TF-IDF\" rel=\"noopener noreferrer\">tf_idf (⭐35)</a> -\nTerm Frequency / Inverse Document Frequency in pure Ruby.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/jpmckinney/tf-idf-similarity\" rel=\"noopener noreferrer\">tf-idf-similarity (⭐765)</a> -\nCalculate the similarity between texts using TF/IDF.</li>\n</ul>\n<h3><p>Pragmatical Analysis / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/nzaillian/sentiment_lib\" rel=\"noopener noreferrer\">SentimentLib (⭐14)</a> -\nSimple extensible sentiment analysis gem.</li>\n</ul>\n<h3><p>Text Alignment / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/povilasjurcys/alignment\" rel=\"noopener noreferrer\">alignment (⭐1)</a> -\nAlignment routines for bilingual texts (Gale-Church implementation).</li>\n</ul>\n<h3><p>Machine Translation / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ikayzo/microsoft_translator\" rel=\"noopener noreferrer\">microsoft_translator (⭐21)</a> -\nRuby client for the microsoft translator API.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/pawurb/termit\" rel=\"noopener noreferrer\">termit (⭐508)</a> -\nGoogle Translate with speech synthesis in your terminal.</li>\n</ul>\n<h3><p>Numbers, Dates, and Time Parsing / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/jrobertson/chronic_between\" rel=\"noopener noreferrer\">chronic_between (⭐28)</a> -\nSimple Ruby natural language parser for date and time ranges.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/henrypoydar/chronic_duration\" rel=\"noopener noreferrer\">chronic_duration (⭐355)</a> -\nPure Ruby parser for elapsed time.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/xaviershay/kronic\" rel=\"noopener noreferrer\">kronic (⭐149)</a> -\nMethods for parsing and formatting human readable dates.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/iainbeeston/nickel\" rel=\"noopener noreferrer\">nickel (⭐117)</a> -\nExtracts date, time, and message information from naturally worded text.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/yb66/tickle\" rel=\"noopener noreferrer\">tickle (⭐82)</a> -\nParser for recurring and repeating events.</li>\n</ul>\n<h3><p>Named Entity Recognition / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/mblongii/ruby-ner\" rel=\"noopener noreferrer\">ruby-ner (⭐20)</a> -\nNamed Entity Recognition with Stanford NER and Ruby.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/tiendung/ruby-nlp\" rel=\"noopener noreferrer\">ruby-nlp (⭐92)</a> -\nRuby Binding for Stanford Pos-Tagger and Name Entity Recognizer.</li>\n</ul>\n<h3><p>Text-to-Speech-to-Text / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/dejan/espeak-ruby\" rel=\"noopener noreferrer\">espeak-ruby (⭐196)</a> -\nSmall Ruby API for utilizing 'espeak' and 'lame' to create text-to-speech mp3 files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/c2h2/tts\" rel=\"noopener noreferrer\">tts (⭐94)</a> -\nText-to-Speech conversion using the Google translate service.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/adhearsion/att_speech\" rel=\"noopener noreferrer\">att_speech (⭐20)</a> -\nRuby wrapper over the AT&amp;T Speech API for speech to text.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/watsonbox/pocketsphinx-ruby\" rel=\"noopener noreferrer\">pocketsphinx-ruby (⭐258)</a> -\nPocketsphinx bindings.</li>\n</ul>\n<h3><p>Machine Learning Libraries / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/febeling/rb-libsvm\" rel=\"noopener noreferrer\">rb-libsvm (⭐278)</a> -\nSupport Vector Machines with Ruby.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/maspwr/rtimbl\" rel=\"noopener noreferrer\">rtimbl (⭐5)</a> -\nMemory based learners from the Timbl framework.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/jekyll/classifier-reborn\" rel=\"noopener noreferrer\">classifier-reborn (⭐555)</a> -\nGeneral classifier module to allow Bayesian and other types of classifications.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/tomz/liblinear-ruby-swig\" rel=\"noopener noreferrer\">liblinear-ruby-swig (⭐83)</a> -\nRuby interface to LIBLINEAR (much more efficient than LIBSVM for text classification).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/djcp/linnaeus\" rel=\"noopener noreferrer\">linnaeus (⭐38)</a> -\nRedis-backed Bayesian classifier.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mccraigmccraig/maxent_string_classifier\" rel=\"noopener noreferrer\">maxent_string_classifier (⭐9)</a> -\nJRuby maximum entropy classifier for string data, based on the OpenNLP Maxent framework.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/reddavis/Naive-Bayes\" rel=\"noopener noreferrer\">naive_bayes (⭐49)</a> -\nSimple Naive Bayes classifier.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/oasic/nbayes\" rel=\"noopener noreferrer\">nbayes (⭐154)</a> -\nFull-featured, Ruby implementation of Naive Bayes.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mustafaturan/omnicat\" rel=\"noopener noreferrer\">omnicat (⭐11)</a> -\nGeneralized rack framework for text classifications.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mustafaturan/omnicat-bayes\" rel=\"noopener noreferrer\">omnicat-bayes (⭐31)</a> -\nNaive Bayes text classification implementation as an OmniCat classifier strategy.</li>\n</ul>\n<h3><p>Language Aware String Manipulation / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/kiyoka/fuzzy-string-match\" rel=\"noopener noreferrer\">fuzzy-string-match (⭐284)</a> -\nFuzzy string matching library for Ruby.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://disu.se/software/u-1.0/\" rel=\"noopener noreferrer\">u</a> -\nU extends Ruby’s Unicode support.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/blackwinter/unicode\" rel=\"noopener noreferrer\">unicode (⭐81)</a> -\nUnicode normalization library.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/talyssonoc/CommonRegexRuby\" rel=\"noopener noreferrer\">CommonRegexRuby (⭐80)</a> -\nFind a lot of kinds of common information in a string.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/tom-lord/regexp-examples\" rel=\"noopener noreferrer\">regexp-examples (⭐521)</a> -\nGenerate strings that match a given regular expression.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ryan-endacott/verbal_expressions\" rel=\"noopener noreferrer\">verbal_expressions (⭐571)</a> -\nMake difficult regular expressions easy.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2016/04/22/",
      "title": "Nlp with Ruby Updates on Apr 22, 2016",
      "_short_title": "Apr 22, 2016",
      "_slug": "2016/04/22/",
      "summary": "2 awesome projects updated on Apr 22, 2016",
      "_filepath": "/content/2016/04/22/README.md",
      "url": "https://www.trackawesomelist.com/2016/04/22/",
      "date_published": "2016-04-22T17:47:16.000Z",
      "date_modified": "2016-04-22T19:49:31.000Z",
      "content_text": "\n\n### Segmentation / On-line APIs\n\n*   [nlp-pure (⭐20)](https://github.com/parhamr/nlp-pure) -\n    Natural language processing algorithms implemented in pure Ruby with minimal dependencies.\n\n### Machine Learning Libraries / Constituency Parsing\n\n*   [weka (⭐64)](https://github.com/paulgoetze/weka-jruby) -\n    JRuby bindings for Weka, different ML algorithms implemented through Weka.",
      "content_html": "<h3><p>Segmentation / On-line APIs</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/parhamr/nlp-pure\" rel=\"noopener noreferrer\">nlp-pure (⭐20)</a> -\nNatural language processing algorithms implemented in pure Ruby with minimal dependencies.</li>\n</ul>\n<h3><p>Machine Learning Libraries / Constituency Parsing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/paulgoetze/weka-jruby\" rel=\"noopener noreferrer\">weka (⭐64)</a> -\nJRuby bindings for Weka, different ML algorithms implemented through Weka.</li>\n</ul>\n"
    }
  ]
}
