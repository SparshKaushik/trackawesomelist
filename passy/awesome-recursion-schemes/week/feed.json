{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Track Awesome Recursion Schemes Updates Weekly",
  "_seo_title": "Track Awesome Recursion Schemes (passy/awesome-recursion-schemes) Updates Weekly - Track Awesome List",
  "_site_title": "Track Awesome List",
  "description": "Resources for learning and using recursion schemes.",
  "home_page_url": "https://www.trackawesomelist.com/passy/awesome-recursion-schemes/week/",
  "feed_url": "https://www.trackawesomelist.com/passy/awesome-recursion-schemes/week/feed.json",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/2020/48/",
      "title": "Awesome Recursion Schemes Updates on Nov 30 - Dec 06, 2020",
      "_short_title": "Nov 30 - Dec 06, 2020",
      "_slug": "2020/48/",
      "summary": "1 awesome projects updated on Nov 30 - Dec 06, 2020",
      "_filepath": "/content/2020/48/README.md",
      "url": "https://www.trackawesomelist.com/2020/48/",
      "date_published": "2020-11-25T13:01:57.000Z",
      "date_modified": "2020-11-25T13:01:57.000Z",
      "content_text": "\n\n### Articles\n\n*   [Promorphisms, Pre and Post](https://jtobin.io/promorphisms-pre-post) - Practical examples of pre- and postpromorphisms by Jared Tobin.",
      "content_html": "<h3><p>Articles</p>\n</h3>\n<ul>\n<li><a href=\"https://jtobin.io/promorphisms-pre-post\" rel=\"noopener noreferrer\">Promorphisms, Pre and Post</a> - Practical examples of pre- and postpromorphisms by Jared Tobin.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/25/",
      "title": "Awesome Recursion Schemes Updates on Jun 22 - Jun 28, 2020",
      "_short_title": "Jun 22 - Jun 28, 2020",
      "_slug": "2020/25/",
      "summary": "1 awesome projects updated on Jun 22 - Jun 28, 2020",
      "_filepath": "/content/2020/25/README.md",
      "url": "https://www.trackawesomelist.com/2020/25/",
      "date_published": "2020-06-15T13:49:29.000Z",
      "date_modified": "2020-06-15T13:49:29.000Z",
      "content_text": "\n\n### Articles\n\n*   [What's in a Fold: The Basic Catamorphism in recursion-schemes](https://duplode.github.io/posts/whats-in-a-fold.html) - Introduces catamorphism as a generalization of fold.",
      "content_html": "<h3><p>Articles</p>\n</h3>\n<ul>\n<li><a href=\"https://duplode.github.io/posts/whats-in-a-fold.html\" rel=\"noopener noreferrer\">What's in a Fold: The Basic Catamorphism in recursion-schemes</a> - Introduces catamorphism as a generalization of fold.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/38/",
      "title": "Awesome Recursion Schemes Updates on Sep 23 - Sep 29, 2019",
      "_short_title": "Sep 23 - Sep 29, 2019",
      "_slug": "2019/38/",
      "summary": "1 awesome projects updated on Sep 23 - Sep 29, 2019",
      "_filepath": "/content/2019/38/README.md",
      "url": "https://www.trackawesomelist.com/2019/38/",
      "date_published": "2019-09-21T22:59:19.000Z",
      "date_modified": "2019-09-21T22:59:19.000Z",
      "content_text": "\n\n### Articles\n\n*   [Recursion Schemes in Scala](https://free.cofree.io/2017/11/13/recursion/) - Introduces the fixpoint combinator, anamorphism, catamorphism, hylomorphism, paramorphism, apomorphism, histomorphism, dynamorphism and futumorphism.",
      "content_html": "<h3><p>Articles</p>\n</h3>\n<ul>\n<li><a href=\"https://free.cofree.io/2017/11/13/recursion/\" rel=\"noopener noreferrer\">Recursion Schemes in Scala</a> - Introduces the fixpoint combinator, anamorphism, catamorphism, hylomorphism, paramorphism, apomorphism, histomorphism, dynamorphism and futumorphism.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/19/",
      "title": "Awesome Recursion Schemes Updates on May 13 - May 19, 2019",
      "_short_title": "May 13 - May 19, 2019",
      "_slug": "2019/19/",
      "summary": "3 awesome projects updated on May 13 - May 19, 2019",
      "_filepath": "/content/2019/19/README.md",
      "url": "https://www.trackawesomelist.com/2019/19/",
      "date_published": "2019-05-08T18:47:28.000Z",
      "date_modified": "2019-05-08T18:47:28.000Z",
      "content_text": "\n\n### Podcasts / Hylomorphisms in the Wild\n\n*   [Scala Love](https://scala.love/) - Podcast about Scala that brings up\n    recursion schemes in [the second episode](https://scala.love/happy-valentin/).\n*   [The Haskell Cast](https://www.haskellcast.com/) - Recursion schemes come up in\n    [Episode 13 with John Wiegley](https://www.haskellcast.com/episode/013-john-wiegley-on-categories-and-compilers).\n\n### Implementations / Hylomorphisms in the Wild\n\n*   [andyscott/droste (⭐392)](https://github.com/andyscott/droste) for Scala using Cats -\n    Generalized folds, unfolds, and traversals for fixed point data structures.",
      "content_html": "<h3><p>Podcasts / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://scala.love/\" rel=\"noopener noreferrer\">Scala Love</a> - Podcast about Scala that brings up\nrecursion schemes in <a href=\"https://scala.love/happy-valentin/\" rel=\"noopener noreferrer\">the second episode</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.haskellcast.com/\" rel=\"noopener noreferrer\">The Haskell Cast</a> - Recursion schemes come up in\n<a href=\"https://www.haskellcast.com/episode/013-john-wiegley-on-categories-and-compilers\" rel=\"noopener noreferrer\">Episode 13 with John Wiegley</a>.</li>\n</ul>\n<h3><p>Implementations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/andyscott/droste\" rel=\"noopener noreferrer\">andyscott/droste (⭐392)</a> for Scala using Cats -\nGeneralized folds, unfolds, and traversals for fixed point data structures.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/5/",
      "title": "Awesome Recursion Schemes Updates on Feb 04 - Feb 10, 2019",
      "_short_title": "Feb 04 - Feb 10, 2019",
      "_slug": "2019/5/",
      "summary": "1 awesome projects updated on Feb 04 - Feb 10, 2019",
      "_filepath": "/content/2019/5/README.md",
      "url": "https://www.trackawesomelist.com/2019/5/",
      "date_published": "2019-01-28T11:14:53.000Z",
      "date_modified": "2019-01-28T11:14:53.000Z",
      "content_text": "\n\n### Introductions\n\n*   [Awesome Recursion Schemes (⭐1.3k)](https://github.com/passy/awesome-recursion-schemes) - A curation of useful resources for learning about and using recursion schemes.",
      "content_html": "<h3><p>Introductions</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/passy/awesome-recursion-schemes\" rel=\"noopener noreferrer\">Awesome Recursion Schemes (⭐1.3k)</a> - A curation of useful resources for learning about and using recursion schemes.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/2/",
      "title": "Awesome Recursion Schemes Updates on Jan 14 - Jan 20, 2019",
      "_short_title": "Jan 14 - Jan 20, 2019",
      "_slug": "2019/2/",
      "summary": "2 awesome projects updated on Jan 14 - Jan 20, 2019",
      "_filepath": "/content/2019/2/README.md",
      "url": "https://www.trackawesomelist.com/2019/2/",
      "date_published": "2019-01-13T12:14:07.000Z",
      "date_modified": "2019-01-13T12:14:07.000Z",
      "content_text": "\n\n### Articles / Hylomorphisms in the Wild\n\n*   [Stalking a Hylomorphism in the Wild](https://bartoszmilewski.com/2017/12/29/stalking-a-hylomorphism-in-the-wild/) - Advent of Code 2017, Domino challenge\n*   [Open Seasons on Hylomorphisms](https://bartoszmilewski.com/2018/12/20/open-season-on-hylomorphisms/) - Advent of Code 2018, String comparison challenge",
      "content_html": "<h3><p>Articles / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://bartoszmilewski.com/2017/12/29/stalking-a-hylomorphism-in-the-wild/\" rel=\"noopener noreferrer\">Stalking a Hylomorphism in the Wild</a> - Advent of Code 2017, Domino challenge</li>\n</ul>\n\n<ul>\n<li><a href=\"https://bartoszmilewski.com/2018/12/20/open-season-on-hylomorphisms/\" rel=\"noopener noreferrer\">Open Seasons on Hylomorphisms</a> - Advent of Code 2018, String comparison challenge</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/52/",
      "title": "Awesome Recursion Schemes Updates on Dec 24 - Dec 30, 2018",
      "_short_title": "Dec 24 - Dec 30, 2018",
      "_slug": "2018/52/",
      "summary": "1 awesome projects updated on Dec 24 - Dec 30, 2018",
      "_filepath": "/content/2018/52/README.md",
      "url": "https://www.trackawesomelist.com/2018/52/",
      "date_published": "2018-12-27T10:06:49.000Z",
      "date_modified": "2018-12-27T10:06:49.000Z",
      "content_text": "\n\n### Cheat Sheets / Hylomorphisms in the Wild\n\n*   [The Hitchhiker's Guide to Morphisms](https://ipfs.io/ipfs/QmTppu1VDAQWsdiyVSZX6qb8PErdpwzNP2oKfEhcgaBvWR/guide-to-morphisms.pdf) - Overview of different morphisms including a printable PDF.",
      "content_html": "<h3><p>Cheat Sheets / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://ipfs.io/ipfs/QmTppu1VDAQWsdiyVSZX6qb8PErdpwzNP2oKfEhcgaBvWR/guide-to-morphisms.pdf\" rel=\"noopener noreferrer\">The Hitchhiker's Guide to Morphisms</a> - Overview of different morphisms including a printable PDF.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/35/",
      "title": "Awesome Recursion Schemes Updates on Aug 27 - Sep 02, 2018",
      "_short_title": "Aug 27 - Sep 02, 2018",
      "_slug": "2018/35/",
      "summary": "1 awesome projects updated on Aug 27 - Sep 02, 2018",
      "_filepath": "/content/2018/35/README.md",
      "url": "https://www.trackawesomelist.com/2018/35/",
      "date_published": "2018-08-27T14:01:03.000Z",
      "date_modified": "2018-08-27T14:01:03.000Z",
      "content_text": "\n\n### Presentations / Hylomorphisms in the Wild\n\n*   [Peeling the Banana: Recursion Schemes from First Principles](https://www.youtube.com/watch?v=XZ9nPZbaYfE\\&t=3s) - Zainab Ali's Introductory talk presented at LambdaWorld.",
      "content_html": "<h3><p>Presentations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=XZ9nPZbaYfE&amp;t=3s\" rel=\"noopener noreferrer\">Peeling the Banana: Recursion Schemes from First Principles</a> - Zainab Ali's Introductory talk presented at LambdaWorld.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/29/",
      "title": "Awesome Recursion Schemes Updates on Jul 16 - Jul 22, 2018",
      "_short_title": "Jul 16 - Jul 22, 2018",
      "_slug": "2018/29/",
      "summary": "1 awesome projects updated on Jul 16 - Jul 22, 2018",
      "_filepath": "/content/2018/29/README.md",
      "url": "https://www.trackawesomelist.com/2018/29/",
      "date_published": "2018-07-16T03:08:15.000Z",
      "date_modified": "2018-07-16T03:08:15.000Z",
      "content_text": "\n\n### Implementations / Hylomorphisms in the Wild\n\n*   [recursion (⭐9)](https://github.com/vmchale/recursion) for ATS - Demonstration of\n    recursion schemes in ATS.",
      "content_html": "<h3><p>Implementations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/vmchale/recursion\" rel=\"noopener noreferrer\">recursion (⭐9)</a> for ATS - Demonstration of\nrecursion schemes in ATS.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/19/",
      "title": "Awesome Recursion Schemes Updates on May 07 - May 13, 2018",
      "_short_title": "May 07 - May 13, 2018",
      "_slug": "2018/19/",
      "summary": "1 awesome projects updated on May 07 - May 13, 2018",
      "_filepath": "/content/2018/19/README.md",
      "url": "https://www.trackawesomelist.com/2018/19/",
      "date_published": "2018-05-07T04:37:48.000Z",
      "date_modified": "2018-05-07T04:37:48.000Z",
      "content_text": "\n\n### Implementations / Hylomorphisms in the Wild\n\n*   [dada (⭐66)](https://github.com/sellout/dada) for Dhall - a library for recursion\n    schemes in Dhall.",
      "content_html": "<h3><p>Implementations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/sellout/dada\" rel=\"noopener noreferrer\">dada (⭐66)</a> for Dhall - a library for recursion\nschemes in Dhall.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/16/",
      "title": "Awesome Recursion Schemes Updates on Apr 16 - Apr 22, 2018",
      "_short_title": "Apr 16 - Apr 22, 2018",
      "_slug": "2018/16/",
      "summary": "2 awesome projects updated on Apr 16 - Apr 22, 2018",
      "_filepath": "/content/2018/16/README.md",
      "url": "https://www.trackawesomelist.com/2018/16/",
      "date_published": "2018-04-19T22:54:26.000Z",
      "date_modified": "2018-04-20T03:26:11.000Z",
      "content_text": "\n\n### Articles\n\n*   [Recursion Schemes, Part V: Hello, Hylomorphisms](http://blog.sumtypeofway.com/recursion-schemes-part-v/)\n\n### Implementations / Hylomorphisms in the Wild\n\n*   [Katalyst (⭐22)](https://github.com/aedans/Katalyst) for Kotlin - a re-envisioning based off Matryoshka using lightweight higher kinded polymorphism.",
      "content_html": "<h3><p>Articles</p>\n</h3>\n<ul>\n<li><a href=\"http://blog.sumtypeofway.com/recursion-schemes-part-v/\" rel=\"noopener noreferrer\">Recursion Schemes, Part V: Hello, Hylomorphisms</a></li>\n</ul>\n<h3><p>Implementations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/aedans/Katalyst\" rel=\"noopener noreferrer\">Katalyst (⭐22)</a> for Kotlin - a re-envisioning based off Matryoshka using lightweight higher kinded polymorphism.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/13/",
      "title": "Awesome Recursion Schemes Updates on Mar 26 - Apr 01, 2018",
      "_short_title": "Mar 26 - Apr 01, 2018",
      "_slug": "2018/13/",
      "summary": "1 awesome projects updated on Mar 26 - Apr 01, 2018",
      "_filepath": "/content/2018/13/README.md",
      "url": "https://www.trackawesomelist.com/2018/13/",
      "date_published": "2018-03-29T14:49:04.000Z",
      "date_modified": "2018-03-29T14:49:04.000Z",
      "content_text": "\n\n### Articles\n\n*   [Recursion Schemes, Part IV: Time is of the Essence](http://blog.sumtypeofway.com/recursion-schemes-part-iv-time-is-of-the-essence/) - Practical article about histomorphism and the futumorphism.",
      "content_html": "<h3><p>Articles</p>\n</h3>\n<ul>\n<li><a href=\"http://blog.sumtypeofway.com/recursion-schemes-part-iv-time-is-of-the-essence/\" rel=\"noopener noreferrer\">Recursion Schemes, Part IV: Time is of the Essence</a> - Practical article about histomorphism and the futumorphism.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/38/",
      "title": "Awesome Recursion Schemes Updates on Sep 18 - Sep 24, 2017",
      "_short_title": "Sep 18 - Sep 24, 2017",
      "_slug": "2017/38/",
      "summary": "1 awesome projects updated on Sep 18 - Sep 24, 2017",
      "_filepath": "/content/2017/38/README.md",
      "url": "https://www.trackawesomelist.com/2017/38/",
      "date_published": "2017-09-22T21:46:53.000Z",
      "date_modified": "2017-09-22T21:46:53.000Z",
      "content_text": "\n\n### Implementations / Hylomorphisms in the Wild\n\n*   [recursion\\_schemes (⭐65)](https://github.com/vmchale/recursion_schemes/) for\n    Idris, based off Edward Kmett's Haskell library.",
      "content_html": "<h3><p>Implementations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/vmchale/recursion_schemes/\" rel=\"noopener noreferrer\">recursion_schemes (⭐65)</a> for\nIdris, based off Edward Kmett's Haskell library.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/36/",
      "title": "Awesome Recursion Schemes Updates on Sep 04 - Sep 10, 2017",
      "_short_title": "Sep 04 - Sep 10, 2017",
      "_slug": "2017/36/",
      "summary": "2 awesome projects updated on Sep 04 - Sep 10, 2017",
      "_filepath": "/content/2017/36/README.md",
      "url": "https://www.trackawesomelist.com/2017/36/",
      "date_published": "2017-09-08T00:52:01.000Z",
      "date_modified": "2017-09-08T00:58:42.000Z",
      "content_text": "\n\n### Introductions\n\n*   [Recursion Schemes in JavaScript and Flow](https://medium.com/@JosephJnk/recursion-schemes-in-javascript-and-flow-with-static-land-recursision-schemes-97cf10599fb7) -\n    Series introducing recursion schemes and related concepts in JavaScript,\n    aimed at developers with a minimal functional programming background.\n\n### Implementations / Hylomorphisms in the Wild\n\n*   [static-land-recursion-schemes (⭐22)](https://github.com/JosephJNK/static-land-recursion-schemes) for JavaScript/Flow -\n    Schemes for data structures written in the style of [flow-static-land (⭐410)](https://github.com/gcanti/flow-static-land).",
      "content_html": "<h3><p>Introductions</p>\n</h3>\n<ul>\n<li><a href=\"https://medium.com/@JosephJnk/recursion-schemes-in-javascript-and-flow-with-static-land-recursision-schemes-97cf10599fb7\" rel=\"noopener noreferrer\">Recursion Schemes in JavaScript and Flow</a> -\nSeries introducing recursion schemes and related concepts in JavaScript,\naimed at developers with a minimal functional programming background.</li>\n</ul>\n<h3><p>Implementations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/JosephJNK/static-land-recursion-schemes\" rel=\"noopener noreferrer\">static-land-recursion-schemes (⭐22)</a> for JavaScript/Flow -\nSchemes for data structures written in the style of <a href=\"https://github.com/gcanti/flow-static-land\" rel=\"noopener noreferrer\">flow-static-land (⭐410)</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/34/",
      "title": "Awesome Recursion Schemes Updates on Aug 21 - Aug 27, 2017",
      "_short_title": "Aug 21 - Aug 27, 2017",
      "_slug": "2017/34/",
      "summary": "1 awesome projects updated on Aug 21 - Aug 27, 2017",
      "_filepath": "/content/2017/34/README.md",
      "url": "https://www.trackawesomelist.com/2017/34/",
      "date_published": "2017-08-25T03:32:14.000Z",
      "date_modified": "2017-08-25T03:32:14.000Z",
      "content_text": "\n\n### Presentations / Hylomorphisms in the Wild\n\n*   [recursion-scheme-talk (⭐217)](https://github.com/sellout/recursion-scheme-talk) - Collection of slide decks about recursion schemes.",
      "content_html": "<h3><p>Presentations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/sellout/recursion-scheme-talk\" rel=\"noopener noreferrer\">recursion-scheme-talk (⭐217)</a> - Collection of slide decks about recursion schemes.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/23/",
      "title": "Awesome Recursion Schemes Updates on Jun 05 - Jun 11, 2017",
      "_short_title": "Jun 05 - Jun 11, 2017",
      "_slug": "2017/23/",
      "summary": "2 awesome projects updated on Jun 05 - Jun 11, 2017",
      "_filepath": "/content/2017/23/README.md",
      "url": "https://www.trackawesomelist.com/2017/23/",
      "date_published": "2017-06-06T18:46:57.000Z",
      "date_modified": "2017-06-06T18:46:57.000Z",
      "content_text": "\n\n### Papers / Hylomorphisms in the Wild\n\n*   [Scrap your boilerplate: a practical design pattern for generic programming, 2003, SPJ et al.](http://research.microsoft.com/en-us/um/people/simonpj/Papers/hmap/hmap.ps) -\n    Design pattern for writing programs that traverse data structures built from rich mutually-recursive data types.\n\n### Implementations / Hylomorphisms in the Wild\n\n*   [purescript-matryoshka (⭐58)](https://github.com/slamdata/purescript-matryoshka) for PureScript -\n    Work-in-process port of matryoshka.",
      "content_html": "<h3><p>Papers / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"http://research.microsoft.com/en-us/um/people/simonpj/Papers/hmap/hmap.ps\" rel=\"noopener noreferrer\">Scrap your boilerplate: a practical design pattern for generic programming, 2003, SPJ et al.</a> -\nDesign pattern for writing programs that traverse data structures built from rich mutually-recursive data types.</li>\n</ul>\n<h3><p>Implementations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/slamdata/purescript-matryoshka\" rel=\"noopener noreferrer\">purescript-matryoshka (⭐58)</a> for PureScript -\nWork-in-process port of matryoshka.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/6/",
      "title": "Awesome Recursion Schemes Updates on Feb 06 - Feb 12, 2017",
      "_short_title": "Feb 06 - Feb 12, 2017",
      "_slug": "2017/6/",
      "summary": "1 awesome projects updated on Feb 06 - Feb 12, 2017",
      "_filepath": "/content/2017/6/README.md",
      "url": "https://www.trackawesomelist.com/2017/6/",
      "date_published": "2017-02-07T19:52:20.000Z",
      "date_modified": "2017-02-07T19:52:20.000Z",
      "content_text": "\n\n### Presentations / Hylomorphisms in the Wild\n\n*   [Programming with algebras](https://www.youtube.com/watch?v=-98fR9VmLbQ) - Bartosz Milewski's article in talk form, presented at LambdaCon.",
      "content_html": "<h3><p>Presentations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=-98fR9VmLbQ\" rel=\"noopener noreferrer\">Programming with algebras</a> - Bartosz Milewski's article in talk form, presented at LambdaCon.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/3/",
      "title": "Awesome Recursion Schemes Updates on Jan 16 - Jan 22, 2017",
      "_short_title": "Jan 16 - Jan 22, 2017",
      "_slug": "2017/3/",
      "summary": "2 awesome projects updated on Jan 16 - Jan 22, 2017",
      "_filepath": "/content/2017/3/README.md",
      "url": "https://www.trackawesomelist.com/2017/3/",
      "date_published": "2017-01-20T09:30:48.000Z",
      "date_modified": "2017-01-21T12:23:10.000Z",
      "content_text": "\n\n### Presentations / Hylomorphisms in the Wild\n\n*   [Bracer: Transforming Real-World Languages with Coproducts and Recursion Schemes](https://www.youtube.com/watch?v=5Kr7IykGMzU) - High-level talk about structuring programs with coproducts and recursion schemes by Patrick Thomson.\n*   [Recursion: Where Functional Programming Hits Bottom](https://www.youtube.com/watch?v=24UoRaoKLjM) - Introduction to recursive fix point data structures and recursion schemes in Haskell and Scala by Greg Pfeil.",
      "content_html": "<h3><p>Presentations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=5Kr7IykGMzU\" rel=\"noopener noreferrer\">Bracer: Transforming Real-World Languages with Coproducts and Recursion Schemes</a> - High-level talk about structuring programs with coproducts and recursion schemes by Patrick Thomson.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=24UoRaoKLjM\" rel=\"noopener noreferrer\">Recursion: Where Functional Programming Hits Bottom</a> - Introduction to recursive fix point data structures and recursion schemes in Haskell and Scala by Greg Pfeil.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2017/2/",
      "title": "Awesome Recursion Schemes Updates on Jan 09 - Jan 15, 2017",
      "_short_title": "Jan 09 - Jan 15, 2017",
      "_slug": "2017/2/",
      "summary": "7 awesome projects updated on Jan 09 - Jan 15, 2017",
      "_filepath": "/content/2017/2/README.md",
      "url": "https://www.trackawesomelist.com/2017/2/",
      "date_published": "2017-01-09T22:10:01.000Z",
      "date_modified": "2017-01-13T11:04:39.000Z",
      "content_text": "\n\n### Articles\n\n*   [Rotating Squares](https://jtobin.io/rotating-squares) - Using a hylomorphism to rotate a quadtree by Jared Tobin.\n*   [Time Traveling Recursion Schemes](https://jtobin.io/time-traveling-recursion) - Exploring histo and futu by example by Jared Tobin.\n*   [Cheat Sheet (⭐217)](https://github.com/sellout/recursion-scheme-talk/blob/master/cheat%20sheet.pdf) - Map of various recursion schemes and their duals.\n*   [Correcting the Visitor pattern](http://logji.blogspot.co.uk/2012/02/correcting-visitor-pattern.html) - Showing that the Visitor pattern implements an f-algebra for use with a catamorphism (in Java).\n\n### Podcasts / Hylomorphisms in the Wild\n\n*   [Magic Read Along](http://www.magicreadalong.com/) - Casual discussions about\n    category theory that often bring up recursion schemes, including [episode\n    33](http://www.magicreadalong.com/episode/33) which talks about Histomorphisms\n    and Futumorphisms.\n\n### Implementations / Hylomorphisms in the Wild\n\n*   [recursion-schemes (⭐347)](https://github.com/ekmett/recursion-schemes/) for\n    Haskell - The canonical implementation by Edward Kmett.\n*   [Matryoshka (⭐817)](https://github.com/slamdata/matryoshka) for Scala using Scalaz -\n    Generalized folds, unfolds, and traversals for fixed point data structures.",
      "content_html": "<h3><p>Articles</p>\n</h3>\n<ul>\n<li><a href=\"https://jtobin.io/rotating-squares\" rel=\"noopener noreferrer\">Rotating Squares</a> - Using a hylomorphism to rotate a quadtree by Jared Tobin.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://jtobin.io/time-traveling-recursion\" rel=\"noopener noreferrer\">Time Traveling Recursion Schemes</a> - Exploring histo and futu by example by Jared Tobin.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/sellout/recursion-scheme-talk/blob/master/cheat%20sheet.pdf\" rel=\"noopener noreferrer\">Cheat Sheet (⭐217)</a> - Map of various recursion schemes and their duals.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://logji.blogspot.co.uk/2012/02/correcting-visitor-pattern.html\" rel=\"noopener noreferrer\">Correcting the Visitor pattern</a> - Showing that the Visitor pattern implements an f-algebra for use with a catamorphism (in Java).</li>\n</ul>\n<h3><p>Podcasts / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"http://www.magicreadalong.com/\" rel=\"noopener noreferrer\">Magic Read Along</a> - Casual discussions about\ncategory theory that often bring up recursion schemes, including <a href=\"http://www.magicreadalong.com/episode/33\" rel=\"noopener noreferrer\">episode\n33</a> which talks about Histomorphisms\nand Futumorphisms.</li>\n</ul>\n<h3><p>Implementations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ekmett/recursion-schemes/\" rel=\"noopener noreferrer\">recursion-schemes (⭐347)</a> for\nHaskell - The canonical implementation by Edward Kmett.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/slamdata/matryoshka\" rel=\"noopener noreferrer\">Matryoshka (⭐817)</a> for Scala using Scalaz -\nGeneralized folds, unfolds, and traversals for fixed point data structures.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2016/52/",
      "title": "Awesome Recursion Schemes Updates on Dec 26 - Jan 01, 2016",
      "_short_title": "Dec 26 - Jan 01, 2016",
      "_slug": "2016/52/",
      "summary": "14 awesome projects updated on Dec 26 - Jan 01, 2016",
      "_filepath": "/content/2016/52/README.md",
      "url": "https://www.trackawesomelist.com/2016/52/",
      "date_published": "2016-12-30T22:30:02.000Z",
      "date_modified": "2017-01-01T12:23:05.000Z",
      "content_text": "\n\n### Introductions\n\n*   [Practical Recursion Schemes](https://jtobin.io/practical-recursion-schemes) -\n    Introduction to pattern functors, fix points, anamorphisms, catamorphisms,\n    paramorphisms and hylomorphisms, requiring very little prior knowledge.\n*   [An Introduction to Recursion Schemes](http://blog.sumtypeofway.com/an-introduction-to-recursion-schemes/) -\n    Three-part series in which you discover recursion schemes from scratch and\n    implement a small subset of Edward Kmett's library.\n*   [Understanding Algebras](https://www.schoolofhaskell.com/user/bartosz/understanding-algebras) -\n    Bartosz Milewski explains F-algebras and shows how to use them in the context of\n    catamorphisms.\n\n### Articles\n\n*   [Recursion Schemes: A Field Guide (Redux)](http://comonad.com/reader/2009/recursion-schemes/) -\n    List of various recursion schemes with code samples.\n*   [Catamorphisms](https://wiki.haskell.org/Catamorphisms) - Definition on the Haskell Wiki.\n*   [Catamorphisms](https://www.schoolofhaskell.com/user/edwardk/recursion-schemes/catamorphisms) -\n    Short definition with code on School of Haskell by Edward Kmett.\n\n### Papers / Hylomorphisms in the Wild\n\n*   [Functional Programming with Bananas, Lenses, Envelopes and Barbed Wire, 1991, Meijer et al.](http://maartenfokkinga.github.io/utwente/mmf91m.pdf) -\n    The original paper most of this is based on.\n*   [A Duality of Sorts, 2013, Hinze et al.](http://www.cs.ox.ac.uk/ralf.hinze/publications/Sorting.pdf) -\n    Shows that many basic sorting algorithms exist as a pair, and that these pairs\n    arise naturally out of the duality between folds and unfolds.\n*   [Sorting with Bialgebras and Distributive Laws, 2012, Hinze et al.](http://www.cs.ox.ac.uk/people/daniel.james/sorting/sorting.pdf) -\n    Shows how paramorphisms and apomorphisms can be used for more efficient\n    implementations of sorting algorithms.\n\n### Presentations / Hylomorphisms in the Wild\n\n*   [Slidedecks by Tim Philip Williams](http://www.timphilipwilliams.com/slides.html) -\n    \"Recursion Schemes by Example\" and \"Exotic Tools for Exotic Trades\" provide\n    concise definitions as well as practical examples of many recursion schemes.\n*   [Unifying Structured Recursion Schemes](https://www.youtube.com/watch?v=9EGYSb9vov8) -\n    12 min presentation by Ralf Hinze, Nicolas Wu, and Jeremy Gibbons.\n*   [Recursion Schemes](https://www.youtube.com/watch?v=Zw9KeP3OzpU) -\n    Presented by Tim Williams at the London Haskell meetup.\n*   [F-algebras or: How I Learned to Stop Worrying and Love the Type System](https://www.youtube.com/watch?v=PK4SOaAGVfg) -\n    Presented by Anthony Burzillo at the NYC Haskell User's Group.\n*   [A Gentle Introduction to Recursion Schemes](https://www.youtube.com/watch?v=i5A2Amfcir8) -\n    Presented by Jean Remi Desjardins at Lambdaconf 2016.",
      "content_html": "<h3><p>Introductions</p>\n</h3>\n<ul>\n<li><a href=\"https://jtobin.io/practical-recursion-schemes\" rel=\"noopener noreferrer\">Practical Recursion Schemes</a> -\nIntroduction to pattern functors, fix points, anamorphisms, catamorphisms,\nparamorphisms and hylomorphisms, requiring very little prior knowledge.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://blog.sumtypeofway.com/an-introduction-to-recursion-schemes/\" rel=\"noopener noreferrer\">An Introduction to Recursion Schemes</a> -\nThree-part series in which you discover recursion schemes from scratch and\nimplement a small subset of Edward Kmett's library.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.schoolofhaskell.com/user/bartosz/understanding-algebras\" rel=\"noopener noreferrer\">Understanding Algebras</a> -\nBartosz Milewski explains F-algebras and shows how to use them in the context of\ncatamorphisms.</li>\n</ul>\n<h3><p>Articles</p>\n</h3>\n<ul>\n<li><a href=\"http://comonad.com/reader/2009/recursion-schemes/\" rel=\"noopener noreferrer\">Recursion Schemes: A Field Guide (Redux)</a> -\nList of various recursion schemes with code samples.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://wiki.haskell.org/Catamorphisms\" rel=\"noopener noreferrer\">Catamorphisms</a> - Definition on the Haskell Wiki.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.schoolofhaskell.com/user/edwardk/recursion-schemes/catamorphisms\" rel=\"noopener noreferrer\">Catamorphisms</a> -\nShort definition with code on School of Haskell by Edward Kmett.</li>\n</ul>\n<h3><p>Papers / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"http://maartenfokkinga.github.io/utwente/mmf91m.pdf\" rel=\"noopener noreferrer\">Functional Programming with Bananas, Lenses, Envelopes and Barbed Wire, 1991, Meijer et al.</a> -\nThe original paper most of this is based on.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.cs.ox.ac.uk/ralf.hinze/publications/Sorting.pdf\" rel=\"noopener noreferrer\">A Duality of Sorts, 2013, Hinze et al.</a> -\nShows that many basic sorting algorithms exist as a pair, and that these pairs\narise naturally out of the duality between folds and unfolds.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.cs.ox.ac.uk/people/daniel.james/sorting/sorting.pdf\" rel=\"noopener noreferrer\">Sorting with Bialgebras and Distributive Laws, 2012, Hinze et al.</a> -\nShows how paramorphisms and apomorphisms can be used for more efficient\nimplementations of sorting algorithms.</li>\n</ul>\n<h3><p>Presentations / Hylomorphisms in the Wild</p>\n</h3>\n<ul>\n<li><a href=\"http://www.timphilipwilliams.com/slides.html\" rel=\"noopener noreferrer\">Slidedecks by Tim Philip Williams</a> -\n\"Recursion Schemes by Example\" and \"Exotic Tools for Exotic Trades\" provide\nconcise definitions as well as practical examples of many recursion schemes.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=9EGYSb9vov8\" rel=\"noopener noreferrer\">Unifying Structured Recursion Schemes</a> -\n12 min presentation by Ralf Hinze, Nicolas Wu, and Jeremy Gibbons.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=Zw9KeP3OzpU\" rel=\"noopener noreferrer\">Recursion Schemes</a> -\nPresented by Tim Williams at the London Haskell meetup.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=PK4SOaAGVfg\" rel=\"noopener noreferrer\">F-algebras or: How I Learned to Stop Worrying and Love the Type System</a> -\nPresented by Anthony Burzillo at the NYC Haskell User's Group.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=i5A2Amfcir8\" rel=\"noopener noreferrer\">A Gentle Introduction to Recursion Schemes</a> -\nPresented by Jean Remi Desjardins at Lambdaconf 2016.</li>\n</ul>\n"
    }
  ]
}
