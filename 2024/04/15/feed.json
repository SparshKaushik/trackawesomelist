{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Apr 15, 2024",
  "_site_title": "Track Awesome List",
  "description": "10 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Apr 15, 2024 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/razum2um/awesome-clojure/",
      "title": "Awesome Clojure",
      "_slug": "razum2um/awesome-clojure/",
      "_filepath": "/content/razum2um/awesome-clojure/README.md",
      "url": "https://www.trackawesomelist.com/razum2um/awesome-clojure/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Date and Time\n\n*   [holi (‚≠ê5)](https://github.com/luciolucio/holi) - Calendar operations that are aware of weekends and holidays",
      "content_html": "<h3><p>Date and Time</p>\n</h3><ul>\n<li><a href=\"https://github.com/luciolucio/holi\" rel=\"noopener noreferrer\">holi (‚≠ê5)</a> - Calendar operations that are aware of weekends and holidays</li>\n</ul>\n",
      "date_published": "2024-04-15T16:39:46.000Z",
      "date_modified": "2024-04-15T16:39:46.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/filipecalegario/awesome-generative-deep-art/",
      "title": "Awesome Generative Deep Art",
      "_slug": "filipecalegario/awesome-generative-deep-art/",
      "_filepath": "/content/filipecalegario/awesome-generative-deep-art/README.md",
      "url": "https://www.trackawesomelist.com/filipecalegario/awesome-generative-deep-art/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Generative AI history, timelines, maps, and definitions\n\n*   \\[üî•üî•üî•] [FirstMark | 2024 MAD (ML/AI/Data) Landscape](https://mad.firstmark.com/): Full Steam Ahead The 2024 MAD (Machine Learning, AI & Data) Landscape",
      "content_html": "<h3><p>Generative AI history, timelines, maps, and definitions</p>\n</h3><ul>\n<li>[üî•üî•üî•] <a href=\"https://mad.firstmark.com/\" rel=\"noopener noreferrer\">FirstMark | 2024 MAD (ML/AI/Data) Landscape</a>: Full Steam Ahead The 2024 MAD (Machine Learning, AI &amp; Data) Landscape</li>\n</ul>\n",
      "date_published": "2024-04-15T16:12:31.000Z",
      "date_modified": "2024-04-15T16:12:31.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/vuejs/awesome-vue/",
      "title": "Awesome Vue",
      "_slug": "vuejs/awesome-vue/",
      "_filepath": "/content/vuejs/awesome-vue/README.md",
      "url": "https://www.trackawesomelist.com/vuejs/awesome-vue/",
      "summary": "4 awesome projects updated",
      "content_text": "\n\n### Resources / Tutorials\n\n*   [T√ºrk√ße Vue 3 Dersleri](https://www.youtube.com/playlist?list=PLf-6qk7szL-J4a7xaGf2TbW0p_cGbeMe7) on Youtube by Abdullah Uƒüra≈ükan\n\n### Components & Libraries / UI Components\n\n*   [vue-default-page (‚≠ê34)](https://github.com/zero-one-code/vue-default-page) - A Vue 3.0 plugin with built-in v-loading, v-skeleton, v-error and v-empty custom directives.\n*   [css-3d-progress (‚≠ê3)](https://github.com/rofixro/css-3d-progress) - A 3D progress bar component written using web Components, supports Vue, React and Svelte.\n*   [schedule-x (‚≠ê1.8k)](https://github.com/schedule-x/schedule-x) - A material design event calendar. Customizable, light- and dark modes & multilingual.\n\n### Components & Libraries / UI Utilities\n\n*   [tracked-instance (‚≠ê4)](https://github.com/rudnik275/tracked-instance) - Build large forms and track all changes.\n\n### Components & Libraries / Dev Tools\n\n*   [Vue Cheatsheet](https://vue-cheatsheet.themeselection.com/) - The only Vue cheatsheet you will ever need",
      "content_html": "<h3><p>Resources / Tutorials</p>\n</h3><ul>\n<li><a href=\"https://www.youtube.com/playlist?list=PLf-6qk7szL-J4a7xaGf2TbW0p_cGbeMe7\" rel=\"noopener noreferrer\">T√ºrk√ße Vue 3 Dersleri</a> on Youtube by Abdullah Uƒüra≈ükan</li>\n</ul>\n<h3><p>Components &amp; Libraries / UI Components</p>\n</h3><ul>\n<li><a href=\"https://github.com/zero-one-code/vue-default-page\" rel=\"noopener noreferrer\">vue-default-page (‚≠ê34)</a> - A Vue 3.0 plugin with built-in v-loading, v-skeleton, v-error and v-empty custom directives.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/rofixro/css-3d-progress\" rel=\"noopener noreferrer\">css-3d-progress (‚≠ê3)</a> - A 3D progress bar component written using web Components, supports Vue, React and Svelte.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/schedule-x/schedule-x\" rel=\"noopener noreferrer\">schedule-x (‚≠ê1.8k)</a> - A material design event calendar. Customizable, light- and dark modes &amp; multilingual.</li>\n</ul>\n<h3><p>Components &amp; Libraries / UI Utilities</p>\n</h3><ul>\n<li><a href=\"https://github.com/rudnik275/tracked-instance\" rel=\"noopener noreferrer\">tracked-instance (‚≠ê4)</a> - Build large forms and track all changes.</li>\n</ul>\n<h3><p>Components &amp; Libraries / Dev Tools</p>\n</h3><ul>\n<li><a href=\"https://vue-cheatsheet.themeselection.com/\" rel=\"noopener noreferrer\">Vue Cheatsheet</a> - The only Vue cheatsheet you will ever need</li>\n</ul>\n",
      "date_published": "2024-04-15T11:11:23.000Z",
      "date_modified": "2024-04-15T11:14:57.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/pluja/awesome-privacy/",
      "title": "Awesome Privacy",
      "_slug": "pluja/awesome-privacy/",
      "_filepath": "/content/pluja/awesome-privacy/README.md",
      "url": "https://www.trackawesomelist.com/pluja/awesome-privacy/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Third-Party owned\n\n*   [Tuta](https://tuta.com/) - Secure email for everybody. Open Source.",
      "content_html": "<h3><p>Third-Party owned</p>\n</h3><ul>\n<li><a href=\"https://tuta.com/\" rel=\"noopener noreferrer\">Tuta</a> - Secure email for everybody. Open Source.</li>\n</ul>\n",
      "date_published": "2024-04-15T09:10:04.000Z",
      "date_modified": "2024-04-15T09:10:04.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/CodyReichert/awesome-cl/",
      "title": "Awesome Cl",
      "_slug": "CodyReichert/awesome-cl/",
      "_filepath": "/content/CodyReichert/awesome-cl/README.md",
      "url": "https://www.trackawesomelist.com/CodyReichert/awesome-cl/",
      "summary": "4 awesome projects updated",
      "content_text": "\n\n### Natural Language Processing\n\n*   [OM7 (‚≠ê174)](https://github.com/openmusic-project/om7) - a new implementation of the OpenMusic visual programming and computer-aided composition environment including a number of improvements on graphical interface, computational mode, and connection to external software libraries. [GPL3](http://www.gnu.org/copyleft/gpl.html).\n    *   an extension: [rq (‚≠ê10)](https://github.com/openmusic-project/RQ) - a library for rhythm transcription in OpenMusic (version 6.10 and later). [demo video](https://www.youtube.com/watch?v=XVEllB0TtVs). [GPL3](http://www.gnu.org/copyleft/gpl.html).\n*   [Slippery Chicken (‚≠ê75)](https://github.com/mdedwards/slippery-chicken/) - Algorithmic composition library which outputs Midi, Common Music Notation, pdf-score via Lilypond and sound via Common Lisp Music. [GPL3](http://www.gnu.org/copyleft/gpl.html).\n    *   with documentation: <https://michael-edwards.org/sc/>\n*   [Common Music (‚≠ê25)](https://github.com/ormf/cm) - the repository of an\n    ancient version of Common Music (version 2.12.0), the presumably\n    last version which ran on Common Lisp dating from around 2007-09,\n    before work on Common Music shifted to (scheme-based) cm3.\n    *   note: old project but working.\n    *   [cm-incudine (‚≠ê10)](https://github.com/ormf/cm-incudine) - extends Common Music 2 with realtime capabilities. GPL2.\n*   [cl-patterns (‚≠ê84)](https://github.com/defaultxr/cl-patterns) - a system for composing music via Lisp code, heavily inspired by SuperCollider‚Äôs patterns system, with aims to implement much of it, but in a more robust, expressive, consistent, reflective, and lispy way. Audio output through SuperCollider, with preliminary support for Incudine, and MIDI through ALSA.\n*   [Harmony](https://shirakumo.github.io/harmony) - A real-time sound processing and playback system. [zlib](https://directory.fsf.org/wiki/License:Zlib).\n    *   \"provides you with audio processing tools as well as an audio server to play back music, sfx, and so forth.\"\n    *   using [cl-mixed (‚≠ê30)](https://github.com/Shirakumo/cl-mixed) for the mixing and sound processing library.\n*   [scheduler (‚≠ê9)](https://github.com/byulparan/scheduler) - The time based musical event scheduler for Common Lisp. [Apache2.0](https://directory.fsf.org/wiki/License:Apache2.0).\n*   [Common Music Notation](https://ccrma.stanford.edu/software/cmn/) - Common Music Notation (CMN) provides a package of functions to hierarchically describe a musical score. Public domain.\n*   [osc (‚≠ê37)](https://github.com/zzkt/osc) - an implementation of the Open Sound Protocol. [LGPL2.1](http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html).\n*   [cl-mpg123 (‚≠ê5)](https://github.com/Shirakumo/cl-mpg123), [cl-opus (‚≠ê8)](https://github.com/Shirakumo/cl-opus) (OGG/Opus), [cl-vorbis (‚≠ê4)](https://github.com/Shirakumo/cl-vorbis) (OGG/Vorbis), [cl-SoLoud (‚≠ê2)](https://github.com/Shirakumo/cl-soloud), [cl-out123 (‚≠ê5)](https://github.com/Shirakumo/cl-out123) (libout123), [cl-flac (‚≠ê2)](https://github.com/Shirakumo/cl-flac)\n*   [csound (‚≠ê1.4k)](https://github.com/csound/csound) - A sound and music computing system. Includes CFFI and FFI interfaces for Common Lisp.\n*   [cl-collider (‚≠ê238)](https://github.com/byulparan/cl-collider) - A [SuperCollider](http://supercollider.github.io/) client for CommonLisp. With a [tutorial (‚≠ê21)](https://github.com/defaultxr/cl-collider-tutorial) and [live coding demos](https://www.youtube.com/watch?v=xzTH_ZqaFKI). Public domain.\n*   [cl-openal (‚≠ê37)](https://github.com/zkat/cl-openal) - bindings for the OpenAL audio library. Public domain.\n\n### Deployment / Isomorphic web frameworks\n\n*   [make-common-lisp-program (‚≠ê4)](https://github.com/melusina-org/make-common-lisp-program/) -  GitHub action to build an executable Common Lisp program on Ubuntu, MacOS and Windows. MIT.\n\n### Date and time / Third-party APIs\n\n*   [fuzzy-dates (‚≠ê16)](https://github.com/Shinmera/fuzzy-dates) -  A library to fuzzily parse date and time strings. Zlib.\n\n### Documentation builders / Third-party APIs\n\n*   [mgl-pax (‚≠ê86)](https://github.com/melisgl/mgl-pax) - Exploratory\n    programming environment and documentation generator. one may\n    accomplish similar effects as with Literate Programming, but\n    documentation is generated from code, not vice versa. Code is first,\n    code must look pretty, documentation is code. [MIT](https://opensource.org/licenses/MIT).\n    *   also PDF export\n    *   see this [40ants/doc (‚≠ê23)](https://github.com/40ants/doc) fork: a lighter core system, a JavaScript search index, multiple format output, HTML themes, RSS and Atom feed for the Changelog and more.\n*   [sphinxcontrib-cldomain](https://sphinxcontrib-cldomain.russellsim.org/) -\n    Extending Sphinx to cover Common Lisp. To build documentation with\n    the same ease as sphinx would a Python project. [GPL3](http://www.gnu.org/copyleft/gpl.html)\n    *   crossreferences, links to the CLHS, symbol index, search, and all Sphinx features.\n*   [Declt (‚≠ê41)](https://github.com/didierverna/declt) - Reference manual generator for Common Lisp libraries. Builds a texinfo document that can be further processed into various formats, such as HTML or PDF. BSD.",
      "content_html": "<h3><p>Natural Language Processing</p>\n</h3><ul>\n<li><a href=\"https://github.com/openmusic-project/om7\" rel=\"noopener noreferrer\">OM7 (‚≠ê174)</a> - a new implementation of the OpenMusic visual programming and computer-aided composition environment including a number of improvements on graphical interface, computational mode, and connection to external software libraries. <a href=\"http://www.gnu.org/copyleft/gpl.html\" rel=\"noopener noreferrer\">GPL3</a>.<ul>\n<li>an extension: <a href=\"https://github.com/openmusic-project/RQ\" rel=\"noopener noreferrer\">rq (‚≠ê10)</a> - a library for rhythm transcription in OpenMusic (version 6.10 and later). <a href=\"https://www.youtube.com/watch?v=XVEllB0TtVs\" rel=\"noopener noreferrer\">demo video</a>. <a href=\"http://www.gnu.org/copyleft/gpl.html\" rel=\"noopener noreferrer\">GPL3</a>.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mdedwards/slippery-chicken/\" rel=\"noopener noreferrer\">Slippery Chicken (‚≠ê75)</a> - Algorithmic composition library which outputs Midi, Common Music Notation, pdf-score via Lilypond and sound via Common Lisp Music. <a href=\"http://www.gnu.org/copyleft/gpl.html\" rel=\"noopener noreferrer\">GPL3</a>.<ul>\n<li>with documentation: <a href=\"https://michael-edwards.org/sc/\" rel=\"noopener noreferrer\">https://michael-edwards.org/sc/</a></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ormf/cm\" rel=\"noopener noreferrer\">Common Music (‚≠ê25)</a> - the repository of an\nancient version of Common Music (version 2.12.0), the presumably\nlast version which ran on Common Lisp dating from around 2007-09,\nbefore work on Common Music shifted to (scheme-based) cm3.<ul>\n<li>note: old project but working.</li>\n<li><a href=\"https://github.com/ormf/cm-incudine\" rel=\"noopener noreferrer\">cm-incudine (‚≠ê10)</a> - extends Common Music 2 with realtime capabilities. GPL2.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/defaultxr/cl-patterns\" rel=\"noopener noreferrer\">cl-patterns (‚≠ê84)</a> - a system for composing music via Lisp code, heavily inspired by SuperCollider‚Äôs patterns system, with aims to implement much of it, but in a more robust, expressive, consistent, reflective, and lispy way. Audio output through SuperCollider, with preliminary support for Incudine, and MIDI through ALSA.</li>\n</ul>\n<ul>\n<li><a href=\"https://shirakumo.github.io/harmony\" rel=\"noopener noreferrer\">Harmony</a> - A real-time sound processing and playback system. <a href=\"https://directory.fsf.org/wiki/License:Zlib\" rel=\"noopener noreferrer\">zlib</a>.<ul>\n<li>\"provides you with audio processing tools as well as an audio server to play back music, sfx, and so forth.\"</li>\n<li>using <a href=\"https://github.com/Shirakumo/cl-mixed\" rel=\"noopener noreferrer\">cl-mixed (‚≠ê30)</a> for the mixing and sound processing library.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/byulparan/scheduler\" rel=\"noopener noreferrer\">scheduler (‚≠ê9)</a> - The time based musical event scheduler for Common Lisp. <a href=\"https://directory.fsf.org/wiki/License:Apache2.0\" rel=\"noopener noreferrer\">Apache2.0</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://ccrma.stanford.edu/software/cmn/\" rel=\"noopener noreferrer\">Common Music Notation</a> - Common Music Notation (CMN) provides a package of functions to hierarchically describe a musical score. Public domain.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/zzkt/osc\" rel=\"noopener noreferrer\">osc (‚≠ê37)</a> - an implementation of the Open Sound Protocol. <a href=\"http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\" rel=\"noopener noreferrer\">LGPL2.1</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Shirakumo/cl-mpg123\" rel=\"noopener noreferrer\">cl-mpg123 (‚≠ê5)</a>, <a href=\"https://github.com/Shirakumo/cl-opus\" rel=\"noopener noreferrer\">cl-opus (‚≠ê8)</a> (OGG/Opus), <a href=\"https://github.com/Shirakumo/cl-vorbis\" rel=\"noopener noreferrer\">cl-vorbis (‚≠ê4)</a> (OGG/Vorbis), <a href=\"https://github.com/Shirakumo/cl-soloud\" rel=\"noopener noreferrer\">cl-SoLoud (‚≠ê2)</a>, <a href=\"https://github.com/Shirakumo/cl-out123\" rel=\"noopener noreferrer\">cl-out123 (‚≠ê5)</a> (libout123), <a href=\"https://github.com/Shirakumo/cl-flac\" rel=\"noopener noreferrer\">cl-flac (‚≠ê2)</a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/csound/csound\" rel=\"noopener noreferrer\">csound (‚≠ê1.4k)</a> - A sound and music computing system. Includes CFFI and FFI interfaces for Common Lisp.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/byulparan/cl-collider\" rel=\"noopener noreferrer\">cl-collider (‚≠ê238)</a> - A <a href=\"http://supercollider.github.io/\" rel=\"noopener noreferrer\">SuperCollider</a> client for CommonLisp. With a <a href=\"https://github.com/defaultxr/cl-collider-tutorial\" rel=\"noopener noreferrer\">tutorial (‚≠ê21)</a> and <a href=\"https://www.youtube.com/watch?v=xzTH_ZqaFKI\" rel=\"noopener noreferrer\">live coding demos</a>. Public domain.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/zkat/cl-openal\" rel=\"noopener noreferrer\">cl-openal (‚≠ê37)</a> - bindings for the OpenAL audio library. Public domain.</li>\n</ul>\n<h3><p>Deployment / Isomorphic web frameworks</p>\n</h3><ul>\n<li><a href=\"https://github.com/melusina-org/make-common-lisp-program/\" rel=\"noopener noreferrer\">make-common-lisp-program (‚≠ê4)</a> -  GitHub action to build an executable Common Lisp program on Ubuntu, MacOS and Windows. MIT.</li>\n</ul>\n<h3><p>Date and time / Third-party APIs</p>\n</h3><ul>\n<li><a href=\"https://github.com/Shinmera/fuzzy-dates\" rel=\"noopener noreferrer\">fuzzy-dates (‚≠ê16)</a> -  A library to fuzzily parse date and time strings. Zlib.</li>\n</ul>\n<h3><p>Documentation builders / Third-party APIs</p>\n</h3><ul>\n<li><a href=\"https://github.com/melisgl/mgl-pax\" rel=\"noopener noreferrer\">mgl-pax (‚≠ê86)</a> - Exploratory\nprogramming environment and documentation generator. one may\naccomplish similar effects as with Literate Programming, but\ndocumentation is generated from code, not vice versa. Code is first,\ncode must look pretty, documentation is code. <a href=\"https://opensource.org/licenses/MIT\" rel=\"noopener noreferrer\">MIT</a>.<ul>\n<li>also PDF export</li>\n<li>see this <a href=\"https://github.com/40ants/doc\" rel=\"noopener noreferrer\">40ants/doc (‚≠ê23)</a> fork: a lighter core system, a JavaScript search index, multiple format output, HTML themes, RSS and Atom feed for the Changelog and more.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://sphinxcontrib-cldomain.russellsim.org/\" rel=\"noopener noreferrer\">sphinxcontrib-cldomain</a> -\nExtending Sphinx to cover Common Lisp. To build documentation with\nthe same ease as sphinx would a Python project. <a href=\"http://www.gnu.org/copyleft/gpl.html\" rel=\"noopener noreferrer\">GPL3</a><ul>\n<li>crossreferences, links to the CLHS, symbol index, search, and all Sphinx features.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/didierverna/declt\" rel=\"noopener noreferrer\">Declt (‚≠ê41)</a> - Reference manual generator for Common Lisp libraries. Builds a texinfo document that can be further processed into various formats, such as HTML or PDF. BSD.</li>\n</ul>\n",
      "date_published": "2024-04-15T09:05:42.000Z",
      "date_modified": "2024-04-15T09:05:42.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/grafana/awesome-k6/",
      "title": "Awesome K6",
      "_slug": "grafana/awesome-k6/",
      "_filepath": "/content/grafana/awesome-k6/README.md",
      "url": "https://www.trackawesomelist.com/grafana/awesome-k6/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Articles\n\n*   [k6 OSS workshop (‚≠ê33)](https://github.com/grafana/k6-oss-workshop) - A 2-3 hour k6 workshop with practical k6 examples using the QuickPizza demo app.\n\n### Examples/Templates\n\n*   [k6 QuickPizza examples (‚≠ê101)](https://github.com/grafana/quickpizza) - Web application used for demos and workshops with multiple k6 examples.",
      "content_html": "<h3><p>Articles</p>\n</h3><ul>\n<li><a href=\"https://github.com/grafana/k6-oss-workshop\" rel=\"noopener noreferrer\">k6 OSS workshop (‚≠ê33)</a> - A 2-3 hour k6 workshop with practical k6 examples using the QuickPizza demo app.</li>\n</ul>\n<h3><p>Examples/Templates</p>\n</h3><ul>\n<li><a href=\"https://github.com/grafana/quickpizza\" rel=\"noopener noreferrer\">k6 QuickPizza examples (‚≠ê101)</a> - Web application used for demos and workshops with multiple k6 examples.</li>\n</ul>\n",
      "date_published": "2024-04-15T08:31:40.000Z",
      "date_modified": "2024-04-15T08:31:40.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/rockerBOO/awesome-neovim/",
      "title": "Awesome Neovim",
      "_slug": "rockerBOO/awesome-neovim/",
      "_filepath": "/content/rockerBOO/awesome-neovim/README.md",
      "url": "https://www.trackawesomelist.com/rockerBOO/awesome-neovim/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Color / Diagnostics\n\n*   [moyiz/command-and-cursor.nvim (‚≠ê22)](https://github.com/moyiz/command-and-cursor.nvim) - Highlight cursor and visual selections when entering command mode.",
      "content_html": "<h3><p>Color / Diagnostics</p>\n</h3><ul>\n<li><a href=\"https://github.com/moyiz/command-and-cursor.nvim\" rel=\"noopener noreferrer\">moyiz/command-and-cursor.nvim (‚≠ê22)</a> - Highlight cursor and visual selections when entering command mode.</li>\n</ul>\n",
      "date_published": "2024-04-15T06:59:38.000Z",
      "date_modified": "2024-04-15T06:59:38.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/rust-embedded/awesome-embedded-rust/",
      "title": "Awesome Embedded Rust",
      "_slug": "rust-embedded/awesome-embedded-rust/",
      "_filepath": "/content/rust-embedded/awesome-embedded-rust/README.md",
      "url": "https://www.trackawesomelist.com/rust-embedded/awesome-embedded-rust/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Community / Community Chat Rooms\n\n*   [rust-embedded:QQ group](https://qm.qq.com/q/A8Hl57xR1C) - Chinese community for Rust embedded",
      "content_html": "<h3><p>Community / Community Chat Rooms</p>\n</h3><ul>\n<li><a href=\"https://qm.qq.com/q/A8Hl57xR1C\" rel=\"noopener noreferrer\">rust-embedded:QQ group</a> - Chinese community for Rust embedded</li>\n</ul>\n",
      "date_published": "2024-04-15T06:40:28.000Z",
      "date_modified": "2024-04-15T06:40:28.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "title": "Awesome Agi Cocosci",
      "_slug": "YuzheSHI/awesome-agi-cocosci/",
      "_filepath": "/content/YuzheSHI/awesome-agi-cocosci/README.md",
      "url": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Science Logology / Laboratory Automation\n\n*   [Reconfigurable system for automated optimization of diverse chemical reactions](https://www.science.org/doi/full/10.1126/science.aat0650) - ***Science***, 2018. \\[[All Versions](https://scholar.google.com/scholar?cluster=3076614068291119943)]. \\[[Preprint](https://www.science.org/doi/pdf/10.1126/science.aat0650)]. This paper describes a plug-and-play, continuous-flow chemical synthesis system that mitigates this challenge with an integrated combination of hardware, software, and analytics. The system software controls the user-selected reagents and unit operations (reactors and separators), processes reaction analytics (high-performance liquid chromatography, mass spectrometry, vibrational spectroscopy), and conducts automated optimizations.",
      "content_html": "<h3><p>Science Logology / Laboratory Automation</p>\n</h3><ul>\n<li><a href=\"https://www.science.org/doi/full/10.1126/science.aat0650\" rel=\"noopener noreferrer\">Reconfigurable system for automated optimization of diverse chemical reactions</a> - <em><strong>Science</strong></em>, 2018. [<a href=\"https://scholar.google.com/scholar?cluster=3076614068291119943\" rel=\"noopener noreferrer\">All Versions</a>]. [<a href=\"https://www.science.org/doi/pdf/10.1126/science.aat0650\" rel=\"noopener noreferrer\">Preprint</a>]. This paper describes a plug-and-play, continuous-flow chemical synthesis system that mitigates this challenge with an integrated combination of hardware, software, and analytics. The system software controls the user-selected reagents and unit operations (reactors and separators), processes reaction analytics (high-performance liquid chromatography, mass spectrometry, vibrational spectroscopy), and conducts automated optimizations.</li>\n</ul>\n",
      "date_published": "2024-04-15T01:02:08.000Z",
      "date_modified": "2024-04-15T01:02:08.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/analysis-tools-dev/static-analysis/",
      "title": "Static Analysis",
      "_slug": "analysis-tools-dev/static-analysis/",
      "_filepath": "/content/analysis-tools-dev/static-analysis/README.md",
      "url": "https://www.trackawesomelist.com/analysis-tools-dev/static-analysis/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Other / [Other](#other-1)\n\n*   [kani (‚≠ê2.6k)](https://github.com/model-checking/kani) ‚Äî The Kani Rust Verifier is a bit-precise model checker for Rust.\n    Kani is particularly useful for verifying unsafe code blocks in Rust,\n    where the \"unsafe superpowers\" are unchecked by the compiler.\n    Kani verifies:\n*   Memory safety (e.g., null pointer dereferences)\n*   User-specified assertions (i.e., assert!(...))\n*   The absence of panics (e.g., unwrap() on None values)\n*   The absence of some types of unexpected behavior (e.g., arithmetic overflows)\n*   high performance: will validate & download manifests over multiple routines, caching downloaded files in memory\n*   configurable list of remote, or local schemas locations, enabling validating Kubernetes custom resources (CRDs) and offline validation capabilities\n*   uses by default a self-updating fork of the schemas registry maintained by the kubernetes-json-schema project - which guarantees up-to-date schemas for all recent versions of Kubernetes.",
      "content_html": "<h3><p>Other / <a href=\"#other-1\">Other</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/model-checking/kani\" rel=\"noopener noreferrer\">kani (‚≠ê2.6k)</a> ‚Äî The Kani Rust Verifier is a bit-precise model checker for Rust.\nKani is particularly useful for verifying unsafe code blocks in Rust,\nwhere the \"unsafe superpowers\" are unchecked by the compiler.\nKani verifies:</li>\n</ul>\n<ul>\n<li>Memory safety (e.g., null pointer dereferences)</li>\n</ul>\n<ul>\n<li>User-specified assertions (i.e., assert!(...))</li>\n</ul>\n<ul>\n<li>The absence of panics (e.g., unwrap() on None values)</li>\n</ul>\n<ul>\n<li>The absence of some types of unexpected behavior (e.g., arithmetic overflows)</li>\n</ul>\n<ul>\n<li>high performance: will validate &amp; download manifests over multiple routines, caching downloaded files in memory</li>\n</ul>\n<ul>\n<li>configurable list of remote, or local schemas locations, enabling validating Kubernetes custom resources (CRDs) and offline validation capabilities</li>\n</ul>\n<ul>\n<li>uses by default a self-updating fork of the schemas registry maintained by the kubernetes-json-schema project - which guarantees up-to-date schemas for all recent versions of Kubernetes.</li>\n</ul>\n",
      "date_published": "2024-04-15T00:10:24.000Z",
      "date_modified": "2024-04-15T00:10:24.000Z"
    }
  ]
}
