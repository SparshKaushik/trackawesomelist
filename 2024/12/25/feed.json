{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Dec 25, 2024",
  "_site_title": "Track Awesome List",
  "description": "5 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Dec 25, 2024 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/fffaraz/awesome-cpp/",
      "title": "Awesome Cpp",
      "_slug": "fffaraz/awesome-cpp/",
      "_filepath": "/content/fffaraz/awesome-cpp/README.md",
      "url": "https://www.trackawesomelist.com/fffaraz/awesome-cpp/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Miscellaneous\n\n*   [libpopcnt (⭐348)](https://github.com/kimwalisch/libpopcnt) - Fast C/C++ bit population count library. \\[BSD-2-Clause]",
      "content_html": "<h3><p>Miscellaneous</p>\n</h3><ul>\n<li><a href=\"https://github.com/kimwalisch/libpopcnt\" rel=\"noopener noreferrer\">libpopcnt (⭐348)</a> - Fast C/C++ bit population count library. [BSD-2-Clause]</li>\n</ul>\n",
      "date_published": "2024-12-25T19:59:12.000Z",
      "date_modified": "2024-12-25T19:59:12.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/PatrickJS/awesome-angular/",
      "title": "Awesome Angular",
      "_slug": "PatrickJS/awesome-angular/",
      "_filepath": "/content/PatrickJS/awesome-angular/README.md",
      "url": "https://www.trackawesomelist.com/PatrickJS/awesome-angular/",
      "summary": "3 awesome projects updated",
      "content_text": "\n\n### HTTP / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [ngs-request-tracker (⭐2)](https://github.com/andrei-shpileuski/ngs-request-tracker) - A library for tracking, storing, and displaying statistics on all HTTP requests.\n\n### Internationalization / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [ngs-plural (⭐1)](https://github.com/andrei-shpileuski/ngs-plural) - A lightweight Angular library for handling pluralization in different languages using a pipe and a service. It simplifies the process of generating grammatically correct plural forms based on a numeric count and supports custom language rules.\n\n### Misc Components / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [ngs-json-utils (⭐3)](https://github.com/andrei-shpileuski/ngs-json-utils) - A lightweight utility library for Angular applications that provides easy-to-use functions for working with JSON objects. It includes methods for deep cloning, serialization, and deserialization of JSON data, designed specifically for Angular projects with TypeScript support.",
      "content_html": "<h3><p>HTTP / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/andrei-shpileuski/ngs-request-tracker\" rel=\"noopener noreferrer\">ngs-request-tracker (⭐2)</a> - A library for tracking, storing, and displaying statistics on all HTTP requests.</li>\n</ul>\n<h3><p>Internationalization / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/andrei-shpileuski/ngs-plural\" rel=\"noopener noreferrer\">ngs-plural (⭐1)</a> - A lightweight Angular library for handling pluralization in different languages using a pipe and a service. It simplifies the process of generating grammatically correct plural forms based on a numeric count and supports custom language rules.</li>\n</ul>\n<h3><p>Misc Components / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/andrei-shpileuski/ngs-json-utils\" rel=\"noopener noreferrer\">ngs-json-utils (⭐3)</a> - A lightweight utility library for Angular applications that provides easy-to-use functions for working with JSON objects. It includes methods for deep cloning, serialization, and deserialization of JSON data, designed specifically for Angular projects with TypeScript support.</li>\n</ul>\n",
      "date_published": "2024-12-25T18:43:12.000Z",
      "date_modified": "2024-12-25T18:43:12.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/coq-community/awesome-coq/",
      "title": "Awesome Coq",
      "_slug": "coq-community/awesome-coq/",
      "_filepath": "/content/coq-community/awesome-coq/README.md",
      "url": "https://www.trackawesomelist.com/coq-community/awesome-coq/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Resources / Books\n\n*   [Software Foundations](https://softwarefoundations.cis.upenn.edu) - Series of Coq-based textbooks on logic, functional programming, and foundations of programming languages, aimed at being accessible to beginners.\n    *   [Volume 1: Logical Foundations](https://softwarefoundations.cis.upenn.edu/lf-current/index.html) - Introduction to functional programming, basic concepts of logic, and computer-assisted theorem proving.\n    *   [Volume 2: Programming Language Foundations](https://softwarefoundations.cis.upenn.edu/plf-current/index.html) - Introduction to the theory of programming languages, including operational semantics, Hoare logic, and static type systems.\n    *   [Volume 3: Verified Functional Algorithms](https://softwarefoundations.cis.upenn.edu/vfa-current/index.html) - Demonstration of how a variety of fundamental data structures can be specified and verified.\n    *   [Volume 4: QuickChick](https://softwarefoundations.cis.upenn.edu/qc-current/index.html) - Introduction to tools for combining randomized property-based testing with formal specification and proof.\n    *   [Volume 5: Verifiable C](https://softwarefoundations.cis.upenn.edu/vc-current/index.html) - An extended tutorial on specifying and verifying C programs using the Verified Software Toolchain.\n    *   [Volume 6: Separation Logic Foundations](https://softwarefoundations.cis.upenn.edu/slf-current/index.html) - An introduction to separation logic and how to build program verification tools on top of it.\n*   [Computer Arithmetic and Formal Proofs](https://www.sciencedirect.com/book/9781785481123/computer-arithmetic-and-formal-proofs) - Book that describes how to formally specify and verify floating-point algorithms in Coq using the Flocq library.",
      "content_html": "<h3><p>Resources / Books</p>\n</h3><ul>\n<li><a href=\"https://softwarefoundations.cis.upenn.edu\" rel=\"noopener noreferrer\">Software Foundations</a> - Series of Coq-based textbooks on logic, functional programming, and foundations of programming languages, aimed at being accessible to beginners.<ul>\n<li><a href=\"https://softwarefoundations.cis.upenn.edu/lf-current/index.html\" rel=\"noopener noreferrer\">Volume 1: Logical Foundations</a> - Introduction to functional programming, basic concepts of logic, and computer-assisted theorem proving.</li>\n<li><a href=\"https://softwarefoundations.cis.upenn.edu/plf-current/index.html\" rel=\"noopener noreferrer\">Volume 2: Programming Language Foundations</a> - Introduction to the theory of programming languages, including operational semantics, Hoare logic, and static type systems.</li>\n<li><a href=\"https://softwarefoundations.cis.upenn.edu/vfa-current/index.html\" rel=\"noopener noreferrer\">Volume 3: Verified Functional Algorithms</a> - Demonstration of how a variety of fundamental data structures can be specified and verified.</li>\n<li><a href=\"https://softwarefoundations.cis.upenn.edu/qc-current/index.html\" rel=\"noopener noreferrer\">Volume 4: QuickChick</a> - Introduction to tools for combining randomized property-based testing with formal specification and proof.</li>\n<li><a href=\"https://softwarefoundations.cis.upenn.edu/vc-current/index.html\" rel=\"noopener noreferrer\">Volume 5: Verifiable C</a> - An extended tutorial on specifying and verifying C programs using the Verified Software Toolchain.</li>\n<li><a href=\"https://softwarefoundations.cis.upenn.edu/slf-current/index.html\" rel=\"noopener noreferrer\">Volume 6: Separation Logic Foundations</a> - An introduction to separation logic and how to build program verification tools on top of it.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://www.sciencedirect.com/book/9781785481123/computer-arithmetic-and-formal-proofs\" rel=\"noopener noreferrer\">Computer Arithmetic and Formal Proofs</a> - Book that describes how to formally specify and verify floating-point algorithms in Coq using the Flocq library.</li>\n</ul>\n",
      "date_published": "2024-12-25T16:25:01.000Z",
      "date_modified": "2024-12-25T17:52:31.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/unixorn/awesome-zsh-plugins/",
      "title": "Awesome Zsh Plugins",
      "_slug": "unixorn/awesome-zsh-plugins/",
      "_filepath": "/content/unixorn/awesome-zsh-plugins/README.md",
      "url": "https://www.trackawesomelist.com/unixorn/awesome-zsh-plugins/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Themes / [superconsole](https://github.com/alexchmykhalo/superconsole) - Windows-only\n\n*   [gn-z11 (⭐0)](https://github.com/xxidbr9/zsh_GN-z11-theme) - Includes decorators for `git` status and the last command's exit status.",
      "content_html": "<h3><p>Themes / <a href=\"https://github.com/alexchmykhalo/superconsole\" rel=\"noopener noreferrer\">superconsole</a> - Windows-only</p>\n</h3><ul>\n<li><a href=\"https://github.com/xxidbr9/zsh_GN-z11-theme\" rel=\"noopener noreferrer\">gn-z11 (⭐0)</a> - Includes decorators for <code>git</code> status and the last command's exit status.</li>\n</ul>\n",
      "date_published": "2024-12-25T14:45:06.000Z",
      "date_modified": "2024-12-25T14:45:06.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "title": "Awesome Agi Cocosci",
      "_slug": "YuzheSHI/awesome-agi-cocosci/",
      "_filepath": "/content/YuzheSHI/awesome-agi-cocosci/README.md",
      "url": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Communications / Pragmatics\n\n*   [Predicting Pragmatic Reasoning in Language Games](https://www.science.org/doi/abs/10.1126/science.1218633) - ***Science***, 2012. \\[[All Versions](https://scholar.google.com/scholar?cluster=15533081031935746054)]. \\[[Preprint](https://langcog.stanford.edu/papers_new/frank-2012-science.pdf)]. One of the most astonishing features of human language is its capacity to convey information efficiently in context. Many theories provide informal accounts of communicative inference, yet there have been few successes in making precise, quantitative predictions about pragmatic reasoning. This work examined judgments about simple referential communication games, modeling behavior in these games by assuming that speakers attempt to be informative and that listeners use Bayesian inference to recover speakers’ intended referents. The model provides a close, parameter-free fit to human judgments, suggesting that the use of information-theoretic tools to predict pragmatic reasoning may lead to more effective formal models of communication.",
      "content_html": "<h3><p>Communications / Pragmatics</p>\n</h3><ul>\n<li><a href=\"https://www.science.org/doi/abs/10.1126/science.1218633\" rel=\"noopener noreferrer\">Predicting Pragmatic Reasoning in Language Games</a> - <em><strong>Science</strong></em>, 2012. [<a href=\"https://scholar.google.com/scholar?cluster=15533081031935746054\" rel=\"noopener noreferrer\">All Versions</a>]. [<a href=\"https://langcog.stanford.edu/papers_new/frank-2012-science.pdf\" rel=\"noopener noreferrer\">Preprint</a>]. One of the most astonishing features of human language is its capacity to convey information efficiently in context. Many theories provide informal accounts of communicative inference, yet there have been few successes in making precise, quantitative predictions about pragmatic reasoning. This work examined judgments about simple referential communication games, modeling behavior in these games by assuming that speakers attempt to be informative and that listeners use Bayesian inference to recover speakers’ intended referents. The model provides a close, parameter-free fit to human judgments, suggesting that the use of information-theoretic tools to predict pragmatic reasoning may lead to more effective formal models of communication.</li>\n</ul>\n",
      "date_published": "2024-12-25T00:10:03.000Z",
      "date_modified": "2024-12-25T00:10:03.000Z"
    }
  ]
}
