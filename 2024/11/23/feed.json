{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Nov 23, 2024",
  "_site_title": "Track Awesome List",
  "description": "4 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Nov 23, 2024 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/PatrickJS/awesome-angular/",
      "title": "Awesome Angular",
      "_slug": "PatrickJS/awesome-angular/",
      "_filepath": "/content/PatrickJS/awesome-angular/README.md",
      "url": "https://www.trackawesomelist.com/PatrickJS/awesome-angular/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### UX Components / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [ngx-onboarding (⭐53)](https://github.com/rosen-group/ngx-onboarding) - This onboarding library enables you to integrate a tutorial seamlessly into your Angular application. This helps users to quickly and easily learn how to navigate and use your app, reducing the learning curve.",
      "content_html": "<h3><p>UX Components / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/rosen-group/ngx-onboarding\" rel=\"noopener noreferrer\">ngx-onboarding (⭐53)</a> - This onboarding library enables you to integrate a tutorial seamlessly into your Angular application. This helps users to quickly and easily learn how to navigate and use your app, reducing the learning curve.</li>\n</ul>\n",
      "date_published": "2024-11-23T21:00:01.000Z",
      "date_modified": "2024-11-23T21:00:01.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/unixorn/awesome-zsh-plugins/",
      "title": "Awesome Zsh Plugins",
      "_slug": "unixorn/awesome-zsh-plugins/",
      "_filepath": "/content/unixorn/awesome-zsh-plugins/README.md",
      "url": "https://www.trackawesomelist.com/unixorn/awesome-zsh-plugins/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Plugins / [superconsole](https://github.com/alexchmykhalo/superconsole) - Windows-only\n\n*   [autovenv (linnnus) (⭐7)](https://github.com/linnnus/autovenv) - Automatically activates Python virtual environments when entering their parent directory.\n*   [autovenv (snovra-dev) (⭐0)](https://github.com/snovra-dev/zsh-autovenv) - Automatically activates Python virtual environments when entering their parent directory.",
      "content_html": "<h3><p>Plugins / <a href=\"https://github.com/alexchmykhalo/superconsole\" rel=\"noopener noreferrer\">superconsole</a> - Windows-only</p>\n</h3><ul>\n<li><a href=\"https://github.com/linnnus/autovenv\" rel=\"noopener noreferrer\">autovenv (linnnus) (⭐7)</a> - Automatically activates Python virtual environments when entering their parent directory.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/snovra-dev/zsh-autovenv\" rel=\"noopener noreferrer\">autovenv (snovra-dev) (⭐0)</a> - Automatically activates Python virtual environments when entering their parent directory.</li>\n</ul>\n",
      "date_published": "2024-11-23T18:37:03.000Z",
      "date_modified": "2024-11-23T18:37:03.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/sindresorhus/awesome/",
      "title": "Awesome List",
      "_slug": "sindresorhus/awesome/",
      "_filepath": "/content/sindresorhus/awesome/README.md",
      "url": "https://www.trackawesomelist.com/sindresorhus/awesome/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Back-End Development\n\n*   [Reflex (⭐91)](https://github.com/reflex-dev/awesome-reflex#readme) - Python web framework for building both your frontend and backend with no JavaScript.",
      "content_html": "<h3><p>Back-End Development</p>\n</h3><ul>\n<li><a href=\"https://github.com/reflex-dev/awesome-reflex#readme\" rel=\"noopener noreferrer\">Reflex (⭐91)</a> - Python web framework for building both your frontend and backend with no JavaScript.</li>\n</ul>\n",
      "date_published": "2024-11-23T16:24:13.000Z",
      "date_modified": "2024-11-23T16:24:13.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "title": "Awesome Agi Cocosci",
      "_slug": "YuzheSHI/awesome-agi-cocosci/",
      "_filepath": "/content/YuzheSHI/awesome-agi-cocosci/README.md",
      "url": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Domain Specific Language / Cognitive Foundations\n\n*   [The Child as Hacker](https://www.cell.com/trends/cognitive-sciences/fulltext/S1364-6613\\(20\\)30174-1) - ***Trends in Cognitive Sciences***, 2020. \\[[All Versions](https://scholar.google.com/scholar?cluster=13128656954836679743)]. The scope of human learning and development poses a radical challenge for cognitive science. The authors propose that developmental theories can address this challenge by adopting perspectives from computer science. Many of our best models treat learning as analogous to computer programming because symbolic programs provide the most compelling account of sophisticated mental representations. The authors specifically propose that children’s learning is analogous to a particular style of programming called hacking, making code better along many dimensions through an open-ended set of goals and activities. By contrast to existing theories, which depend primarily on local search and simple metrics, this view highlights the many features of good mental representations and the multiple complementary processes children use to create them.",
      "content_html": "<h3><p>Domain Specific Language / Cognitive Foundations</p>\n</h3><ul>\n<li><a href=\"https://www.cell.com/trends/cognitive-sciences/fulltext/S1364-6613(20)30174-1\" rel=\"noopener noreferrer\">The Child as Hacker</a> - <em><strong>Trends in Cognitive Sciences</strong></em>, 2020. [<a href=\"https://scholar.google.com/scholar?cluster=13128656954836679743\" rel=\"noopener noreferrer\">All Versions</a>]. The scope of human learning and development poses a radical challenge for cognitive science. The authors propose that developmental theories can address this challenge by adopting perspectives from computer science. Many of our best models treat learning as analogous to computer programming because symbolic programs provide the most compelling account of sophisticated mental representations. The authors specifically propose that children’s learning is analogous to a particular style of programming called hacking, making code better along many dimensions through an open-ended set of goals and activities. By contrast to existing theories, which depend primarily on local search and simple metrics, this view highlights the many features of good mental representations and the multiple complementary processes children use to create them.</li>\n</ul>\n",
      "date_published": "2024-11-23T08:29:21.000Z",
      "date_modified": "2024-11-23T08:29:21.000Z"
    }
  ]
}
