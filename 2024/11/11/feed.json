{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Nov 11, 2024",
  "_site_title": "Track Awesome List",
  "description": "7 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Nov 11, 2024 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/packing-box/awesome-executable-packing/",
      "title": "Awesome Executable Packing",
      "_slug": "packing-box/awesome-executable-packing/",
      "_filepath": "/content/packing-box/awesome-executable-packing/README.md",
      "url": "https://www.trackawesomelist.com/packing-box/awesome-executable-packing/",
      "summary": "6 awesome projects updated",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :green\\_book: [The art of memory forensics: Detecting malware and threats in Windows, Linux, and mac memory](https://www.oreilly.com/library/view/the-art-of/9781118824993)\n*   :book: [Cluster analysis](https://en.wikipedia.org/w/index.php?title=Cluster_analysis\\&oldid=1148034400)\n*   :earth\\_americas: [Clustering algorithms](https://developers.google.com/machine-learning/clustering/clustering-algorithms)\n*   :newspaper: [A complexity measure](https://ieeexplore.ieee.org/document/1702388/)\n*   :newspaper: [Cyclomatic complexity density and software maintenance productivity](https://ieeexplore.ieee.org/document/106988)\n*   :newspaper: [Do we need hundreds of classiﬁers to solve real world classiﬁcation problems?](https://jmlr.org/papers/v15/delgado14a.html)\n*   :newspaper: [Feature selection: A data perspective](https://dl.acm.org/doi/10.1145/3136625)\n*   :newspaper: [How to use t-SNE effectively](https://distill.pub/2016/misread-tsne)\n*   :book: [Machine learning](https://en.wikipedia.org/w/index.php?title=Machine_learning\\&oldid=1148293340)\n*   :newspaper: [The matthews correlation coefficient (MCC) should replace the ROC AUC as the standard metric for assessing binary classification](https://doi.org/10.1186/s13040-023-00322-4)\n*   :clipboard: [Microsoft portable executable and common object file format specification](https://www.skyfree.org/linux/references/coff.pdf)\n*   :bookmark: [On the worst-case complexity of timsort](https://arxiv.org/abs/1805.08612)\n*   :page\\_facing\\_up: [Packers](https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/corkami/packers.pdf)\n*   :bar\\_chart: [Packing-box: Breaking detectors & visualizing packing](https://www.blackhat.com/eu-23/arsenal/schedule/index.html#packing-box-breaking-detectors--visualizing-packing-35678)\n*   :bar\\_chart: [Packing-box: Playing with executable packing](https://www.blackhat.com/eu-22/arsenal/schedule/index.html#packing-box-playing-with-executable-packing-29054)\n*   :green\\_book: [Pattern recognition and machine learning (Information science and statistics)](https://dl.acm.org/doi/10.5555/1162264)\n*   :earth\\_americas: [PE format - Win32 apps](https://learn.microsoft.com/en-us/windows/win32/debug/pe-format)\n*   :green\\_book: [Practical malware analysis: The hands-on guide to dissecting malicious software](https://www.oreilly.com/library/view/practical-malware-analysis/9781593272906)\n*   :pushpin: [ProtectMyTooling - Don't detect tools, detect techniques](https://mgeeky.tech/protectmytooling)\n*   :bar\\_chart: [Reverse engineering malware: Binary obfuscation and protection](https://www.cse.tkk.fi/fi/opinnot/T-110.6220/2014_Reverse_Engineering_Malware_AND_Mobile_Platform_Security_AND_Software_Security/luennot-files/Binary%20Obfuscation%20and%20Protection.pdf)\n*   :bookmark: [A survey of dimensionality reduction techniques](https://arxiv.org/abs/1403.2877)\n*   :green\\_book: [The \"Ultimate\" anti-debugging reference](https://pferrie.epizy.com/papers/antidebug.pdf)\n*   :earth\\_americas: [x86 disassembly/Windows executable files](https://en.wikibooks.org/wiki/X86_Disassembly/Windows_Executable_Files)\n\n### :books: Literature / Scientific Research\n\n*   :mortar\\_board: [Advanced feature engineering for static detection of executable packing](https://researchportal.rma.ac.be/en/publications?1) (June 2024)\n*   :newspaper: [Adversarial EXEmples: A survey and experimental evaluation of practical attacks on machine learning for windows malware detection](https://dl.acm.org/doi/10.1145/3473039) (September 2021)  :star:\n*   :mortar\\_board: [Adversarial learning on static detection techniques for executable packing](https://dial.uclouvain.be/memoire/ucl/object/thesis:40178) (June 2023)  :star:\n*   :mortar\\_board: [Adversarial tool for breaking static detection of executable packing](https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A48691) (August 2024)  :star:\n*   :mortar\\_board: [An application of machine learning to analysis of packed mac malware](https://scholar.dsu.edu/theses/381) (May 2022)  :star:\n*   :page\\_facing\\_up: [Assessing the impact of packing on machine learning-based malware detection and classification systems](https://arxiv.org/abs/2410.24017) (October 2024)  :star:\n*   :mortar\\_board: [Automated static analysis of virtual-machine packers](https://core.ac.uk/outputs/16750878) (August 2013)\n*   :notebook: [Automatic static unpacking of malware binaries](https://ieeexplore.ieee.org/document/5328814) (October 2009)\n*   :notebook: [Classifying packed programs as malicious software detected](https://www.semanticscholar.org/paper/Classifying-Packed-Programs-as-Malicious-Software-Osaghae/676f38819a0ed3028acce36f4f11b0c77e4cc0ae) (December 2016)\n*   :notebook: [Collective classification for packed executable identification](https://dl.acm.org/doi/proceedings/10.1145/2030376) (September 2011)\n*   :bookmark: [A compact multi-step framework for packing identification in portable executable files for malware analysis](https://www.researchsquare.com/article/rs-3974855/v1) (February 2024)\n*   :newspaper: [Conceptual and empirical comparison of dimensionality reduction algorithms (PCA, KPCA, LDA, MDS, SVD, LLE, ISOMAP, LE, ICA, t-SNE)](https://linkinghub.elsevier.com/retrieve/pii/S1574013721000186) (May 2021)\n*   :newspaper: [Control flow-based opcode behavior analysis for malware detection](https://www.sciencedirect.com/science/article/pii/S0167404814000558) (July 2014)\n*   :page\\_facing\\_up: [Decoding the secrets of machine learning in malware classification: A deep dive into datasets, feature extraction, and model performance](https://arxiv.org/abs/2307.14657) (July 2023)  :star:\n*   :newspaper: [Detecting packed executables based on raw binary data](https://vision.ece.ucsb.edu/sites/vision.ece.ucsb.edu/files/publications/packed-unpacked-tech-report.pdf) (June 2010)\n*   :newspaper: [Detecting unknown malicious code by applying classification techniques on opcode patterns](https://doi.org/10.1186/2190-8532-1-1) (February 2012)\n*   :notebook: [Detection of metamorphic malware packers using multilayered LSTM networks](https://link.springer.com/10.1007/978-3-030-61078-4_3) (November 2020)  :star:\n*   :newspaper: [DroidPDF: The obfuscation resilient packer detection framework for Android Apps](https://ieeexplore.ieee.org/document/9144572) (July 2020)\n*   :notebook: [Dynamic classification of packing algorithms for inspecting executables using entropy analysis](https://ieeexplore.ieee.org/document/6703681) (October 2013)\n*   :notebook: [A dynamic heuristic method for detecting packed malware using naive bayes](https://ieeexplore.ieee.org/document/8959765) (November 2019)  :star:\n*   :newspaper: [Effective, efficient, and robust packing detection and classification](http://www.sciencedirect.com/science/article/pii/S0167404818311040) (May 2019)  :star: :star: :star:\n*   :bookmark: [EMBER: An open dataset for training static PE malware machine learning models](https://arxiv.org/abs/1804.04637) (April 2018)  :star:\n*   :notebook: [Entropy analysis to classify unknown packing algorithms for malware detection](https://link.springer.com/article/10.1007/s10207-016-0330-4) (May 2016)  :star:\n*   :newspaper: [ERMDS: A obfuscation dataset for evaluating robustness of learning-based malware detection system](https://www.scopus.com/inward/record.uri?eid=2-s2.0-85172316495\\&doi=10.1016%2fj.tbench.2023.100106\\&partnerID=40\\&md5=74252d50feb21959b6563650c1c977c2) (May 2023)\n*   :notebook: [Evading packing detection: Breaking heuristic-based static detectors](https://link.springer.com/chapter/10.1007/978-3-031-64171-8_9) (July 2024)  :star:\n*   :notebook: [Experimental comparison of machine learning models in malware packing detection](https://ieeexplore.ieee.org/document/9237007) (September 2020)  :star:\n*   :newspaper: [Fast and robust fixed-point algorithms for independent component analysis](https://ieeexplore.ieee.org/document/761722) (May 1999)\n*   :notebook: [Fileprints: Identifying file types by n-gram analysis](https://ieeexplore.ieee.org/document/1495935) (June 2005)\n*   :bookmark: [Generating adversarial malware examples for black-box attacks based on GAN](http://arxiv.org/abs/1702.05983) (February 2020)\n*   :newspaper: [Generic packing detection using several complexity analysis for accurate malware detection](https://www.researchgate.net/publication/332594129_Generic_Packing_Detection_using_Several_Complexity_Analysis_for_Accurate_Malware_Detection?channel=doi\\&linkId=5cbf828b299bf120977ac78a\\&showFulltext=true) (January 2014)\n*   :bookmark: [Generic unpacking of self-modifying, aggressive, packed binary programs](https://arxiv.org/abs/0905.4581) (May 2009)\n*   :notebook: [Generic unpacking using entropy analysis](https://ieeexplore.ieee.org/document/5665789) (October 2010)\n*   :newspaper: [A heuristics-based static analysis approach for detecting packed PE binaries](http://article.nadiapub.com/IJSIA/vol7_no5/24.pdf) (October 2013)\n*   :newspaper: [Identifying malware packers through multilayer feature engineering in static analysis](https://www.mdpi.com/2078-2489/15/2/102) (February 2024)  :star:\n*   :newspaper: [Improving malware detection using multi-view ensemble learning](https://onlinelibrary.wiley.com/doi/abs/10.1002/sec.1600) (August 2016)\n*   :scroll: [Incremental clustering of malware packers using features based on transformed CFG](https://hal.science/hal-03940881) (November 2022)\n*   :bookmark: [Intriguing properties of adversarial ML attacks in the problem space](https://arxiv.org/abs/1911.02142) (March 2020)\n*   :bookmark: [Intriguing properties of neural networks](https://arxiv.org/abs/1312.6199) (February 2014)\n*   :bookmark: [Learning to evade static PE machine learning malware models via reinforcement learning](https://arxiv.org/abs/1801.08917) (January 2018)\n*   :bookmark: [MAB-Malware: A reinforcement learning framework for attacking static malware classifiers](https://arxiv.org/abs/2003.03100) (April 2021)\n*   :mortar\\_board: [Malware detection through opcode sequence analysis using machine learning](https://api.semanticscholar.org/CorpusID:70282638) (June 2015)\n*   :notebook: [Malware family classification method based on static feature extraction](https://ieeexplore.ieee.org/document/8322598) (December 2017)\n*   :newspaper: [Malwise - An effective and efficient classification system for packed and polymorphic malware](https://ieeexplore.ieee.org/document/6171162) (June 2013)\n*   :notebook: [MLxPack: Investigating the effects of packers on ML-based malware detection systems using static and dynamic traits](https://dl.acm.org/doi/10.1145/3494108.3522768) (May 2022)  :star:\n*   :bookmark: [Novel feature extraction, selection and fusion for effective malware family classification](https://arxiv.org/abs/1511.04317) (March 2016)\n*   :newspaper: [On deceiving malware classification with section injection](https://arxiv.org/abs/2208.06092) (August 2022)\n*   :bookmark: [On evaluating adversarial robustness](https://arxiv.org/abs/1902.06705) (February 2019)\n*   :newspaper: [Opcode sequences as representation of executables for data-mining-based unknown malware detection](https://linkinghub.elsevier.com/retrieve/pii/S0020025511004336) (May 2013)\n*   :newspaper: [Original entry point detection based on graph similarity](https://link.springer.com/chapter/10.1007/978-3-031-57537-2_22) (April 2024)\n*   :newspaper: [Packer classification based on association rule mining](https://www.sciencedirect.com/science/article/pii/S1568494622005245) (July 2022)  :star:\n*   :notebook: [Packer identification using byte plot and Markov plot](https://link.springer.com/article/10.1007/s11416-015-0249-8) (September 2015)\n*   :notebook: [Pattern recognition techniques for the classification of malware packers](https://link.springer.com/chapter/10.1007/978-3-642-14081-5_23) (July 2010)\n*   :notebook: [PolyUnpack: Automating the hidden-code extraction of unpack-executing malware](https://ieeexplore.ieee.org/document/4041175) (December 2006)  :star2: :star2: :star2:\n*   :newspaper: [Potent and stealthy control flow obfuscation by stack based self-modifying code](http://ieeexplore.ieee.org/document/6473885/) (April 2013)\n*   :newspaper: [Practical attacks on machine learning: A case study on adversarial windows malware](https://arxiv.org/abs/2207.05548) (September 2022)\n*   :notebook: [RAMBO: Run-Time packer analysis with multiple branch observation](https://link.springer.com/chapter/10.1007/978-3-319-40667-1_10) (July 2016)  :star:\n*   :notebook: [Renovo: A hidden code extractor for packed executables](https://dl.acm.org/doi/10.1145/1314389.1314399) (November 2007)  :star: :star:\n*   :newspaper: [Revealing packed malware](https://ieeexplore.ieee.org/document/4639028) (September 2008)\n*   :notebook: [SE-PAC: A self-evolving packer classifier against rapid packers evolution](https://dl.acm.org/doi/10.1145/3422337.3447848) (April 2021)  :star:\n*   :newspaper: [Sequential opcode embedding-based malware detection method](https://www.sciencedirect.com/science/article/pii/S0045790622000210) (March 2022)\n*   :notebook: [SoK: (state of) the art of war: Offensive techniques in binary analysis](https://ieeexplore.ieee.org/document/7546500) (May 2016)\n*   :notebook: [SoK: Deep packer inspection: A longitudinal study of the complexity of run-time packers](https://ieeexplore.ieee.org/document/7163053) (May 2015)  :star: :star:\n*   :notebook: [Static analysis method on portable executable files for REMNUX based malware identification](https://ieeexplore.ieee.org/document/8923331) (October 2019)\n*   :mortar\\_board: [Static features exploration for executable packing with unsupervised learning](https://www.ecam.be?1) (June 2023)\n*   :notebook: [A static, packer-agnostic filter to detect similar malware samples](https://link.springer.com/chapter/10.1007/978-3-642-37300-8_6) (July 2012)\n*   :bookmark: [A survey on adversarial attacks for malware analysis](https://arxiv.org/abs/2111.08223) (January 2022)\n*   :notebook: [Symbolic deobfuscation: From virtualized code back to the original](https://link.springer.com/chapter/10.1007/978-3-319-93411-2_17) (July 2018)\n*   :notebook: [Symbolic execution of obfuscated code](https://dl.acm.org/doi/10.1145/2810103.2813663) (October 2015)  :star:\n*   :bookmark: [Technical report on the cleverhans v2.1.0 adversarial examples library](https://arxiv.org/abs/1610.00768) (June 2018)\n*   :bookmark: [Transcending transcend: Revisiting malware classification in the presence of concept drift](https://arxiv.org/abs/2010.03856) (December 2021)\n*   :notebook: [Understanding linux malware](https://ieeexplore.ieee.org/document/8418602) (May 2018)  :star:\n*   :notebook: [Unknown malcode detection using OPCODE representation](http://link.springer.com/10.1007/978-3-540-89900-6_21) (December 2008)\n*   :mortar\\_board: [Unsupervised clustering machine learning on packed executable](https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A35687) (June 2022)\n*   :newspaper: [Using entropy analysis to find encrypted and packed malware](https://ieeexplore.ieee.org/document/4140989) (March 2007)\n*   :notebook: [When malware is packin' heat; limits of machine learning classifiers based on static analysis features](https://www.ndss-symposium.org/wp-content/uploads/2020/02/24310.pdf) (January 2020)  :star: :star:\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [VX Underground](https://vx-underground.org/Samples) - PL-CERT based open source MWDB python application holding a malware database containing every APT sample from 2010 and over 7.5M maliciousbinaries.\n\n### :package: Packers / After 2010\n\n*   [Hyperion (⭐56)](https://github.com/nullsecuritynet/tools/tree/main/binary/hyperion)\n*   [PEzor (⭐2k)](https://github.com/phra/PEzor) - Open-Source Shellcode & PE Packer.\n*   [ProtectMyTooling (⭐977)](https://github.com/mgeeky/ProtectMyTooling) - Multi-Packer wrapper letting us daisy-chain various packers, obfuscators and other Red Team oriented weaponry.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [x86.Virtualizer](http://rewolf.pl) - x86 Virtualizer.\n\n### :wrench: Tools / Before 2000\n\n*   [Gym-Malware (⭐624)](https://github.com/endgameinc/gym-malware) - This is a malware manipulation environment for OpenAI's gym.\n*   [PEPack (⭐733)](https://github.com/mentebinaria/readpe) - PE file packer detection tool, part of the Unix package \"pev\".\n*   [REMINDer (⭐3)](https://github.com/packing-box/reminder) - Packing detection tool based on the entropy value of the entry point section and the WRITE attribute.\n*   [SecML Malware (⭐229)](https://github.com/pralab/secml_malware) - Create adversarial attacks against machine learning Windows malware detectors.",
      "content_html": "<h3><p>📚 Literature / Documentation</p>\n</h3><ul>\n<li>📗 <a href=\"https://www.oreilly.com/library/view/the-art-of/9781118824993\" rel=\"noopener noreferrer\">The art of memory forensics: Detecting malware and threats in Windows, Linux, and mac memory</a></li>\n</ul>\n<ul>\n<li>📖 <a href=\"https://en.wikipedia.org/w/index.php?title=Cluster_analysis&amp;oldid=1148034400\" rel=\"noopener noreferrer\">Cluster analysis</a></li>\n</ul>\n<ul>\n<li>🌎 <a href=\"https://developers.google.com/machine-learning/clustering/clustering-algorithms\" rel=\"noopener noreferrer\">Clustering algorithms</a></li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://ieeexplore.ieee.org/document/1702388/\" rel=\"noopener noreferrer\">A complexity measure</a></li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://ieeexplore.ieee.org/document/106988\" rel=\"noopener noreferrer\">Cyclomatic complexity density and software maintenance productivity</a></li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://jmlr.org/papers/v15/delgado14a.html\" rel=\"noopener noreferrer\">Do we need hundreds of classiﬁers to solve real world classiﬁcation problems?</a></li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://dl.acm.org/doi/10.1145/3136625\" rel=\"noopener noreferrer\">Feature selection: A data perspective</a></li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://distill.pub/2016/misread-tsne\" rel=\"noopener noreferrer\">How to use t-SNE effectively</a></li>\n</ul>\n<ul>\n<li>📖 <a href=\"https://en.wikipedia.org/w/index.php?title=Machine_learning&amp;oldid=1148293340\" rel=\"noopener noreferrer\">Machine learning</a></li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://doi.org/10.1186/s13040-023-00322-4\" rel=\"noopener noreferrer\">The matthews correlation coefficient (MCC) should replace the ROC AUC as the standard metric for assessing binary classification</a></li>\n</ul>\n<ul>\n<li>📋 <a href=\"https://www.skyfree.org/linux/references/coff.pdf\" rel=\"noopener noreferrer\">Microsoft portable executable and common object file format specification</a></li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/1805.08612\" rel=\"noopener noreferrer\">On the worst-case complexity of timsort</a></li>\n</ul>\n<ul>\n<li>📄 <a href=\"https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/corkami/packers.pdf\" rel=\"noopener noreferrer\">Packers</a></li>\n</ul>\n<ul>\n<li>📊 <a href=\"https://www.blackhat.com/eu-23/arsenal/schedule/index.html#packing-box-breaking-detectors--visualizing-packing-35678\" rel=\"noopener noreferrer\">Packing-box: Breaking detectors &amp; visualizing packing</a></li>\n</ul>\n<ul>\n<li>📊 <a href=\"https://www.blackhat.com/eu-22/arsenal/schedule/index.html#packing-box-playing-with-executable-packing-29054\" rel=\"noopener noreferrer\">Packing-box: Playing with executable packing</a></li>\n</ul>\n<ul>\n<li>📗 <a href=\"https://dl.acm.org/doi/10.5555/1162264\" rel=\"noopener noreferrer\">Pattern recognition and machine learning (Information science and statistics)</a></li>\n</ul>\n<ul>\n<li>🌎 <a href=\"https://learn.microsoft.com/en-us/windows/win32/debug/pe-format\" rel=\"noopener noreferrer\">PE format - Win32 apps</a></li>\n</ul>\n<ul>\n<li>📗 <a href=\"https://www.oreilly.com/library/view/practical-malware-analysis/9781593272906\" rel=\"noopener noreferrer\">Practical malware analysis: The hands-on guide to dissecting malicious software</a></li>\n</ul>\n<ul>\n<li>📌 <a href=\"https://mgeeky.tech/protectmytooling\" rel=\"noopener noreferrer\">ProtectMyTooling - Don't detect tools, detect techniques</a></li>\n</ul>\n<ul>\n<li>📊 <a href=\"https://www.cse.tkk.fi/fi/opinnot/T-110.6220/2014_Reverse_Engineering_Malware_AND_Mobile_Platform_Security_AND_Software_Security/luennot-files/Binary%20Obfuscation%20and%20Protection.pdf\" rel=\"noopener noreferrer\">Reverse engineering malware: Binary obfuscation and protection</a></li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/1403.2877\" rel=\"noopener noreferrer\">A survey of dimensionality reduction techniques</a></li>\n</ul>\n<ul>\n<li>📗 <a href=\"https://pferrie.epizy.com/papers/antidebug.pdf\" rel=\"noopener noreferrer\">The \"Ultimate\" anti-debugging reference</a></li>\n</ul>\n<ul>\n<li>🌎 <a href=\"https://en.wikibooks.org/wiki/X86_Disassembly/Windows_Executable_Files\" rel=\"noopener noreferrer\">x86 disassembly/Windows executable files</a></li>\n</ul>\n<h3><p>📚 Literature / Scientific Research</p>\n</h3><ul>\n<li>🎓 <a href=\"https://researchportal.rma.ac.be/en/publications?1\" rel=\"noopener noreferrer\">Advanced feature engineering for static detection of executable packing</a> (June 2024)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://dl.acm.org/doi/10.1145/3473039\" rel=\"noopener noreferrer\">Adversarial EXEmples: A survey and experimental evaluation of practical attacks on machine learning for windows malware detection</a> (September 2021)  ⭐</li>\n</ul>\n<ul>\n<li>🎓 <a href=\"https://dial.uclouvain.be/memoire/ucl/object/thesis:40178\" rel=\"noopener noreferrer\">Adversarial learning on static detection techniques for executable packing</a> (June 2023)  ⭐</li>\n</ul>\n<ul>\n<li>🎓 <a href=\"https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A48691\" rel=\"noopener noreferrer\">Adversarial tool for breaking static detection of executable packing</a> (August 2024)  ⭐</li>\n</ul>\n<ul>\n<li>🎓 <a href=\"https://scholar.dsu.edu/theses/381\" rel=\"noopener noreferrer\">An application of machine learning to analysis of packed mac malware</a> (May 2022)  ⭐</li>\n</ul>\n<ul>\n<li>📄 <a href=\"https://arxiv.org/abs/2410.24017\" rel=\"noopener noreferrer\">Assessing the impact of packing on machine learning-based malware detection and classification systems</a> (October 2024)  ⭐</li>\n</ul>\n<ul>\n<li>🎓 <a href=\"https://core.ac.uk/outputs/16750878\" rel=\"noopener noreferrer\">Automated static analysis of virtual-machine packers</a> (August 2013)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/5328814\" rel=\"noopener noreferrer\">Automatic static unpacking of malware binaries</a> (October 2009)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://www.semanticscholar.org/paper/Classifying-Packed-Programs-as-Malicious-Software-Osaghae/676f38819a0ed3028acce36f4f11b0c77e4cc0ae\" rel=\"noopener noreferrer\">Classifying packed programs as malicious software detected</a> (December 2016)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/proceedings/10.1145/2030376\" rel=\"noopener noreferrer\">Collective classification for packed executable identification</a> (September 2011)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://www.researchsquare.com/article/rs-3974855/v1\" rel=\"noopener noreferrer\">A compact multi-step framework for packing identification in portable executable files for malware analysis</a> (February 2024)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://linkinghub.elsevier.com/retrieve/pii/S1574013721000186\" rel=\"noopener noreferrer\">Conceptual and empirical comparison of dimensionality reduction algorithms (PCA, KPCA, LDA, MDS, SVD, LLE, ISOMAP, LE, ICA, t-SNE)</a> (May 2021)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.sciencedirect.com/science/article/pii/S0167404814000558\" rel=\"noopener noreferrer\">Control flow-based opcode behavior analysis for malware detection</a> (July 2014)</li>\n</ul>\n<ul>\n<li>📄 <a href=\"https://arxiv.org/abs/2307.14657\" rel=\"noopener noreferrer\">Decoding the secrets of machine learning in malware classification: A deep dive into datasets, feature extraction, and model performance</a> (July 2023)  ⭐</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://vision.ece.ucsb.edu/sites/vision.ece.ucsb.edu/files/publications/packed-unpacked-tech-report.pdf\" rel=\"noopener noreferrer\">Detecting packed executables based on raw binary data</a> (June 2010)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://doi.org/10.1186/2190-8532-1-1\" rel=\"noopener noreferrer\">Detecting unknown malicious code by applying classification techniques on opcode patterns</a> (February 2012)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://link.springer.com/10.1007/978-3-030-61078-4_3\" rel=\"noopener noreferrer\">Detection of metamorphic malware packers using multilayered LSTM networks</a> (November 2020)  ⭐</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://ieeexplore.ieee.org/document/9144572\" rel=\"noopener noreferrer\">DroidPDF: The obfuscation resilient packer detection framework for Android Apps</a> (July 2020)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/6703681\" rel=\"noopener noreferrer\">Dynamic classification of packing algorithms for inspecting executables using entropy analysis</a> (October 2013)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/8959765\" rel=\"noopener noreferrer\">A dynamic heuristic method for detecting packed malware using naive bayes</a> (November 2019)  ⭐</li>\n</ul>\n<ul>\n<li>📰 <a href=\"http://www.sciencedirect.com/science/article/pii/S0167404818311040\" rel=\"noopener noreferrer\">Effective, efficient, and robust packing detection and classification</a> (May 2019)  ⭐ ⭐ ⭐</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/1804.04637\" rel=\"noopener noreferrer\">EMBER: An open dataset for training static PE malware machine learning models</a> (April 2018)  ⭐</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://link.springer.com/article/10.1007/s10207-016-0330-4\" rel=\"noopener noreferrer\">Entropy analysis to classify unknown packing algorithms for malware detection</a> (May 2016)  ⭐</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85172316495&amp;doi=10.1016%2fj.tbench.2023.100106&amp;partnerID=40&amp;md5=74252d50feb21959b6563650c1c977c2\" rel=\"noopener noreferrer\">ERMDS: A obfuscation dataset for evaluating robustness of learning-based malware detection system</a> (May 2023)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-64171-8_9\" rel=\"noopener noreferrer\">Evading packing detection: Breaking heuristic-based static detectors</a> (July 2024)  ⭐</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/9237007\" rel=\"noopener noreferrer\">Experimental comparison of machine learning models in malware packing detection</a> (September 2020)  ⭐</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://ieeexplore.ieee.org/document/761722\" rel=\"noopener noreferrer\">Fast and robust fixed-point algorithms for independent component analysis</a> (May 1999)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/1495935\" rel=\"noopener noreferrer\">Fileprints: Identifying file types by n-gram analysis</a> (June 2005)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"http://arxiv.org/abs/1702.05983\" rel=\"noopener noreferrer\">Generating adversarial malware examples for black-box attacks based on GAN</a> (February 2020)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.researchgate.net/publication/332594129_Generic_Packing_Detection_using_Several_Complexity_Analysis_for_Accurate_Malware_Detection?channel=doi&amp;linkId=5cbf828b299bf120977ac78a&amp;showFulltext=true\" rel=\"noopener noreferrer\">Generic packing detection using several complexity analysis for accurate malware detection</a> (January 2014)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/0905.4581\" rel=\"noopener noreferrer\">Generic unpacking of self-modifying, aggressive, packed binary programs</a> (May 2009)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/5665789\" rel=\"noopener noreferrer\">Generic unpacking using entropy analysis</a> (October 2010)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"http://article.nadiapub.com/IJSIA/vol7_no5/24.pdf\" rel=\"noopener noreferrer\">A heuristics-based static analysis approach for detecting packed PE binaries</a> (October 2013)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.mdpi.com/2078-2489/15/2/102\" rel=\"noopener noreferrer\">Identifying malware packers through multilayer feature engineering in static analysis</a> (February 2024)  ⭐</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://onlinelibrary.wiley.com/doi/abs/10.1002/sec.1600\" rel=\"noopener noreferrer\">Improving malware detection using multi-view ensemble learning</a> (August 2016)</li>\n</ul>\n<ul>\n<li>📜 <a href=\"https://hal.science/hal-03940881\" rel=\"noopener noreferrer\">Incremental clustering of malware packers using features based on transformed CFG</a> (November 2022)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/1911.02142\" rel=\"noopener noreferrer\">Intriguing properties of adversarial ML attacks in the problem space</a> (March 2020)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/1312.6199\" rel=\"noopener noreferrer\">Intriguing properties of neural networks</a> (February 2014)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/1801.08917\" rel=\"noopener noreferrer\">Learning to evade static PE machine learning malware models via reinforcement learning</a> (January 2018)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/2003.03100\" rel=\"noopener noreferrer\">MAB-Malware: A reinforcement learning framework for attacking static malware classifiers</a> (April 2021)</li>\n</ul>\n<ul>\n<li>🎓 <a href=\"https://api.semanticscholar.org/CorpusID:70282638\" rel=\"noopener noreferrer\">Malware detection through opcode sequence analysis using machine learning</a> (June 2015)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/8322598\" rel=\"noopener noreferrer\">Malware family classification method based on static feature extraction</a> (December 2017)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://ieeexplore.ieee.org/document/6171162\" rel=\"noopener noreferrer\">Malwise - An effective and efficient classification system for packed and polymorphic malware</a> (June 2013)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/10.1145/3494108.3522768\" rel=\"noopener noreferrer\">MLxPack: Investigating the effects of packers on ML-based malware detection systems using static and dynamic traits</a> (May 2022)  ⭐</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/1511.04317\" rel=\"noopener noreferrer\">Novel feature extraction, selection and fusion for effective malware family classification</a> (March 2016)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://arxiv.org/abs/2208.06092\" rel=\"noopener noreferrer\">On deceiving malware classification with section injection</a> (August 2022)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/1902.06705\" rel=\"noopener noreferrer\">On evaluating adversarial robustness</a> (February 2019)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://linkinghub.elsevier.com/retrieve/pii/S0020025511004336\" rel=\"noopener noreferrer\">Opcode sequences as representation of executables for data-mining-based unknown malware detection</a> (May 2013)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-57537-2_22\" rel=\"noopener noreferrer\">Original entry point detection based on graph similarity</a> (April 2024)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.sciencedirect.com/science/article/pii/S1568494622005245\" rel=\"noopener noreferrer\">Packer classification based on association rule mining</a> (July 2022)  ⭐</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://link.springer.com/article/10.1007/s11416-015-0249-8\" rel=\"noopener noreferrer\">Packer identification using byte plot and Markov plot</a> (September 2015)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-14081-5_23\" rel=\"noopener noreferrer\">Pattern recognition techniques for the classification of malware packers</a> (July 2010)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/4041175\" rel=\"noopener noreferrer\">PolyUnpack: Automating the hidden-code extraction of unpack-executing malware</a> (December 2006)  🌟 🌟 🌟</li>\n</ul>\n<ul>\n<li>📰 <a href=\"http://ieeexplore.ieee.org/document/6473885/\" rel=\"noopener noreferrer\">Potent and stealthy control flow obfuscation by stack based self-modifying code</a> (April 2013)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://arxiv.org/abs/2207.05548\" rel=\"noopener noreferrer\">Practical attacks on machine learning: A case study on adversarial windows malware</a> (September 2022)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://link.springer.com/chapter/10.1007/978-3-319-40667-1_10\" rel=\"noopener noreferrer\">RAMBO: Run-Time packer analysis with multiple branch observation</a> (July 2016)  ⭐</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/10.1145/1314389.1314399\" rel=\"noopener noreferrer\">Renovo: A hidden code extractor for packed executables</a> (November 2007)  ⭐ ⭐</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://ieeexplore.ieee.org/document/4639028\" rel=\"noopener noreferrer\">Revealing packed malware</a> (September 2008)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/10.1145/3422337.3447848\" rel=\"noopener noreferrer\">SE-PAC: A self-evolving packer classifier against rapid packers evolution</a> (April 2021)  ⭐</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.sciencedirect.com/science/article/pii/S0045790622000210\" rel=\"noopener noreferrer\">Sequential opcode embedding-based malware detection method</a> (March 2022)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/7546500\" rel=\"noopener noreferrer\">SoK: (state of) the art of war: Offensive techniques in binary analysis</a> (May 2016)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/7163053\" rel=\"noopener noreferrer\">SoK: Deep packer inspection: A longitudinal study of the complexity of run-time packers</a> (May 2015)  ⭐ ⭐</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/8923331\" rel=\"noopener noreferrer\">Static analysis method on portable executable files for REMNUX based malware identification</a> (October 2019)</li>\n</ul>\n<ul>\n<li>🎓 <a href=\"https://www.ecam.be?1\" rel=\"noopener noreferrer\">Static features exploration for executable packing with unsupervised learning</a> (June 2023)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-37300-8_6\" rel=\"noopener noreferrer\">A static, packer-agnostic filter to detect similar malware samples</a> (July 2012)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/2111.08223\" rel=\"noopener noreferrer\">A survey on adversarial attacks for malware analysis</a> (January 2022)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://link.springer.com/chapter/10.1007/978-3-319-93411-2_17\" rel=\"noopener noreferrer\">Symbolic deobfuscation: From virtualized code back to the original</a> (July 2018)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/10.1145/2810103.2813663\" rel=\"noopener noreferrer\">Symbolic execution of obfuscated code</a> (October 2015)  ⭐</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/1610.00768\" rel=\"noopener noreferrer\">Technical report on the cleverhans v2.1.0 adversarial examples library</a> (June 2018)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/2010.03856\" rel=\"noopener noreferrer\">Transcending transcend: Revisiting malware classification in the presence of concept drift</a> (December 2021)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/8418602\" rel=\"noopener noreferrer\">Understanding linux malware</a> (May 2018)  ⭐</li>\n</ul>\n<ul>\n<li>📓 <a href=\"http://link.springer.com/10.1007/978-3-540-89900-6_21\" rel=\"noopener noreferrer\">Unknown malcode detection using OPCODE representation</a> (December 2008)</li>\n</ul>\n<ul>\n<li>🎓 <a href=\"https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A35687\" rel=\"noopener noreferrer\">Unsupervised clustering machine learning on packed executable</a> (June 2022)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://ieeexplore.ieee.org/document/4140989\" rel=\"noopener noreferrer\">Using entropy analysis to find encrypted and packed malware</a> (March 2007)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://www.ndss-symposium.org/wp-content/uploads/2020/02/24310.pdf\" rel=\"noopener noreferrer\">When malware is packin' heat; limits of machine learning classifiers based on static analysis features</a> (January 2020)  ⭐ ⭐</li>\n</ul>\n<h3><p>📑 Datasets / Scientific Research</p>\n</h3><ul>\n<li><a href=\"https://vx-underground.org/Samples\" rel=\"noopener noreferrer\">VX Underground</a> - PL-CERT based open source MWDB python application holding a malware database containing every APT sample from 2010 and over 7.5M maliciousbinaries.</li>\n</ul>\n<h3><p>📦 Packers / After 2010</p>\n</h3><ul>\n<li><a href=\"https://github.com/nullsecuritynet/tools/tree/main/binary/hyperion\" rel=\"noopener noreferrer\">Hyperion (⭐56)</a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/phra/PEzor\" rel=\"noopener noreferrer\">PEzor (⭐2k)</a> - Open-Source Shellcode &amp; PE Packer.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mgeeky/ProtectMyTooling\" rel=\"noopener noreferrer\">ProtectMyTooling (⭐977)</a> - Multi-Packer wrapper letting us daisy-chain various packers, obfuscators and other Red Team oriented weaponry.</li>\n</ul>\n<h3><p>📦 Packers / Between 2000 and 2010</p>\n</h3><ul>\n<li><a href=\"http://rewolf.pl\" rel=\"noopener noreferrer\">x86.Virtualizer</a> - x86 Virtualizer.</li>\n</ul>\n<h3><p>🔧 Tools / Before 2000</p>\n</h3><ul>\n<li><a href=\"https://github.com/endgameinc/gym-malware\" rel=\"noopener noreferrer\">Gym-Malware (⭐624)</a> - This is a malware manipulation environment for OpenAI's gym.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mentebinaria/readpe\" rel=\"noopener noreferrer\">PEPack (⭐733)</a> - PE file packer detection tool, part of the Unix package \"pev\".</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/packing-box/reminder\" rel=\"noopener noreferrer\">REMINDer (⭐3)</a> - Packing detection tool based on the entropy value of the entry point section and the WRITE attribute.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/pralab/secml_malware\" rel=\"noopener noreferrer\">SecML Malware (⭐229)</a> - Create adversarial attacks against machine learning Windows malware detectors.</li>\n</ul>\n",
      "date_published": "2024-11-11T22:11:57.000Z",
      "date_modified": "2024-11-11T22:11:57.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/awesome-selfhosted/awesome-selfhosted/",
      "title": "Awesome Selfhosted",
      "_slug": "awesome-selfhosted/awesome-selfhosted/",
      "_filepath": "/content/awesome-selfhosted/awesome-selfhosted/README.md",
      "url": "https://www.trackawesomelist.com/awesome-selfhosted/awesome-selfhosted/",
      "summary": "5 awesome projects updated",
      "content_text": "\n\n### Software / Content Management Systems (CMS)\n\n*   [Vvveb CMS](https://www.vvveb.com) - Powerful and easy to use CMS to build websites, blogs or e-commerce stores. ([Demo](https://demo.vvveb.com), [Source Code (⭐637)](https://github.com/givanz/Vvveb)) `AGPL-3.0` `PHP/Docker`\n\n### Software / Inventory Management\n\n*   [Cannery](https://cannery.app) - Firearm and ammunition tracker app. ([Source Code](https://gitea.bubbletea.dev/shibao/cannery)) `AGPL-3.0` `Docker`\n\n### Software / Learning and Courses\n\n*   [scholarsome](https://www.scholarsome.com/) - Web-based and open source interactive flashcard learning software studying for the masses. ([Demo](https://scholarsome.com/), [Source Code (⭐625)](https://github.com/hwgilbert16/scholarsome)) `GPL-3.0` `Docker`\n\n### Software / Pastebins\n\n*   [lesma](https://lesma.eu) - Simple paste app friendly with browser and command line. ([Demo](https://lesma.eu), [Source Code](https://gitlab.com/ogarcia/lesma)) `GPL-3.0` `Rust/Docker`\n\n### Software / Time Tracking\n\n*   [Beaver Habit Tracker (⭐1.3k)](https://github.com/daya0576/beaverhabits) - Habit tracking app to save your precious moments in your fleeting life. ([Demo](https://beaverhabits.com/demo)) `BSD-3-Clause` `Docker`",
      "content_html": "<h3><p>Software / Content Management Systems (CMS)</p>\n</h3><ul>\n<li><a href=\"https://www.vvveb.com\" rel=\"noopener noreferrer\">Vvveb CMS</a> - Powerful and easy to use CMS to build websites, blogs or e-commerce stores. (<a href=\"https://demo.vvveb.com\" rel=\"noopener noreferrer\">Demo</a>, <a href=\"https://github.com/givanz/Vvveb\" rel=\"noopener noreferrer\">Source Code (⭐637)</a>) <code>AGPL-3.0</code> <code>PHP/Docker</code></li>\n</ul>\n<h3><p>Software / Inventory Management</p>\n</h3><ul>\n<li><a href=\"https://cannery.app\" rel=\"noopener noreferrer\">Cannery</a> - Firearm and ammunition tracker app. (<a href=\"https://gitea.bubbletea.dev/shibao/cannery\" rel=\"noopener noreferrer\">Source Code</a>) <code>AGPL-3.0</code> <code>Docker</code></li>\n</ul>\n<h3><p>Software / Learning and Courses</p>\n</h3><ul>\n<li><a href=\"https://www.scholarsome.com/\" rel=\"noopener noreferrer\">scholarsome</a> - Web-based and open source interactive flashcard learning software studying for the masses. (<a href=\"https://scholarsome.com/\" rel=\"noopener noreferrer\">Demo</a>, <a href=\"https://github.com/hwgilbert16/scholarsome\" rel=\"noopener noreferrer\">Source Code (⭐625)</a>) <code>GPL-3.0</code> <code>Docker</code></li>\n</ul>\n<h3><p>Software / Pastebins</p>\n</h3><ul>\n<li><a href=\"https://lesma.eu\" rel=\"noopener noreferrer\">lesma</a> - Simple paste app friendly with browser and command line. (<a href=\"https://lesma.eu\" rel=\"noopener noreferrer\">Demo</a>, <a href=\"https://gitlab.com/ogarcia/lesma\" rel=\"noopener noreferrer\">Source Code</a>) <code>GPL-3.0</code> <code>Rust/Docker</code></li>\n</ul>\n<h3><p>Software / Time Tracking</p>\n</h3><ul>\n<li><a href=\"https://github.com/daya0576/beaverhabits\" rel=\"noopener noreferrer\">Beaver Habit Tracker (⭐1.3k)</a> - Habit tracking app to save your precious moments in your fleeting life. (<a href=\"https://beaverhabits.com/demo\" rel=\"noopener noreferrer\">Demo</a>) <code>BSD-3-Clause</code> <code>Docker</code></li>\n</ul>\n",
      "date_published": "2024-11-11T21:21:53.000Z",
      "date_modified": "2024-11-11T21:21:53.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/flame-engine/awesome-flame/",
      "title": "Awesome Flame",
      "_slug": "flame-engine/awesome-flame/",
      "_filepath": "/content/flame-engine/awesome-flame/README.md",
      "url": "https://www.trackawesomelist.com/flame-engine/awesome-flame/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Open Source / Casual\n\n*   [Sober Driver (⭐7)](https://github.com/maurovanetti/guidi-tu) - An app with 10 mini games to designate a sober driver for a night out. Get it on [Google Play](https://play.google.com/store/apps/details?id=net.coopalice.guiditu), [App Store](https://apps.apple.com/it/app/guidi-tu/id6476491805). By [Mauro Vanetti](https://maurovanetti.info/).",
      "content_html": "<h3><p>Open Source / Casual</p>\n</h3><ul>\n<li><a href=\"https://github.com/maurovanetti/guidi-tu\" rel=\"noopener noreferrer\">Sober Driver (⭐7)</a> - An app with 10 mini games to designate a sober driver for a night out. Get it on <a href=\"https://play.google.com/store/apps/details?id=net.coopalice.guiditu\" rel=\"noopener noreferrer\">Google Play</a>, <a href=\"https://apps.apple.com/it/app/guidi-tu/id6476491805\" rel=\"noopener noreferrer\">App Store</a>. By <a href=\"https://maurovanetti.info/\" rel=\"noopener noreferrer\">Mauro Vanetti</a>.</li>\n</ul>\n",
      "date_published": "2024-11-11T17:35:37.000Z",
      "date_modified": "2024-11-11T17:35:37.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/directus-community/awesome-directus/",
      "title": "Awesome Directus",
      "_slug": "directus-community/awesome-directus/",
      "_filepath": "/content/directus-community/awesome-directus/README.md",
      "url": "https://www.trackawesomelist.com/directus-community/awesome-directus/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Extensions / Community\n\n*   [Auto generate file transformations (⭐4)](https://github.com/utomic-media/directus-extension-auto-generate-file-transformations) - Automatically generate selected file transformations on upload",
      "content_html": "<h3><p>Extensions / Community</p>\n</h3><ul>\n<li><a href=\"https://github.com/utomic-media/directus-extension-auto-generate-file-transformations\" rel=\"noopener noreferrer\">Auto generate file transformations (⭐4)</a> - Automatically generate selected file transformations on upload</li>\n</ul>\n",
      "date_published": "2024-11-11T12:17:16.000Z",
      "date_modified": "2024-11-11T12:17:16.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "title": "Awesome Agi Cocosci",
      "_slug": "YuzheSHI/awesome-agi-cocosci/",
      "_filepath": "/content/YuzheSHI/awesome-agi-cocosci/README.md",
      "url": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Abduction / Applications in AI\n\n*   [Probabilistic Horn abduction and Bayesian networks](https://www.sciencedirect.com/science/article/abs/pii/000437029390061F?via%3Dihub) - ***Artificial Intelligence***, 1993. \\[[All Versions](https://scholar.google.com/scholar?cluster=7728248035489349629)]. This paper presents a simple framework for Horn-clause abduction, with probabilities associated with hypotheses. The framework incorporates assumptions about the rule base and independence assumptions amongst hypotheses. It is shown how any probabilistic knowledge representable in a discrete Bayesian belief network can be represented in this framework. The main contribution is in finding a relationship between logical and probabilistic notions of evidential reasoning. This provides a useful representation language in its own right, providing a compromise between heuristic and epistemic adequacy.",
      "content_html": "<h3><p>Abduction / Applications in AI</p>\n</h3><ul>\n<li><a href=\"https://www.sciencedirect.com/science/article/abs/pii/000437029390061F?via%3Dihub\" rel=\"noopener noreferrer\">Probabilistic Horn abduction and Bayesian networks</a> - <em><strong>Artificial Intelligence</strong></em>, 1993. [<a href=\"https://scholar.google.com/scholar?cluster=7728248035489349629\" rel=\"noopener noreferrer\">All Versions</a>]. This paper presents a simple framework for Horn-clause abduction, with probabilities associated with hypotheses. The framework incorporates assumptions about the rule base and independence assumptions amongst hypotheses. It is shown how any probabilistic knowledge representable in a discrete Bayesian belief network can be represented in this framework. The main contribution is in finding a relationship between logical and probabilistic notions of evidential reasoning. This provides a useful representation language in its own right, providing a compromise between heuristic and epistemic adequacy.</li>\n</ul>\n",
      "date_published": "2024-11-11T04:49:36.000Z",
      "date_modified": "2024-11-11T04:49:36.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/PatrickJS/awesome-angular/",
      "title": "Awesome Angular",
      "_slug": "PatrickJS/awesome-angular/",
      "_filepath": "/content/PatrickJS/awesome-angular/README.md",
      "url": "https://www.trackawesomelist.com/PatrickJS/awesome-angular/",
      "summary": "5 awesome projects updated",
      "content_text": "\n\n### Integrations / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [ngx-surreal (⭐1)](https://github.com/vandaeldev/ngx-surreal) - Lightweight Angular wrapper for the [SurrealDB](https://surrealdb.com/) JavaScript SDK.\n\n### Captcha / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [ngx-slider-recaptcha (⭐3)](https://github.com/mrzinkowin/ngx-slider-recaptcha) - Customizable Angular library that provides a slider-based CAPTCHA component to help secure forms from spam and bot submissions.\n\n### Loaders / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [nx-svg-loaders (⭐3)](https://github.com/ngeenx/nx-svg-loaders) - Angular, React, Svelte, Vue SVG loader/spinner collection.\n\n### Modals / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [up-window-angular (⭐4)](https://github.com/criar-art/up-window-angular) - An Angular library designed to create dynamic, customizable modals and window-based components for web applications.\n\n### Misc Components / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [ngx-morse (⭐7)](https://github.com/monkeyscript/ngx-morse) - A simple morse code encoder and decoder for Angular.",
      "content_html": "<h3><p>Integrations / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/vandaeldev/ngx-surreal\" rel=\"noopener noreferrer\">ngx-surreal (⭐1)</a> - Lightweight Angular wrapper for the <a href=\"https://surrealdb.com/\" rel=\"noopener noreferrer\">SurrealDB</a> JavaScript SDK.</li>\n</ul>\n<h3><p>Captcha / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/mrzinkowin/ngx-slider-recaptcha\" rel=\"noopener noreferrer\">ngx-slider-recaptcha (⭐3)</a> - Customizable Angular library that provides a slider-based CAPTCHA component to help secure forms from spam and bot submissions.</li>\n</ul>\n<h3><p>Loaders / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/ngeenx/nx-svg-loaders\" rel=\"noopener noreferrer\">nx-svg-loaders (⭐3)</a> - Angular, React, Svelte, Vue SVG loader/spinner collection.</li>\n</ul>\n<h3><p>Modals / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/criar-art/up-window-angular\" rel=\"noopener noreferrer\">up-window-angular (⭐4)</a> - An Angular library designed to create dynamic, customizable modals and window-based components for web applications.</li>\n</ul>\n<h3><p>Misc Components / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/monkeyscript/ngx-morse\" rel=\"noopener noreferrer\">ngx-morse (⭐7)</a> - A simple morse code encoder and decoder for Angular.</li>\n</ul>\n",
      "date_published": "2024-11-11T03:45:34.000Z",
      "date_modified": "2024-11-11T04:23:17.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/tobiasbueschel/awesome-pokemon/",
      "title": "Awesome Pokemon",
      "_slug": "tobiasbueschel/awesome-pokemon/",
      "_filepath": "/content/tobiasbueschel/awesome-pokemon/README.md",
      "url": "https://www.trackawesomelist.com/tobiasbueschel/awesome-pokemon/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Development Projects / Miscellaneous\n\n*   [PokemonRedExperiments (⭐7.4k)](https://github.com/PWhiddy/PokemonRedExperiments) - Playing Pokémon Red with Reinforcement Learning.",
      "content_html": "<h3><p>Development Projects / Miscellaneous</p>\n</h3><ul>\n<li><a href=\"https://github.com/PWhiddy/PokemonRedExperiments\" rel=\"noopener noreferrer\">PokemonRedExperiments (⭐7.4k)</a> - Playing Pokémon Red with Reinforcement Learning.</li>\n</ul>\n",
      "date_published": "2024-11-11T03:17:16.000Z",
      "date_modified": "2024-11-11T03:17:16.000Z"
    }
  ]
}
