{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Jun 07, 2025",
  "_site_title": "Track Awesome List",
  "description": "9 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Jun 07, 2025 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/packing-box/awesome-executable-packing/",
      "title": "Awesome Executable Packing",
      "_slug": "packing-box/awesome-executable-packing/",
      "_filepath": "/content/packing-box/awesome-executable-packing/README.md",
      "url": "https://www.trackawesomelist.com/packing-box/awesome-executable-packing/",
      "summary": "7 awesome projects updated",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :earth\\_americas: [Awesome LLVM security (⭐724)](https://github.com/gmh5225/awesome-llvm-security)\n*   :earth\\_americas: [Defacto2](https://defacto2.net/g/defacto2net)\n*   :pushpin: [Explained: Packer, crypter, and protector](https://www.threatdown.com/blog/explained-packer-crypter-and-protector/)\n*   :scroll: [Implementing your own generic unpacker](https://gsec.hitb.org/sg2015/sessions/session-001)\n*   :earth\\_americas: [MITRE ATT\\&CK | T1027.002 | obfuscated files or information: Software packing - Enterprise](https://attack.mitre.org/techniques/T1027/002)\n*   :earth\\_americas: [MITRE ATT\\&CK | T1406.002 | obfuscated files or information: Software packing - Mobile](https://attack.mitre.org/techniques/T1406/002)\n*   :bar\\_chart: [NotPacked++: Evading static packing detection](https://www.blackhat.com/eu-24/arsenal/schedule/index.html?1#notpacked-evading-static-packing-detection-42187)\n*   :earth\\_americas: [OllyDbg OEP finder scripts (⭐255)](https://github.com/dubuqingfeng/ollydbg-script)\n*   :bar\\_chart: [Packing-box: Improving detection of executable packing](https://www.blackhat.com/eu-24/arsenal/schedule/index.html?2#packing-box-improving-detection-of-executable-packing-41931)\n*   :page\\_facing\\_up: [Unpacking binary 101](https://sam0x90.blog/2020/06/06/unpacking-binary-101/)\n*   :pushpin: [Unpacking the potential of \"Packing box\"](https://medium.com/@elniak/unpacking-the-potential-of-packing-box-dfd765609233)\n*   :pushpin: [Unpacking, reversing, patching](https://www.infosecinstitute.com/resources/reverse-engineering/unpacking-reversing-patching)\n*   :pushpin: [Writing a PE packer](https://wirediver.com/tutorial-writing-a-pe-packer-part-1/)\n\n### :books: Literature / Scientific Research\n\n*   :newspaper: [Adversarial attacks against windows PE malware detection: A survey of the state-of-the-art](https://www.semanticscholar.org/paper/Adversarial-Attacks-against-Windows-PE-Malware-A-of-Ling-Wu/055d0cdce6ad5c766543c8692a9e5bd37d2ed0a4) (December 2021)\n*   :newspaper: [All-in-one framework for detection, unpacking, and verification for malware analysis](https://onlinelibrary.wiley.com/doi/10.1155/2019/5278137) (January 2019)\n*   :newspaper: [Analysis of machine learning approaches to packing detection](https://www.sciencedirect.com/science/article/pii/S0167404823004467) (October 2023)  :star: :star:\n*   :newspaper: [Anti-emulation trends in modern packers: A survey on the evolution of anti-emulation techniques in UPA packers](https://link.springer.com/article/10.1007/s11416-017-0291-9) (May 2018)\n*   :notebook: [Anti-unpacker tricks](https://pferrie.tripod.com/papers/unpackers.pdf) (May 2008)\n*   :closed\\_book: [Assessing static and dynamic features for packing detection](https://link.springer.com/chapter/10.1007/978-3-031-73887-6_12) (October 2024)  :star:\n*   :newspaper: [Binary-code obfuscations in prevalent packer tools](https://dl.acm.org/doi/10.1145/2522968.2522972) (October 2013)\n*   :mortar\\_board: [Building a malware mutation tool](https://dial.uclouvain.be/memoire/ucl/object/thesis:45960) (June 2024)  :star:\n*   :mortar\\_board: [Building a mutation tool for binaries: Expanding a dynamic binary rewriting tool to obfuscate malwares](https://dial.uclouvain.be/memoire/ucl/object/thesis:40611) (June 2023)  :star: :star:\n*   :notebook: [Certified robustness of static deep learning-based malware detectors against patch and append attacks](https://dl.acm.org/doi/10.1145/3605764.3623914) (November 2023)  :star:\n*   :notebook: [Chosen-instruction attack against commercial code virtualization obfuscators](https://ink.library.smu.edu.sg/sis_research/7354) (April 2022)\n*   :bar\\_chart: [Dealing with virtualization packers](https://2008.caro.org/program/dealing-with-virtualization-packers) (May 2008)\n*   :bookmark: [Deceiving end-to-end deep learning malware detectors using adversarial examples](https://arxiv.org/abs/1802.04528) (January 2019)\n*   :notebook: [Deceiving portable executable malware classifiers into targeted misclassification with practical adversarial examples](https://dl.acm.org/doi/10.1145/3374664.3375741) (March 2020)\n*   :notebook: [Detection of packed malware](https://dl.acm.org/doi/10.1145/2490428.2490431) (August 2012)\n*   :newspaper: [An efficient algorithm to extract control flow-based features for ioT malware detection](https://academic.oup.com/comjnl/article-abstract/64/4/599/5940626) (April 2021)\n*   :notebook: [Experimental toolkit for manipulating executable packing](https://link.springer.com/chapter/10.1007/978-3-031-61231-2_17) (June 2024)  :star: :star:\n*   :notebook: [Exploring adversarial examples in malware detection](https://ieeexplore.ieee.org/document/8844597) (May 2019)\n*   :newspaper: [Feature selection for packer classification based on association rule mining](https://www.sciencedirect.com/science/article/pii/S0952197624012417) (August 2024)  :star:\n*   :newspaper: [Functionality-preserving black-box optimization of adversarial windows malware](https://ieeexplore.ieee.org/document/9437194) (May 2021)  :star:\n*   :notebook: [Highlighting the impact of packed executable alterations with unsupervised learning](https://link.springer.com/chapter/10.1007/978-3-031-89350-6_23) (April 2025)\n*   :newspaper: [Mal-xtract: Hidden code extraction using memory analysis](https://iopscience.iop.org/article/10.1088/1742-6596/801/1/012058) (January 2017)\n*   :notebook: [Malware images: Visualization and automatic classification](https://dl.acm.org/doi/10.1145/2016904.2016908) (July 2011)\n*   :notebook: [Malware obfuscation through evolutionary packers](https://dl.acm.org/doi/10.1145/2739482.2764940) (July 2015)\n*   :notebook: [Metadata recovery from obfuscated programs using machine learning](https://dl.acm.org/doi/10.1145/3015135.3015136) (December 2016)\n*   :newspaper: [MSG: Missing-sequence generator for metamorphic malware detection](https://www.sciencedirect.com/science/article/pii/S2214212624002643) (March 2025)\n*   :notebook: [Obfuscation: Where are we in anti-DSE protections? (a first attempt)](https://dl.acm.org/doi/10.1145/3371307.3371309) (December 2019)\n*   :newspaper: [Opcodes as predictor for malware](https://www.inderscienceonline.com/doi/abs/10.1504/IJESDF.2007.016865) (January 2008)\n*   :notebook: [Packed code detection using shannon entropy and homomorphic encrypted executables](https://ieeexplore.ieee.org/document/10793050) (October 2024)\n*   :newspaper: [Packed malware detection using entropy related analysis: A survey](https://www.semanticscholar.org/paper/7bc891420300f6e4c4d97d19a14d5c6a4dd422f0) (November 2015)\n*   :newspaper: [Packed malware variants detection using deep belief networks](https://www.matec-conferences.org/articles/matecconf/abs/2020/05/matecconf_cscns2020_02002/matecconf_cscns2020_02002.html) (March 2020)\n*   :bookmark: [PackHero: A scalable graph-based approach for efficient packer identification](https://re.public.polimi.it/handle/11311/1284225) (July 2025)\n*   :newspaper: [PE file features in detection of packed executables](https://www.ijcte.org/show-42-485-1.html) (January 2012)\n*   :newspaper: [Pitfalls in machine learning for computer security](https://dl.acm.org/doi/10.1145/3643456) (October 2024)\n*   :mortar\\_board: [REFORM: A framework for malware packer analysis using information theory and statistical methods](https://scispace.com/papers/reform-a-framework-for-malware-packer-analysis-using-2muwuyaeox) (April 2010)\n*   :mortar\\_board: [Source-free binary mutation for offense and defense](https://api.semanticscholar.org/CorpusID:113759144) (December 2014)\n*   :newspaper: [A survey on malware analysis techniques: Static, dynamic, hybrid and memory analysis](https://ijaseit.insightsociety.org/index.php/ijaseit/article/view/6827) (September 2018)\n*   :notebook: [Syntia: Synthesizing the semantics of obfuscated code](https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/blazytko) (August 2017)\n*   :closed\\_book: [Unpacking malware in the real world: A step-by step guide](https://link.springer.com/chapter/10.1007/978-3-031-66245-4_13) (July 2024)\n*   :notebook: [VABox: A virtualization-based analysis framework of virtualization-obfuscated packed executables](https://link.springer.com/chapter/10.1007/978-3-030-78621-2_6) (June 2021)\n*   :newspaper: [x64Unpack: Hybrid emulation unpacker for 64-bit Windows Environments and detailed analysis results on VMProtect 3.4](https://ieeexplore.ieee.org/document/9139515) (July 2020)\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [BODMAS (⭐83)](https://github.com/whyisyoung/BODMAS) - Code for our DLS'21 paper - BODMAS: An Open Dataset for Learning based Temporal Analysis of PE Malware.\n*   [MalwareGallery](https://www.malwaregallery.com) - Yet another malware collection in the Internet.\n*   [MalwareTips](https://malwaretips.com) - MalwareTips is a community-driven platform providing the latest information and resources on malware and cyber threats.\n\n### :package: Packers / After 2010\n\n*   [ASM Guard (⭐249)](https://github.com/DosX-dev/ASM-Guard) - Packer utility for compressing and complicating reversing compiled native code (native files), protecting resources, adding DRM, and packing into an optimized loader.\n*   [Astral-PE (⭐313)](https://github.com/DosX-dev/Astral-PE) - Low-level mutator (Headers/EP obfuscator) for native Windows PE files (x32/x64).\n*   [ELF Packer (⭐32)](https://github.com/telepath9000/elf-packer) - Encrypts 64-bit elf files that decrypt at runtime.\n*   NPack - Can compress 32bits and 64bits exe, dll, ocx, scr Windows program.\n*   [Obsidium](https://www.obsidium.de/product/sps/download) - Feature-rich professional software protection and licensing system designed as a cost effective and easy to implement, yet reliable and non-invasive way to protect your 32- and 64-bit Windows software applications and games from reverse engineering.\n*   [OS-X\\_Packer](https://web.archive.org/web/20200929161737/https://github.com/AlysonBee/OSX_Packer) - Binary packer for the Mach-O file format.\n*   [VirtualMachineObfuscationPoC](https://web.archive.org/web/20231226141018/https://github.com/eaglx/VirtualMachineObfuscationPoC) - Obfuscation method using virtual machine.\n*   [Woody Wood Packer (⭐18)](https://github.com/Jibus22/woody_woodpacker) - ELF packer - encrypt and inject self-decryption code into executable ELF binary target.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [NSPack](https://nspack.apponic.com) - 32/64-bits exe, dll, ocx, scr Windows program compressor.\n*   [TTProtect](https://web.archive.org/web/20081218083606/http://www.ttprotect.com/en/index.htm) - Professional protection tool designed for software developers to protect their PE applications against illegal modification or decompilation.\n\n### :package: Packers / Before 2000\n\n*   [CauseWay Compressor](https://gitlab.com/tkchia/causeway) - DOS EXE compressor.\n*   [PEBundle](https://bitsum.com/pebundle.htm) - Physically attaches DLL(s) to an executable, resolving dependencies in memory.\n*   VGCrypt - PE crypter for Win95/98/NT.\n\n### :wrench: Tools / Before 2000\n\n*   [Assiste (Packer)](https://web.archive.org/web/20211017145403/https://assiste.com/Packer.html) - Assiste.com's example list of packers.\n*   [BinUnpack](https://dl.acm.org/doi/10.1145/3243734.3243771?-) - Unpacking approach free from tedious memory access monitoring, therefore introducing very small runtime overhead.\n*   [Cave-Finder (⭐66)](https://github.com/adamhlt/Cave-Finder) - Tool to find code cave in PE image (x86 / x64) - Find empty space to place code in PE files.\n*   [GUnpacker](https://web.archive.org/web/20220121084407/http://qunpack.ahteam.org/?p=327) - Shell tool that performs OEP positioning and dumps decrypted code.\n*   Lissom - Retargetable decompiler consisting of a preprocessing part and a decompilation core.\n*   [NotPacked++ (⭐19)](https://github.com/packing-box/packer-masking-tool) - Attack tool for altering packed samples so that they evade static packing detection.\n*   [PackerBreaker](https://web.archive.org/web/20150504162711/https://www.sysreveal.com/packerbreaker-intro) - Tool for helping unpack, decompress and decrypt most of the programs packed, compressed or encrypted using advanced emulation technology.\n*   [PE Compression Test](https://web.archive.org/web/20250427032942/http://pect.atspace.com) - List of packers tested on a few sample executables for comparing compressed sizes.\n*   [PEiD](https://web.archive.org/web/20070529035022/https://www.secretashell.com/codomain/peid/) - Packed Executable iDentifier.\n*   [Quick Unpack](https://web.archive.org/web/20220119142245/http://qunpack.ahteam.org/?p=458) - Generic unpacker that facilitates the unpacking process.\n*   [RDG Packer Detector](https://web.archive.org/web/20220904151105/http://rdgsoft.net/) - Packer detection tool.\n*   [Renovo](https://dl.acm.org/doi/10.1145/1314389.1314399?tool) - Detection tool built on top of TEMU (dynamic analysis component of BitBlaze) based on the execution of newly-generated code and monitoring memory writes after the program starts.\n*   [VMUnpacker](https://web.archive.org/web/20241106123938/https://www.leechermods.com/2010/01/vmunpacker-16-latest-version.html) - Unpacker based on the technology of virtual machine.",
      "content_html": "<h3><p>📚 Literature / Documentation</p>\n</h3><ul>\n<li>🌎 <a href=\"https://github.com/gmh5225/awesome-llvm-security\" rel=\"noopener noreferrer\">Awesome LLVM security (⭐724)</a></li>\n</ul>\n<ul>\n<li>🌎 <a href=\"https://defacto2.net/g/defacto2net\" rel=\"noopener noreferrer\">Defacto2</a></li>\n</ul>\n<ul>\n<li>📌 <a href=\"https://www.threatdown.com/blog/explained-packer-crypter-and-protector/\" rel=\"noopener noreferrer\">Explained: Packer, crypter, and protector</a></li>\n</ul>\n<ul>\n<li>📜 <a href=\"https://gsec.hitb.org/sg2015/sessions/session-001\" rel=\"noopener noreferrer\">Implementing your own generic unpacker</a></li>\n</ul>\n<ul>\n<li>🌎 <a href=\"https://attack.mitre.org/techniques/T1027/002\" rel=\"noopener noreferrer\">MITRE ATT&amp;CK | T1027.002 | obfuscated files or information: Software packing - Enterprise</a></li>\n</ul>\n<ul>\n<li>🌎 <a href=\"https://attack.mitre.org/techniques/T1406/002\" rel=\"noopener noreferrer\">MITRE ATT&amp;CK | T1406.002 | obfuscated files or information: Software packing - Mobile</a></li>\n</ul>\n<ul>\n<li>📊 <a href=\"https://www.blackhat.com/eu-24/arsenal/schedule/index.html?1#notpacked-evading-static-packing-detection-42187\" rel=\"noopener noreferrer\">NotPacked++: Evading static packing detection</a></li>\n</ul>\n<ul>\n<li>🌎 <a href=\"https://github.com/dubuqingfeng/ollydbg-script\" rel=\"noopener noreferrer\">OllyDbg OEP finder scripts (⭐255)</a></li>\n</ul>\n<ul>\n<li>📊 <a href=\"https://www.blackhat.com/eu-24/arsenal/schedule/index.html?2#packing-box-improving-detection-of-executable-packing-41931\" rel=\"noopener noreferrer\">Packing-box: Improving detection of executable packing</a></li>\n</ul>\n<ul>\n<li>📄 <a href=\"https://sam0x90.blog/2020/06/06/unpacking-binary-101/\" rel=\"noopener noreferrer\">Unpacking binary 101</a></li>\n</ul>\n<ul>\n<li>📌 <a href=\"https://medium.com/@elniak/unpacking-the-potential-of-packing-box-dfd765609233\" rel=\"noopener noreferrer\">Unpacking the potential of \"Packing box\"</a></li>\n</ul>\n<ul>\n<li>📌 <a href=\"https://www.infosecinstitute.com/resources/reverse-engineering/unpacking-reversing-patching\" rel=\"noopener noreferrer\">Unpacking, reversing, patching</a></li>\n</ul>\n<ul>\n<li>📌 <a href=\"https://wirediver.com/tutorial-writing-a-pe-packer-part-1/\" rel=\"noopener noreferrer\">Writing a PE packer</a></li>\n</ul>\n<h3><p>📚 Literature / Scientific Research</p>\n</h3><ul>\n<li>📰 <a href=\"https://www.semanticscholar.org/paper/Adversarial-Attacks-against-Windows-PE-Malware-A-of-Ling-Wu/055d0cdce6ad5c766543c8692a9e5bd37d2ed0a4\" rel=\"noopener noreferrer\">Adversarial attacks against windows PE malware detection: A survey of the state-of-the-art</a> (December 2021)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://onlinelibrary.wiley.com/doi/10.1155/2019/5278137\" rel=\"noopener noreferrer\">All-in-one framework for detection, unpacking, and verification for malware analysis</a> (January 2019)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.sciencedirect.com/science/article/pii/S0167404823004467\" rel=\"noopener noreferrer\">Analysis of machine learning approaches to packing detection</a> (October 2023)  ⭐ ⭐</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://link.springer.com/article/10.1007/s11416-017-0291-9\" rel=\"noopener noreferrer\">Anti-emulation trends in modern packers: A survey on the evolution of anti-emulation techniques in UPA packers</a> (May 2018)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://pferrie.tripod.com/papers/unpackers.pdf\" rel=\"noopener noreferrer\">Anti-unpacker tricks</a> (May 2008)</li>\n</ul>\n<ul>\n<li>📕 <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-73887-6_12\" rel=\"noopener noreferrer\">Assessing static and dynamic features for packing detection</a> (October 2024)  ⭐</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://dl.acm.org/doi/10.1145/2522968.2522972\" rel=\"noopener noreferrer\">Binary-code obfuscations in prevalent packer tools</a> (October 2013)</li>\n</ul>\n<ul>\n<li>🎓 <a href=\"https://dial.uclouvain.be/memoire/ucl/object/thesis:45960\" rel=\"noopener noreferrer\">Building a malware mutation tool</a> (June 2024)  ⭐</li>\n</ul>\n<ul>\n<li>🎓 <a href=\"https://dial.uclouvain.be/memoire/ucl/object/thesis:40611\" rel=\"noopener noreferrer\">Building a mutation tool for binaries: Expanding a dynamic binary rewriting tool to obfuscate malwares</a> (June 2023)  ⭐ ⭐</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/10.1145/3605764.3623914\" rel=\"noopener noreferrer\">Certified robustness of static deep learning-based malware detectors against patch and append attacks</a> (November 2023)  ⭐</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ink.library.smu.edu.sg/sis_research/7354\" rel=\"noopener noreferrer\">Chosen-instruction attack against commercial code virtualization obfuscators</a> (April 2022)</li>\n</ul>\n<ul>\n<li>📊 <a href=\"https://2008.caro.org/program/dealing-with-virtualization-packers\" rel=\"noopener noreferrer\">Dealing with virtualization packers</a> (May 2008)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://arxiv.org/abs/1802.04528\" rel=\"noopener noreferrer\">Deceiving end-to-end deep learning malware detectors using adversarial examples</a> (January 2019)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/10.1145/3374664.3375741\" rel=\"noopener noreferrer\">Deceiving portable executable malware classifiers into targeted misclassification with practical adversarial examples</a> (March 2020)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/10.1145/2490428.2490431\" rel=\"noopener noreferrer\">Detection of packed malware</a> (August 2012)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://academic.oup.com/comjnl/article-abstract/64/4/599/5940626\" rel=\"noopener noreferrer\">An efficient algorithm to extract control flow-based features for ioT malware detection</a> (April 2021)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-61231-2_17\" rel=\"noopener noreferrer\">Experimental toolkit for manipulating executable packing</a> (June 2024)  ⭐ ⭐</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/8844597\" rel=\"noopener noreferrer\">Exploring adversarial examples in malware detection</a> (May 2019)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.sciencedirect.com/science/article/pii/S0952197624012417\" rel=\"noopener noreferrer\">Feature selection for packer classification based on association rule mining</a> (August 2024)  ⭐</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://ieeexplore.ieee.org/document/9437194\" rel=\"noopener noreferrer\">Functionality-preserving black-box optimization of adversarial windows malware</a> (May 2021)  ⭐</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-89350-6_23\" rel=\"noopener noreferrer\">Highlighting the impact of packed executable alterations with unsupervised learning</a> (April 2025)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://iopscience.iop.org/article/10.1088/1742-6596/801/1/012058\" rel=\"noopener noreferrer\">Mal-xtract: Hidden code extraction using memory analysis</a> (January 2017)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/10.1145/2016904.2016908\" rel=\"noopener noreferrer\">Malware images: Visualization and automatic classification</a> (July 2011)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/10.1145/2739482.2764940\" rel=\"noopener noreferrer\">Malware obfuscation through evolutionary packers</a> (July 2015)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/10.1145/3015135.3015136\" rel=\"noopener noreferrer\">Metadata recovery from obfuscated programs using machine learning</a> (December 2016)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.sciencedirect.com/science/article/pii/S2214212624002643\" rel=\"noopener noreferrer\">MSG: Missing-sequence generator for metamorphic malware detection</a> (March 2025)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://dl.acm.org/doi/10.1145/3371307.3371309\" rel=\"noopener noreferrer\">Obfuscation: Where are we in anti-DSE protections? (a first attempt)</a> (December 2019)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.inderscienceonline.com/doi/abs/10.1504/IJESDF.2007.016865\" rel=\"noopener noreferrer\">Opcodes as predictor for malware</a> (January 2008)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://ieeexplore.ieee.org/document/10793050\" rel=\"noopener noreferrer\">Packed code detection using shannon entropy and homomorphic encrypted executables</a> (October 2024)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.semanticscholar.org/paper/7bc891420300f6e4c4d97d19a14d5c6a4dd422f0\" rel=\"noopener noreferrer\">Packed malware detection using entropy related analysis: A survey</a> (November 2015)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.matec-conferences.org/articles/matecconf/abs/2020/05/matecconf_cscns2020_02002/matecconf_cscns2020_02002.html\" rel=\"noopener noreferrer\">Packed malware variants detection using deep belief networks</a> (March 2020)</li>\n</ul>\n<ul>\n<li>🔖 <a href=\"https://re.public.polimi.it/handle/11311/1284225\" rel=\"noopener noreferrer\">PackHero: A scalable graph-based approach for efficient packer identification</a> (July 2025)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://www.ijcte.org/show-42-485-1.html\" rel=\"noopener noreferrer\">PE file features in detection of packed executables</a> (January 2012)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://dl.acm.org/doi/10.1145/3643456\" rel=\"noopener noreferrer\">Pitfalls in machine learning for computer security</a> (October 2024)</li>\n</ul>\n<ul>\n<li>🎓 <a href=\"https://scispace.com/papers/reform-a-framework-for-malware-packer-analysis-using-2muwuyaeox\" rel=\"noopener noreferrer\">REFORM: A framework for malware packer analysis using information theory and statistical methods</a> (April 2010)</li>\n</ul>\n<ul>\n<li>🎓 <a href=\"https://api.semanticscholar.org/CorpusID:113759144\" rel=\"noopener noreferrer\">Source-free binary mutation for offense and defense</a> (December 2014)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://ijaseit.insightsociety.org/index.php/ijaseit/article/view/6827\" rel=\"noopener noreferrer\">A survey on malware analysis techniques: Static, dynamic, hybrid and memory analysis</a> (September 2018)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/blazytko\" rel=\"noopener noreferrer\">Syntia: Synthesizing the semantics of obfuscated code</a> (August 2017)</li>\n</ul>\n<ul>\n<li>📕 <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-66245-4_13\" rel=\"noopener noreferrer\">Unpacking malware in the real world: A step-by step guide</a> (July 2024)</li>\n</ul>\n<ul>\n<li>📓 <a href=\"https://link.springer.com/chapter/10.1007/978-3-030-78621-2_6\" rel=\"noopener noreferrer\">VABox: A virtualization-based analysis framework of virtualization-obfuscated packed executables</a> (June 2021)</li>\n</ul>\n<ul>\n<li>📰 <a href=\"https://ieeexplore.ieee.org/document/9139515\" rel=\"noopener noreferrer\">x64Unpack: Hybrid emulation unpacker for 64-bit Windows Environments and detailed analysis results on VMProtect 3.4</a> (July 2020)</li>\n</ul>\n<h3><p>📑 Datasets / Scientific Research</p>\n</h3><ul>\n<li><a href=\"https://github.com/whyisyoung/BODMAS\" rel=\"noopener noreferrer\">BODMAS (⭐83)</a> - Code for our DLS'21 paper - BODMAS: An Open Dataset for Learning based Temporal Analysis of PE Malware.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.malwaregallery.com\" rel=\"noopener noreferrer\">MalwareGallery</a> - Yet another malware collection in the Internet.</li>\n</ul>\n<ul>\n<li><a href=\"https://malwaretips.com\" rel=\"noopener noreferrer\">MalwareTips</a> - MalwareTips is a community-driven platform providing the latest information and resources on malware and cyber threats.</li>\n</ul>\n<h3><p>📦 Packers / After 2010</p>\n</h3><ul>\n<li><a href=\"https://github.com/DosX-dev/ASM-Guard\" rel=\"noopener noreferrer\">ASM Guard (⭐249)</a> - Packer utility for compressing and complicating reversing compiled native code (native files), protecting resources, adding DRM, and packing into an optimized loader.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/DosX-dev/Astral-PE\" rel=\"noopener noreferrer\">Astral-PE (⭐313)</a> - Low-level mutator (Headers/EP obfuscator) for native Windows PE files (x32/x64).</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/telepath9000/elf-packer\" rel=\"noopener noreferrer\">ELF Packer (⭐32)</a> - Encrypts 64-bit elf files that decrypt at runtime.</li>\n</ul>\n<ul>\n<li>NPack - Can compress 32bits and 64bits exe, dll, ocx, scr Windows program.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.obsidium.de/product/sps/download\" rel=\"noopener noreferrer\">Obsidium</a> - Feature-rich professional software protection and licensing system designed as a cost effective and easy to implement, yet reliable and non-invasive way to protect your 32- and 64-bit Windows software applications and games from reverse engineering.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20200929161737/https://github.com/AlysonBee/OSX_Packer\" rel=\"noopener noreferrer\">OS-X_Packer</a> - Binary packer for the Mach-O file format.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20231226141018/https://github.com/eaglx/VirtualMachineObfuscationPoC\" rel=\"noopener noreferrer\">VirtualMachineObfuscationPoC</a> - Obfuscation method using virtual machine.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Jibus22/woody_woodpacker\" rel=\"noopener noreferrer\">Woody Wood Packer (⭐18)</a> - ELF packer - encrypt and inject self-decryption code into executable ELF binary target.</li>\n</ul>\n<h3><p>📦 Packers / Between 2000 and 2010</p>\n</h3><ul>\n<li><a href=\"https://nspack.apponic.com\" rel=\"noopener noreferrer\">NSPack</a> - 32/64-bits exe, dll, ocx, scr Windows program compressor.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20081218083606/http://www.ttprotect.com/en/index.htm\" rel=\"noopener noreferrer\">TTProtect</a> - Professional protection tool designed for software developers to protect their PE applications against illegal modification or decompilation.</li>\n</ul>\n<h3><p>📦 Packers / Before 2000</p>\n</h3><ul>\n<li><a href=\"https://gitlab.com/tkchia/causeway\" rel=\"noopener noreferrer\">CauseWay Compressor</a> - DOS EXE compressor.</li>\n</ul>\n<ul>\n<li><a href=\"https://bitsum.com/pebundle.htm\" rel=\"noopener noreferrer\">PEBundle</a> - Physically attaches DLL(s) to an executable, resolving dependencies in memory.</li>\n</ul>\n<ul>\n<li>VGCrypt - PE crypter for Win95/98/NT.</li>\n</ul>\n<h3><p>🔧 Tools / Before 2000</p>\n</h3><ul>\n<li><a href=\"https://web.archive.org/web/20211017145403/https://assiste.com/Packer.html\" rel=\"noopener noreferrer\">Assiste (Packer)</a> - Assiste.com's example list of packers.</li>\n</ul>\n<ul>\n<li><a href=\"https://dl.acm.org/doi/10.1145/3243734.3243771?-\" rel=\"noopener noreferrer\">BinUnpack</a> - Unpacking approach free from tedious memory access monitoring, therefore introducing very small runtime overhead.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/adamhlt/Cave-Finder\" rel=\"noopener noreferrer\">Cave-Finder (⭐66)</a> - Tool to find code cave in PE image (x86 / x64) - Find empty space to place code in PE files.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20220121084407/http://qunpack.ahteam.org/?p=327\" rel=\"noopener noreferrer\">GUnpacker</a> - Shell tool that performs OEP positioning and dumps decrypted code.</li>\n</ul>\n<ul>\n<li>Lissom - Retargetable decompiler consisting of a preprocessing part and a decompilation core.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/packing-box/packer-masking-tool\" rel=\"noopener noreferrer\">NotPacked++ (⭐19)</a> - Attack tool for altering packed samples so that they evade static packing detection.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20150504162711/https://www.sysreveal.com/packerbreaker-intro\" rel=\"noopener noreferrer\">PackerBreaker</a> - Tool for helping unpack, decompress and decrypt most of the programs packed, compressed or encrypted using advanced emulation technology.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20250427032942/http://pect.atspace.com\" rel=\"noopener noreferrer\">PE Compression Test</a> - List of packers tested on a few sample executables for comparing compressed sizes.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20070529035022/https://www.secretashell.com/codomain/peid/\" rel=\"noopener noreferrer\">PEiD</a> - Packed Executable iDentifier.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20220119142245/http://qunpack.ahteam.org/?p=458\" rel=\"noopener noreferrer\">Quick Unpack</a> - Generic unpacker that facilitates the unpacking process.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20220904151105/http://rdgsoft.net/\" rel=\"noopener noreferrer\">RDG Packer Detector</a> - Packer detection tool.</li>\n</ul>\n<ul>\n<li><a href=\"https://dl.acm.org/doi/10.1145/1314389.1314399?tool\" rel=\"noopener noreferrer\">Renovo</a> - Detection tool built on top of TEMU (dynamic analysis component of BitBlaze) based on the execution of newly-generated code and monitoring memory writes after the program starts.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20241106123938/https://www.leechermods.com/2010/01/vmunpacker-16-latest-version.html\" rel=\"noopener noreferrer\">VMUnpacker</a> - Unpacker based on the technology of virtual machine.</li>\n</ul>\n",
      "date_published": "2025-06-07T22:14:10.000Z",
      "date_modified": "2025-06-07T22:14:10.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/jivoi/awesome-osint/",
      "title": "Awesome Osint",
      "_slug": "jivoi/awesome-osint/",
      "_filepath": "/content/jivoi/awesome-osint/README.md",
      "url": "https://www.trackawesomelist.com/jivoi/awesome-osint/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Threat Actor Search\n\n*   [BreachHQ](https://breach-hq.com/threat-actors) - Provides a list of all known cyber threat actors also referred to as malicious actors, APT groups or hackers.\n*   [Cybergeist](https://cybergeist.io/threat-actor) - Cybergeist.io generates intelligence profiles about key threats and threat context that is actively being discussed and reported upon across the internet.\n*   [Dark Web Informer](https://darkwebinformer.com/threat-actor-database/) - Tracking 854 Threat Actors as of 29th of May 2025.\n*   [lazarusholic](https://lazarus.day/actors/) - Total 203 threat actors.\n*   [OPENHUNTING.IO](https://openhunting.io/threat-library) - Threat Library Collecting Information.\n*   [SOCRadar LABS](https://socradar.io/labs/threat-actor/) - Know threat actor tactics, techniques, and past activities. Access detailed profiles and track their activities.Keep up with the latest threats and Tactics, Techniques, and Procedures (TTPs).",
      "content_html": "<h3><p>Threat Actor Search</p>\n</h3><ul>\n<li><a href=\"https://breach-hq.com/threat-actors\" rel=\"noopener noreferrer\">BreachHQ</a> - Provides a list of all known cyber threat actors also referred to as malicious actors, APT groups or hackers.</li>\n</ul>\n<ul>\n<li><a href=\"https://cybergeist.io/threat-actor\" rel=\"noopener noreferrer\">Cybergeist</a> - Cybergeist.io generates intelligence profiles about key threats and threat context that is actively being discussed and reported upon across the internet.</li>\n</ul>\n<ul>\n<li><a href=\"https://darkwebinformer.com/threat-actor-database/\" rel=\"noopener noreferrer\">Dark Web Informer</a> - Tracking 854 Threat Actors as of 29th of May 2025.</li>\n</ul>\n<ul>\n<li><a href=\"https://lazarus.day/actors/\" rel=\"noopener noreferrer\">lazarusholic</a> - Total 203 threat actors.</li>\n</ul>\n<ul>\n<li><a href=\"https://openhunting.io/threat-library\" rel=\"noopener noreferrer\">OPENHUNTING.IO</a> - Threat Library Collecting Information.</li>\n</ul>\n<ul>\n<li><a href=\"https://socradar.io/labs/threat-actor/\" rel=\"noopener noreferrer\">SOCRadar LABS</a> - Know threat actor tactics, techniques, and past activities. Access detailed profiles and track their activities.Keep up with the latest threats and Tactics, Techniques, and Procedures (TTPs).</li>\n</ul>\n",
      "date_published": "2025-06-07T17:06:57.000Z",
      "date_modified": "2025-06-07T17:06:57.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/PatrickJS/awesome-angular/",
      "title": "Awesome Angular",
      "_slug": "PatrickJS/awesome-angular/",
      "_filepath": "/content/PatrickJS/awesome-angular/README.md",
      "url": "https://www.trackawesomelist.com/PatrickJS/awesome-angular/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Mixed utilities / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [ng-util (⭐34)](https://github.com/ng-util/ng-util) - A set of Angular utilities.",
      "content_html": "<h3><p>Mixed utilities / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/ng-util/ng-util\" rel=\"noopener noreferrer\">ng-util (⭐34)</a> - A set of Angular utilities.</li>\n</ul>\n",
      "date_published": "2025-06-07T16:31:20.000Z",
      "date_modified": "2025-06-07T16:31:20.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/ripienaar/free-for-dev/",
      "title": "Free for Dev",
      "_slug": "ripienaar/free-for-dev/",
      "_filepath": "/content/ripienaar/free-for-dev/README.md",
      "url": "https://www.trackawesomelist.com/ripienaar/free-for-dev/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Miscellaneous\n\n*   [Hosting Checker](https://hostingchecker.co) - Check hosting information such as ASN, ISP, location and more for any domain, website or IP address. Also includes multiple hosting and DNS-related tools.",
      "content_html": "<h3><p>Miscellaneous</p>\n</h3><ul>\n<li><a href=\"https://hostingchecker.co\" rel=\"noopener noreferrer\">Hosting Checker</a> - Check hosting information such as ASN, ISP, location and more for any domain, website or IP address. Also includes multiple hosting and DNS-related tools.</li>\n</ul>\n",
      "date_published": "2025-06-07T14:32:15.000Z",
      "date_modified": "2025-06-07T14:32:15.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/kdeldycke/awesome-falsehood/",
      "title": "Awesome Falsehood",
      "_slug": "kdeldycke/awesome-falsehood/",
      "_filepath": "/content/kdeldycke/awesome-falsehood/README.md",
      "url": "https://www.trackawesomelist.com/kdeldycke/awesome-falsehood/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Transportation\n\n*   [Falsehoods about Aviation](https://flightaware.engineering/falsehoods-programmers-believe-about-aviation/) - Aviation data are less normalized than you might think.",
      "content_html": "<h3><p>Transportation</p>\n</h3><ul>\n<li><a href=\"https://flightaware.engineering/falsehoods-programmers-believe-about-aviation/\" rel=\"noopener noreferrer\">Falsehoods about Aviation</a> - Aviation data are less normalized than you might think.</li>\n</ul>\n",
      "date_published": "2025-06-07T10:44:52.000Z",
      "date_modified": "2025-06-07T10:44:52.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/vuejs/awesome-vue/",
      "title": "Awesome Vue",
      "_slug": "vuejs/awesome-vue/",
      "_filepath": "/content/vuejs/awesome-vue/README.md",
      "url": "https://www.trackawesomelist.com/vuejs/awesome-vue/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Components & Libraries / Utilities\n\n*   [vue-tiny-translation (⭐6)](https://github.com/makio64/vue-tiny-translation) - Super lightweight (0.32KB) reactive translation plugin for Vue 3. [Demo](https://vue-tiny-translation.netlify.app/)\n*   [Loccy](https://loccy.dev) - Effortless Vue-i18n management in VS Code-based editors, featuring smart AI translations and key suggestions.",
      "content_html": "<h3><p>Components &amp; Libraries / Utilities</p>\n</h3><ul>\n<li><a href=\"https://github.com/makio64/vue-tiny-translation\" rel=\"noopener noreferrer\">vue-tiny-translation (⭐6)</a> - Super lightweight (0.32KB) reactive translation plugin for Vue 3. <a href=\"https://vue-tiny-translation.netlify.app/\" rel=\"noopener noreferrer\">Demo</a></li>\n</ul>\n<ul>\n<li><a href=\"https://loccy.dev\" rel=\"noopener noreferrer\">Loccy</a> - Effortless Vue-i18n management in VS Code-based editors, featuring smart AI translations and key suggestions.</li>\n</ul>\n",
      "date_published": "2025-06-07T09:19:26.000Z",
      "date_modified": "2025-06-07T10:09:48.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "title": "Awesome Agi Cocosci",
      "_slug": "YuzheSHI/awesome-agi-cocosci/",
      "_filepath": "/content/YuzheSHI/awesome-agi-cocosci/README.md",
      "url": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Domain Specific Language / Design Practises\n\n*   [Reproducibility in automated chemistry laboratories using computer science abstractions](https://www.nature.com/articles/s44160-024-00649-8) - ***Nature Synthesis***, 2024. \\[[All Versions](https://scholar.google.com/scholar?cluster=2583939834455194329)]. While abstraction is critical for the transferability of automated laboratory science in (bio)chemical and materials sciences, its improper implementation is a technical debt taken against the reproducibility of experimental results. Over the decades, computer science has developed guidelines and strategies for how abstractions are captured in programming languages---particularly concerning the substitutability of implementations of abstracted ideas and the clear definition of the contexts in which abstractions are used. However, few programming languages developed for automated experiments fully leverage the wisdom learned in computer science. To achieve collaborative sharing of scientific knowledge via automated laboratories, the way that experimental protocols are codified and interpreted by machine agents must use abstractions responsibly and with reproducibility, rather than solely transferability, at its core. This Review discusses how computer science principles of abstraction can be translated to create more reproducible automation as an enabler for the acceleration of collaborative research with self-driving laboratories.",
      "content_html": "<h3><p>Domain Specific Language / Design Practises</p>\n</h3><ul>\n<li><a href=\"https://www.nature.com/articles/s44160-024-00649-8\" rel=\"noopener noreferrer\">Reproducibility in automated chemistry laboratories using computer science abstractions</a> - <em><strong>Nature Synthesis</strong></em>, 2024. [<a href=\"https://scholar.google.com/scholar?cluster=2583939834455194329\" rel=\"noopener noreferrer\">All Versions</a>]. While abstraction is critical for the transferability of automated laboratory science in (bio)chemical and materials sciences, its improper implementation is a technical debt taken against the reproducibility of experimental results. Over the decades, computer science has developed guidelines and strategies for how abstractions are captured in programming languages---particularly concerning the substitutability of implementations of abstracted ideas and the clear definition of the contexts in which abstractions are used. However, few programming languages developed for automated experiments fully leverage the wisdom learned in computer science. To achieve collaborative sharing of scientific knowledge via automated laboratories, the way that experimental protocols are codified and interpreted by machine agents must use abstractions responsibly and with reproducibility, rather than solely transferability, at its core. This Review discusses how computer science principles of abstraction can be translated to create more reproducible automation as an enabler for the acceleration of collaborative research with self-driving laboratories.</li>\n</ul>\n",
      "date_published": "2025-06-07T06:28:59.000Z",
      "date_modified": "2025-06-07T06:28:59.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/kdeldycke/awesome-billing/",
      "title": "Awesome Billing",
      "_slug": "kdeldycke/awesome-billing/",
      "_filepath": "/content/kdeldycke/awesome-billing/README.md",
      "url": "https://www.trackawesomelist.com/kdeldycke/awesome-billing/",
      "summary": "23 awesome projects updated",
      "content_text": "\n\n### Basics\n\n*   [Billed for ¥21,120, invoiced at ¥2,112,000 and paid ¥2,112,000](https://xunroll.com/thread/1668082843728367616) - [Get rid of integers and floats for monetary values](https://xunroll.com/thread/1599113889093890049). Use decimals. Or face the risks of anomalous x100 charges.\n*   How to recruit software engineers in this domain? “The trick is to make the accounting/billing/payment department the antechamber of data engineering.” ([source](https://x.com/kdeldycke/status/1422564355799924736))\n\n### Pricing\n\n*   [Axial - Business models](https://archive.ph/BFsZ1) - 38 models for inspiration.\n*   [SaaS pricing explorer](https://saaspricingexplorer.hyperline.co) - A collection of 1000+ pricing pages for inspiration.\n\n### Pricing / Usage-based Pricing\n\n*   [A Survey of Profit Optimization Techniques for Cloud Providers](http://www.cs.newpaltz.edu/~lik/publications/Peijin-Cong-ACM-CS-a-2020.pdf) - “The strategy of improving user service quality is discussed first, followed by the pricing strategy for cloud resources to maximize revenue.”\n*   “Billing is not complex on purpose: it's the price to pay for elasticity.” ([source](https://x.com/kdeldycke/status/1214160678363246592)) - Or why you're likely to get an endless stream of complaining users if choosing utility pricing scheme: while accurate to the (milli-)cent, this model is frustrating for customers not ready to invest time grasping the underlying concepts.\n*   [Allen's interval algebra](https://en.wikipedia.org/wiki/Allen%27s_interval_algebra) - Implementing usage-based pricing is tricky, and this algebra will help you organize temporal reasoning. Also see this [Stack Overflow question with clean schema](https://web.archive.org/web/20240413010618/https://stackoverflow.com/questions/12069082/allens-interval-algebra-operations-in-sql?rq=1).\n\n### Pricing / Strategy\n\n*   \"There are two ways to make money. You can bundle, or you can unbundle.\" - [Jim Barksdale](https://hbr.org/podcast/2014/07/marc-andreessen-and-jim-barksdale-on-how-to-make-money.html#:~:text=in%20business%2C%20there%20are%20two%20ways%20to%20make%20money.%20You%20can%20bundle%2C%20or%20you%20can%20unbundle.).\n*   [Changing the Pricing Model](https://monkeynoodle.org/2024/02/10/changing-the-pricing-model/) - A couple of ways to re-license your product.\n\n### Product Catalog / Market Research\n\n*   [OpenPIM](https://github.com/openpim) - A streamlined open-source project, focusing on PIM-only features.\n\n### Cost Forecast / Market Research\n\n*   [Transforming Financial Forecasting with Data Science and Machine Learning at Uber](https://web.archive.org/web/20221203184815/https://www.uber.com/blog/transforming-financial-forecasting-machine-learning/) - Discusses how Uber apply data science and machine learning in their financial planning platforms.\n*   [How to save money on your AWS bill](https://threadreaderapp.com/thread/1091041507342086144.html) - “The biggest cost savings there are: 1. Turning things off that you're not using; 2. Then spot instances; 3. Then reserved instances.”\n\n### Accounting / Software design and implementation\n\n*   [TigerBeetle (⭐13k)](https://github.com/coilhq/tigerbeetle) - A distributed financial accounting database to ensure that the money either moves, or doesn't move, that it doesn't get lost somewhere in between. It has been [tested on Jepsen](https://jepsen.io/analyses/tigerbeetle-0.16.11), which tested its strong serializability.\n\n### Contracts / Currencies\n\n*   [Is this what Enterprise mean?](https://threadreaderapp.com/thread/1389946268764475394.html) - When contracts, invoicing and payments are not working together, you end up alienating your big enterprise customers. See the associated HN comments [on bulk license purchase](https://news.ycombinator.com/item?id=27053246).\n\n### Coupons and Vouchers / Currencies\n\n*   [China's Pinduoduo reports theft of online discount vouchers to police](https://web.archive.org/web/20230404113232/https://www.reuters.com/article/us-pinduoduo-china/chinas-pinduoduo-reports-theft-of-online-discount-vouchers-to-police-idUSKCN1PE05J) - The next level of fraud: “an online collective exploited a loophole on its platform to ‘steal’ tens of millions of yuan worth of discount vouchers”.\n\n### Taxes / Currencies\n\n*   [2017 Tax Software Developer's Guides](https://web.archive.org/web/20240227073911/https://www.mass.gov/lists/2017-tax-software-developers-guides) - A list of test cases for developers to test their tax code against.\n\n### Invoice / Electronic invoices\n\n*   [EU eInvoicing](https://ec.europa.eu/digital-building-blocks/sites/display/DIGITAL/eInvoicing+HUB) - European standard on electronic invoice.\n\n### Payments / Electronic invoices\n\n*   [The Best Payment Gateway for Startups](https://web.archive.org/web/20230204235716/http://aynuriev.com/best-payment-gateway-startups/) - A benchmark of top payment providers, their pricing and models.\n*   How ACH works: A developer perspective, [part 1](https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-1-339d3e7bea1), [part 2](https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-2-7a890638c4dd), [part 3](https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-3-cd98728cf31f), [part 4](https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-4-718a48cb8d2c), [part 5](https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-5-1d998bbcd82c).\n*   [Why was I charged?](https://wpchrg.wordpress.com) - Under a constant stream of user complaints about payments, WordPress created a dedicated subdomains to help customers understand unexpected transactions. The trick was to add this URL directly in the bank statement.\n*   [Hyperswitch (⭐22k)](https://github.com/juspay/hyperswitch) - Open-source backend for payment processing.\n\n### Payments / Credit Cards\n\n*   ['Is that even legal?': Companies may be sharing new credit or debit card information without you knowing](https://www.cbc.ca/news/business/banking-information-shared-with-third-parties-1.5102931) - Some credit and debit card companies have \"updating service\" that allows new account numbers and expiry dates to be shared with merchants. Visa's implementation is called [VAU](https://developer.visa.com/capabilities/vau) and Mastercard's is [ABU](https://developer.mastercard.com/product/automatic-billing-updater-abu/).\n\n### Payments / Bank Accounts\n\n*   [EPC QR code](https://en.wikipedia.org/wiki/EPC_QR_code) - EU standard for QR codes used to transfer money between bank accounts via SEPA.\n\n### Payments / Online Payments\n\n*   [UPI 101: The Basics](https://blog.setu.co/articles/upi-101-the-basics) - “In this article, we will learn about India's Unified Payments Interface. A four-year-old payment scheme that has been accounting for 40-45% of digital payments across India.”\n\n### Fraud / Cards\n\n*   [Five Fun Fraud Facts](https://web.archive.org/web/20220327085654/https://blog.sift.com/2013/five-ecommerce-fraud-facts/) - Another tiny collection of features we can feed to a ML system to detect fraud. Comments on HN also unearthed [more qualifying signals](https://news.ycombinator.com/item?id=6376350) and [derived geodata on the transaction](https://news.ycombinator.com/item?id=6376221).\n*   [Training an ML model to score chargebacks](https://threadreaderapp.com/thread/1315452323330621440.html) - An example of a platform's network effect, which allows to predict the likelihood of winning a dispute.\n\n### Fraud / Statistics\n\n*   [Method to check if you swapped 2 digits](https://news.ycombinator.com/item?id=39021273) - Standard manual accounting trick employed when isolating an error in a double ledger.\n\n### UX/UI / Billing\n\n*   [We tried to make billing backendless](https://useautumn.com/blog/backendless) - Failed attempt to move the billing experience by from backend to frontend because of security.\n\n### Business Intelligence / Customer Lifetime Value\n\n*   [PyMC-Marketing (⭐890)](https://github.com/pymc-labs/pymc-marketing) - A full-featured Python package to analyze your users based on their \"alive\" and \"dead\" states.\n\n### Business Intelligence / Data Engineering\n\n*   [AI vs Data Science vs Data Engineering](https://web.archive.org/web/20171009002725/https://blog.insightdatascience.com/how-emerging-ai-roles-fit-in-the-data-landscape-d4cd922c389b?gi=ebcf517502c7) - “Data Engineers build data pipelines and infrastructure to ensure a constant availability of transformed data. Data Scientists analyze and build models from these data to develop new product features or drive the bottom line of the business.” As for AI professionals, their focus is on cognitive automation.\n*   [Why not use Double or Float to represent currency?](https://web.archive.org/web/20250524184249/https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency/3730040#answer-3730040) - Because of precision: floats and doubles cannot accurately represent the base 10 multiples that we use for money.\n\n### Business Intelligence / Tools\n\n*   [Meltano (⭐2.1k)](https://github.com/meltano/meltano) - Open source convention-over-configuration product for the whole data lifecycle, all the way from loading data to analyzing it.\n\n### Competitive Analysis / Cloud providers\n\n*   [AWS reserved instances vs saving plan](https://web.archive.org/web/20240602133657/https://www.prosperops.com/wp-content/uploads/2022/01/ris_and_savings_plans.png) - A feature matrix of the different scheme and their average dicounts.\n\n### History / Cloud providers\n\n*   [Product Development as Iterated Taste](https://commoncog.com/product-development-iterated-taste/) - AWS sacrificed the simplicity of subscription pricing for S3 and went instead with a safe cost-following strategy because they had no clue how the users will use their service.",
      "content_html": "<h3><p>Basics</p>\n</h3><ul>\n<li><a href=\"https://xunroll.com/thread/1668082843728367616\" rel=\"noopener noreferrer\">Billed for ¥21,120, invoiced at ¥2,112,000 and paid ¥2,112,000</a> - <a href=\"https://xunroll.com/thread/1599113889093890049\" rel=\"noopener noreferrer\">Get rid of integers and floats for monetary values</a>. Use decimals. Or face the risks of anomalous x100 charges.</li>\n</ul>\n<ul>\n<li>How to recruit software engineers in this domain? “The trick is to make the accounting/billing/payment department the antechamber of data engineering.” (<a href=\"https://x.com/kdeldycke/status/1422564355799924736\" rel=\"noopener noreferrer\">source</a>)</li>\n</ul>\n<h3><p>Pricing</p>\n</h3><ul>\n<li><a href=\"https://archive.ph/BFsZ1\" rel=\"noopener noreferrer\">Axial - Business models</a> - 38 models for inspiration.</li>\n</ul>\n<ul>\n<li><a href=\"https://saaspricingexplorer.hyperline.co\" rel=\"noopener noreferrer\">SaaS pricing explorer</a> - A collection of 1000+ pricing pages for inspiration.</li>\n</ul>\n<h3><p>Pricing / Usage-based Pricing</p>\n</h3><ul>\n<li><a href=\"http://www.cs.newpaltz.edu/~lik/publications/Peijin-Cong-ACM-CS-a-2020.pdf\" rel=\"noopener noreferrer\">A Survey of Profit Optimization Techniques for Cloud Providers</a> - “The strategy of improving user service quality is discussed first, followed by the pricing strategy for cloud resources to maximize revenue.”</li>\n</ul>\n<ul>\n<li>“Billing is not complex on purpose: it's the price to pay for elasticity.” (<a href=\"https://x.com/kdeldycke/status/1214160678363246592\" rel=\"noopener noreferrer\">source</a>) - Or why you're likely to get an endless stream of complaining users if choosing utility pricing scheme: while accurate to the (milli-)cent, this model is frustrating for customers not ready to invest time grasping the underlying concepts.</li>\n</ul>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Allen%27s_interval_algebra\" rel=\"noopener noreferrer\">Allen's interval algebra</a> - Implementing usage-based pricing is tricky, and this algebra will help you organize temporal reasoning. Also see this <a href=\"https://web.archive.org/web/20240413010618/https://stackoverflow.com/questions/12069082/allens-interval-algebra-operations-in-sql?rq=1\" rel=\"noopener noreferrer\">Stack Overflow question with clean schema</a>.</li>\n</ul>\n<h3><p>Pricing / Strategy</p>\n</h3><ul>\n<li>\"There are two ways to make money. You can bundle, or you can unbundle.\" - <a href=\"https://hbr.org/podcast/2014/07/marc-andreessen-and-jim-barksdale-on-how-to-make-money.html#:~:text=in%20business%2C%20there%20are%20two%20ways%20to%20make%20money.%20You%20can%20bundle%2C%20or%20you%20can%20unbundle.\" rel=\"noopener noreferrer\">Jim Barksdale</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://monkeynoodle.org/2024/02/10/changing-the-pricing-model/\" rel=\"noopener noreferrer\">Changing the Pricing Model</a> - A couple of ways to re-license your product.</li>\n</ul>\n<h3><p>Product Catalog / Market Research</p>\n</h3><ul>\n<li><a href=\"https://github.com/openpim\" rel=\"noopener noreferrer\">OpenPIM</a> - A streamlined open-source project, focusing on PIM-only features.</li>\n</ul>\n<h3><p>Cost Forecast / Market Research</p>\n</h3><ul>\n<li><a href=\"https://web.archive.org/web/20221203184815/https://www.uber.com/blog/transforming-financial-forecasting-machine-learning/\" rel=\"noopener noreferrer\">Transforming Financial Forecasting with Data Science and Machine Learning at Uber</a> - Discusses how Uber apply data science and machine learning in their financial planning platforms.</li>\n</ul>\n<ul>\n<li><a href=\"https://threadreaderapp.com/thread/1091041507342086144.html\" rel=\"noopener noreferrer\">How to save money on your AWS bill</a> - “The biggest cost savings there are: 1. Turning things off that you're not using; 2. Then spot instances; 3. Then reserved instances.”</li>\n</ul>\n<h3><p>Accounting / Software design and implementation</p>\n</h3><ul>\n<li><a href=\"https://github.com/coilhq/tigerbeetle\" rel=\"noopener noreferrer\">TigerBeetle (⭐13k)</a> - A distributed financial accounting database to ensure that the money either moves, or doesn't move, that it doesn't get lost somewhere in between. It has been <a href=\"https://jepsen.io/analyses/tigerbeetle-0.16.11\" rel=\"noopener noreferrer\">tested on Jepsen</a>, which tested its strong serializability.</li>\n</ul>\n<h3><p>Contracts / Currencies</p>\n</h3><ul>\n<li><a href=\"https://threadreaderapp.com/thread/1389946268764475394.html\" rel=\"noopener noreferrer\">Is this what Enterprise mean?</a> - When contracts, invoicing and payments are not working together, you end up alienating your big enterprise customers. See the associated HN comments <a href=\"https://news.ycombinator.com/item?id=27053246\" rel=\"noopener noreferrer\">on bulk license purchase</a>.</li>\n</ul>\n<h3><p>Coupons and Vouchers / Currencies</p>\n</h3><ul>\n<li><a href=\"https://web.archive.org/web/20230404113232/https://www.reuters.com/article/us-pinduoduo-china/chinas-pinduoduo-reports-theft-of-online-discount-vouchers-to-police-idUSKCN1PE05J\" rel=\"noopener noreferrer\">China's Pinduoduo reports theft of online discount vouchers to police</a> - The next level of fraud: “an online collective exploited a loophole on its platform to ‘steal’ tens of millions of yuan worth of discount vouchers”.</li>\n</ul>\n<h3><p>Taxes / Currencies</p>\n</h3><ul>\n<li><a href=\"https://web.archive.org/web/20240227073911/https://www.mass.gov/lists/2017-tax-software-developers-guides\" rel=\"noopener noreferrer\">2017 Tax Software Developer's Guides</a> - A list of test cases for developers to test their tax code against.</li>\n</ul>\n<h3><p>Invoice / Electronic invoices</p>\n</h3><ul>\n<li><a href=\"https://ec.europa.eu/digital-building-blocks/sites/display/DIGITAL/eInvoicing+HUB\" rel=\"noopener noreferrer\">EU eInvoicing</a> - European standard on electronic invoice.</li>\n</ul>\n<h3><p>Payments / Electronic invoices</p>\n</h3><ul>\n<li><a href=\"https://web.archive.org/web/20230204235716/http://aynuriev.com/best-payment-gateway-startups/\" rel=\"noopener noreferrer\">The Best Payment Gateway for Startups</a> - A benchmark of top payment providers, their pricing and models.</li>\n</ul>\n<ul>\n<li>How ACH works: A developer perspective, <a href=\"https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-1-339d3e7bea1\" rel=\"noopener noreferrer\">part 1</a>, <a href=\"https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-2-7a890638c4dd\" rel=\"noopener noreferrer\">part 2</a>, <a href=\"https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-3-cd98728cf31f\" rel=\"noopener noreferrer\">part 3</a>, <a href=\"https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-4-718a48cb8d2c\" rel=\"noopener noreferrer\">part 4</a>, <a href=\"https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-5-1d998bbcd82c\" rel=\"noopener noreferrer\">part 5</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://wpchrg.wordpress.com\" rel=\"noopener noreferrer\">Why was I charged?</a> - Under a constant stream of user complaints about payments, WordPress created a dedicated subdomains to help customers understand unexpected transactions. The trick was to add this URL directly in the bank statement.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/juspay/hyperswitch\" rel=\"noopener noreferrer\">Hyperswitch (⭐22k)</a> - Open-source backend for payment processing.</li>\n</ul>\n<h3><p>Payments / Credit Cards</p>\n</h3><ul>\n<li><a href=\"https://www.cbc.ca/news/business/banking-information-shared-with-third-parties-1.5102931\" rel=\"noopener noreferrer\">'Is that even legal?': Companies may be sharing new credit or debit card information without you knowing</a> - Some credit and debit card companies have \"updating service\" that allows new account numbers and expiry dates to be shared with merchants. Visa's implementation is called <a href=\"https://developer.visa.com/capabilities/vau\" rel=\"noopener noreferrer\">VAU</a> and Mastercard's is <a href=\"https://developer.mastercard.com/product/automatic-billing-updater-abu/\" rel=\"noopener noreferrer\">ABU</a>.</li>\n</ul>\n<h3><p>Payments / Bank Accounts</p>\n</h3><ul>\n<li><a href=\"https://en.wikipedia.org/wiki/EPC_QR_code\" rel=\"noopener noreferrer\">EPC QR code</a> - EU standard for QR codes used to transfer money between bank accounts via SEPA.</li>\n</ul>\n<h3><p>Payments / Online Payments</p>\n</h3><ul>\n<li><a href=\"https://blog.setu.co/articles/upi-101-the-basics\" rel=\"noopener noreferrer\">UPI 101: The Basics</a> - “In this article, we will learn about India's Unified Payments Interface. A four-year-old payment scheme that has been accounting for 40-45% of digital payments across India.”</li>\n</ul>\n<h3><p>Fraud / Cards</p>\n</h3><ul>\n<li><a href=\"https://web.archive.org/web/20220327085654/https://blog.sift.com/2013/five-ecommerce-fraud-facts/\" rel=\"noopener noreferrer\">Five Fun Fraud Facts</a> - Another tiny collection of features we can feed to a ML system to detect fraud. Comments on HN also unearthed <a href=\"https://news.ycombinator.com/item?id=6376350\" rel=\"noopener noreferrer\">more qualifying signals</a> and <a href=\"https://news.ycombinator.com/item?id=6376221\" rel=\"noopener noreferrer\">derived geodata on the transaction</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://threadreaderapp.com/thread/1315452323330621440.html\" rel=\"noopener noreferrer\">Training an ML model to score chargebacks</a> - An example of a platform's network effect, which allows to predict the likelihood of winning a dispute.</li>\n</ul>\n<h3><p>Fraud / Statistics</p>\n</h3><ul>\n<li><a href=\"https://news.ycombinator.com/item?id=39021273\" rel=\"noopener noreferrer\">Method to check if you swapped 2 digits</a> - Standard manual accounting trick employed when isolating an error in a double ledger.</li>\n</ul>\n<h3><p>UX/UI / Billing</p>\n</h3><ul>\n<li><a href=\"https://useautumn.com/blog/backendless\" rel=\"noopener noreferrer\">We tried to make billing backendless</a> - Failed attempt to move the billing experience by from backend to frontend because of security.</li>\n</ul>\n<h3><p>Business Intelligence / Customer Lifetime Value</p>\n</h3><ul>\n<li><a href=\"https://github.com/pymc-labs/pymc-marketing\" rel=\"noopener noreferrer\">PyMC-Marketing (⭐890)</a> - A full-featured Python package to analyze your users based on their \"alive\" and \"dead\" states.</li>\n</ul>\n<h3><p>Business Intelligence / Data Engineering</p>\n</h3><ul>\n<li><a href=\"https://web.archive.org/web/20171009002725/https://blog.insightdatascience.com/how-emerging-ai-roles-fit-in-the-data-landscape-d4cd922c389b?gi=ebcf517502c7\" rel=\"noopener noreferrer\">AI vs Data Science vs Data Engineering</a> - “Data Engineers build data pipelines and infrastructure to ensure a constant availability of transformed data. Data Scientists analyze and build models from these data to develop new product features or drive the bottom line of the business.” As for AI professionals, their focus is on cognitive automation.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20250524184249/https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency/3730040#answer-3730040\" rel=\"noopener noreferrer\">Why not use Double or Float to represent currency?</a> - Because of precision: floats and doubles cannot accurately represent the base 10 multiples that we use for money.</li>\n</ul>\n<h3><p>Business Intelligence / Tools</p>\n</h3><ul>\n<li><a href=\"https://github.com/meltano/meltano\" rel=\"noopener noreferrer\">Meltano (⭐2.1k)</a> - Open source convention-over-configuration product for the whole data lifecycle, all the way from loading data to analyzing it.</li>\n</ul>\n<h3><p>Competitive Analysis / Cloud providers</p>\n</h3><ul>\n<li><a href=\"https://web.archive.org/web/20240602133657/https://www.prosperops.com/wp-content/uploads/2022/01/ris_and_savings_plans.png\" rel=\"noopener noreferrer\">AWS reserved instances vs saving plan</a> - A feature matrix of the different scheme and their average dicounts.</li>\n</ul>\n<h3><p>History / Cloud providers</p>\n</h3><ul>\n<li><a href=\"https://commoncog.com/product-development-iterated-taste/\" rel=\"noopener noreferrer\">Product Development as Iterated Taste</a> - AWS sacrificed the simplicity of subscription pricing for S3 and went instead with a safe cost-following strategy because they had no clue how the users will use their service.</li>\n</ul>\n",
      "date_published": "2025-06-07T04:44:14.000Z",
      "date_modified": "2025-06-07T10:52:25.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/ellisonleao/magictools/",
      "title": "Magictools",
      "_slug": "ellisonleao/magictools/",
      "_filepath": "/content/ellisonleao/magictools/README.md",
      "url": "https://www.trackawesomelist.com/ellisonleao/magictools/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Engines and Frameworks / Voxel Editors\n\n*   :tada: [is::Engine (⭐218)](https://github.com/Is-Daouda/is-Engine) - C++, SDL 2 and SFML game engine that allows to create games on Nintendo Switch, Web (HTML 5), Mobile and PC.",
      "content_html": "<h3><p>Engines and Frameworks / Voxel Editors</p>\n</h3><ul>\n<li>🎉 <a href=\"https://github.com/Is-Daouda/is-Engine\" rel=\"noopener noreferrer\">is::Engine (⭐218)</a> - C++, SDL 2 and SFML game engine that allows to create games on Nintendo Switch, Web (HTML 5), Mobile and PC.</li>\n</ul>\n",
      "date_published": "2025-06-07T01:34:35.000Z",
      "date_modified": "2025-06-07T01:34:35.000Z"
    }
  ]
}
