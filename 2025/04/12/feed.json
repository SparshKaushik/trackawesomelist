{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Apr 12, 2025",
  "_site_title": "Track Awesome List",
  "description": "8 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Apr 12, 2025 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/rust-embedded/awesome-embedded-rust/",
      "title": "Awesome Embedded Rust",
      "_slug": "rust-embedded/awesome-embedded-rust/",
      "_filepath": "/content/rust-embedded/awesome-embedded-rust/README.md",
      "url": "https://www.trackawesomelist.com/rust-embedded/awesome-embedded-rust/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [arbitrary-int](https://crates.io/crates/arbitrary-int): This crate implements arbitrary numbers for Rust. Once included, you can use types like `u5` or `u120`\n*   [bitbybit](https://crates.io/crates/bitbybit): macros that create bit fields and bit enums, which are useful in bit packing code (e.g. in drivers or networking code)\n*   [bitfield-struct](https://crates.io/crates/bitfield-struct): Procedural macro for bitfields that allows specifying bitfields as structs",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3><ul>\n<li><a href=\"https://crates.io/crates/arbitrary-int\" rel=\"noopener noreferrer\">arbitrary-int</a>: This crate implements arbitrary numbers for Rust. Once included, you can use types like <code>u5</code> or <code>u120</code></li>\n</ul>\n<ul>\n<li><a href=\"https://crates.io/crates/bitbybit\" rel=\"noopener noreferrer\">bitbybit</a>: macros that create bit fields and bit enums, which are useful in bit packing code (e.g. in drivers or networking code)</li>\n</ul>\n<ul>\n<li><a href=\"https://crates.io/crates/bitfield-struct\" rel=\"noopener noreferrer\">bitfield-struct</a>: Procedural macro for bitfields that allows specifying bitfields as structs</li>\n</ul>\n",
      "date_published": "2025-04-12T21:41:16.000Z",
      "date_modified": "2025-04-12T21:41:16.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/matiassingers/awesome-readme/",
      "title": "Awesome Readme",
      "_slug": "matiassingers/awesome-readme/",
      "_filepath": "/content/matiassingers/awesome-readme/README.md",
      "url": "https://www.trackawesomelist.com/matiassingers/awesome-readme/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Examples\n\n*   [yvann-ba/ft\\_transcendence (‚≠ê6)](https://github.com/yvann-ba/ft_transcendence#readme) - Minimalist Project banner, clear GIF gallery in table layout. Colorful architecture diagram. Clear tech stack description. Team section with contributor avatars.",
      "content_html": "<h3><p>Examples</p>\n</h3><ul>\n<li><a href=\"https://github.com/yvann-ba/ft_transcendence#readme\" rel=\"noopener noreferrer\">yvann-ba/ft_transcendence (‚≠ê6)</a> - Minimalist Project banner, clear GIF gallery in table layout. Colorful architecture diagram. Clear tech stack description. Team section with contributor avatars.</li>\n</ul>\n",
      "date_published": "2025-04-12T19:53:10.000Z",
      "date_modified": "2025-04-12T19:53:10.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/PatrickJS/awesome-angular/",
      "title": "Awesome Angular",
      "_slug": "PatrickJS/awesome-angular/",
      "_filepath": "/content/PatrickJS/awesome-angular/README.md",
      "url": "https://www.trackawesomelist.com/PatrickJS/awesome-angular/",
      "summary": "3 awesome projects updated",
      "content_text": "\n\n### Integrations / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [@elastic/apm-rum-angular](https://www.npmjs.com/package/@elastic/apm-rum-angular) - Elastic APM Real User Monitoring for Angular applications.\n\n### Loaders / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [groupix-spinner-library (‚≠ê2)](https://github.com/ArshdeepGrover/groupix-spinner-library) - A lightweight Angular spinner library for seamless loading animations!\n\n### Material Based / [Google Developer Experts](https://developers.google.com/experts/all/technology/web-technologies)\n\n*   [ngx-core-business (‚≠ê1)](https://github.com/jxcodes/ngx-core-business) - An Angular library in active development, built on top of `@angular/material`. It aims to provide reusable, enterprise-grade UI components and utilities to streamline the development of scalable Angular applications.",
      "content_html": "<h3><p>Integrations / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://www.npmjs.com/package/@elastic/apm-rum-angular\" rel=\"noopener noreferrer\">@elastic/apm-rum-angular</a> - Elastic APM Real User Monitoring for Angular applications.</li>\n</ul>\n<h3><p>Loaders / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/ArshdeepGrover/groupix-spinner-library\" rel=\"noopener noreferrer\">groupix-spinner-library (‚≠ê2)</a> - A lightweight Angular spinner library for seamless loading animations!</li>\n</ul>\n<h3><p>Material Based / <a href=\"https://developers.google.com/experts/all/technology/web-technologies\" rel=\"noopener noreferrer\">Google Developer Experts</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/jxcodes/ngx-core-business\" rel=\"noopener noreferrer\">ngx-core-business (‚≠ê1)</a> - An Angular library in active development, built on top of <code>@angular/material</code>. It aims to provide reusable, enterprise-grade UI components and utilities to streamline the development of scalable Angular applications.</li>\n</ul>\n",
      "date_published": "2025-04-12T18:06:15.000Z",
      "date_modified": "2025-04-12T18:23:27.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/thomasdarimont/awesome-keycloak/",
      "title": "Awesome Keycloak",
      "_slug": "thomasdarimont/awesome-keycloak/",
      "_filepath": "/content/thomasdarimont/awesome-keycloak/README.md",
      "url": "https://www.trackawesomelist.com/thomasdarimont/awesome-keycloak/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Community Extensions\n\n*   [evosec/keycloak-ipaddress-authenticator (‚≠ê32)](https://github.com/evosec/keycloak-ipaddress-authenticator)",
      "content_html": "<h3><p>Community Extensions</p>\n</h3><ul>\n<li><a href=\"https://github.com/evosec/keycloak-ipaddress-authenticator\" rel=\"noopener noreferrer\">evosec/keycloak-ipaddress-authenticator (‚≠ê32)</a></li>\n</ul>\n",
      "date_published": "2025-04-12T16:41:03.000Z",
      "date_modified": "2025-04-12T16:41:03.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/georgezouq/awesome-ai-in-finance/",
      "title": "Awesome Ai in Finance",
      "_slug": "georgezouq/awesome-ai-in-finance/",
      "_filepath": "/content/georgezouq/awesome-ai-in-finance/README.md",
      "url": "https://www.trackawesomelist.com/georgezouq/awesome-ai-in-finance/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### LLMs\n\n*   üåü [AI Hedge Fund (‚≠ê38k)](https://github.com/virattt/ai-hedge-fund) - Explore the use of AI to make trading decisions.",
      "content_html": "<h3><p>LLMs</p>\n</h3><ul>\n<li>üåü <a href=\"https://github.com/virattt/ai-hedge-fund\" rel=\"noopener noreferrer\">AI Hedge Fund (‚≠ê38k)</a> - Explore the use of AI to make trading decisions.</li>\n</ul>\n",
      "date_published": "2025-04-12T13:02:49.000Z",
      "date_modified": "2025-04-12T13:02:49.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/rust-unofficial/awesome-rust/",
      "title": "Awesome Rust",
      "_slug": "rust-unofficial/awesome-rust/",
      "_filepath": "/content/rust-unofficial/awesome-rust/README.md",
      "url": "https://www.trackawesomelist.com/rust-unofficial/awesome-rust/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Libraries / Data processing\n\n*   [pola-rs/polars (‚≠ê34k)](https://github.com/pola-rs/polars) - Fast feature complete DataFrame library [![Lint Rust](https://github.com/pola-rs/polars/actions/workflows/lint-rust.yml/badge.svg)](https://github.com/pola-rs/polars/actions)",
      "content_html": "<h3><p>Libraries / Data processing</p>\n</h3><ul>\n<li><a href=\"https://github.com/pola-rs/polars\" rel=\"noopener noreferrer\">pola-rs/polars (‚≠ê34k)</a> - Fast feature complete DataFrame library <a href=\"https://github.com/pola-rs/polars/actions\" rel=\"noopener noreferrer\"><img src=\"https://github.com/pola-rs/polars/actions/workflows/lint-rust.yml/badge.svg\" alt=\"Lint Rust\" /></a></li>\n</ul>\n",
      "date_published": "2025-04-12T12:25:40.000Z",
      "date_modified": "2025-04-12T12:25:40.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/uscneps/Awesome-European-Tech/",
      "title": "Awesome European Tech",
      "_slug": "uscneps/Awesome-European-Tech/",
      "_filepath": "/content/uscneps/Awesome-European-Tech/README.md",
      "url": "https://www.trackawesomelist.com/uscneps/Awesome-European-Tech/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Index / Productivity Tools\n\n*   [Phonemos](https://www.phonemos.com/) üá®üá≠ - Another European alternative to Notion.",
      "content_html": "<h3><p>Index / Productivity Tools</p>\n</h3><ul>\n<li><a href=\"https://www.phonemos.com/\" rel=\"noopener noreferrer\">Phonemos</a> üá®üá≠ - Another European alternative to Notion.</li>\n</ul>\n",
      "date_published": "2025-04-12T11:11:31.000Z",
      "date_modified": "2025-04-12T11:11:31.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "title": "Awesome Agi Cocosci",
      "_slug": "YuzheSHI/awesome-agi-cocosci/",
      "_filepath": "/content/YuzheSHI/awesome-agi-cocosci/README.md",
      "url": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Abduction / Applications in AI\n\n*   [Abductive Plan Recognition by Extending Bayesian Logic Programs](https://www.cs.utexas.edu/~ml/papers/raghavan.ecml11.pdf) - ***ECML'11***, 2011. \\[[All Versions](https://scholar.google.com/scholar?cluster=7276511797197017483)]. Plan recognition is the task of predicting an agent‚Äôs top-level plans based on its observed actions. It is an abductive reasoning task that involves inferring cause from effect. Most existing approaches to plan recognition use either first-order logic or probabilistic graphical models. While the former cannot handle uncertainty, the latter cannot handle structured representations. In order to overcome these limitations, this work develops an approach to plan recognition using Bayesian Logic Programs (BLPs), which combine first-order logic and Bayesian networks. Since BLPs employ logical deduction to construct the networks, they cannot be used effectively for plan recognition. Therefore, the authors extend BLPs to use logical abduction to construct Bayesian networks and call the resulting model Bayesian Abductive Logic Programs (BALPs). The authors learn the parameters in BALPs using the Expectation Maximization algorithm adapted for BLPs. Finally, the authors present an experimental evaluation of BALPs on three benchmark data sets and compare its performance with the state-of-the-art for plan recognition.",
      "content_html": "<h3><p>Abduction / Applications in AI</p>\n</h3><ul>\n<li><a href=\"https://www.cs.utexas.edu/~ml/papers/raghavan.ecml11.pdf\" rel=\"noopener noreferrer\">Abductive Plan Recognition by Extending Bayesian Logic Programs</a> - <em><strong>ECML'11</strong></em>, 2011. [<a href=\"https://scholar.google.com/scholar?cluster=7276511797197017483\" rel=\"noopener noreferrer\">All Versions</a>]. Plan recognition is the task of predicting an agent‚Äôs top-level plans based on its observed actions. It is an abductive reasoning task that involves inferring cause from effect. Most existing approaches to plan recognition use either first-order logic or probabilistic graphical models. While the former cannot handle uncertainty, the latter cannot handle structured representations. In order to overcome these limitations, this work develops an approach to plan recognition using Bayesian Logic Programs (BLPs), which combine first-order logic and Bayesian networks. Since BLPs employ logical deduction to construct the networks, they cannot be used effectively for plan recognition. Therefore, the authors extend BLPs to use logical abduction to construct Bayesian networks and call the resulting model Bayesian Abductive Logic Programs (BALPs). The authors learn the parameters in BALPs using the Expectation Maximization algorithm adapted for BLPs. Finally, the authors present an experimental evaluation of BALPs on three benchmark data sets and compare its performance with the state-of-the-art for plan recognition.</li>\n</ul>\n",
      "date_published": "2025-04-12T00:48:57.000Z",
      "date_modified": "2025-04-12T00:48:57.000Z"
    }
  ]
}
