{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Feb 23, 2025",
  "_site_title": "Track Awesome List",
  "description": "7 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Feb 23, 2025 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/rust-unofficial/awesome-rust/",
      "title": "Awesome Rust",
      "_slug": "rust-unofficial/awesome-rust/",
      "_filepath": "/content/rust-unofficial/awesome-rust/README.md",
      "url": "https://www.trackawesomelist.com/rust-unofficial/awesome-rust/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Libraries / Reverse engineering\n\n*   [objdiff (⭐235)](https://github.com/encounter/objdiff) - A local diffing tool for decompilation projects",
      "content_html": "<h3><p>Libraries / Reverse engineering</p>\n</h3><ul>\n<li><a href=\"https://github.com/encounter/objdiff\" rel=\"noopener noreferrer\">objdiff (⭐235)</a> - A local diffing tool for decompilation projects</li>\n</ul>\n",
      "date_published": "2025-02-23T16:52:42.000Z",
      "date_modified": "2025-02-23T16:52:42.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/0pandadev/awesome-windows/",
      "title": "Awesome Windows",
      "_slug": "0pandadev/awesome-windows/",
      "_filepath": "/content/0pandadev/awesome-windows/README.md",
      "url": "https://www.trackawesomelist.com/0pandadev/awesome-windows/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Customization\n\n*   [Sucrose Wallpaper Engine (⭐829)](https://github.com/Taiizor/Sucrose) - A live wallpaper app, a free and opensource alternative to Wallpaper Engine. [![Open-Source Software](https://github.com/0PandaDEV/awesome-windows/raw/main/assets/opensource.svg)](https://github.com/Taiizor/Sucrose)\n\n### File Management\n\n*   [TeraCopy](https://www.codesector.com/teracopy) - Faster than windows file transfers.",
      "content_html": "<h3><p>Customization</p>\n</h3><ul>\n<li><a href=\"https://github.com/Taiizor/Sucrose\" rel=\"noopener noreferrer\">Sucrose Wallpaper Engine (⭐829)</a> - A live wallpaper app, a free and opensource alternative to Wallpaper Engine. <a href=\"https://github.com/Taiizor/Sucrose\" rel=\"noopener noreferrer\"><img src=\"https://github.com/0PandaDEV/awesome-windows/raw/main/assets/opensource.svg\" alt=\"Open-Source Software\" /></a></li>\n</ul>\n<h3><p>File Management</p>\n</h3><ul>\n<li><a href=\"https://www.codesector.com/teracopy\" rel=\"noopener noreferrer\">TeraCopy</a> - Faster than windows file transfers.</li>\n</ul>\n",
      "date_published": "2025-02-23T13:12:47.000Z",
      "date_modified": "2025-02-23T13:12:47.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/mcauser/awesome-micropython/",
      "title": "Awesome Micropython",
      "_slug": "mcauser/awesome-micropython/",
      "_filepath": "/content/mcauser/awesome-micropython/README.md",
      "url": "https://www.trackawesomelist.com/mcauser/awesome-micropython/",
      "summary": "3 awesome projects updated",
      "content_text": "\n\n### Communications / ESP-NOW\n\n*   [mp\\_espnow\\_wrapper (⭐5)](https://github.com/cnadler86/mp_espnow_wrapper) - Send and receive data between ESPs over ESP-NOW without worries.\n\n### Display / Graphics\n\n*   [mp\\_jpeg (⭐4)](https://github.com/cnadler86/mp_jpeg) - A very fast MicroPython JPEG encoder and decoder for the ESP32.\n\n### IO / Joystick\n\n*   [Micropython\\_Joystick (⭐1)](https://github.com/cnadler86/Micropython_Joystick) - A simple and fast library for joysticks over ADC.",
      "content_html": "<h3><p>Communications / ESP-NOW</p>\n</h3><ul>\n<li><a href=\"https://github.com/cnadler86/mp_espnow_wrapper\" rel=\"noopener noreferrer\">mp_espnow_wrapper (⭐5)</a> - Send and receive data between ESPs over ESP-NOW without worries.</li>\n</ul>\n<h3><p>Display / Graphics</p>\n</h3><ul>\n<li><a href=\"https://github.com/cnadler86/mp_jpeg\" rel=\"noopener noreferrer\">mp_jpeg (⭐4)</a> - A very fast MicroPython JPEG encoder and decoder for the ESP32.</li>\n</ul>\n<h3><p>IO / Joystick</p>\n</h3><ul>\n<li><a href=\"https://github.com/cnadler86/Micropython_Joystick\" rel=\"noopener noreferrer\">Micropython_Joystick (⭐1)</a> - A simple and fast library for joysticks over ADC.</li>\n</ul>\n",
      "date_published": "2025-02-23T08:46:35.000Z",
      "date_modified": "2025-02-23T08:46:35.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/rockerBOO/awesome-neovim/",
      "title": "Awesome Neovim",
      "_slug": "rockerBOO/awesome-neovim/",
      "_filepath": "/content/rockerBOO/awesome-neovim/README.md",
      "url": "https://www.trackawesomelist.com/rockerBOO/awesome-neovim/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Tree-sitter Supported Colorscheme / Diagnostics\n\n*   [thesimonho/kanagawa-paper.nvim (⭐265)](https://github.com/thesimonho/kanagawa-paper.nvim) - Remixed light and dark Kanagawa colourschemes with muted colors.",
      "content_html": "<h3><p>Tree-sitter Supported Colorscheme / Diagnostics</p>\n</h3><ul>\n<li><a href=\"https://github.com/thesimonho/kanagawa-paper.nvim\" rel=\"noopener noreferrer\">thesimonho/kanagawa-paper.nvim (⭐265)</a> - Remixed light and dark Kanagawa colourschemes with muted colors.</li>\n</ul>\n",
      "date_published": "2025-02-23T08:40:08.000Z",
      "date_modified": "2025-02-23T08:40:08.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/rust-embedded/awesome-embedded-rust/",
      "title": "Awesome Embedded Rust",
      "_slug": "rust-embedded/awesome-embedded-rust/",
      "_filepath": "/content/rust-embedded/awesome-embedded-rust/README.md",
      "url": "https://www.trackawesomelist.com/rust-embedded/awesome-embedded-rust/",
      "summary": "3 awesome projects updated",
      "content_text": "\n\n### Peripheral Access Crates / Espressif\n\n*   [`esp8266`](https://github.com/esp-rs/esp8266) - [![crates.io](https://img.shields.io/crates/v/esp8266.svg)](https://crates.io/crates/esp8266) *note: esp8266 is archived, no further development planned*\n\n### HAL implementation crates / STMicroelectronics\n\n*   [`stm32f1xx-hal`](https://github.com/stm32-rs/stm32f1xx-hal) - [![crates.io](https://img.shields.io/crates/v/stm32f1xx-hal.svg)](https://crates.io/crates/stm32f1xx-hal)\n    *   Can be run on boards like the [Blue-pill](http://web.archive.org/web/20230317010201/https://stm32duinoforum.com/forum/wiki_subdomain/index_title_Blue_Pill.html), [Nucleo-F103RB](http://www.st.com/en/evaluation-tools/nucleo-f103rb.html), and similar boards\n\n### Board support crates / Sodaq\n\n*   [`sodaq_one`](https://crates.io/crates/sodaq_one) - Board support for the [Sodaq one board](https://support.sodaq.com/Boards/One/) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/sodaq_one.svg)](https://crates.io/crates/sodaq_one)",
      "content_html": "<h3><p>Peripheral Access Crates / Espressif</p>\n</h3><ul>\n<li><a href=\"https://github.com/esp-rs/esp8266\" rel=\"noopener noreferrer\"><code>esp8266</code></a> - <a href=\"https://crates.io/crates/esp8266\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/esp8266.svg\" alt=\"crates.io\" /></a> <em>note: esp8266 is archived, no further development planned</em></li>\n</ul>\n<h3><p>HAL implementation crates / STMicroelectronics</p>\n</h3><ul>\n<li><a href=\"https://github.com/stm32-rs/stm32f1xx-hal\" rel=\"noopener noreferrer\"><code>stm32f1xx-hal</code></a> - <a href=\"https://crates.io/crates/stm32f1xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f1xx-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li>Can be run on boards like the <a href=\"http://web.archive.org/web/20230317010201/https://stm32duinoforum.com/forum/wiki_subdomain/index_title_Blue_Pill.html\" rel=\"noopener noreferrer\">Blue-pill</a>, <a href=\"http://www.st.com/en/evaluation-tools/nucleo-f103rb.html\" rel=\"noopener noreferrer\">Nucleo-F103RB</a>, and similar boards</li>\n</ul>\n</li>\n</ul>\n<h3><p>Board support crates / Sodaq</p>\n</h3><ul>\n<li><a href=\"https://crates.io/crates/sodaq_one\" rel=\"noopener noreferrer\"><code>sodaq_one</code></a> - Board support for the <a href=\"https://support.sodaq.com/Boards/One/\" rel=\"noopener noreferrer\">Sodaq one board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/sodaq_one\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/sodaq_one.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n",
      "date_published": "2025-02-23T06:16:33.000Z",
      "date_modified": "2025-02-23T13:52:44.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/playcanvas/awesome-playcanvas/",
      "title": "Awesome Playcanvas",
      "_slug": "playcanvas/awesome-playcanvas/",
      "_filepath": "/content/playcanvas/awesome-playcanvas/README.md",
      "url": "https://www.trackawesomelist.com/playcanvas/awesome-playcanvas/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### PlayCanvas Products\n\n*   [PlayCanvas Engine (⭐10k)](https://github.com/playcanvas/engine) - Open source JavaScript graphics application framework.\n*   [PlayCanvas React (⭐250)](https://github.com/playcanvas/react) - Open source React wrapper for the PlayCanvas Engine.\n*   [PlayCanvas Web Components (⭐42)](https://github.com/playcanvas/web-components) - Open source Web Components wrapper for the PlayCanvas Engine.\n*   [SuperSplat](https://superspl.at/) - Open source platform for editing and publishing 3D Gaussian Splats.\n*   [Model Viewer](https://playcanvas.com/viewer) - Open source model viewer for viewing glTF and PLY (3D Gaussian Splats) files.\n*   [Texture Tool (⭐7)](https://github.com/playcanvas/texture-tool) - Open source tool for reprojecting textures.\n*   [PCUI (⭐705)](https://github.com/playcanvas/pcui) - Open source front-end framework used by the PlayCanvas toolset.\n\n### Community\n\n*   [Forum](https://forum.playcanvas.com/)\n*   [LinkedIn](https://www.linkedin.com/company/playcanvas)\n*   [X](https://x.com/playcanvas)\n*   [YouTube](https://www.youtube.com/@playcanvas)",
      "content_html": "<h3><p>PlayCanvas Products</p>\n</h3><ul>\n<li><a href=\"https://github.com/playcanvas/engine\" rel=\"noopener noreferrer\">PlayCanvas Engine (⭐10k)</a> - Open source JavaScript graphics application framework.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/playcanvas/react\" rel=\"noopener noreferrer\">PlayCanvas React (⭐250)</a> - Open source React wrapper for the PlayCanvas Engine.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/playcanvas/web-components\" rel=\"noopener noreferrer\">PlayCanvas Web Components (⭐42)</a> - Open source Web Components wrapper for the PlayCanvas Engine.</li>\n</ul>\n<ul>\n<li><a href=\"https://superspl.at/\" rel=\"noopener noreferrer\">SuperSplat</a> - Open source platform for editing and publishing 3D Gaussian Splats.</li>\n</ul>\n<ul>\n<li><a href=\"https://playcanvas.com/viewer\" rel=\"noopener noreferrer\">Model Viewer</a> - Open source model viewer for viewing glTF and PLY (3D Gaussian Splats) files.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/playcanvas/texture-tool\" rel=\"noopener noreferrer\">Texture Tool (⭐7)</a> - Open source tool for reprojecting textures.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/playcanvas/pcui\" rel=\"noopener noreferrer\">PCUI (⭐705)</a> - Open source front-end framework used by the PlayCanvas toolset.</li>\n</ul>\n<h3><p>Community</p>\n</h3><ul>\n<li><a href=\"https://forum.playcanvas.com/\" rel=\"noopener noreferrer\">Forum</a></li>\n</ul>\n<ul>\n<li><a href=\"https://www.linkedin.com/company/playcanvas\" rel=\"noopener noreferrer\">LinkedIn</a></li>\n</ul>\n<ul>\n<li><a href=\"https://x.com/playcanvas\" rel=\"noopener noreferrer\">X</a></li>\n</ul>\n<ul>\n<li><a href=\"https://www.youtube.com/@playcanvas\" rel=\"noopener noreferrer\">YouTube</a></li>\n</ul>\n",
      "date_published": "2025-02-23T00:55:27.000Z",
      "date_modified": "2025-02-23T01:27:45.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "title": "Awesome Agi Cocosci",
      "_slug": "YuzheSHI/awesome-agi-cocosci/",
      "_filepath": "/content/YuzheSHI/awesome-agi-cocosci/README.md",
      "url": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Domain Specific Language / Design Automation\n\n*   [AutoDSL: Automated domain-specific language design for structural representation of procedures with constraints](https://aclanthology.org/2024.acl-long.659/) - ***ACL'24***, 2024. \\[[All Versions](https://scholar.google.com/scholar?cluster=588082932830954126)]. \\[[Preprint](https://arxiv.org/abs/2406.12324)]. \\[[Project](https://autodsl.org/procedure/papers/acl24shi.html)]. The original paper on the automated design of DSLs, referred to as AutoDSL. Accurate representation of procedures in restricted scenarios, such as non-standardized scientific experiments, requires precise depiction of constraints. Unfortunately, Domain-Specific Language (DSL), as an effective tool to express constraints structurally, often requires case-by-case hand-crafting, necessitating customized, labor-intensive efforts. To overcome this challenge, this paper introduces the AutoDSL framework to automate DSL-based constraint design across various domains. Utilizing domain specified experimental protocol corpora, AutoDSL optimizes syntactic constraints and abstracts semantic constraints. Quantitative and qualitative analyses of the DSLs designed by AutoDSL across five distinct domains highlight its potential as an auxiliary module for language models, aiming to improve procedural planning and execution.",
      "content_html": "<h3><p>Domain Specific Language / Design Automation</p>\n</h3><ul>\n<li><a href=\"https://aclanthology.org/2024.acl-long.659/\" rel=\"noopener noreferrer\">AutoDSL: Automated domain-specific language design for structural representation of procedures with constraints</a> - <em><strong>ACL'24</strong></em>, 2024. [<a href=\"https://scholar.google.com/scholar?cluster=588082932830954126\" rel=\"noopener noreferrer\">All Versions</a>]. [<a href=\"https://arxiv.org/abs/2406.12324\" rel=\"noopener noreferrer\">Preprint</a>]. [<a href=\"https://autodsl.org/procedure/papers/acl24shi.html\" rel=\"noopener noreferrer\">Project</a>]. The original paper on the automated design of DSLs, referred to as AutoDSL. Accurate representation of procedures in restricted scenarios, such as non-standardized scientific experiments, requires precise depiction of constraints. Unfortunately, Domain-Specific Language (DSL), as an effective tool to express constraints structurally, often requires case-by-case hand-crafting, necessitating customized, labor-intensive efforts. To overcome this challenge, this paper introduces the AutoDSL framework to automate DSL-based constraint design across various domains. Utilizing domain specified experimental protocol corpora, AutoDSL optimizes syntactic constraints and abstracts semantic constraints. Quantitative and qualitative analyses of the DSLs designed by AutoDSL across five distinct domains highlight its potential as an auxiliary module for language models, aiming to improve procedural planning and execution.</li>\n</ul>\n",
      "date_published": "2025-02-23T00:10:03.000Z",
      "date_modified": "2025-02-23T00:10:03.000Z"
    }
  ]
}
