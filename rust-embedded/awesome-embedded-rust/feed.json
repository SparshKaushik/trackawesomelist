{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Track Awesome Embedded Rust Updates Daily",
  "_seo_title": "Track Awesome Embedded Rust (rust-embedded/awesome-embedded-rust) Updates Daily - Track Awesome List",
  "_site_title": "Track Awesome List",
  "description": "Curated list of resources for Embedded and Low-level development in the Rust programming language",
  "home_page_url": "https://www.trackawesomelist.com/rust-embedded/awesome-embedded-rust/",
  "feed_url": "https://www.trackawesomelist.com/rust-embedded/awesome-embedded-rust/feed.json",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/2025/07/03/",
      "title": "Awesome Embedded Rust Updates on Jul 03, 2025",
      "_short_title": "Jul 03, 2025",
      "_slug": "2025/07/03/",
      "summary": "8 awesome projects updated on Jul 03, 2025",
      "_filepath": "/content/2025/07/03/README.md",
      "url": "https://www.trackawesomelist.com/2025/07/03/",
      "date_published": "2025-07-03T07:01:35.000Z",
      "date_modified": "2025-07-03T07:01:35.000Z",
      "content_text": "\n\n### Runtime Crates / Real-time tools\n\n*   [`cortex-m-rt`](https://crates.io/crates/cortex-m-rt) Support for Cortex-M\n*   [`cortex-a-rt`](https://crates.io/crates/cortex-a-rt) Support for Cortex-A\n*   [`cortex-r-rt`](https://crates.io/crates/cortex-r-rt) Support for Cortex-R\n*   [`riscv-rt`](https://crates.io/crates/riscv-rt) Support for RISC-V\n*   [`esp-riscv-rt`](https://crates.io/crates/esp-riscv-rt) Support for RISC-V devices from Espressif (ESP32)\n*   [`xtensa-lx-rt`](https://crates.io/crates/xtensa-lx-rt) Support for Xtensa LX (ESP32)\n*   [`mips-rt`](https://crates.io/crates/mips-rt) Support for MIPS\n*   [`msp430-rt`](https://crates.io/crates/msp430-rt) Support for MSP430",
      "content_html": "<h3><p>Runtime Crates / Real-time tools</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/cortex-m-rt\" rel=\"noopener noreferrer\"><code>cortex-m-rt</code></a> Support for Cortex-M</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/cortex-a-rt\" rel=\"noopener noreferrer\"><code>cortex-a-rt</code></a> Support for Cortex-A</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/cortex-r-rt\" rel=\"noopener noreferrer\"><code>cortex-r-rt</code></a> Support for Cortex-R</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/riscv-rt\" rel=\"noopener noreferrer\"><code>riscv-rt</code></a> Support for RISC-V</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/esp-riscv-rt\" rel=\"noopener noreferrer\"><code>esp-riscv-rt</code></a> Support for RISC-V devices from Espressif (ESP32)</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/xtensa-lx-rt\" rel=\"noopener noreferrer\"><code>xtensa-lx-rt</code></a> Support for Xtensa LX (ESP32)</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mips-rt\" rel=\"noopener noreferrer\"><code>mips-rt</code></a> Support for MIPS</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/msp430-rt\" rel=\"noopener noreferrer\"><code>msp430-rt</code></a> Support for MSP430</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/05/17/",
      "title": "Awesome Embedded Rust Updates on May 17, 2025",
      "_short_title": "May 17, 2025",
      "_slug": "2025/05/17/",
      "summary": "1 awesome projects updated on May 17, 2025",
      "_filepath": "/content/2025/05/17/README.md",
      "url": "https://www.trackawesomelist.com/2025/05/17/",
      "date_published": "2025-05-17T19:17:48.000Z",
      "date_modified": "2025-05-17T19:17:48.000Z",
      "content_text": "\n\n### Peripheral Access Crates / STMicroelectronics\n\n*   [`stm32h7`](https://crates.io/crates/stm32h5) - [![crates.io](https://img.shields.io/crates/v/stm32h5.svg)](https://crates.io/crates/stm32h5)",
      "content_html": "<h3><p>Peripheral Access Crates / STMicroelectronics</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/stm32h5\" rel=\"noopener noreferrer\"><code>stm32h7</code></a> - <a href=\"https://crates.io/crates/stm32h5\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32h5.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/05/12/",
      "title": "Awesome Embedded Rust Updates on May 12, 2025",
      "_short_title": "May 12, 2025",
      "_slug": "2025/05/12/",
      "summary": "6 awesome projects updated on May 12, 2025",
      "_filepath": "/content/2025/05/12/README.md",
      "url": "https://www.trackawesomelist.com/2025/05/12/",
      "date_published": "2025-05-12T11:28:37.000Z",
      "date_modified": "2025-05-12T11:29:19.000Z",
      "content_text": "\n\n### Community / Community Chat Rooms\n\n*   [#mspm0-rs:matrix.org](https://matrix.to/#/#mspm0-rs:matrix.org) - For discussion of using Embedded Rust on Texas Instruments MSPM0 (and MSPS003) devices.\n\n### Tools / Paid and commercially available materials\n\n*   [commitment-issues (⭐11)](https://github.com/dysonltd/commitment-issues) Compile git metadata into your binary.\n\n### Peripheral Access Crates / Texas Instruments\n\n*   [`mspm0-metapac`](https://github.com/mspm0-rs/mspm0-data)\n    *   PAC for all MSPM0 (and MSPS003) microcontrollers. (generated using chiptool)\n\n### HAL implementation crates / Texas Instruments\n\n*   [`embassy-mspm0`](https://github.com/embassy-rs/embassy/tree/main/embassy-mspm0)\n    *   Embassy HAL implementation for all MSPM0 (and MSPS003) microcontrollers.\n\n### Driver crates / WIP\n\n*   [tmag5273 (⭐10)](https://github.com/dysonltd/tmag5273) - Cross-platform no\\_std compatible i2c library for 3-axis Hall Effect sensor.\n*   [paa5100je-pwm3901 (⭐2)](https://github.com/dysonltd/paa5100je-pwm3901) - Cross platform no-std compatible spi async library for an Optical Flow Sensor.",
      "content_html": "<h3><p>Community / Community Chat Rooms</p>\n</h3>\n<ul>\n<li><a href=\"https://matrix.to/#/#mspm0-rs:matrix.org\" rel=\"noopener noreferrer\">#mspm0-rs:matrix.org</a> - For discussion of using Embedded Rust on Texas Instruments MSPM0 (and MSPS003) devices.</li>\n</ul>\n<h3><p>Tools / Paid and commercially available materials</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/dysonltd/commitment-issues\" rel=\"noopener noreferrer\">commitment-issues (⭐11)</a> Compile git metadata into your binary.</li>\n</ul>\n<h3><p>Peripheral Access Crates / Texas Instruments</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/mspm0-rs/mspm0-data\" rel=\"noopener noreferrer\"><code>mspm0-metapac</code></a><ul>\n<li>PAC for all MSPM0 (and MSPS003) microcontrollers. (generated using chiptool)</li>\n</ul>\n</li>\n</ul>\n<h3><p>HAL implementation crates / Texas Instruments</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/embassy-rs/embassy/tree/main/embassy-mspm0\" rel=\"noopener noreferrer\"><code>embassy-mspm0</code></a><ul>\n<li>Embassy HAL implementation for all MSPM0 (and MSPS003) microcontrollers.</li>\n</ul>\n</li>\n</ul>\n<h3><p>Driver crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/dysonltd/tmag5273\" rel=\"noopener noreferrer\">tmag5273 (⭐10)</a> - Cross-platform no_std compatible i2c library for 3-axis Hall Effect sensor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dysonltd/paa5100je-pwm3901\" rel=\"noopener noreferrer\">paa5100je-pwm3901 (⭐2)</a> - Cross platform no-std compatible spi async library for an Optical Flow Sensor.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/04/23/",
      "title": "Awesome Embedded Rust Updates on Apr 23, 2025",
      "_short_title": "Apr 23, 2025",
      "_slug": "2025/04/23/",
      "summary": "1 awesome projects updated on Apr 23, 2025",
      "_filepath": "/content/2025/04/23/README.md",
      "url": "https://www.trackawesomelist.com/2025/04/23/",
      "date_published": "2025-04-23T07:12:30.000Z",
      "date_modified": "2025-04-23T07:12:30.000Z",
      "content_text": "\n\n### Tools / Paid and commercially available materials\n\n*   [rumbac (⭐1)](https://github.com/akavel/rumbac) is a simple CLI flasher for *Arduino Nano 33 BLE Rev2 / Sense Rev2* boards, using the SAM-BA protocol to talk with the Arduino-provided bootloader, porting just enough of the `bossac` tool to Rust",
      "content_html": "<h3><p>Tools / Paid and commercially available materials</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/akavel/rumbac\" rel=\"noopener noreferrer\">rumbac (⭐1)</a> is a simple CLI flasher for <em>Arduino Nano 33 BLE Rev2 / Sense Rev2</em> boards, using the SAM-BA protocol to talk with the Arduino-provided bootloader, porting just enough of the <code>bossac</code> tool to Rust</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/04/12/",
      "title": "Awesome Embedded Rust Updates on Apr 12, 2025",
      "_short_title": "Apr 12, 2025",
      "_slug": "2025/04/12/",
      "summary": "3 awesome projects updated on Apr 12, 2025",
      "_filepath": "/content/2025/04/12/README.md",
      "url": "https://www.trackawesomelist.com/2025/04/12/",
      "date_published": "2025-04-12T21:41:16.000Z",
      "date_modified": "2025-04-12T21:41:16.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [arbitrary-int](https://crates.io/crates/arbitrary-int): This crate implements arbitrary numbers for Rust. Once included, you can use types like `u5` or `u120`\n*   [bitbybit](https://crates.io/crates/bitbybit): macros that create bit fields and bit enums, which are useful in bit packing code (e.g. in drivers or networking code)\n*   [bitfield-struct](https://crates.io/crates/bitfield-struct): Procedural macro for bitfields that allows specifying bitfields as structs",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/arbitrary-int\" rel=\"noopener noreferrer\">arbitrary-int</a>: This crate implements arbitrary numbers for Rust. Once included, you can use types like <code>u5</code> or <code>u120</code></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bitbybit\" rel=\"noopener noreferrer\">bitbybit</a>: macros that create bit fields and bit enums, which are useful in bit packing code (e.g. in drivers or networking code)</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bitfield-struct\" rel=\"noopener noreferrer\">bitfield-struct</a>: Procedural macro for bitfields that allows specifying bitfields as structs</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/04/03/",
      "title": "Awesome Embedded Rust Updates on Apr 03, 2025",
      "_short_title": "Apr 03, 2025",
      "_slug": "2025/04/03/",
      "summary": "1 awesome projects updated on Apr 03, 2025",
      "_filepath": "/content/2025/04/03/README.md",
      "url": "https://www.trackawesomelist.com/2025/04/03/",
      "date_published": "2025-04-03T09:54:26.000Z",
      "date_modified": "2025-04-03T09:54:26.000Z",
      "content_text": "\n\n### Real-time / Real-time Operating System (RTOS)\n\n*   [Ariel OS](https://ariel-os.org/) A modular operating system written in Rust, providing multicore preemptive scheduling and application portability on top of Embassy.",
      "content_html": "<h3><p>Real-time / Real-time Operating System (RTOS)</p>\n</h3>\n<ul>\n<li><a href=\"https://ariel-os.org/\" rel=\"noopener noreferrer\">Ariel OS</a> A modular operating system written in Rust, providing multicore preemptive scheduling and application portability on top of Embassy.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/02/27/",
      "title": "Awesome Embedded Rust Updates on Feb 27, 2025",
      "_short_title": "Feb 27, 2025",
      "_slug": "2025/02/27/",
      "summary": "1 awesome projects updated on Feb 27, 2025",
      "_filepath": "/content/2025/02/27/README.md",
      "url": "https://www.trackawesomelist.com/2025/02/27/",
      "date_published": "2025-02-27T15:15:39.000Z",
      "date_modified": "2025-02-27T15:15:39.000Z",
      "content_text": "\n\n### Real-time / Real-time Operating System (RTOS)\n\n*   [Zephyr](https://docs.zephyrproject.org/latest/develop/languages/rust/index.html) An embedded RTOS, written in C, with support for writing applications in Rust.",
      "content_html": "<h3><p>Real-time / Real-time Operating System (RTOS)</p>\n</h3>\n<ul>\n<li><a href=\"https://docs.zephyrproject.org/latest/develop/languages/rust/index.html\" rel=\"noopener noreferrer\">Zephyr</a> An embedded RTOS, written in C, with support for writing applications in Rust.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/02/23/",
      "title": "Awesome Embedded Rust Updates on Feb 23, 2025",
      "_short_title": "Feb 23, 2025",
      "_slug": "2025/02/23/",
      "summary": "3 awesome projects updated on Feb 23, 2025",
      "_filepath": "/content/2025/02/23/README.md",
      "url": "https://www.trackawesomelist.com/2025/02/23/",
      "date_published": "2025-02-23T06:16:33.000Z",
      "date_modified": "2025-02-23T13:52:44.000Z",
      "content_text": "\n\n### Peripheral Access Crates / Espressif\n\n*   [`esp8266`](https://github.com/esp-rs/esp8266) - [![crates.io](https://img.shields.io/crates/v/esp8266.svg)](https://crates.io/crates/esp8266) *note: esp8266 is archived, no further development planned*\n\n### HAL implementation crates / STMicroelectronics\n\n*   [`stm32f1xx-hal`](https://github.com/stm32-rs/stm32f1xx-hal) - [![crates.io](https://img.shields.io/crates/v/stm32f1xx-hal.svg)](https://crates.io/crates/stm32f1xx-hal)\n    *   Can be run on boards like the [Blue-pill](http://web.archive.org/web/20230317010201/https://stm32duinoforum.com/forum/wiki_subdomain/index_title_Blue_Pill.html), [Nucleo-F103RB](http://www.st.com/en/evaluation-tools/nucleo-f103rb.html), and similar boards\n\n### Board support crates / Sodaq\n\n*   [`sodaq_one`](https://crates.io/crates/sodaq_one) - Board support for the [Sodaq one board](https://support.sodaq.com/Boards/One/) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/sodaq_one.svg)](https://crates.io/crates/sodaq_one)",
      "content_html": "<h3><p>Peripheral Access Crates / Espressif</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/esp-rs/esp8266\" rel=\"noopener noreferrer\"><code>esp8266</code></a> - <a href=\"https://crates.io/crates/esp8266\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/esp8266.svg\" alt=\"crates.io\" /></a> <em>note: esp8266 is archived, no further development planned</em></li>\n</ul>\n<h3><p>HAL implementation crates / STMicroelectronics</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/stm32-rs/stm32f1xx-hal\" rel=\"noopener noreferrer\"><code>stm32f1xx-hal</code></a> - <a href=\"https://crates.io/crates/stm32f1xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f1xx-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li>Can be run on boards like the <a href=\"http://web.archive.org/web/20230317010201/https://stm32duinoforum.com/forum/wiki_subdomain/index_title_Blue_Pill.html\" rel=\"noopener noreferrer\">Blue-pill</a>, <a href=\"http://www.st.com/en/evaluation-tools/nucleo-f103rb.html\" rel=\"noopener noreferrer\">Nucleo-F103RB</a>, and similar boards</li>\n</ul>\n</li>\n</ul>\n<h3><p>Board support crates / Sodaq</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/sodaq_one\" rel=\"noopener noreferrer\"><code>sodaq_one</code></a> - Board support for the <a href=\"https://support.sodaq.com/Boards/One/\" rel=\"noopener noreferrer\">Sodaq one board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/sodaq_one\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/sodaq_one.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/02/09/",
      "title": "Awesome Embedded Rust Updates on Feb 09, 2025",
      "_short_title": "Feb 09, 2025",
      "_slug": "2025/02/09/",
      "summary": "1 awesome projects updated on Feb 09, 2025",
      "_filepath": "/content/2025/02/09/README.md",
      "url": "https://www.trackawesomelist.com/2025/02/09/",
      "date_published": "2025-02-09T09:02:53.000Z",
      "date_modified": "2025-02-09T09:02:53.000Z",
      "content_text": "\n\n### Driver crates / Other\n\n*   [IS31FL3728](https://crates.io/crates/is31fl3728-rs) - I2C -  LED dot matrix display mode (8×8, 5x11, 6x10,7x9) - [github (⭐0)](https://github.com/leonidv/is31fl3728-rs) -[![crates.io](https://img.shields.io/crates/v/is31fl3728-rs)](https://crates.io/crates/is31fl3728-rs)",
      "content_html": "<h3><p>Driver crates / Other</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/is31fl3728-rs\" rel=\"noopener noreferrer\">IS31FL3728</a> - I2C -  LED dot matrix display mode (8×8, 5x11, 6x10,7x9) - <a href=\"https://github.com/leonidv/is31fl3728-rs\" rel=\"noopener noreferrer\">github (⭐0)</a> -<a href=\"https://crates.io/crates/is31fl3728-rs\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/is31fl3728-rs\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/02/07/",
      "title": "Awesome Embedded Rust Updates on Feb 07, 2025",
      "_short_title": "Feb 07, 2025",
      "_slug": "2025/02/07/",
      "summary": "1 awesome projects updated on Feb 07, 2025",
      "_filepath": "/content/2025/02/07/README.md",
      "url": "https://www.trackawesomelist.com/2025/02/07/",
      "date_published": "2025-02-07T18:28:50.000Z",
      "date_modified": "2025-02-07T18:28:50.000Z",
      "content_text": "\n\n### Driver crates / Other\n\n*   [adafruit-seesaw](https://crates.io/crates/adafruit-seesaw) - I2C - Driver for devices running the [Adafruit Seesaw](https://learn.adafruit.com/adafruit-seesaw-atsamd09-breakout/overview) firmware - [![crates.io](https://img.shields.io/crates/v/adafruit-seesaw.svg)](https://crates.io/crates/adafruit-seesaw)",
      "content_html": "<h3><p>Driver crates / Other</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/adafruit-seesaw\" rel=\"noopener noreferrer\">adafruit-seesaw</a> - I2C - Driver for devices running the <a href=\"https://learn.adafruit.com/adafruit-seesaw-atsamd09-breakout/overview\" rel=\"noopener noreferrer\">Adafruit Seesaw</a> firmware - <a href=\"https://crates.io/crates/adafruit-seesaw\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adafruit-seesaw.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/02/01/",
      "title": "Awesome Embedded Rust Updates on Feb 01, 2025",
      "_short_title": "Feb 01, 2025",
      "_slug": "2025/02/01/",
      "summary": "1 awesome projects updated on Feb 01, 2025",
      "_filepath": "/content/2025/02/01/README.md",
      "url": "https://www.trackawesomelist.com/2025/02/01/",
      "date_published": "2025-02-01T22:44:44.000Z",
      "date_modified": "2025-02-01T22:44:44.000Z",
      "content_text": "\n\n### Driver crates / Other\n\n*   [lcd\\_parallel\\_bus](https://crates.io/crates/lcd_parallel_bus) - GPIO - Async and blocking driver for LCDs based on HD44780 parallel bus - [![crates.io](https://img.shields.io/crates/v/lcd_parallel_bus)](https://crates.io/crates/lcd_parallel_bus)",
      "content_html": "<h3><p>Driver crates / Other</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/lcd_parallel_bus\" rel=\"noopener noreferrer\">lcd_parallel_bus</a> - GPIO - Async and blocking driver for LCDs based on HD44780 parallel bus - <a href=\"https://crates.io/crates/lcd_parallel_bus\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lcd_parallel_bus\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/01/24/",
      "title": "Awesome Embedded Rust Updates on Jan 24, 2025",
      "_short_title": "Jan 24, 2025",
      "_slug": "2025/01/24/",
      "summary": "11 awesome projects updated on Jan 24, 2025",
      "_filepath": "/content/2025/01/24/README.md",
      "url": "https://www.trackawesomelist.com/2025/01/24/",
      "date_published": "2025-01-24T10:30:58.000Z",
      "date_modified": "2025-01-24T10:50:42.000Z",
      "content_text": "\n\n### Peripheral Access Crates / Raspberry Pi Silicon\n\n*   [`rp235x-pac`](https://crates.io/crates/rp235x-pac) - Peripheral access API for the RP2350 family of dual-core microcontrollers - [![crates.io](https://img.shields.io/crates/v/rp235x-pac.svg)](https://crates.io/crates/rp235x-pac)\n\n### HAL implementation crates / Raspberry Pi Silicon\n\n*   [`rp235x-hal`](https://crates.io/crates/rp235x-hal) - HAL for the RP2350 family of dual-core microcontrollers (used in the Raspberry Pi Pico 2 etc.) - [![crates.io](https://img.shields.io/crates/v/rp235x-hal.svg)](https://crates.io/crates/rp235x-hal)\n\n### Board support crates / Adafruit\n\n*   [`adafruit-feather-rp2040`](https://github.com/rp-rs/rp-hal-boards) - Board Support Crate for the [Adafruit Feather RP2040](https://www.adafruit.com/product/4884) [![crates.io](https://img.shields.io/crates/v/adafruit-feather-rp2040.svg)](https://crates.io/crates/adafruit-feather-rp2040)\n*   [`adafruit-itsy-bitsy-rp2040`](https://github.com/rp-rs/rp-hal-boards) - Board Support Crate for the [Adafruit ItsyBitsy RP2040](https://www.adafruit.com/product/4888) [![crates.io](https://img.shields.io/crates/v/adafruit-itsy-bitsy-rp2040.svg)](https://crates.io/crates/adafruit-itsy-bitsy-rp2040)\n*   [`adafruit-kb2040`](https://github.com/rp-rs/rp-hal-boards) - Board Support Crate for the [Adafruit KB2040](https://www.adafruit.com/product/5302) [![crates.io](https://img.shields.io/crates/v/adafruit-kb2040.svg)](https://crates.io/crates/adafruit-kb2040)\n*   [`adafruit-macropad`](https://github.com/rp-rs/rp-hal-boards) - Board Support Crate for the [Adafruit Macropad](https://www.adafruit.com/product/5128) [![crates.io](https://img.shields.io/crates/v/adafruit-macropad.svg)](https://crates.io/crates/adafruit-macropad)\n*   [`adafruit-qt-py-rp2040`](https://github.com/rp-rs/rp-hal-boards) - Board Support Crate for the [Adafruit QT Py RP2040](https://www.adafruit.com/product/4900) [![crates.io](https://img.shields.io/crates/v/adafruit-qt-py-rp2040.svg)](https://crates.io/crates/adafruit-qt-py-rp2040)\n\n### Board support crates / Pimoroni\n\n*   [`pimoroni-pico-explorer`](https://github.com/rp-rs/rp-hal-boards) - Board Support for the [Pimoroni Pico Explorer](https://shop.pimoroni.com/products/pico-explorer-base)\n*   [`pimoroni-pico-lipo-16mb`](https://github.com/rp-rs/rp-hal-boards) - Board Support for the [Pimoroni Pico Lipo 16MB](https://shop.pimoroni.com/products/pimoroni-pico-lipo?variant=39335427080275)\n\n### Board support crates / Raspberry Pi\n\n*   [`rp-pico`](https://github.com/rp-rs/rp-hal-boards) - Board Support Crate for the RP2040-based Raspberry Pi Pico.\n\n### Board support crates / Sparkfun\n\n*   [`sparkfun-pro-micro-rp2040`](https://github.com/rp-rs/rp-hal-boards) - Board Support Crate for the RP2040 based Sparkfun Pro Micro.",
      "content_html": "<h3><p>Peripheral Access Crates / Raspberry Pi Silicon</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/rp235x-pac\" rel=\"noopener noreferrer\"><code>rp235x-pac</code></a> - Peripheral access API for the RP2350 family of dual-core microcontrollers - <a href=\"https://crates.io/crates/rp235x-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/rp235x-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>HAL implementation crates / Raspberry Pi Silicon</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/rp235x-hal\" rel=\"noopener noreferrer\"><code>rp235x-hal</code></a> - HAL for the RP2350 family of dual-core microcontrollers (used in the Raspberry Pi Pico 2 etc.) - <a href=\"https://crates.io/crates/rp235x-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/rp235x-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / Adafruit</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/rp-rs/rp-hal-boards\" rel=\"noopener noreferrer\"><code>adafruit-feather-rp2040</code></a> - Board Support Crate for the <a href=\"https://www.adafruit.com/product/4884\" rel=\"noopener noreferrer\">Adafruit Feather RP2040</a> <a href=\"https://crates.io/crates/adafruit-feather-rp2040\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adafruit-feather-rp2040.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rp-rs/rp-hal-boards\" rel=\"noopener noreferrer\"><code>adafruit-itsy-bitsy-rp2040</code></a> - Board Support Crate for the <a href=\"https://www.adafruit.com/product/4888\" rel=\"noopener noreferrer\">Adafruit ItsyBitsy RP2040</a> <a href=\"https://crates.io/crates/adafruit-itsy-bitsy-rp2040\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adafruit-itsy-bitsy-rp2040.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rp-rs/rp-hal-boards\" rel=\"noopener noreferrer\"><code>adafruit-kb2040</code></a> - Board Support Crate for the <a href=\"https://www.adafruit.com/product/5302\" rel=\"noopener noreferrer\">Adafruit KB2040</a> <a href=\"https://crates.io/crates/adafruit-kb2040\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adafruit-kb2040.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rp-rs/rp-hal-boards\" rel=\"noopener noreferrer\"><code>adafruit-macropad</code></a> - Board Support Crate for the <a href=\"https://www.adafruit.com/product/5128\" rel=\"noopener noreferrer\">Adafruit Macropad</a> <a href=\"https://crates.io/crates/adafruit-macropad\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adafruit-macropad.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rp-rs/rp-hal-boards\" rel=\"noopener noreferrer\"><code>adafruit-qt-py-rp2040</code></a> - Board Support Crate for the <a href=\"https://www.adafruit.com/product/4900\" rel=\"noopener noreferrer\">Adafruit QT Py RP2040</a> <a href=\"https://crates.io/crates/adafruit-qt-py-rp2040\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adafruit-qt-py-rp2040.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / Pimoroni</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/rp-rs/rp-hal-boards\" rel=\"noopener noreferrer\"><code>pimoroni-pico-explorer</code></a> - Board Support for the <a href=\"https://shop.pimoroni.com/products/pico-explorer-base\" rel=\"noopener noreferrer\">Pimoroni Pico Explorer</a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rp-rs/rp-hal-boards\" rel=\"noopener noreferrer\"><code>pimoroni-pico-lipo-16mb</code></a> - Board Support for the <a href=\"https://shop.pimoroni.com/products/pimoroni-pico-lipo?variant=39335427080275\" rel=\"noopener noreferrer\">Pimoroni Pico Lipo 16MB</a></li>\n</ul>\n<h3><p>Board support crates / Raspberry Pi</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/rp-rs/rp-hal-boards\" rel=\"noopener noreferrer\"><code>rp-pico</code></a> - Board Support Crate for the RP2040-based Raspberry Pi Pico.</li>\n</ul>\n<h3><p>Board support crates / Sparkfun</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/rp-rs/rp-hal-boards\" rel=\"noopener noreferrer\"><code>sparkfun-pro-micro-rp2040</code></a> - Board Support Crate for the RP2040 based Sparkfun Pro Micro.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/01/13/",
      "title": "Awesome Embedded Rust Updates on Jan 13, 2025",
      "_short_title": "Jan 13, 2025",
      "_slug": "2025/01/13/",
      "summary": "2 awesome projects updated on Jan 13, 2025",
      "_filepath": "/content/2025/01/13/README.md",
      "url": "https://www.trackawesomelist.com/2025/01/13/",
      "date_published": "2025-01-13T10:44:32.000Z",
      "date_modified": "2025-01-13T10:44:32.000Z",
      "content_text": "\n\n### Books, blogs, and training materials / Free and public materials\n\n*   [impl Rust on ESP32 Book](https://esp32.implrust.com/) - A hands-on guide that uses the ESP32 DevKit V1 to demonstrate how to work with various modules and sensors. ([github source (⭐103)](https://github.com/ImplFerris/esp32-book))\n*   [Pico Pico Book](https://pico.implrust.com/) - A hands-on guide that uses the Pico 2 (RP2350) to demonstrate how to work with various modules and sensors. ([github source (⭐57)](https://github.com/ImplFerris/pico-pico))",
      "content_html": "<h3><p>Books, blogs, and training materials / Free and public materials</p>\n</h3>\n<ul>\n<li><a href=\"https://esp32.implrust.com/\" rel=\"noopener noreferrer\">impl Rust on ESP32 Book</a> - A hands-on guide that uses the ESP32 DevKit V1 to demonstrate how to work with various modules and sensors. (<a href=\"https://github.com/ImplFerris/esp32-book\" rel=\"noopener noreferrer\">github source (⭐103)</a>)</li>\n</ul>\n\n<ul>\n<li><a href=\"https://pico.implrust.com/\" rel=\"noopener noreferrer\">Pico Pico Book</a> - A hands-on guide that uses the Pico 2 (RP2350) to demonstrate how to work with various modules and sensors. (<a href=\"https://github.com/ImplFerris/pico-pico\" rel=\"noopener noreferrer\">github source (⭐57)</a>)</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/12/27/",
      "title": "Awesome Embedded Rust Updates on Dec 27, 2024",
      "_short_title": "Dec 27, 2024",
      "_slug": "2024/12/27/",
      "summary": "1 awesome projects updated on Dec 27, 2024",
      "_filepath": "/content/2024/12/27/README.md",
      "url": "https://www.trackawesomelist.com/2024/12/27/",
      "date_published": "2024-12-27T09:32:08.000Z",
      "date_modified": "2024-12-27T09:32:08.000Z",
      "content_text": "\n\n### Peripheral Access Crates / NXP\n\n*   [`mcx-pac`](https://github.com/mcx-rs/mcx-pac) Peripheral Access Crate for NXP MCX Series MCUs - [![crates.io](https://img.shields.io/crates/v/mcx-pac.svg)](https://crates.io/crates/mcx-pac)",
      "content_html": "<h3><p>Peripheral Access Crates / NXP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/mcx-rs/mcx-pac\" rel=\"noopener noreferrer\"><code>mcx-pac</code></a> Peripheral Access Crate for NXP MCX Series MCUs - <a href=\"https://crates.io/crates/mcx-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mcx-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/12/18/",
      "title": "Awesome Embedded Rust Updates on Dec 18, 2024",
      "_short_title": "Dec 18, 2024",
      "_slug": "2024/12/18/",
      "summary": "1 awesome projects updated on Dec 18, 2024",
      "_filepath": "/content/2024/12/18/README.md",
      "url": "https://www.trackawesomelist.com/2024/12/18/",
      "date_published": "2024-12-18T20:20:37.000Z",
      "date_modified": "2024-12-18T20:20:37.000Z",
      "content_text": "\n\n### Panic handling / WIP\n\n*   [`rp2040-panic-usb-boot`](https://crates.io/crates/rp2040-panic-usb-boot): Save panic message in XIP RAM and reboot RP2040 to USB mode [![crates.io](https://img.shields.io/crates/v/rp2040-panic-usb-boot.svg)](https://crates.io/crates/rp2040-panic-usb-boot)",
      "content_html": "<h3><p>Panic handling / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/rp2040-panic-usb-boot\" rel=\"noopener noreferrer\"><code>rp2040-panic-usb-boot</code></a>: Save panic message in XIP RAM and reboot RP2040 to USB mode <a href=\"https://crates.io/crates/rp2040-panic-usb-boot\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/rp2040-panic-usb-boot.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/12/04/",
      "title": "Awesome Embedded Rust Updates on Dec 04, 2024",
      "_short_title": "Dec 04, 2024",
      "_slug": "2024/12/04/",
      "summary": "2 awesome projects updated on Dec 04, 2024",
      "_filepath": "/content/2024/12/04/README.md",
      "url": "https://www.trackawesomelist.com/2024/12/04/",
      "date_published": "2024-12-04T08:04:19.000Z",
      "date_modified": "2024-12-04T08:07:45.000Z",
      "content_text": "\n\n### Driver crates / Other\n\n*   [AEM10900](https://crates.io/crates/aem10900) - I2C - Energy Harvester - [github (⭐1)](https://github.com/trembel/aem10900) - [![crates.io](https://img.shields.io/crates/v/aem10900.svg)](https://crates.io/crates/aem10900)\n*   [FH101RF](https://crates.io/crates/fh101rf) - SPI - Wake-Up Radio - [github (⭐3)](https://github.com/trembel/fh101rf) - [![crates.io](https://img.shields.io/crates/v/fh101rf.svg)](https://crates.io/crates/fh101rf)",
      "content_html": "<h3><p>Driver crates / Other</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/aem10900\" rel=\"noopener noreferrer\">AEM10900</a> - I2C - Energy Harvester - <a href=\"https://github.com/trembel/aem10900\" rel=\"noopener noreferrer\">github (⭐1)</a> - <a href=\"https://crates.io/crates/aem10900\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/aem10900.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/fh101rf\" rel=\"noopener noreferrer\">FH101RF</a> - SPI - Wake-Up Radio - <a href=\"https://github.com/trembel/fh101rf\" rel=\"noopener noreferrer\">github (⭐3)</a> - <a href=\"https://crates.io/crates/fh101rf\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/fh101rf.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/11/28/",
      "title": "Awesome Embedded Rust Updates on Nov 28, 2024",
      "_short_title": "Nov 28, 2024",
      "_slug": "2024/11/28/",
      "summary": "12 awesome projects updated on Nov 28, 2024",
      "_filepath": "/content/2024/11/28/README.md",
      "url": "https://www.trackawesomelist.com/2024/11/28/",
      "date_published": "2024-11-28T11:14:17.000Z",
      "date_modified": "2024-11-28T11:14:17.000Z",
      "content_text": "\n\n### Panic handling / WIP\n\n*   [`dont_panic`](https://crates.io/crates/dont_panic) + [`dont_panic_slice`](https://crates.io/crates/dont_panic_slice): panic!()-like macro that causes linking error instead of panicking. May be used to statically ensure some code won't panic. [![crates.io](https://img.shields.io/crates/v/dont_panic.svg)](https://crates.io/crates/dont_panic) + [![crates.io](https://img.shields.io/crates/v/dont_panic_slice.svg)](https://crates.io/crates/dont_panic_slice)\n*   [`no-panic`](https://crates.io/crates/no-panic): Attribute macro to require that the compiler prove a function can't ever panic. [![crates.io](https://img.shields.io/crates/v/no-panic.svg)](https://crates.io/crates/no-panic)\n*   [`panic-abort`](https://crates.io/crates/panic-abort): Causes an abort on panics (nightly-only) [![crates.io](https://img.shields.io/crates/v/panic-abort.svg)](https://crates.io/crates/panic-abort)\n*   [`panic-halt`](https://crates.io/crates/panic-halt): Halts the processor on panics [![crates.io](https://img.shields.io/crates/v/panic-halt.svg)](https://crates.io/crates/panic-halt)\n*   [`panic-itm`](https://github.com/rust-embedded/cortex-m/tree/master/panic-itm): Prints the panic through the chip's ITM to a debugger attached to the SWO pin (Cortex-M with ITM only)\n*   [`panic-never`](https://crates.io/crates/panic-never): This crate guarantees that your application is free of panicking branches. [![crates.io](https://img.shields.io/crates/v/panic-never.svg)](https://crates.io/crates/panic-never)\n*   [`panic-persist`](https://crates.io/crates/panic-persist): A panic handler crate inspired by `panic-ramdump` that logs panic messages to a region of RAM defined by the user, allowing for discovery of panic messages post-mortem using normal program control flow. - [![crates.io](https://img.shields.io/crates/v/panic-persist.svg)](https://crates.io/crates/panic-persist)\n*   [`panic-probe`](https://crates.io/crates/panic-probe): A panic handler that exits `probe-run` with an error code. [![crates.io](https://img.shields.io/crates/v/panic-probe.svg)](https://crates.io/crates/panic-probe)\n*   [`panic-ramdump`](https://crates.io/crates/panic-ramdump): Writes the panic message into the beginning of RAM and enters an infinite loop; the message can be extracted by attaching a debugger (Cortex-M only) [![crates.io](https://img.shields.io/crates/v/panic-ramdump.svg)](https://crates.io/crates/panic-ramdump)\n*   [`panic-rtt`](https://crates.io/crates/panic_rtt): Set the panicking behavior to log to a JLINK debugger and loop. [![crates.io](https://img.shields.io/crates/v/panic_rtt.svg)](https://crates.io/crates/panic_rtt)\n*   [`panic-rtt-target`](https://crates.io/crates/panic-rtt-target): Logs panic messages over RTT. Uses `rtt-target`. [![crates.io](https://img.shields.io/crates/v/panic-rtt-target.svg)](https://crates.io/crates/panic-rtt-target)\n*   [`panic-semihosting`](https://github.com/rust-embedded/panic-semihosting): Prints the panic message via semihosting to an attached debugger (Cortex-M only)",
      "content_html": "<h3><p>Panic handling / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/dont_panic\" rel=\"noopener noreferrer\"><code>dont_panic</code></a> + <a href=\"https://crates.io/crates/dont_panic_slice\" rel=\"noopener noreferrer\"><code>dont_panic_slice</code></a>: panic!()-like macro that causes linking error instead of panicking. May be used to statically ensure some code won't panic. <a href=\"https://crates.io/crates/dont_panic\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/dont_panic.svg\" alt=\"crates.io\" /></a> + <a href=\"https://crates.io/crates/dont_panic_slice\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/dont_panic_slice.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/no-panic\" rel=\"noopener noreferrer\"><code>no-panic</code></a>: Attribute macro to require that the compiler prove a function can't ever panic. <a href=\"https://crates.io/crates/no-panic\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/no-panic.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/panic-abort\" rel=\"noopener noreferrer\"><code>panic-abort</code></a>: Causes an abort on panics (nightly-only) <a href=\"https://crates.io/crates/panic-abort\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/panic-abort.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/panic-halt\" rel=\"noopener noreferrer\"><code>panic-halt</code></a>: Halts the processor on panics <a href=\"https://crates.io/crates/panic-halt\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/panic-halt.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rust-embedded/cortex-m/tree/master/panic-itm\" rel=\"noopener noreferrer\"><code>panic-itm</code></a>: Prints the panic through the chip's ITM to a debugger attached to the SWO pin (Cortex-M with ITM only)</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/panic-never\" rel=\"noopener noreferrer\"><code>panic-never</code></a>: This crate guarantees that your application is free of panicking branches. <a href=\"https://crates.io/crates/panic-never\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/panic-never.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/panic-persist\" rel=\"noopener noreferrer\"><code>panic-persist</code></a>: A panic handler crate inspired by <code>panic-ramdump</code> that logs panic messages to a region of RAM defined by the user, allowing for discovery of panic messages post-mortem using normal program control flow. - <a href=\"https://crates.io/crates/panic-persist\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/panic-persist.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/panic-probe\" rel=\"noopener noreferrer\"><code>panic-probe</code></a>: A panic handler that exits <code>probe-run</code> with an error code. <a href=\"https://crates.io/crates/panic-probe\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/panic-probe.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/panic-ramdump\" rel=\"noopener noreferrer\"><code>panic-ramdump</code></a>: Writes the panic message into the beginning of RAM and enters an infinite loop; the message can be extracted by attaching a debugger (Cortex-M only) <a href=\"https://crates.io/crates/panic-ramdump\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/panic-ramdump.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/panic_rtt\" rel=\"noopener noreferrer\"><code>panic-rtt</code></a>: Set the panicking behavior to log to a JLINK debugger and loop. <a href=\"https://crates.io/crates/panic_rtt\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/panic_rtt.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/panic-rtt-target\" rel=\"noopener noreferrer\"><code>panic-rtt-target</code></a>: Logs panic messages over RTT. Uses <code>rtt-target</code>. <a href=\"https://crates.io/crates/panic-rtt-target\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/panic-rtt-target.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rust-embedded/panic-semihosting\" rel=\"noopener noreferrer\"><code>panic-semihosting</code></a>: Prints the panic message via semihosting to an attached debugger (Cortex-M only)</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/11/22/",
      "title": "Awesome Embedded Rust Updates on Nov 22, 2024",
      "_short_title": "Nov 22, 2024",
      "_slug": "2024/11/22/",
      "summary": "1 awesome projects updated on Nov 22, 2024",
      "_filepath": "/content/2024/11/22/README.md",
      "url": "https://www.trackawesomelist.com/2024/11/22/",
      "date_published": "2024-11-22T12:46:34.000Z",
      "date_modified": "2024-11-22T12:46:34.000Z",
      "content_text": "\n\n### License / WIP\n\n*   [CC0 1.0 Universal License](https://creativecommons.org/publicdomain/zero/1.0/legalcode) aka [LICENSE-CC0](https://github.com/rust-embedded/awesome-embedded-rust/blob/master/README.md/LICENSE-CC0)",
      "content_html": "<h3><p>License / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://creativecommons.org/publicdomain/zero/1.0/legalcode\" rel=\"noopener noreferrer\">CC0 1.0 Universal License</a> aka <a href=\"https://github.com/rust-embedded/awesome-embedded-rust/blob/master/README.md/LICENSE-CC0\" rel=\"noopener noreferrer\">LICENSE-CC0</a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/11/21/",
      "title": "Awesome Embedded Rust Updates on Nov 21, 2024",
      "_short_title": "Nov 21, 2024",
      "_slug": "2024/11/21/",
      "summary": "12 awesome projects updated on Nov 21, 2024",
      "_filepath": "/content/2024/11/21/README.md",
      "url": "https://www.trackawesomelist.com/2024/11/21/",
      "date_published": "2024-11-21T23:59:44.000Z",
      "date_modified": "2024-11-21T23:59:44.000Z",
      "content_text": "\n\n### Tools / Paid and commercially available materials\n\n*   [xargo (⭐1.1k)](https://github.com/japaric/xargo) Rust package manager with support for non-default std libraries — build Rust runtime for your embedded system.\n    *   xargo is great, but since it's in maintenance mode, [cargo-xbuild (⭐264)](https://github.com/rust-osdev/cargo-xbuild) is catching up as its intended replacement.\n*   [Knurling Tools](https://knurling.ferrous-systems.com/tools/) are developed by [Ferrous Systems](https://ferrous-systems.com) to ease the development process for building, debugging, and testing embedded Rust systems. These tools include:\n    *   [defmt (⭐1k)](https://github.com/knurling-rs/defmt): a highly efficient logging framework that targets resource-constrained devices, like microcontrollers.\n    *   [derive-mmio (⭐9)](https://github.com/knurling-rs/derive-mmio): Creating MMIO-friendly APIs for embedded peripherals.\n    *   [flip-link (⭐350)](https://github.com/knurling-rs/flip-link), a linker wrapper that provides stack overflow protection without an MMU by flipping the standard memory layout of ARM Cortex-M programs\n    *   [app-template (⭐358)](https://github.com/knurling-rs/app-template), a `cargo-generate` powered project template for quickly setting up new projects using the Knurling Tools.\n    *   [defmt-test (⭐9)](https://github.com/knurling-rs/defmt-test), an embedded test harness that lets you write and run unit tests as if you were using the built-in `#[test]` attribute, but will run on an embedded target\n\n### Real-time / Real-time tools\n\n*   [RTIC v1.0](https://rtic.rs/1/book/en/) Real-Time Interrupt-driven Concurrency — A concurrency framework for building real-time systems:\n    *   [cortex-m rtic (⭐2k)](https://github.com/rtic-rs/cortex-m-rtic) RTIC framework for ARM Cortex-M microcontrollers\n    *   [msp430 rtfm (⭐11)](https://github.com/japaric/msp430-rtfm) RTFM framework for MSP430 MCUs\n\n### Peripheral Access Crates / MSP430\n\n*   [`msp430g2553`](https://github.com/pftbest/msp430g2553) Peripheral access API for MSP430G2553 microcontrollers (generated using svd2rust)\n    *   [msp430 quickstart (⭐44)](https://github.com/rust-embedded/msp430-quickstart) some examples for msp430\n\n### HAL implementation crates / STMicroelectronics\n\n*   [`stm32f4xx-hal`](https://crates.io/crates/stm32f4xx-hal) - [![crates.io](https://img.shields.io/crates/v/stm32f4xx-hal.svg)](https://crates.io/crates/stm32f4xx-hal)\n    *   Generic HAL implementation for all MCUs of the stm32f4 series\n*   [`stm32f7xx-hal`](https://crates.io/crates/stm32f7xx-hal) - [![crates.io](https://img.shields.io/crates/v/stm32f7xx-hal.svg)](https://crates.io/crates/stm32f7xx-hal)\n    *   Generic HAL implementation for all MCUs of the stm32f7 series\n*   [`stm32h7xx-hal`](https://crates.io/crates/stm32h7xx-hal) - [![crates.io](https://img.shields.io/crates/v/stm32h7xx-hal.svg)](https://crates.io/crates/stm32h7xx-hal)\n    *   HAL implementation for the STMicro STM32H7xx family of microcontrollers\n*   [`stm32l0xx-hal`](https://crates.io/crates/stm32l0xx-hal) - [![crates.io](https://img.shields.io/crates/v/stm32l0xx-hal.svg)](https://crates.io/crates/stm32l0xx-hal)\n    *   HAL implementation for the the STMicro STM32L0xx family of microcontrollers\n*   [`stm32l4xx-hal`](https://crates.io/crates/stm32l4xx-hal) - [![crates.io](https://img.shields.io/crates/v/stm32l4xx-hal.svg)](https://crates.io/crates/stm32l4xx-hal)\n    *   Generic hal support for stm32l4 devices, has examples that can run on boards like the [Nucleo-L432KC](https://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-eval-tools/stm32-mcu-eval-tools/stm32-mcu-nucleo/nucleo-l432kc.html), [Solo](https://solokeys.com/), and similar boards\n*   [`stm32-hal`](https://crates.io/crates/stm32-hal2) - [![crates.io](https://img.shields.io/crates/v/stm32-hal2.svg)](https://crates.io/crates/stm32-hal2)\n    *   HAL implementation for STM32 devices across multiple families, with a focus on newer ones like L4, L5, and H7.\n\n### HAL implementation crates / MSP430\n\n*   [`msp430fr2x5x-hal`](https://crates.io/crates/msp430fr2x5x-hal)\n    *   HAL implementation for the MSP430FR2x5x family of microcontrollers\n\n### HAL implementation crates / Silicon Labs\n\n*   [`tomu-hal`](https://github.com/fudanchii/imtomu-rs)\n    *   HAL implementation targeted for [Tomu](https://tomu.im/) USB board with EFM32HG309F64 ARMv6-M core. Has support to configure [tomu bootloader (⭐75)](https://github.com/im-tomu/tomu-bootloader) directly from an application via the `toboot_config` macro.",
      "content_html": "<h3><p>Tools / Paid and commercially available materials</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/japaric/xargo\" rel=\"noopener noreferrer\">xargo (⭐1.1k)</a> Rust package manager with support for non-default std libraries — build Rust runtime for your embedded system.<ul>\n<li>xargo is great, but since it's in maintenance mode, <a href=\"https://github.com/rust-osdev/cargo-xbuild\" rel=\"noopener noreferrer\">cargo-xbuild (⭐264)</a> is catching up as its intended replacement.</li>\n</ul>\n</li>\n</ul>\n\n<ul>\n<li><a href=\"https://knurling.ferrous-systems.com/tools/\" rel=\"noopener noreferrer\">Knurling Tools</a> are developed by <a href=\"https://ferrous-systems.com\" rel=\"noopener noreferrer\">Ferrous Systems</a> to ease the development process for building, debugging, and testing embedded Rust systems. These tools include:<ul>\n<li><a href=\"https://github.com/knurling-rs/defmt\" rel=\"noopener noreferrer\">defmt (⭐1k)</a>: a highly efficient logging framework that targets resource-constrained devices, like microcontrollers.</li>\n<li><a href=\"https://github.com/knurling-rs/derive-mmio\" rel=\"noopener noreferrer\">derive-mmio (⭐9)</a>: Creating MMIO-friendly APIs for embedded peripherals.</li>\n<li><a href=\"https://github.com/knurling-rs/flip-link\" rel=\"noopener noreferrer\">flip-link (⭐350)</a>, a linker wrapper that provides stack overflow protection without an MMU by flipping the standard memory layout of ARM Cortex-M programs</li>\n<li><a href=\"https://github.com/knurling-rs/app-template\" rel=\"noopener noreferrer\">app-template (⭐358)</a>, a <code>cargo-generate</code> powered project template for quickly setting up new projects using the Knurling Tools.</li>\n<li><a href=\"https://github.com/knurling-rs/defmt-test\" rel=\"noopener noreferrer\">defmt-test (⭐9)</a>, an embedded test harness that lets you write and run unit tests as if you were using the built-in <code>#[test]</code> attribute, but will run on an embedded target</li>\n</ul>\n</li>\n</ul>\n<h3><p>Real-time / Real-time tools</p>\n</h3>\n<ul>\n<li><a href=\"https://rtic.rs/1/book/en/\" rel=\"noopener noreferrer\">RTIC v1.0</a> Real-Time Interrupt-driven Concurrency — A concurrency framework for building real-time systems:<ul>\n<li><a href=\"https://github.com/rtic-rs/cortex-m-rtic\" rel=\"noopener noreferrer\">cortex-m rtic (⭐2k)</a> RTIC framework for ARM Cortex-M microcontrollers</li>\n<li><a href=\"https://github.com/japaric/msp430-rtfm\" rel=\"noopener noreferrer\">msp430 rtfm (⭐11)</a> RTFM framework for MSP430 MCUs</li>\n</ul>\n</li>\n</ul>\n<h3><p>Peripheral Access Crates / MSP430</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/pftbest/msp430g2553\" rel=\"noopener noreferrer\"><code>msp430g2553</code></a> Peripheral access API for MSP430G2553 microcontrollers (generated using svd2rust)<ul>\n<li><a href=\"https://github.com/rust-embedded/msp430-quickstart\" rel=\"noopener noreferrer\">msp430 quickstart (⭐44)</a> some examples for msp430</li>\n</ul>\n</li>\n</ul>\n<h3><p>HAL implementation crates / STMicroelectronics</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f4xx-hal\" rel=\"noopener noreferrer\"><code>stm32f4xx-hal</code></a> - <a href=\"https://crates.io/crates/stm32f4xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f4xx-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li>Generic HAL implementation for all MCUs of the stm32f4 series</li>\n</ul>\n</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f7xx-hal\" rel=\"noopener noreferrer\"><code>stm32f7xx-hal</code></a> - <a href=\"https://crates.io/crates/stm32f7xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f7xx-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li>Generic HAL implementation for all MCUs of the stm32f7 series</li>\n</ul>\n</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32h7xx-hal\" rel=\"noopener noreferrer\"><code>stm32h7xx-hal</code></a> - <a href=\"https://crates.io/crates/stm32h7xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32h7xx-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li>HAL implementation for the STMicro STM32H7xx family of microcontrollers</li>\n</ul>\n</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32l0xx-hal\" rel=\"noopener noreferrer\"><code>stm32l0xx-hal</code></a> - <a href=\"https://crates.io/crates/stm32l0xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32l0xx-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li>HAL implementation for the the STMicro STM32L0xx family of microcontrollers</li>\n</ul>\n</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32l4xx-hal\" rel=\"noopener noreferrer\"><code>stm32l4xx-hal</code></a> - <a href=\"https://crates.io/crates/stm32l4xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32l4xx-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li>Generic hal support for stm32l4 devices, has examples that can run on boards like the <a href=\"https://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-eval-tools/stm32-mcu-eval-tools/stm32-mcu-nucleo/nucleo-l432kc.html\" rel=\"noopener noreferrer\">Nucleo-L432KC</a>, <a href=\"https://solokeys.com/\" rel=\"noopener noreferrer\">Solo</a>, and similar boards</li>\n</ul>\n</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32-hal2\" rel=\"noopener noreferrer\"><code>stm32-hal</code></a> - <a href=\"https://crates.io/crates/stm32-hal2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32-hal2.svg\" alt=\"crates.io\" /></a><ul>\n<li>HAL implementation for STM32 devices across multiple families, with a focus on newer ones like L4, L5, and H7.</li>\n</ul>\n</li>\n</ul>\n<h3><p>HAL implementation crates / MSP430</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/msp430fr2x5x-hal\" rel=\"noopener noreferrer\"><code>msp430fr2x5x-hal</code></a><ul>\n<li>HAL implementation for the MSP430FR2x5x family of microcontrollers</li>\n</ul>\n</li>\n</ul>\n<h3><p>HAL implementation crates / Silicon Labs</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/fudanchii/imtomu-rs\" rel=\"noopener noreferrer\"><code>tomu-hal</code></a><ul>\n<li>HAL implementation targeted for <a href=\"https://tomu.im/\" rel=\"noopener noreferrer\">Tomu</a> USB board with EFM32HG309F64 ARMv6-M core. Has support to configure <a href=\"https://github.com/im-tomu/tomu-bootloader\" rel=\"noopener noreferrer\">tomu bootloader (⭐75)</a> directly from an application via the <code>toboot_config</code> macro.</li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/10/13/",
      "title": "Awesome Embedded Rust Updates on Oct 13, 2024",
      "_short_title": "Oct 13, 2024",
      "_slug": "2024/10/13/",
      "summary": "391 awesome projects updated on Oct 13, 2024",
      "_filepath": "/content/2024/10/13/README.md",
      "url": "https://www.trackawesomelist.com/2024/10/13/",
      "date_published": "2024-10-13T19:34:20.000Z",
      "date_modified": "2024-10-13T20:39:26.000Z",
      "content_text": "\n\n### Tools / Paid and commercially available materials\n\n*   [edc2svd (⭐7)](https://github.com/kiffie/edc2svd) Generate SVD files for PIC32 devices from EDC files. - [![crates.io](https://img.shields.io/crates/v/edc2svd.svg)](https://crates.io/crates/edc2svd)\n*   [embedded-hal-mock](https://crates.io/crates/embedded-hal-mock) Mock implementation of `embedded-hal` traits for testing without accessing real hardware. - [![crates.io](https://img.shields.io/crates/v/embedded-hal-mock.svg)](https://crates.io/crates/embedded-hal-mock)\n*   [bindgen](https://crates.io/crates/bindgen) Automatically generates Rust FFI bindings to C and C++ libraries. - [![crates.io](https://img.shields.io/crates/v/bindgen.svg)](https://crates.io/crates/bindgen)\n*   [cargo-flash](https://probe.rs/docs/tools/cargo-flash/) A small cargo subcommand to download your binary to your target chip. - [![crates.io](https://img.shields.io/crates/v/cargo-flash.svg)](https://crates.io/crates/cargo-flash)\n*   [cargo-embed](https://probe.rs/docs/tools/cargo-embed/) A superset of cargo-flash with additional useful features like configuration file support, an RTT terminal, or a GDB server. - [![crates.io](https://img.shields.io/crates/v/cargo-embed.svg)](https://crates.io/crates/cargo-embed)\n*   [cargo-hf2 (⭐53)](https://github.com/jacobrosenthal/hf2-rs)  A small cargo subcommand to download cargo builds to Microsoft UF2 bootloaders via HID USB . - [![crates.io](https://img.shields.io/crates/v/cargo-hf2.svg)](https://crates.io/crates/cargo-hf2)\n*   [espflash (⭐596)](https://github.com/esp-rs/espflash) Serial flasher utility for Espressif SoCs and modules. - [![crates.io](https://img.shields.io/crates/v/espflash.svg)](https://crates.io/crates/espflash)\n*   [espup (⭐301)](https://github.com/esp-rs/espup) Tool for installing and maintaining Espressif Rust ecosystem. - [![crates.io](https://img.shields.io/crates/v/espup.svg)](https://crates.io/crates/espup)\n*   [uf2 (⭐28)](https://github.com/sajattack/uf2conv-rs) Converts binary files to Microsoft's UF2 format for copying over to mass storage device uf2 bootloaders - [![crates.io](https://img.shields.io/crates/v/uf2.svg)](https://crates.io/crates/uf2)\n*   [svd-generator](https://codeberg.org/weathered-steel/svd-generator) CLI tool to parse flattened device tree files, and create a SVD file. - [![crates.io](https://img.shields.io/crates/v/svd-generator.svg)](https://crates.io/crates/svd-generator)\n\n### Peripheral Access Crates / Microchip\n\n*   [`sam3x8e`](https://crates.io/crates/sam3x8e) Peripheral access API for Atmel SAMD3X8E microcontrollers (generated using svd2rust)  - [![crates.io](https://img.shields.io/crates/v/sam3x8e.svg)](https://crates.io/crates/sam3x8e)\n*   [`pic32-pac`](https://crates.io/crates/pic32mx2xx) Peripheral access API for PIC32MX1/2xx - [![crates.io](https://img.shields.io/crates/v/pic32mx2xx)](https://crates.io/crates/pic32mx2xx)\n\n### Peripheral Access Crates / Nordic\n\n*   [`nrf51`](https://crates.io/crates/nrf51) Peripheral access API for nRF51 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/nrf51.svg)](https://crates.io/crates/nrf51)\n*   [`nrf52810-pac`](https://crates.io/crates/nrf52810-pac) - Peripheral access API for the nRF52810 microcontroller (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/nrf52810-pac.svg)](https://crates.io/crates/nrf52810-pac)\n*   [`nrf52811-pac`](https://crates.io/crates/nrf52811-pac) - Peripheral access API for the nRF52811 microcontroller (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/nrf52811-pac.svg)](https://crates.io/crates/nrf52811-pac)\n*   [`nrf52832-pac`](https://crates.io/crates/nrf52832-pac) - Peripheral access API for the nRF52832 microcontroller (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/nrf52832-pac.svg)](https://crates.io/crates/nrf52832-pac)\n*   [`nrf52833-pac`](https://crates.io/crates/nrf52833-pac) - Peripheral access API for the nRF52833 microcontroller (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/nrf52833-pac.svg)](https://crates.io/crates/nrf52833-pac)\n*   [`nrf52840-pac`](https://crates.io/crates/nrf52840-pac) - Peripheral access API for the nRF52840 microcontroller (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/nrf52840-pac.svg)](https://crates.io/crates/nrf52840-pac)\n*   [`nrf5340-app-pac`](https://crates.io/crates/nrf5340-app-pac) - Peripheral access API for the nRF5340 application core (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/nrf5340-app-pac.svg)](https://crates.io/crates/nrf5340-app-pac)\n*   [`nrf5340-net-pac`](https://crates.io/crates/nrf5340-net-pac) - Peripheral access API for the nRF5340 network core (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/nrf5340-net-pac.svg)](https://crates.io/crates/nrf5340-net-pac)\n*   [`nrf9160-pac`](https://crates.io/crates/nrf9160-pac) - Peripheral access API for the nRF9160 system-in-package (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/nrf9160-pac.svg)](https://crates.io/crates/nrf9160-pac)\n\n### Peripheral Access Crates / NXP\n\n*   [`k64`](https://crates.io/crates/k64) - [![crates.io](https://img.shields.io/crates/v/k64.svg)](https://crates.io/crates/k64)\n*   [`lpc11uxx`](https://crates.io/crates/lpc11uxx) - [![crates.io](https://img.shields.io/crates/v/lpc11uxx.svg)](https://crates.io/crates/lpc11uxx)\n*   [`lpc55s6x-pac`](https://crates.io/crates/lpc55s6x-pac) - [![crates.io](https://img.shields.io/crates/v/lpc55s6x-pac.svg)](https://crates.io/crates/lpc55s6x-pac)\n*   [`lpc82x-pac`](https://crates.io/crates/lpc82x-pac) - [![crates.io](https://img.shields.io/crates/v/lpc82x-pac.svg)](https://crates.io/crates/lpc82x-pac)\n*   [`lpc845-pac`](https://crates.io/crates/lpc845-pac) - [![crates.io](https://img.shields.io/crates/v/lpc845-pac.svg)](https://crates.io/crates/lpc845-pac)\n*   [`mkw41z`](https://crates.io/crates/mkw41z) - [![crates.io](https://img.shields.io/crates/v/mkw41z.svg)](https://crates.io/crates/mkw41z)\n*   [`imxrt-ral`](https://github.com/imxrt-rs/imxrt-rs) Register access layer for i.MX RT series. -  [![crates.io](https://img.shields.io/crates/v/imxrt-ral.svg)](https://crates.io/crates/imxrt-ral)\n*   [`SKEAZN642`](https://crates.io/crates/SKEAZN642) Peripheral access API for KEA64 family microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/SKEAZN642.svg)](https://crates.io/crates/SKEAZN642)\n\n### Peripheral Access Crates / Raspberry Pi Silicon\n\n*   [`rp2040-pac`](https://crates.io/crates/rp2040-pac) - Peripheral access API for the RP2040 dual-core system-on-chip (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/rp2040-pac.svg)](https://crates.io/crates/rp2040-pac)\n\n### Peripheral Access Crates / SiFive\n\n*   [`e310x`](https://github.com/riscv-rust/e310x) - svd2rust generated interface to SiFive [Freedom E310](https://www.sifive.com/cores/e31) MCUs - [![crates.io](https://img.shields.io/crates/v/e310x.svg)](https://crates.io/crates/e310x)\n\n### Peripheral Access Crates / Silicon Labs\n\n*   [`efm32pg12-pac`](https://crates.io/crates/efm32pg12-pac) - Peripheral access API for Silicon Labs EFM32PG12 microcontrollers - [![crates.io](https://img.shields.io/crates/v/efm32pg12-pac)](https://crates.io/crates/efm32pg12-pac)\n*   [`efm32g-pac`](https://crates.io/crates/efm32g-pac) - [![crates.io](https://img.shields.io/crates/v/efm32g-pac)](https://crates.io/crates/efm32g-pac)\n*   [`efm32gg-pac`](https://crates.io/crates/efm32gg-pac) - [![crates.io](https://img.shields.io/crates/v/efm32gg-pac)](https://crates.io/crates/efm32gg-pac)\n*   [`efm32gg11b-pac`](https://crates.io/crates/efm32gg11b-pac) - [![crates.io](https://img.shields.io/crates/v/efm32gg11b-pac)](https://crates.io/crates/efm32gg11b-pac)\n*   [`efm32gg12b-pac`](https://crates.io/crates/efm32gg12b-pac) - [![crates.io](https://img.shields.io/crates/v/efm32gg12b-pac)](https://crates.io/crates/efm32gg12b-pac)\n*   [`efm32hg-pac`](https://crates.io/crates/efm32hg-pac) - [![crates.io](https://img.shields.io/crates/v/efm32hg-pac)](https://crates.io/crates/efm32hg-pac)\n*   [`efm32jg1b-pac`](https://crates.io/crates/efm32jg1b-pac) - [![crates.io](https://img.shields.io/crates/v/efm32jg1b-pac)](https://crates.io/crates/efm32jg1b-pac)\n*   [`efm32jg12b-pac`](https://crates.io/crates/efm32jg12b-pac) - [![crates.io](https://img.shields.io/crates/v/efm32jg12b-pac)](https://crates.io/crates/efm32jg12b-pac)\n*   [`efm32lg-pac`](https://crates.io/crates/efm32lg-pac) - [![crates.io](https://img.shields.io/crates/v/efm32lg-pac)](https://crates.io/crates/efm32lg-pac)\n*   [`efm32pg-pac`](https://crates.io/crates/efm32pg-pac) - [![crates.io](https://img.shields.io/crates/v/efm32pg-pac)](https://crates.io/crates/efm32pg-pac)\n*   [`efm32pg22-pac`](https://crates.io/crates/efm32pg22-pac) - [![crates.io](https://img.shields.io/crates/v/efm32pg22-pac)](https://crates.io/crates/efm32pg22-pac)\n*   [`efm32pg23-pac`](https://crates.io/crates/efm32pg23-pac) - [![crates.io](https://img.shields.io/crates/v/efm32pg23-pac)](https://crates.io/crates/efm32pg23-pac)\n*   [`efm32tg-pac`](https://crates.io/crates/efm32tg-pac) - [![crates.io](https://img.shields.io/crates/v/efm32tg-pac)](https://crates.io/crates/efm32tg-pac)\n*   [`efm32tg11b-pac`](https://crates.io/crates/efm32tg11b-pac) - [![crates.io](https://img.shields.io/crates/v/efm32tg11b-pac)](https://crates.io/crates/efm32tg11b-pac)\n*   [`efm32wg-pac`](https://crates.io/crates/efm32wg-pac) - [![crates.io](https://img.shields.io/crates/v/efm32wg-pac)](https://crates.io/crates/efm32wg-pac)\n*   [`efm32zg-pac`](https://crates.io/crates/efm32zg-pac) - [![crates.io](https://img.shields.io/crates/v/efm32zg-pac)](https://crates.io/crates/efm32zg-pac)\n\n### Peripheral Access Crates / StarFive\n\n*   [`j71xx-pac`](https://crates.io/crates/jh71xx-pac) - svd2rust generated interface to StarFive [JH71xx](https://www.starfivetech.com/en/site/soc) MCUs - [![crates.io](https://img.shields.io/crates/v/jh71xx-pac.svg)](https://crates.io/crates/jh71xx-pac)\n\n### Peripheral Access Crates / STMicroelectronics\n\n*   [`stm32f0`](https://crates.io/crates/stm32f0) - [![crates.io](https://img.shields.io/crates/v/stm32f0.svg)](https://crates.io/crates/stm32f0)\n*   [`stm32f1`](https://crates.io/crates/stm32f1) - [![crates.io](https://img.shields.io/crates/v/stm32f1.svg)](https://crates.io/crates/stm32f1)\n*   [`stm32f2`](https://crates.io/crates/stm32f2) - [![crates.io](https://img.shields.io/crates/v/stm32f2.svg)](https://crates.io/crates/stm32f2)\n*   [`stm32f3`](https://crates.io/crates/stm32f3) - [![crates.io](https://img.shields.io/crates/v/stm32f3.svg)](https://crates.io/crates/stm32f3)\n*   [`stm32f4`](https://crates.io/crates/stm32f4) - [![crates.io](https://img.shields.io/crates/v/stm32f4.svg)](https://crates.io/crates/stm32f4)\n*   [`stm32f7`](https://crates.io/crates/stm32f7) - [![crates.io](https://img.shields.io/crates/v/stm32f7.svg)](https://crates.io/crates/stm32f7)\n*   [`stm32g0`](https://crates.io/crates/stm32g0) - [![crates.io](https://img.shields.io/crates/v/stm32g0.svg)](https://crates.io/crates/stm32g0)\n*   [`stm32g4`](https://crates.io/crates/stm32g4) - [![crates.io](https://img.shields.io/crates/v/stm32g4.svg)](https://crates.io/crates/stm32g4)\n*   [`stm32h7`](https://crates.io/crates/stm32h7) - [![crates.io](https://img.shields.io/crates/v/stm32h7.svg)](https://crates.io/crates/stm32h7)\n*   [`stm32l0`](https://crates.io/crates/stm32l0) - [![crates.io](https://img.shields.io/crates/v/stm32l0.svg)](https://crates.io/crates/stm32l0)\n*   [`stm32l1`](https://crates.io/crates/stm32l1) - [![crates.io](https://img.shields.io/crates/v/stm32l1.svg)](https://crates.io/crates/stm32l1)\n*   [`stm32l4`](https://crates.io/crates/stm32l4) - [![crates.io](https://img.shields.io/crates/v/stm32l4.svg)](https://crates.io/crates/stm32l4)\n\n### Peripheral Access Crates / MSP430\n\n*   [`msp430fr6972`](https://crates.io/crates/msp430fr6972) - [![crates.io](https://img.shields.io/crates/v/msp430fr6972)](https://crates.io/crates/msp430fr6972)\n\n### Peripheral Access Crates / Espressif\n\n*   [`esp32`](https://github.com/esp-rs/esp-pacs/tree/main/esp32) - [![crates.io](https://img.shields.io/crates/v/esp32.svg)](https://crates.io/crates/esp32)\n*   [`esp32c2`](https://github.com/esp-rs/esp-pacs/tree/main/esp32c2) - [![crates.io](https://img.shields.io/crates/v/esp32c2.svg)](https://crates.io/crates/esp32c2)\n*   [`esp32c3`](https://github.com/esp-rs/esp-pacs/tree/main/esp32c3) - [![crates.io](https://img.shields.io/crates/v/esp32c3.svg)](https://crates.io/crates/esp32c3)\n*   [`esp32c6`](https://github.com/esp-rs/esp-pacs/tree/main/esp32c6) - [![crates.io](https://img.shields.io/crates/v/esp32c6.svg)](https://crates.io/crates/esp32c6)\n*   [`esp32h2`](https://github.com/esp-rs/esp-pacs/tree/main/esp32h2) - [![crates.io](https://img.shields.io/crates/v/esp32h2.svg)](https://crates.io/crates/esp32h2)\n*   [`esp32s2`](https://github.com/esp-rs/esp-pacs/tree/main/esp32s2) - [![crates.io](https://img.shields.io/crates/v/esp32s2.svg)](https://crates.io/crates/esp32s2)\n*   [`esp32s3`](https://github.com/esp-rs/esp-pacs/tree/main/esp32s3) - [![crates.io](https://img.shields.io/crates/v/esp32s3.svg)](https://crates.io/crates/esp32s3)\n\n### Peripheral Access Crates / GigaDevice\n\n*   [`gd32vf103-pac`](https://github.com/riscv-rust/gd32vf103-pac) Peripheral access API for GD32VF103 RISC-V microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/gd32vf103-pac.svg)](https://crates.io/crates/gd32vf103-pac)\n*   [`gd32e2`](https://crates.io/crates/gd32e2) Peripheral access API for GD32E23x Cortex-M23 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/gd32e2.svg)](https://crates.io/crates/gd32e2)\n*   [`gd32f1`](https://crates.io/crates/gd32f1) Peripheral access API for GD32F1x0 Cortex-M3 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/gd32f1.svg)](https://crates.io/crates/gd32f1)\n*   [`gd32f2`](https://crates.io/crates/gd32f2) Peripheral access API for GD32F20x Cortex-M3 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/gd32f2.svg)](https://crates.io/crates/gd32f2)\n\n### Peripheral Access Crates / XMC\n\n*   [`xmc4100`](https://github.com/xmc-rs/xmc4100) - [![crates.io](https://img.shields.io/crates/v/xmc4100.svg)](https://crates.io/crates/xmc4100)\n*   [`xmc4200`](https://github.com/xmc-rs/xmc4200) - [![crates.io](https://img.shields.io/crates/v/xmc4200.svg)](https://crates.io/crates/xmc4200)\n*   [`xmc4300`](https://github.com/xmc-rs/xmc4300) - [![crates.io](https://img.shields.io/crates/v/xmc4300.svg)](https://crates.io/crates/xmc4300)\n*   [`xmc4400`](https://github.com/xmc-rs/xmc4400) - [![crates.io](https://img.shields.io/crates/v/xmc4400.svg)](https://crates.io/crates/xmc4400)\n*   [`xmc4500`](https://github.com/xmc-rs/xmc4500) - [![crates.io](https://img.shields.io/crates/v/xmc4500.svg)](https://crates.io/crates/xmc4500)\n*   [`xmc4700`](https://github.com/xmc-rs/xmc4700) - [![crates.io](https://img.shields.io/crates/v/xmc4700.svg)](https://crates.io/crates/xmc4700)\n*   [`xmc4800`](https://github.com/xmc-rs/xmc4800) - [![crates.io](https://img.shields.io/crates/v/xmc4800.svg)](https://crates.io/crates/xmc4800)\n\n### Peripheral Access Crates / Vorago\n\n*   [`va108xx`](https://egit.irs.uni-stuttgart.de/rust/va108xx-rs) - [![crates.io](https://img.shields.io/crates/v/va108xx.svg)](https://crates.io/crates/va108xx)\n*   [`va416xx`](https://egit.irs.uni-stuttgart.de/rust/va416xx-rs) - [![crates.io](https://img.shields.io/crates/v/va416xx.svg)](https://crates.io/crates/va416xx)\n\n### Peripheral Access Crates / Wiznet\n\n*   [`w7500x-pac`](https://crates.io/crates/w7500x-pac) Peripheral Access Crate for Wiznet's W7500x microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/w7500x-pac.svg)](https://crates.io/crates/w7500x-pac)\n\n### Peripheral Access Crates / Renesas\n\n*   [`ra2a1`](https://github.com/ra-rs/ra/tree/main/pac/ra2a1) Peripheral Access Crate for ra2a1 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra2a1.svg)](https://crates.io/crates/ra2a1)\n*   [`ra2e1`](https://github.com/ra-rs/ra/tree/main/pac/ra2e1) Peripheral Access Crate for ra2e1 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra2e1.svg)](https://crates.io/crates/ra2e1)\n*   [`ra2e2`](https://github.com/ra-rs/ra/tree/main/pac/ra2e2) Peripheral Access Crate for ra2e2 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra2e2.svg)](https://crates.io/crates/ra2e2)\n*   [`ra2l1`](https://github.com/ra-rs/ra/tree/main/pac/ra2l1) Peripheral Access Crate for ra2l1 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra2l1.svg)](https://crates.io/crates/ra2l1)\n*   [`ra4e1`](https://github.com/ra-rs/ra/tree/main/pac/ra4e1) Peripheral Access Crate for ra4e1 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra4e1.svg)](https://crates.io/crates/ra4e1)\n*   [`ra4m1`](https://github.com/ra-rs/ra/tree/main/pac/ra4m1) Peripheral Access Crate for ra4m1 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra4m1.svg)](https://crates.io/crates/ra4m1)\n*   [`ra4m2`](https://github.com/ra-rs/ra/tree/main/pac/ra4m2) Peripheral Access Crate for ra4m2 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra4m2.svg)](https://crates.io/crates/ra4m2)\n*   [`ra4m3`](https://github.com/ra-rs/ra/tree/main/pac/ra4m3) Peripheral Access Crate for ra4m3 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra4m3.svg)](https://crates.io/crates/ra4m3)\n*   [`ra4w1`](https://github.com/ra-rs/ra/tree/main/pac/ra4w1) Peripheral Access Crate for ra4w1 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra4w1.svg)](https://crates.io/crates/ra4w1)\n*   [`ra6e1`](https://github.com/ra-rs/ra/tree/main/pac/ra6e1) Peripheral Access Crate for ra6e1 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra6e1.svg)](https://crates.io/crates/ra6e1)\n*   [`ra6m1`](https://github.com/ra-rs/ra/tree/main/pac/ra6m1) Peripheral Access Crate for ra6m1 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra6m1.svg)](https://crates.io/crates/ra6m1)\n*   [`ra6m2`](https://github.com/ra-rs/ra/tree/main/pac/ra6m2) Peripheral Access Crate for ra6m2 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra6m2.svg)](https://crates.io/crates/ra6m2)\n*   [`ra6m3`](https://github.com/ra-rs/ra/tree/main/pac/ra6m3) Peripheral Access Crate for ra6m3 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra6m3.svg)](https://crates.io/crates/ra6m3)\n*   [`ra6m4`](https://github.com/ra-rs/ra/tree/main/pac/ra6m4) Peripheral Access Crate for ra6m4 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra6m4.svg)](https://crates.io/crates/ra6m4)\n*   [`ra6t1`](https://github.com/ra-rs/ra/tree/main/pac/ra6t1) Peripheral Access Crate for ra6t1 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra6t1.svg)](https://crates.io/crates/ra6t1)\n*   [`ra6t2`](https://github.com/ra-rs/ra/tree/main/pac/ra6t2) Peripheral Access Crate for ra6t2 microcontrollers (generated using svd2rust) - [![crates.io](https://img.shields.io/crates/v/ra6t2.svg)](https://crates.io/crates/ra6t2)\n*   [`da14531`](https://crates.io/crates/da14531) Peripheral Access Crate for DA14531 Ultra-Low Power BT 5.1 System-on-Chip - [![crates.io](https://img.shields.io/crates/v/da14531.svg)](https://crates.io/crates/da14531)\n\n### HAL implementation crates / OS\n\n*   [`linux-embedded-hal`](https://crates.io/crates/linux-embedded-hal) for embedded Linux systems like the Raspberry Pi. - [![crates.io](https://img.shields.io/crates/v/linux-embedded-hal.svg)](https://crates.io/crates/linux-embedded-hal)\n*   [`freebsd-embedded-hal`](https://crates.io/crates/freebsd-embedded-hal) for embedded (or [not](https://www.freebsd.org/cgi/man.cgi?query=cp2112\\&sektion=4)) FreeBSD systems. - [![crates.io](https://img.shields.io/crates/v/freebsd-embedded-hal.svg)](https://crates.io/crates/freebsd-embedded-hal)\n\n### HAL implementation crates / Microchip\n\n*   [`atsam4-hal`](https://crates.io/crates/atsam4-hal) - HAL for SAM4E, SAM4N and SAM4S - [![crates.io](https://img.shields.io/crates/v/atsam4-hal.svg)](https://crates.io/crates/atsam4-hal)\n*   [`atsamd-hal`](https://crates.io/crates/atsamd-hal) - HAL for SAMD11, SAMD21, SAMD51 and SAME54 - [![crates.io](https://img.shields.io/crates/v/atsamd-hal.svg)](https://crates.io/crates/atsamd-hal)\n*   [`atsamx7x-hal`](https://crates.io/crates/atsamx7x-hal) - HAL for SAM S70/E70/V70/V71-based devices - [![crates.io](https://img.shields.io/crates/v/atsamx7x-hal.svg)](https://crates.io/crates/atsamx7x-hal)\n*   [`pic32-hal`](https://crates.io/crates/pic32-hal) - HAL for PIC32MX - [![crates.io](https://img.shields.io/crates/v/pic32-hal.svg)](https://crates.io/crates/pic32-hal)\n\n### HAL implementation crates / Nordic\n\n*   [`nrf51-hal`](https://crates.io/crates/nrf51-hal) - [![crates.io](https://img.shields.io/crates/v/nrf51-hal.svg)](https://crates.io/crates/nrf51-hal)\n*   [`nrf52810-hal`](https://crates.io/crates/nrf52810-hal) - [![crates.io](https://img.shields.io/crates/v/nrf52810-hal.svg)](https://crates.io/crates/nrf52810-hal)\n*   [`nrf52811-hal`](https://crates.io/crates/nrf52811-hal) - [![crates.io](https://img.shields.io/crates/v/nrf52811-hal.svg)](https://crates.io/crates/nrf52811-hal)\n*   [`nrf52832-hal`](https://crates.io/crates/nrf52832-hal) - [![crates.io](https://img.shields.io/crates/v/nrf52832-hal.svg)](https://crates.io/crates/nrf52832-hal)\n*   [`nrf52833-hal`](https://crates.io/crates/nrf52833-hal) - [![crates.io](https://img.shields.io/crates/v/nrf52833-hal.svg)](https://crates.io/crates/nrf52833-hal)\n*   [`nrf52840-hal`](https://crates.io/crates/nrf52840-hal) - [![crates.io](https://img.shields.io/crates/v/nrf52840-hal.svg)](https://crates.io/crates/nrf52840-hal)\n*   [`nrf9160-hal`](https://crates.io/crates/nrf9160-hal) - [![crates.io](https://img.shields.io/crates/v/nrf9160-hal.svg)](https://crates.io/crates/nrf9160-hal)\n\n### HAL implementation crates / NXP\n\n*   [`mkw41z-hal`](https://crates.io/crates/mkw41z-hal) - [![crates.io](https://img.shields.io/crates/v/mkw41z-hal.svg)](https://crates.io/crates/mkw41z-hal)\n*   [`imxrt-hal`](https://github.com/imxrt-rs/imxrt-rs) - HAL for i.MX RT series. -  [![crates.io](https://img.shields.io/crates/v/imxrt-hal.svg)](https://crates.io/crates/imxrt-hal)\n\n### HAL implementation crates / Raspberry Pi Silicon\n\n*   [`rp2040-hal`](https://crates.io/crates/rp2040-hal) - HAL for the RP2040 dual-core system-on-chip - [![crates.io](https://img.shields.io/crates/v/rp2040-hal.svg)](https://crates.io/crates/rp2040-hal)\n\n### HAL implementation crates / SiFive\n\n*   [`e310x-hal`](https://github.com/riscv-rust/e310x-hal) - HAL for SiFive [Freedom E310](https://www.sifive.com/cores/e31) MCUs - [![crates.io](https://img.shields.io/crates/v/e310x-hal.svg)](https://crates.io/crates/e310x-hal)\n\n### HAL implementation crates / STMicroelectronics\n\n*   [`stm32f3xx-hal`](https://crates.io/crates/stm32f3xx-hal) - [![crates.io](https://img.shields.io/crates/v/stm32f3xx-hal.svg)](https://crates.io/crates/stm32f3xx-hal)\n*   [`stm32g0xx-hal`](https://crates.io/crates/stm32g0xx-hal) - [![crates.io](https://img.shields.io/crates/v/stm32g0xx-hal.svg)](https://crates.io/crates/stm32g0xx-hal)\n*   [`stm32l1xx-hal`](https://crates.io/crates/stm32l1xx-hal) - [![crates.io](https://img.shields.io/crates/v/stm32l1xx-hal.svg)](https://crates.io/crates/stm32l1xx-hal)\n*   [`stm32l151-hal`](https://crates.io/crates/stm32l151-hal) - [![crates.io](https://img.shields.io/crates/v/stm32l151-hal.svg)](https://crates.io/crates/stm32l151-hal)\n\n### HAL implementation crates / XMC\n\n*   [`xmc1100-hal`](https://github.com/david-sawatzke/xmc1100-hal) - [![crates.io](https://img.shields.io/crates/v/xmc1100-hal.svg)](https://crates.io/crates/xmc1100-hal)\n*   [`xmc4-hal`](https://github.com/xmc-rs/xmc4-hal) - [![crates.io](https://img.shields.io/crates/v/xmc4-hal.svg)](https://crates.io/crates/xmc4-hal)\n\n### HAL implementation crates / Renesas\n\n*   [`da14531-hal`](https://crates.io/crates/da14531-hal) HAL crate for DA14531 Ultra-Low Power BT 5.1 System-on-Chip - [![crates.io](https://img.shields.io/crates/v/da14531-hal.svg)](https://crates.io/crates/da14531-hal)\n\n### HAL implementation crates / StarFive\n\n*   [`j71xx-hal`](https://crates.io/crates/jh71xx-hal) - HAL crate for StarFive [JH71xx](https://www.starfivetech.com/en/site/soc) MCUs - [![crates.io](https://img.shields.io/crates/v/jh71xx-hal.svg)](https://crates.io/crates/jh71xx-hal)\n\n### Architecture support crates / ARM\n\n*   [`cortex-a`](https://github.com/andre-richter/cortex-a) Low-level access to Cortex-A processors (early state) - [![crates.io](https://img.shields.io/crates/v/cortex-a.svg)](https://crates.io/crates/cortex-a)\n*   [`cortex-m`](https://github.com/japaric/cortex-m) Low-level access to Cortex-M processors - [![crates.io](https://img.shields.io/crates/v/cortex-m.svg)](https://crates.io/crates/cortex-m)\n\n### Architecture support crates / RISC-V\n\n*   [`riscv`](https://github.com/rust-embedded/riscv) Low-level access to RISC-V processors - [![crates.io](https://img.shields.io/crates/v/riscv.svg)](https://crates.io/crates/riscv)\n\n### Architecture support crates / MIPS\n\n*   [`mips`](https://github.com/Harry-Chen/rust-mips) Low-level access to MIPS32 processors - [![crates.io](https://img.shields.io/crates/v/mips.svg)](https://crates.io/crates/mips)\n*   [`mips-mcu`](https://github.com/kiffie/pic32-rs/tree/master/mips-mcu) Low-level access to MIPS MCU cores - [![crates.io](https://img.shields.io/crates/v/mips-mcu.svg)](https://crates.io/crates/mips-mcu)\n\n### Board support crates / 1BitSquared\n\n*   [`onebitsy`](https://crates.io/crates/onebitsy) - Board support crate for the [1bitsy](https://1bitsy.org/) STM32F4-based board - [![crates.io](https://img.shields.io/crates/v/onebitsy.svg)](https://crates.io/crates/onebitsy)\n\n### Board support crates / Adafruit\n\n*   [`metro_m0`](https://crates.io/crates/metro_m0) - Board support for the [Metro M0 board](https://www.adafruit.com/product/3505) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 1 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/metro_m0.svg)](https://crates.io/crates/metro_m0)\n*   [`metro_m4`](https://crates.io/crates/metro_m4) - Board support for the [Metro M4 board](https://www.adafruit.com/product/3382) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 1 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/metro_m4.svg)](https://crates.io/crates/metro_m4)\n*   [`pyportal`](https://crates.io/crates/pyportal) - Board support for the [PyPortal board](https://www.adafruit.com/product/4116) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/pyportal.svg)](https://crates.io/crates/pyportal)\n*   [`pygamer`](https://crates.io/crates/pygamer) - Board support for the [PyGamer board](https://www.adafruit.com/product/4242) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 1 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/pygamer.svg)](https://crates.io/crates/pygamer)\n*   [`trellis_m4`](https://crates.io/crates/trellis_m4) - Board support for the [NeoTrellis M4 board](https://www.adafruit.com/product/3938) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/trellis_m4.svg)](https://crates.io/crates/trellis_m4)\n*   [`feather-f405`](https://crates.io/crates/feather-f405) - Board support for the [Feather STM32F405 Express](https://www.adafruit.com/product/4382). [![crates.io](https://img.shields.io/crates/v/feather-f405.svg)](https://crates.io/crates/feather-f405)\n*   [`feather_m0`](https://crates.io/crates/feather_m0) - Board support for the [Feather M0 board](https://www.adafruit.com/product/2772), and some variants in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 1 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/feather_m0.svg)](https://crates.io/crates/feather_m0)\n*   [`feather_m4`](https://crates.io/crates/feather_m4) - Board support for the [Feather M4 board](https://www.adafruit.com/product/3857) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 1 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/feather_m4.svg)](https://crates.io/crates/feather_m4)\n*   [`circuit_playground_express`](https://crates.io/crates/circuit_playground_express) - Board support for the [Circuit Playground Express board](https://www.adafruit.com/product/3333) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/circuit_playground_express.svg)](https://crates.io/crates/circuit_playground_express)\n*   [`edgebadge`](https://crates.io/crates/edgebadge) - Board support for the [EdgeBadge board](https://www.adafruit.com/product/4400) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/edgebadge.svg)](https://crates.io/crates/edgebadge)\n*   [`gemma_m0`](https://crates.io/crates/gemma_m0) - Board support for the [Gemma M0 board](https://www.adafruit.com/product/3501) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/gemma_m0.svg)](https://crates.io/crates/gemma_m0)\n*   [`itsybitsy_m0`](https://crates.io/crates/itsybitsy_m0) - Board support for the [ItsyBitsy M0 board](https://www.adafruit.com/product/3727) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/itsybitsy_m0.svg)](https://crates.io/crates/itsybitsy_m0)\n*   [`itsybitsy_m4`](https://crates.io/crates/itsybitsy_m4) - Board support for the [ItsyBitsy M4 Express board](https://www.adafruit.com/product/3800) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/itsybitsy_m4.svg)](https://crates.io/crates/itsybitsy_m4)\n*   [`trinket_m0`](https://crates.io/crates/trinket_m0) - Board support for the [Trinket M0 board](https://www.adafruit.com/product/3500) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/trinket_m0.svg)](https://crates.io/crates/trinket_m0)\n*   [`neo_trinkey`](https://crates.io/crates/neo_trinkey) - Board support for the [neo trinkey board](https://www.adafruit.com/product/4870) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/neo_trinkey.svg)](https://crates.io/crates/neo_trinkey)\n*   [`neokey_trinkey`](https://crates.io/crates/neokey_trinkey) - Board support for the [neokey trinkey board](https://www.adafruit.com/product/5020) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/neokey_trinkey.svg)](https://crates.io/crates/neokey_trinkey)\n*   [`grand_central_m4`](https://crates.io/crates/grand_central_m4) - Board support for the [grand central m4 board](https://www.adafruit.com/product/4064) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/grand_central_m4.svg)](https://crates.io/crates/grand_central_m4)\n*   [`qt_py_m0`](https://crates.io/crates/qt_py_m0) - Board support for the [QT Py board](https://www.adafruit.com/product/4600) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/qt_py_m0.svg)](https://crates.io/crates/qt_py_m0)\n\n### Board support crates / Arduino\n\n*   [`arduino_mkr1000`](https://crates.io/crates/arduino_mkr1000) - Board support for the [MKR 1000 WiFi board](https://docs.arduino.cc/hardware/mkr-1000-wifi) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/arduino_mkr1000.svg)](https://crates.io/crates/arduino_mkr1000)\n*   [`arduino_mkrvidor4000`](https://crates.io/crates/arduino_mkrvidor4000) - Board support for the [MKR Vidor board](https://store.arduino.cc/usa/mkr-vidor-4000) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/arduino_mkrvidor4000.svg)](https://crates.io/crates/arduino_mkrvidor4000)\n*   [`arduino_mkrzero`](https://crates.io/crates/arduino_mkrzero) - Board support for the [mkrzero board](https://store.arduino.cc/arduino-mkrzero) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/arduino_mkrzero.svg)](https://crates.io/crates/arduino_mkrzero)\n*   [`arduino_nano33iot`](https://crates.io/crates/arduino_nano33iot) - Board support for the [Arduino Nano 33 IoT](https://store.arduino.cc/products/arduino-nano-33-iot) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/arduino_nano33iot.svg)](https://crates.io/crates/arduino_nano33iot)\n\n### Board support crates / Nordic\n\n*   [`dwm1001`](https://crates.io/crates/dwm1001) - [Decawave DWM1001-DEV](https://www.decawave.com/product/dwm1001-development-board/) - [![crates.io](https://img.shields.io/crates/v/dwm1001.svg)](https://crates.io/crates/dwm1001)\n*   [`microbit`](https://crates.io/crates/microbit) - [micro:bit](http://microbit.org/) - [![crates.io](https://img.shields.io/crates/v/microbit.svg)](https://crates.io/crates/microbit)\n*   [`nrf52840-dk-bsp`](https://crates.io/crates/nrf52840-dk-bsp) - [nrf52840-dk](https://www.nordicsemi.com/Products/Development-hardware/nrf52840-dk) - [![crates.io](https://img.shields.io/crates/v/nrf52840-dk-bsp.svg)](https://crates.io/crates/nrf52840-dk-bsp)\n*   [`Thingy:91-nrf9160`](https://crates.io/crates/thingy-91-nrf9160-bsp) - [thingy:91](https://www.nordicsemi.com/Products/Development-hardware/Nordic-Thingy-91) - [![crates.io](https://img.shields.io/crates/v/thingy-91-nrf9160-bsp.svg)](https://crates.io/crates/thingy-91-nrf9160-bsp)\n\n### Board support crates / NXP\n\n*   [`frdm-kw41z`](https://crates.io/crates/frdm-kw41z) - [FRDM-KW41Z](https://www.nxp.com/products/processors-and-microcontrollers/arm-based-processors-and-mcus/kinetis-cortex-m-mcus/w-serieswireless-conn.m0-plus-m4/freedom-development-kit-for-kinetis-kw41z-31z-21z-mcus:FRDM-KW41Z) - [![crates.io](https://img.shields.io/crates/v/frdm-kw41z.svg)](https://crates.io/crates/frdm-kw41z)\n\n### Board support crates / Sparkfun\n\n*   [`samd21_mini`](https://crates.io/crates/samd21_mini) - Board support for the [SAMD21 Mini Breakout](https://www.sparkfun.com/products/13664) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/samd21_mini.svg)](https://crates.io/crates/samd21_mini)\n\n### Board support crates / SeeedStudio\n\n*   [`xiao_m0`](https://crates.io/crates/xiao_m0) - Board support for the [Seeed Studio Seeeduino XIAO](http://wiki.seeedstudio.com/Seeeduino-XIAO/) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/xiao_m0.svg)](https://crates.io/crates/xiao_m0)\n*   [`wio_lite_mg126`](https://crates.io/crates/wio_lite_mg126) - Board support for the [Seeed Studio wio\\_lite\\_mg126](https://wiki.seeedstudio.com/Wio-Lite-MG126) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/wio_lite_mg126.svg)](https://crates.io/crates/wio_lite_mg126)\n*   [`wio_lite_w600`](https://crates.io/crates/wio_lite_w600) - Board support for the [Seeed Studio wio\\_lite\\_w600](https://wiki.seeedstudio.com/Wio-Lite-W600/) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/wio_lite_w600.svg)](https://crates.io/crates/wio_lite_w600)\n*   [`wio_terminal`](https://crates.io/crates/wio_terminal) - Board support for the [Seeed Studio wio\\_terminal](https://wiki.seeedstudio.com/Wio-Terminal-Getting-Started/) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 1 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board [![crates.io](https://img.shields.io/crates/v/wio_terminal.svg)](https://crates.io/crates/wio_terminal)\n\n### Board support crates / SiFive\n\n*   [`hifive1`](https://github.com/riscv-rust/hifive1) - Board support crate for [HiFive1](https://www.sifive.com/boards/hifive1) and [LoFive](https://hackaday.io/project/26909-lofive) boards - [![crates.io](https://img.shields.io/crates/v/hifive.svg)](https://crates.io/crates/hifive)\n\n### Board support crates / STMicroelectronics\n\n*   [`f3`](https://crates.io/crates/f3) Board Support Crate for the [STM32F3DISCOVERY](http://www.st.com/en/evaluation-tools/stm32f3discovery.html) - [![crates.io](https://img.shields.io/crates/v/f3.svg)](https://crates.io/crates/f3)\n*   [`nucleo-f401re`](https://github.com/jkristell/nucleo-f401re.git) - [Nucleo-F401RE](https://www.st.com/en/evaluation-tools/nucleo-f401re.html) [![crates.io](https://img.shields.io/crates/v/nucleo-f401re.svg)](https://crates.io/crates/nucleo-f401re)\n*   [`solo-bsp`](https://crates.io/crates/solo-bsp) Board Support Crate for [Solo](https://solokeys.com/), an open source security token (WIP) - [![crates.io](https://img.shields.io/crates/v/solo-bsp.svg)](https://crates.io/crates/solo-bsp)\n*   [`stm32f407g-disc`](https://crates.io/crates/stm32f407g-disc) Board Support Crate for the [STM32F4DISCOVERY](https://www.st.com/en/evaluation-tools/stm32f4discovery.html) (WIP) - [![crates.io](https://img.shields.io/crates/v/stm32f407g-disc.svg)](https://crates.io/crates/stm32f407g-disc)\n*   [`stm32f429i-disc`](https://crates.io/crates/stm32f429i-disc) Board Support Crate for the [STM32F429DISCOVERY](https://www.st.com/en/evaluation-tools/32f429idiscovery.html) (WIP) - [![crates.io](https://img.shields.io/crates/v/stm32f429i-disc.svg)](https://crates.io/crates/stm32f429i-disc)\n*   [`stm32f3-discovery`](https://crates.io/crates/stm32f3-discovery) Board Support Crate for the [STM32F3DISCOVERY](http://www.st.com/en/evaluation-tools/stm32f3discovery.html) used in [Rust Embedded Discovery book](https://rust-embedded.github.io/discovery/index.html) - [![crates.io](https://img.shields.io/crates/v/stm32f3-discovery)](https://crates.io/crates/stm32f3-discovery)\n\n### Board support crates / Texas Instruments\n\n*   [`stellaris-launchpad`](https://crates.io/crates/stellaris-launchpad) - For the Texas Instruments Stellaris Launchpad and Tiva-C Launchpad [![crates.io](https://img.shields.io/crates/v/stellaris-launchpad.svg)](https://crates.io/crates/stellaris-launchpad)\n\n### Board support crates / Sodaq\n\n*   [`sodaq_sara_aff`](https://crates.io/crates/sodaq_sara_aff) - Board support for the [Sodaq sara aff board](https://shop.sodaq.com/sodaq-sara-sff-r410m.html) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/sodaq_sara_aff.svg)](https://crates.io/crates/sodaq_sara_aff)\n\n### Board support crates / Other\n\n*   [`serpente`](https://crates.io/crates/serpente) - Board support for the [serpente board](https://www.solder.party/docs/serpente/) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/serpente.svg)](https://crates.io/crates/serpente)\n*   [`p1am_100`](https://crates.io/crates/p1am_100) - Board support for the [p1am\\_100 board](https://facts-engineering.github.io) in the [atsamd-rs (⭐612)](https://github.com/atsamd-rs/atsamd) repo. It is an [atsamd-rs tier 2 support (⭐612)](https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code) board. [![crates.io](https://img.shields.io/crates/v/p1am_100.svg)](https://crates.io/crates/p1am_100)\n\n### Component abstraction crates / Other\n\n*   [`accelerometer`](https://github.com/NeoBirth/accelerometer.rs) - Generic accelerometer support, including traits and types for taking readings from 2 or 3-axis accelerometers and tracking device orientations - [![crates.io](https://img.shields.io/crates/v/accelerometer.svg)](https://crates.io/crates/accelerometer)\n*   [`embedded-graphics`](https://crates.io/crates/embedded-graphics): 2D drawing library for any size display - [![crates.io](https://img.shields.io/crates/v/embedded-graphics.svg)](https://crates.io/crates/embedded-graphics)\n*   [`radio`](https://github.com/ryankurte/rust-radio) - Generic radio transceiver traits, mocks, and helpers - [![crates.io](https://img.shields.io/crates/v/radio.svg)](https://crates.io/crates/radio)\n*   [`usb-device`](https://github.com/mvirkkunen/usb-device): Abstraction layer between USB peripheral crates & USB class crates - [![crates.io](https://img.shields.io/crates/v/usb-device.svg)](https://crates.io/crates/usb-device)\n*   [`atat`](https://github.com/BlackbirdHQ/atat): Abstraction crate to ease writing AT based driver crates - [![crates.io](https://img.shields.io/crates/v/atat.svg)](https://crates.io/crates/atat)\n*   [`embedded-nal`](https://github.com/rust-embedded-community/embedded-nal): An Embedded Network Abstraction Layer - [![crates.io](https://img.shields.io/crates/v/embedded-nal.svg)](https://crates.io/crates/embedded-nal)\n*   [`switch-hal`](https://github.com/rubberduck203/switch-hal): An \"on\"/\"off\" abstraction for input and output switches - [![crates.io](https://img.shields.io/crates/v/switch-hal.svg)](https://crates.io/crates/switch-hal)\n\n### Driver crates / Other\n\n*   [AD983x](https://crates.io/crates/ad983x) - SPI - AD9833/AD9837 waveform generators / DDS - [Intro blog post](https://blog.eldruin.com/ad983x-waveform-generator-dds-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/ad983x.svg)](https://crates.io/crates/ad983x)\n*   [adafruit-alphanum4](https://crates.io/crates/adafruit-alphanum4) - I2C - Driver for [Adafruit 14-segment LED Alphanumeric Backpack](https://learn.adafruit.com/adafruit-led-backpack/0-54-alphanumeric) based on the ht16k33 chip - [![crates.io](https://img.shields.io/crates/v/adafruit-alphanum4.svg)](https://crates.io/crates/adafruit-alphanum4)\n*   [ADE791x](https://crates.io/crates/ade791x) - SPI - ADE7912/ADE7913 3-Channel, Isolated, Sigma-Delta ADC - [github (⭐1)](https://github.com/GrepitAB/ade791x-rs) - [![crates.io](https://img.shields.io/crates/v/ade791x.svg)](https://crates.io/crates/ade791x)\n*   [ADS1x1x](https://crates.io/crates/ads1x1x) - I2C - 12/16-bit ADCs like ADS1013, ADS1015, ADS1115, etc. - [Intro blog post](https://blog.eldruin.com/ads1x1x-analog-to-digital-converter-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/ads1x1x.svg)](https://crates.io/crates/ads1x1x)\n*   [ADXL313](https://crates.io/crates/adxl313) - SPI - 3-axis accelerometer - [![crates.io](https://img.shields.io/crates/v/adxl313.svg)](https://crates.io/crates/adxl313)\n*   [ADXL343](https://crates.io/crates/adxl343) - I2C - 3-axis accelerometer - [![crates.io](https://img.shields.io/crates/v/adxl343.svg)](https://crates.io/crates/adxl343)\n*   [ADXL355](https://crates.io/crates/adxl355) - SPI - 3-axis accelerometer - [Intro blog post](https://jitter.company/blog/2020/02/14/adxl355-embedded-hal-driver-crate/) - [![crates.io](https://img.shields.io/crates/v/adxl355.svg)](https://crates.io/crates/adxl355)\n*   [AFE4404 (⭐2)](https://github.com/pulse-loop/afe4404) - I2C - Pulse oximeter - [![crates.io](https://img.shields.io/crates/v/afe4404.svg)](https://crates.io/crates/afe4404)\n*   [AHT20](https://crates.io/crates/aht20) - I2C - Humidity and temperature sensor - [github (⭐3)](https://github.com/chocol4te/aht20) - [![crates.io](https://img.shields.io/crates/v/aht20.svg)](https://crates.io/crates/aht20)\n*   [AHT20-driver](https://crates.io/crates/aht20-driver) - I2C - Humidity and temperature sensor - [Intro blog post](http://www.rawmeat.org/code/20220130-aht20_driver/) - [github (⭐10)](https://github.com/anglerud/aht20-driver) - [![crates.io](https://img.shields.io/crates/v/aht20-driver.svg)](https://crates.io/crates/aht20-driver)\n*   [AnyLeaf](https://crates.io/crates/anyleaf) - I2C - pH sensor module - [github (⭐6)](https://github.com/AnyLeaf/ph-rust) - [![crates.io](https://img.shields.io/crates/v/anyleaf.svg)](https://crates.io/crates/anyleaf)\n*   [AT86RF212](https://crates.io/crates/radio-at86rf212) - SPI - Low power IEEE 802.15.4-2011 ISM RF Transceiver - [Intro blog post](http://web.archive.org/web/20230328083333/https://ryan.kurte.nz/notes/2020-01-05-rust-radio) - [![crates.io](https://img.shields.io/crates/v/radio-at86rf212.svg)](https://crates.io/crates/radio-at86rf212)\n*   [BlueNRG](https://crates.io/crates/bluenrg) - SPI - driver for BlueNRG-MS Bluetooth module - [Intro post](https://www.219design.com/bluetooth-low-energy-with-rust/) [![crates.io](https://img.shields.io/crates/v/bluenrg.svg)](https://crates.io/crates/bluenrg)\n*   [BMA400](https://crates.io/crates/bma400) - I2C/SPI - Bosch 12-bit 3-axis accelerometer - [github (⭐4)](https://github.com/cfrenette/bma400-rs) [![crates.io](https://img.shields.io/crates/v/bma400.svg)](https://crates.io/crates/bma400)\n*   [BNO055](https://crates.io/crates/bno055) - I2C - Bosch Sensortec BNO055 9-axis IMU driver - [Intro post](https://www.reddit.com/r/rust/comments/ao4sqq/embeddedhal_bno055_9axis_imu_driver/) [![crates.io](https://img.shields.io/crates/v/bno055.svg)](https://crates.io/crates/bno055)\n*   [CD74HC4067](https://crates.io/crates/cd74hc4067) - GPIO - 16-channel digital and analog multiplexer - [Intro blog post](https://barafael.github.io/A-Platform-Agnostic-Driver-for-the-CD74HC4067) - [github (⭐1)](https://github.com/barafael/cd74hc4067-rs) - [![crates.io](https://img.shields.io/crates/v/cd74hc4067.svg)](https://crates.io/crates/cd74hc4067)\n*   [dht-sensor](https://crates.io/crates/dht-sensor) - 1-Wire - DHT11/DHT22 temperature/humidity sensor driver - [github (⭐32)](https://github.com/michaelbeaumont/dht-sensor) - [![crates.io](https://img.shields.io/crates/v/dht-sensor.svg)](https://crates.io/crates/dht-sensor)\n*   [embedded-dht-rs](https://crates.io/crates/embedded-dht-rs) - 1-Wire, I2C - DHT11/DHT20/DHT22 temperature/humidity sensor driver - [github (⭐23)](https://github.com/rust-dd/embedded-dht-rs) - [![crates.io](https://img.shields.io/crates/v/embedded-dht-rs.svg)](https://crates.io/crates/embedded-dht-rs)\n*   [DRV8825](https://crates.io/crates/drv8825) - DRV8825 Stepper Motor Driver (based on [Stepper](https://crates.io/crates/stepper)) - [Intro blog post](http://web.archive.org/web/20210129151911/https://flott-motion.org/news/announcing-step-dir/) - [![crates.io](https://img.shields.io/crates/v/drv8825.svg)](https://crates.io/crates/drv8825)\n*   [DS1307](https://crates.io/crates/ds1307) - I2C - Real-time clock driver - [Intro blog post](https://blog.eldruin.com/ds1307-real-time-clock-rtc-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/ds1307.svg)](https://crates.io/crates/ds1307)\n*   [ebyte-e32](https://crates.io/crates/ebyte-e32) - SERIAL - Ebyte E32 LoRa module driver - [Intro blog post](https://barafael.github.io/A-Platform-Agnostic-Driver-for-EBYTE-E32-LoRa-Modules/) - [![crates.io](https://img.shields.io/crates/v/ebyte-e32.svg)](https://crates.io/crates/ebyte-e32)\n*   [EEPROM24x](https://crates.io/crates/eeprom24x) - I2C - 24x series serial EEPROM driver - [Intro blog post](https://blog.eldruin.com/24x-serial-eeprom-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/eeprom24x.svg)](https://crates.io/crates/eeprom24x)\n*   [embedded-ccs811](https://crates.io/crates/embedded-ccs811) - I2C - Gas and VOC sensor driver for monitoring indoor air quality - [Intro blog post](https://blog.eldruin.com/ccs811-indoor-air-quality-sensor-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/embedded-ccs811.svg)](https://crates.io/crates/embedded-ccs811)\n*   [embedded-sdmmc](https://crates.io/crates/embedded-sdmmc) - SPI - SD/MMC Card Driver with MS-DOS Partition and FAT16/FAT32 support - [Intro post](https://www.reddit.com/r/rust/comments/ascvls/introducing_embeddedsdmmc_a_purerust_no_std_sd/) [![crates.io](https://img.shields.io/crates/v/embedded-sdmmc.svg)](https://crates.io/crates/embedded-sdmmc)\n*   [ENC28J60](https://crates.io/crates/enc28j60) - SPI - Ethernet controller - [Intro blog post](http://blog.japaric.io/wd-4-enc28j60/) - [![crates.io](https://img.shields.io/crates/v/enc28j60.svg)](https://crates.io/crates/enc28j60)\n*   [HC-12](https://crates.io/crates/hc12-at) - SERIAL - Wireless serial transceiver module - [Intro blog post](https://barafael.github.io/A-Platform-Agnostic-Driver-for-the-HC12-serial-radio-module/) - [github (⭐1)](https://github.com/barafael/hc12-at-rs) - [![crates.io](https://img.shields.io/crates/v/hc12-at.svg)](https://crates.io/crates/hc12-at)\n*   [HTS221](https://crates.io/crates/hts221) - I2C - Humidity and temperature sensor - [Intro blog post](https://medium.com/@pdanielgallagher/hts221-humidity-and-temperature-sensor-88056ea9e5fa) - [![crates.io](https://img.shields.io/crates/v/hts221.svg)](https://crates.io/crates/hts221)\n*   [IIS2MDC](https://crates.io/crates/iis2mdc) - I2C - ST's High accuracy, ultra-low-power, 3-axis digital output magnetometer - [![crates.io](https://img.shields.io/crates/v/iis2mdc.svg)](https://crates.io/crates/iis2mdc)\n*   [ISM330DHCX](https://crates.io/crates/ism330dhcx) - I2C - ST's IMU with 3D accelerometer, 3D gyroscope, ML core and more - [![crates.io](https://img.shields.io/crates/v/ism330dhcx.svg)](https://crates.io/crates/ism330dhcx)\n*   [keypad](https://crates.io/crates/keypad) - GPIO - Keypad matrix circuits - [Intro post](https://www.reddit.com/r/rust/comments/9j42o9/weekly_driver_keypad_matrix_circuits/) - [![crates.io](https://img.shields.io/crates/v/keypad.svg)](https://crates.io/crates/keypad)\n*   [KXCJ9](https://crates.io/crates/kxcj9) - I2C - KXCJ9/KXCJB 3-axis accelerometers - [Intro blog post](https://blog.eldruin.com/kxcj9-kxcjb-tri-axis-mems-accelerator-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/kxcj9.svg)](https://crates.io/crates/kxcj9)\n*   [L3GD20](https://crates.io/crates/l3gd20) - SPI - Gyroscope - [Intro blog post](http://blog.japaric.io/wd-1-2-l3gd20-lsm303dlhc-madgwick/) - [![crates.io](https://img.shields.io/crates/v/l3gd20.svg)](https://crates.io/crates/l3gd20)\n*   [LSM303DLHC](https://crates.io/crates/lsm303dlhc) - I2C - Accelerometer + compass (magnetometer) - [Intro blog post](http://blog.japaric.io/wd-1-2-l3gd20-lsm303dlhc-madgwick/) - [![crates.io](https://img.shields.io/crates/v/lsm303dlhc.svg)](https://crates.io/crates/lsm303dlhc)\n*   [MAX6675](https://crates.io/crates/max6675-hal) - SPI - A driver for the MAX6675 digital thermocouple converter - [Intro blog post](https://barretts.club/posts/max6675-hal/) - [![crates.io](https://img.shields.io/crates/v/max6675-hal.svg)](https://crates.io/crates/max6675-hal)\n*   [MAX6955](https://crates.io/crates/max6955) - I2C - Driver for Alphanumeric LED display driver - [Intro blog post](https://lonesometraveler.github.io/2020/03/20/max6955.html) - [![crates.io](https://img.shields.io/crates/v/max6955.svg)](https://crates.io/crates/max6955)\n*   [MAX116xx-10bit](https://crates.io/crates/max116xx-10bit) - SPI - Driver for the MAX11619-MAX11621, MAX11624 and MAX11625 10-bit ADCs - [Intro blog post](https://robamu.github.io/post/max11619-driver-rust/) - [![crates.io](https://img.shields.io/crates/v/max116xx-10bit.svg)](https://crates.io/crates/max116xx-10bit)\n*   [MCP25LCXX](https://crates.io/crates/microchip-eeprom-25lcxx) - SPI - Driver for Microchip's 25LC series of EEPROMs - [![crates.io](https://img.shields.io/crates/v/microchip-eeprom-25lcxx.svg)](https://crates.io/crates/microchip-eeprom-25lcxx)\n*   [MCP3008](https://crates.io/crates/adc-mcp3008) - SPI - 8 channel 10-bit ADC - [Intro blog post](http://pramode.in/2018/02/24/an-introduction-to-writing-embedded-hal-based-drivers-in-rust/) - [![crates.io](https://img.shields.io/crates/v/adc-mcp3008.svg)](https://crates.io/crates/adc-mcp3008)\n*   [MCP3425](https://crates.io/crates/mcp3425) - I2C - 16-bit ADC - [Intro blog post](https://blog.dbrgn.ch/2018/3/13/rust-mcp3425-driver/) - [![crates.io](https://img.shields.io/crates/v/mcp3425.svg)](https://crates.io/crates/mcp3425)\n*   [MCP794xx](https://crates.io/crates/mcp794xx) - I2C - Real-time clock / calendar driver - [Intro blog post](https://blog.eldruin.com/mcp794xx-real-time-clock-rtc-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/mcp794xx.svg)](https://crates.io/crates/mcp794xx)\n*   [OPT300x (⭐7)](https://github.com/eldruin/opt300x-rs) - I2C - Ambient light sensor family driver  - [Intro blog post](https://blog.eldruin.com/opt300x-ambient-light-sensor-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/opt300x.svg)](https://crates.io/crates/opt300x)\n*   [PAC194X (⭐3)](https://github.com/kiranshila/pac194x) - I2C - Single/multi channel power monitor - [Intro blog post](https://blog.kiranshila.com/post/pac_rust_driver) - [![crates.io](https://img.shields.io/crates/v/pac194x)](https://crates.io/crates/pac194x)\n*   [port-expander](https://crates.io/crates/port-expander) - I2C - Driver for I2C port expanders (supports `PCA95xx`, `PCF85xx`) - [Intro blog post](https://blog.rahix.de/port-expander/) - [![crates.io](https://img.shields.io/crates/v/port-expander.svg)](https://crates.io/crates/port-expander)\n*   [pwm-pca9685](https://crates.io/crates/pwm-pca9685) - I2C - 16-channel, 12-bit PWM/Servo/LED controller - [Intro blog post](https://blog.eldruin.com/pca9685-pwm-led-servo-controller-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/pwm-pca9685.svg)](https://crates.io/crates/pwm-pca9685)\n*   [rainbow-hat-rs](https://crates.io/crates/rainbow-hat-rs) - I2C/SPI/GPIO - Pimoroni Rainbow HAT driver for Raspberry Pi - [github (⭐3)](https://github.com/yannart/rainbow-hat-rs) - [![crates.io](https://img.shields.io/crates/v/rainbow-hat-rs.svg)](https://crates.io/crates/rainbow-hat-rs)\n*   [rotary-encoder-hal](https://crates.io/crates/rotary-encoder-hal) - GPIO - A rotary encoder driver using `embedded-hal` - [Intro blog post](https://leshow.github.io/post/rotary_encoder_hal/) - [![crates.io](https://img.shields.io/crates/v/rotary-encoder-hal.svg)](https://crates.io/crates/rotary-encoder-hal)\n*   [sega-controller](https://crates.io/crates/sega-controller) - GPIO - Sega controller input - [github (⭐2)](https://github.com/UnderLogic/sega-controller) - [![crates.io](https://img.shields.io/crates/v/sega-controller.svg)](https://crates.io/crates/sega-controller)\n*   [SGP30](https://crates.io/crates/sgp30) - I2C - Gas sensor - [Intro blog post](https://blog.dbrgn.ch/2018/4/1/rust-sgp30-driver/) - [![crates.io](https://img.shields.io/crates/v/sgp30.svg)](https://crates.io/crates/sgp30)\n*   [SH1106](https://crates.io/crates/sh1106) - I2C - Monochrome OLED display controller - [Intro post](https://wapl.es/electronics/rust/2019/02/13/sh1106-driver.html) [![crates.io](https://img.shields.io/crates/v/sh1106.svg)](https://crates.io/crates/sh1106)\n*   [shared-bus (⭐134)](https://github.com/Rahix/shared-bus) - I2C - utility driver for sharing a bus between multiple devices - [Intro post](https://blog.rahix.de/001-shared-bus/) [![crates.io](https://img.shields.io/crates/v/shared-bus.svg)](https://crates.io/crates/shared-bus)\n*   [shift-register-driver](https://crates.io/crates/shift-register-driver) - GPIO - Shift register - [Intro blog post](https://www.joshmcguigan.com/blog/shift-register-driver/) - [![crates.io](https://img.shields.io/crates/v/shift-register-driver.svg)](https://crates.io/crates/shift-register-driver)\n*   [Si4703](https://crates.io/crates/si4703) - I2C - FM radio turner (receiver) driver  - [Intro blog post](https://blog.eldruin.com/si4703-fm-radio-receiver-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/si4703.svg)](https://crates.io/crates/si4703)\n*   [SRAM23x](https://crates.io/crates/sram23x) - SPI - Microchip 23x series serial SRAM/NVSRAM driver - [Intro blog post](https://blog.a1w.ca/p/rust-embedded-driver-microchip-23x-sram) - [![crates.io](https://img.shields.io/crates/v/sram23x.svg)](https://crates.io/crates/sram23x)\n*   [SSD1306](https://crates.io/crates/ssd1306) - I2C/SPI - OLED display controller - [Intro blog post](https://wapl.es/electronics/rust/2018/04/30/ssd1306-driver.html) - [![crates.io](https://img.shields.io/crates/v/ssd1306.svg)](https://crates.io/crates/ssd1306)\n*   [SSD1309](https://crates.io/crates/ssd1309) - I2C/SPI - OLED display controller - [Intro blog post](https://antonok.com/projects/ssd1309) - [![crates.io](https://img.shields.io/crates/v/ssd1309.svg)](https://crates.io/crates/ssd1309)\n*   [STSPIN220](https://crates.io/crates/stspin220) - STSPIN220 Stepper Motor Driver (based on [Stepper](https://crates.io/crates/stepper)) - [Intro blog post](http://web.archive.org/web/20210129151911/https://flott-motion.org/news/announcing-step-dir/) - [![crates.io](https://img.shields.io/crates/v/stspin220.svg)](https://crates.io/crates/stspin220)\n*   [Sx127x](https://crates.io/crates/radio-sx127x) - SPI - Long Range Low Power Sub GHz (Gfsk, LoRa) RF Transceiver - [Intro blog post](http://web.archive.org/web/20230328083333/https://ryan.kurte.nz/notes/2020-01-05-rust-radio) - [![crates.io](https://img.shields.io/crates/v/radio-sx127x.svg)](https://crates.io/crates/radio-sx127x)\n*   [Sx128x](https://crates.io/crates/radio-sx128x) - SPI - Long range, low power 2.4 GHz (Gfsk, Flrc, LoRa) RF Transceiver - [Intro blog post](http://web.archive.org/web/20230328083333/https://ryan.kurte.nz/notes/2020-01-05-rust-radio) - [![crates.io](https://img.shields.io/crates/v/radio-sx128x.svg)](https://crates.io/crates/radio-sx128x)\n*   [TC72](https://crates.io/crates/microchip-tc72r-rs) - SPI - Microchip TC72 temperature sensor - [![crates.io](https://img.shields.io/crates/v/microchip-tc72r-rs.svg)](https://crates.io/crates/microchip-tc72r-rs)\n*   [TCN75A](https://crates.io/crates/tcn75a) - I2C - Microchip TCN75A temperature sensor - [![crates.io](https://img.shields.io/crates/v/tcn75a.svg)](https://crates.io/crates/tcn75a)\n*   [TMP006](https://crates.io/crates/tmp006) - I2C - Contact-less infrared (IR) thermopile temperature sensor driver - [Intro post](https://blog.eldruin.com/tmp006-contact-less-infrared-ir-thermopile-driver-in-rust/) [![crates.io](https://img.shields.io/crates/v/tmp006.svg)](https://crates.io/crates/tmp006)\n*   [TMP1x2](https://crates.io/crates/tmp1x2) - I2C - TMP102 and TMP112x temperature sensor driver - [Intro blog post](https://blog.eldruin.com/tmp1x2-temperature-sensor-driver-in-rust/) [![crates.io](https://img.shields.io/crates/v/tmp1x2.svg)](https://crates.io/crates/tmp1x2)\n*   [TSIC](https://crates.io/crates/tsic) - GPIO - TSIC 306 temperature sensor driver - [Intro blog post](https://nitschinger.at/Rusty-PID-Porting-the-TSic-sensor-from-C-to-Rust/) [![crates.io](https://img.shields.io/crates/v/tsic.svg)](https://crates.io/crates/tsic)\n*   [TSL256X](https://crates.io/crates/tsl256x) - I2C - Light Intensity Sensor - [Intro blog post](https://www.joshmcguigan.com/blog/tsl256x-light-intensity-sensor-driver/) - [![crates.io](https://img.shields.io/crates/v/tsl256x.svg)](https://crates.io/crates/tsl256x)\n*   [VEML6030/VEML7700](https://crates.io/crates/veml6030) - I2C - Ambient light sensors - [Intro blog post](https://blog.eldruin.com/veml6030-ambient-light-sensor-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/veml6030.svg)](https://crates.io/crates/veml6030)\n*   [VEML6075](https://crates.io/crates/veml6075) - I2C - UVA and UVB light sensor - [Intro blog post](https://blog.eldruin.com/veml6075-uva-uvb-uv-index-light-sensor-driver-in-rust/) - [![crates.io](https://img.shields.io/crates/v/veml6075.svg)](https://crates.io/crates/veml6075)\n*   [usbd-serial](http://crates.io/crates/usbd-serial) - USB CDC-ACM class (serial) implementation - [github (⭐126)](https://github.com/mvirkkunen/usbd-serial) - [![crates.io](https://img.shields.io/crates/v/usbd-serial.svg)](https://crates.io/crates/usbd-serial)\n*   [usbd-hid](http://crates.io/crates/usbd-hid) - USB HID class implementation - [github (⭐97)](https://github.com/twitchyliquid64/usbd-hid) - [![crates.io](https://img.shields.io/crates/v/usbd-hid.svg)](https://crates.io/crates/usbd-hid)\n*   [usbd-hid-device](http://crates.io/crates/usbd-hid-device) - USB HID class implementation without `unsafe` - [github (⭐13)](https://github.com/agalakhov/usbd-hid-device) - [![crates.io](https://img.shields.io/crates/v/usbd-hid-device.svg)](https://crates.io/crates/usbd-hid-device)\n*   [usbd-human-interface-device (⭐133)](https://github.com/dlkj/usbd-human-interface-device) - Batteries included embedded USB HID library for `usb-device`. Includes concrete Keyboard (boot and NKRO), Mouse and Consumer Control implementations as well as support for building your own HID classes - [github (⭐133)](https://github.com/dlkj/usbd-human-interface-device) - [![crates.io](https://img.shields.io/crates/v/usbd-human-interface-device.svg)](https://crates.io/crates/usbd-human-interface-device)\n*   [usbd-midi](http://crates.io/crates/usbd-midi) - USB MIDI class implementation - [github (⭐55)](https://github.com/btrepp/usbd-midi) - [![crates.io](https://img.shields.io/crates/v/usbd-midi.svg)](https://crates.io/crates/usbd-midi)\n*   [usbd-webusb](http://crates.io/crates/usbd-webusb) - USB webUSB class implementation - [github (⭐22)](https://github.com/redpfire/usbd-webusb) - [![crates.io](https://img.shields.io/crates/v/usbd-webusb.svg)](https://crates.io/crates/usbd-webusb)\n*   [SHTCx](http://crates.io/crates/shtcx) - I2C - Temperature / humidity sensors - [github (⭐15)](https://github.com/dbrgn/shtcx-rs) - [![crates.io](https://img.shields.io/crates/v/shtcx.svg)](https://crates.io/crates/shtcx)\n*   [ST7789](http://crates.io/crates/st7789) - SPI - An embedded-graphics compatible driver for the popular lcd family from Sitronix used in the PineTime watch - [github (⭐60)](https://github.com/almindor/st7789) - [![crates.io](https://img.shields.io/crates/v/st7789.svg)](https://crates.io/crates/st7789)\n*   [DW1000](https://crates.io/crates/dw1000) - SPI - Radio transceiver (IEEE 802.15.4 and position tracking) - [Article](https://braun-embedded.com/dw1000/) - [![crates.io](https://img.shields.io/crates/v/dw1000.svg)](https://crates.io/crates/dw1000)\n*   [Adafruit-7segment](https://crates.io/crates/adafruit-7segment) - I2C - Driver for Adafruit 7-segment LED Numeric Backpack based on the ht16k33 chip - [github (⭐3)](https://github.com/kallemooo/adafruit-7segment) - [![crates.io](https://img.shields.io/crates/v/adafruit-7segment.svg)](https://crates.io/crates/adafruit-7segment)\n*   [ST7565](http://crates.io/crates/st7565) - SPI - An embedded-graphics compatible driver for LCD displays based on the ST7565 chip - [github (⭐7)](https://github.com/Finomnis/st7565) - [![crates.io](https://img.shields.io/crates/v/st7565.svg)](https://crates.io/crates/st7565)\n*   [tb6612fng](https://crates.io/crates/tb6612fng) - A `no_std` driver for the TB6612FNG motor driver - [![crates.io](https://img.shields.io/crates/v/tb6612fng.svg)](https://crates.io/crates/tb6612fng)\n*   [vl53l1x-uld](https://crates.io/crates/vl53l1x-uld) - I2C - A pure-rust driver for the [ST VL53L1X](https://www.st.com/en/imaging-and-photonics-solutions/vl53l1x.html) - [![crates.io](https://img.shields.io/crates/v/vl53l1x-uld.svg)](https://crates.io/crates/vl53l1x-uld)\n*   [i2c-multiplexer](https://crates.io/crates/i2c-multiplexer) - I2C - An I2C Multiplexer library that supports the PCA9546 and TCA9546A chips - [github (⭐2)](https://github.com/FloppyDisck/i2c-multiplexer) - [![crates.io](https://img.shields.io/crates/v/i2c-multiplexer.svg)](https://crates.io/crates/i2c-multiplexer)\n*   [SHT31-rs](https://crates.io/crates/sht31) - I2C - Fully supported SHT temperature / humidity sensors - [github (⭐6)](https://github.com/FloppyDisck/SHT31-rs) - [![crates.io](https://img.shields.io/crates/v/sht31.svg)](https://crates.io/crates/sht31)\n\n### Driver crates / WIP\n\n*   [AD9850](https://crates.io/crates/ad9850) - Embedded driver for the AD9850 DDS synthesizer chip - [![crates.io](https://img.shields.io/crates/v/ad9850.svg)](https://crates.io/crates/ad9850)\n*   [APDS9960](https://crates.io/crates/apds9960) - I2C - Proximity, ambient light, RGB, and gesture sensor - [![crates.io](https://img.shields.io/crates/v/apds9960.svg)](https://crates.io/crates/apds9960)\n*   [ad57xx (⭐1)](https://github.com/deltronix/ad57xx) - SPI - Quad and dual channel DAC - [![crates.io](https://img.shields.io/crates/v/ad57xx.svg)](https://crates.io/crates/ad57xx)\n*   [BME280](https://crates.io/crates/bme280) - A rust device driver for the Bosch BME280 temperature, humidity, and atmospheric pressure sensor and the Bosch BMP280 temperature and atmospheric pressure sensor. [![crates.io](https://img.shields.io/crates/v/bme280.svg)](https://crates.io/crates/bme280)\n*   [bme680 (⭐30)](https://github.com/marcelbuesing/bme680) - I2C - Temperature / humidity / gas / pressure sensor - [![crates.io](https://img.shields.io/crates/v/bme680.svg)](https://crates.io/crates/bme680)\n*   [BMI160](https://crates.io/crates/bmi160) - I2C / SPI - Inertial Measurement Unit - [![crates.io](https://img.shields.io/crates/v/bmi160.svg)](https://crates.io/crates/bmi160)\n*   [BMP280](https://crates.io/crates/bmp280-ehal) - A platform agnostic driver to interface with the BMP280 pressure sensor [![crates.io](https://img.shields.io/crates/v/bmp280-ehal.svg)](https://crates.io/crates/bmp280-ehal)\n*   [CC1101](https://crates.io/crates/cc1101) - SPI - Sub-1GHz RF Transceiver - [![crates.io](https://img.shields.io/crates/v/cc1101.svg)](https://crates.io/crates/cc1101)\n*   [DS323x](https://crates.io/crates/ds323x) - I2C/SPI - Real-time clocks (RTC): DS3231, DS3232 and DS3234 - [![crates.io](https://img.shields.io/crates/v/ds323x.svg)](https://crates.io/crates/ds323x)\n*   [epd-waveshare](https://crates.io/crates/epd-waveshare) - SPI - driver for E-Paper Modules from Waveshare [![crates.io](https://img.shields.io/crates/v/epd-waveshare.svg)](https://crates.io/crates/epd-waveshare)\n*   [embedded-morse](https://crates.io/crates/embedded-morse) - Output morse messages - [![crates.io](https://img.shields.io/crates/v/embedded-morse.svg)](https://crates.io/crates/embedded-morse)\n*   [Ft6x36](https://crates.io/crates/ft6x36) - I2C - Rust driver for focal tech touch screen FT6236, FT6336 - [![crates.io](https://img.shields.io/crates/v/ft6x36.svg)](https://crates.io/crates/ft6x36)\n*   [grove-matrix-led-my9221-rs](https://crates.io/crates/grove-matrix-led-my9221-rs) - I2C - Rust driver for Grove RGB Matrix Led with my-9221 Driver - [![crates.io](https://img.shields.io/crates/v/grove-matrix-led-my9221-rs.svg)](https://crates.io/crates/grove-matrix-led-my9221-rs)\n*   [GridEYE](https://crates.io/crates/grideye) - I2C - Rust driver for Grid-EYE / Panasonic AMG88(33) - [![crates.io](https://img.shields.io/crates/v/GridEYE.svg)](https://crates.io/crates/GridEYE)\n*   [HD44780-driver](https://crates.io/crates/hd44780-driver) - GPIO - LCD controller - [![crates.io](https://img.shields.io/crates/v/hd44780-driver.svg)](https://crates.io/crates/hd44780-driver)\n*   [HM11](https://crates.io/crates/hm11) - USART - HM-11 bluetooth module AT configuration crate - [![crates.io](https://img.shields.io/crates/v/hm11.svg)](https://crates.io/crates/hm11)\n*   [HRS3300](https://crates.io/crates/hrs3300) - I2C - Heart rate sensor / monitor used in the PineTime smartwatch, for example. - [![crates.io](https://img.shields.io/crates/v/hrs3300.svg)](https://crates.io/crates/hrs3300)\n*   [HDC20xx](https://crates.io/crates/hdc20xx) - I2C - Temperature and humidity sensor compatible with HDC2080, HDC2021 and HDC2010. - [![crates.io](https://img.shields.io/crates/v/hdc20xx.svg)](https://crates.io/crates/hdc20xx)\n*   [hub75 (⭐26)](https://github.com/david-sawatzke/hub75-rs) - A driver for rgb led matrices with the hub75 interface  - [![crates.io](https://img.shields.io/crates/v/hub75.svg)](https://crates.io/crates/hub75)\n*   [hzgrow-r502](https://crates.io/crates/hzgrow-r502) - UART capacitive fingerprint reader - [![crates.io](https://img.shields.io/crates/v/hzgrow-r502.svg)](https://crates.io/crates/hzgrow-r502)\n*   [INA260](https://crates.io/crates/ina260) - I2C - power monitor - [![crates.io](https://img.shields.io/crates/v/ina260.svg)](https://crates.io/crates/ina260)\n*   [ISL29125](https://crates.io/crates/isl29125) - I2C - RGB Color Light Sensor with IR Blocking Filter - [![crates.io](https://img.shields.io/crates/v/isl29125.svg)](https://crates.io/crates/isl29125)\n*   [IST7920](https://crates.io/crates/ist7920) - SPI monochrome LCD display - [![crates.io](https://img.shields.io/crates/v/ist7920.svg)](https://crates.io/crates/ist7920)\n*   [LM75](https://crates.io/crates/lm75) - I2C - Temperature sensor and thermal watchdog (also compatible with LM75A, LM75B, LM75C, AT30TS75A, DS1775, DS75, DS7505, G751, MAX7500/1/2/3/4, MAX6625, MCP9800/1/2/3, STDS75, TCN75, PCT2075) - [![crates.io](https://img.shields.io/crates/v/lm75.svg)](https://crates.io/crates/lm75)\n*   [lp586x](https://crates.io/crates/lp586x) - I2C/SPI - LED matrix driver [![crates.io](https://img.shields.io/crates/v/lp586x.svg)](https://crates.io/crates/lp586x)\n*   [LSM303AGR](https://crates.io/crates/lsm303agr) - I2C/SPI - 3D accelerometer + 3D magnetometer. (Used in e.g. micro:bit boards) [![crates.io](https://img.shields.io/crates/v/lsm303agr.svg)](https://crates.io/crates/lsm303agr)\n*   [LSM303C](https://crates.io/crates/lsm303c) - A platform agnostic driver to interface with the LSM303C (accelerometer + compass) [![crates.io](https://img.shields.io/crates/v/lsm303c.svg)](https://crates.io/crates/lsm303c)\n*   [LSM9DS1](https://crates.io/crates/lsm9ds1) - I2C/SPI - 9-axis motion sensor module [![crates.io](https://img.shields.io/crates/v/lsm9ds1.svg)](https://crates.io/crates/lsm9ds1)\n*   [ltr-559](https://crates.io/crates/ltr-559) - I2C - Ambient Light Sensor and Proximity sensor [![crates.io](https://img.shields.io/crates/v/ltr-559.svg)](https://crates.io/crates/ltr-559)\n*   [lvgl (⭐797)](https://github.com/rafaelcaricio/lvgl-rs) - no\\_std [LittleVGL (⭐20k)](https://github.com/littlevgl/lvgl) port - [![crates.io](https://img.shields.io/crates/v/lvgl.svg)](https://crates.io/crates/lvgl)\n*   [M95320](https://crates.io/crates/m95320) - SPI - STMicroelectronics Serial flash EEPROM - [![crates.io](https://img.shields.io/crates/v/m95320.svg)](https://crates.io/crates/m95320)\n*   [MAX17048/9](https://crates.io/crates/max17048) - I2C - LiPo Fuel gauge, battery monitoring IC - [![crates.io](https://img.shields.io/crates/v/max17048.svg)](https://crates.io/crates/max17048)\n*   [MAX170xx (⭐12)](https://github.com/eldruin/max170xx-rs) - I2C - LiPo Fuel gauge, battery monitoring ICs compatible with MAX17043/4, MAX17048/9, MAX17058/9. - [![crates.io](https://img.shields.io/crates/v/max170xx.svg)](https://crates.io/crates/max170xx)\n*   [MAX3010x](https://crates.io/crates/max3010x) - I2C - Pulse oximeter and heart-rate sensor. ATM Compatible with MAX30102. - [![crates.io](https://img.shields.io/crates/v/max3010x.svg)](https://crates.io/crates/max3010x)\n*   [MAX31855 (⭐4)](https://github.com/cs2dsb/max31855.rs) - SPI - Thermocouple digital converter -[![crates.io](https://img.shields.io/crates/v/max31855.svg)](https://crates.io/crates/max31855)\n*   [MAX31865](https://crates.io/crates/max31865) - SPI - RTD to Digital converter - [![crates.io](https://img.shields.io/crates/v/max31865.svg)](https://crates.io/crates/max31865)\n*   [MAX44009](https://crates.io/crates/max44009) - I2C - Ambient light sensor - [![crates.io](https://img.shields.io/crates/v/max44009.svg)](https://crates.io/crates/max44009)\n*   [MAX7219 (⭐16)](https://github.com/almindor/max7219) - SPI - LED display driver - [![crates.io](https://img.shields.io/crates/v/max7219.svg)](https://crates.io/crates/max7219)\n*   [MCP4725](https://crates.io/crates/mcp4725) - I2C - 12-bit DAC - [![crates.io](https://img.shields.io/crates/v/mcp4725)](https://crates.io/crates/mcp4725)\n*   [MCP49xx](https://crates.io/crates/mcp49xx) - SPI - 8/10/12-bit DACs like MCP4921, MCP4922, MCP4801, etc. - [![crates.io](https://img.shields.io/crates/v/mcp49xx.svg)](https://crates.io/crates/mcp49xx)\n*   [MCP9808](https://crates.io/crates/mcp9808) - I2C - Temperature sensor - [![crates.io](https://img.shields.io/crates/v/mcp9808.svg)](https://crates.io/crates/mcp9808)\n*   [MCP4x](https://crates.io/crates/mcp4x) - SPI - Digital potentiometers (digipot) like MCP41010, MCP41050, MCP41100, MCP42010, MCP42050 and MCP42100, etc. - [![crates.io](https://img.shields.io/crates/v/mcp4x.svg)](https://crates.io/crates/mcp4x)\n*   [midi-port](https://crates.io/crates/midi-port) - UART - MIDI input - [![crates.io](https://img.shields.io/crates/v/midi-port.svg)](https://crates.io/crates/midi-port)\n*   [MLX9061x](https://crates.io/crates/mlx9061x) - I2C - MLX90614/MLX90615 Contact-less infrared (IR) temperature sensor driver. - [![crates.io](https://img.shields.io/crates/v/mlx9061x.svg)](https://crates.io/crates/mlx9061x)\n*   [MMA8x5x](https://crates.io/crates/mma8x5x) - I2C - Tri-axis accelerometers like MMA8451Q, MMA8452Q, MMA8453Q, MMA8652FC and MMA8653FC. - [![crates.io](https://img.shields.io/crates/v/mma8x5x.svg)](https://crates.io/crates/mma8x5x)\n*   [MPU6050](https://crates.io/crates/mpu6050) - I2C - no\\_std driver for the MPU6050 [![crates.io](https://img.shields.io/crates/v/mpu6050.svg)](https://crates.io/crates/mpu6050)\n*   [MPU9250](https://crates.io/crates/mpu9250) - no\\_std driver for the MPU9250 (and other MPU\\* devices) & onboard AK8963 (accelerometer + gyroscope +  magnetometer IMU) [![crates.io](https://img.shields.io/crates/v/mpu9250.svg)](https://crates.io/crates/mpu9250)\n*   [MS5637](https://crates.io/crates/ms5637) - no\\_std I2C driver for the MS5637 temperature and pressure sensor [![crates.io](https://img.shields.io/crates/v/ms5637.svg)](https://crates.io/crates/ms5637)\n*   [OneWire](https://crates.io/crates/onewire) - 1wire - OneWire protocol implementation with drivers for devices such as [DS18B20](https://datasheets.maximintegrated.com/en/ds/DS18B20.pdf) - [![crates.io](https://img.shields.io/crates/v/onewire.svg)](https://crates.io/crates/onewire)\n*   [PCD8544\\_rich](https://crates.io/crates/pcd8544) - SPI - Rich driver for 48x84 pixels matrix LCD controller  - [![crates.io](https://img.shields.io/crates/v/pcd8544.svg)](https://crates.io/crates/pcd8544)\n*   [PCF857x](https://crates.io/crates/pcf857x) - I2C - I/O expanders: PCF8574, PCF8574A, PCF8575 [![crates.io](https://img.shields.io/crates/v/pcf857x.svg)](https://crates.io/crates/pcf857x)\n*   [radio-at86rf212](https://crates.io/crates/radio-at86rf212) - SPI - Sub GHz 802.15.4 radio transceiver [![crates.io](https://img.shields.io/crates/v/radio-at86rf212.svg)](https://crates.io/crates/radio-at86rf212)\n*   [SCD30](https://crates.io/crates/scd30) - I2C - CO₂ sensor - [![crates.io](https://img.shields.io/crates/v/scd30.svg)](https://crates.io/crates/scd30)\n*   [SPL06-007 (⭐1)](https://github.com/roxgib/SPL06-007) - I2C - Pressure and temperature sensor - [![crates.io](https://img.shields.io/crates/v/spl06-007.svg)](https://crates.io/crates/spl06-007)\n*   [spi-memory (⭐25)](https://github.com/jonas-schievink/spi-memory/) - SPI - A generic driver for various SPI Flash and EEPROM chips - [![crates.io](https://img.shields.io/crates/v/spi-memory.svg)](https://crates.io/crates/spi-memory)\n*   [SSD1320](https://crates.io/crates/ssd1320) - SPI - Graphical OLED display controller - [![crates.io](https://img.shields.io/crates/v/ssd1320.svg)](https://crates.io/crates/ssd1320)\n*   [SSD1322](https://crates.io/crates/ssd1322) - SPI - Graphical OLED display controller - [![crates.io](https://img.shields.io/crates/v/ssd1322.svg)](https://crates.io/crates/ssd1322)\n*   [SSD1322\\_rs](https://crates.io/crates/ssd1322_rs) - SPI - Async graphics driver for SSD1322 screen - [![crates.io](https://img.shields.io/crates/v/ssd1322_rs.svg)](https://crates.io/crates/ssd1322_rs)\n*   [SSD1351](https://crates.io/crates/ssd1351) - SPI - 16bit colour OLED display driver - [![crates.io](https://img.shields.io/crates/v/ssd1351.svg)](https://crates.io/crates/ssd1351)\n*   [SSD1675](https://crates.io/crates/ssd1675) - SPI - Tri-color ePaper display controller - [![crates.io](https://img.shields.io/crates/v/ssd1675.svg)](https://crates.io/crates/ssd1675)\n*   [st7032i (⭐2)](https://github.com/dotcypress/st7032i) - I2C - Dot Matrix LCD Controller driver (Sitronix ST7032i or similar). - [![crates.io](https://img.shields.io/crates/v/st7032i.svg)](https://crates.io/crates/st7032i)\n*   [ST7735-lcd](https://crates.io/crates/st7735-lcd) - SPI - An embedded-graphics compatible driver for the popular lcd family from Sitronix [![crates.io](https://img.shields.io/crates/v/st7735-lcd.svg)](https://crates.io/crates/st7735-lcd)\n*   [ST7920](https://crates.io/crates/st7920) - SPI - LCD displays using the ST7920 controller [![crates.io](https://img.shields.io/crates/v/st7920.svg)](https://crates.io/crates/st7920)\n*   [TCS3472](https://crates.io/crates/tcs3472) - I2C - RGB color light sensor - [![crates.io](https://img.shields.io/crates/v/tcs3472.svg)](https://crates.io/crates/tcs3472)\n*   [TPA2016D2](https://crates.io/crates/tpa2016d2) - I2C - A driver for interfacing with the Texas Instruments TPA2016D2 Class-D amplifier - [![crates.io](https://img.shields.io/crates/v/tpa2016d2.svg)](https://crates.io/crates/tpa2016d2)\n*   [VEML6040](https://crates.io/crates/veml6040) - I2C - RGBW color light sensor - [![crates.io](https://img.shields.io/crates/v/veml6040.svg)](https://crates.io/crates/veml6040)\n*   [VEML6070](https://crates.io/crates/veml6070) - I2C - UVA light sensor - [![crates.io](https://img.shields.io/crates/v/veml6070.svg)](https://crates.io/crates/veml6070)\n*   [VEML7700](https://crates.io/crates/veml7700) - I2C - Ambient light sensors - [![crates.io](https://img.shields.io/crates/v/veml7700.svg)](https://crates.io/crates/veml7700)\n*   [vesc-comm (⭐1)](https://github.com/chocol4te/vesc-comm) - A driver for communicating with [VESC-compatible electronic speed controllers](http://vedder.se/2015/01/vesc-open-source-esc/) [![crates.io](https://img.shields.io/crates/v/vesc-comm.svg)](https://crates.io/crates/vesc-comm)\n*   [VL53L0X](https://crates.io/crates/vl53l0x) - A platform agnostic driver to interface with the vl53l0x (time-of-flight sensor) [![crates.io](https://img.shields.io/crates/v/vl53l0x.svg)](https://crates.io/crates/vl53l0x)\n*   [w5500](https://crates.io/crates/w5500) - SPI - Ethernet Module with hardwired protocols : TCP, UDP, ICMP, IPv4, ARP, IGMP, PPPoE - [![crates.io](https://img.shields.io/crates/v/w5500.svg)](https://crates.io/crates/w5500)\n*   [xCA9548A](https://crates.io/crates/xca9548a) - I2C - I2C switches/multiplexers: TCA9548A, PCA9548A - [![crates.io](https://img.shields.io/crates/v/xca9548a.svg)](https://crates.io/crates/xca9548a)\n\n### no-std crates / WIP\n\n*   [adskalman](https://crates.io/crates/adskalman): Kalman filter and Rauch-Tung-Striebel smoothing implementation. [![crates.io](https://img.shields.io/crates/v/adskalman.svg)](https://crates.io/crates/adskalman)\n*   [atomic](https://crates.io/crates/atomic): Generic Atomic<T> wrapper type. [![crates.io](https://img.shields.io/crates/v/atomic.svg)](https://crates.io/crates/atomic)\n*   [bbqueue](https://crates.io/crates/bbqueue): A SPSC, statically allocatable queue based on BipBuffers suitable for DMA transfers - [![crates.io](https://img.shields.io/crates/v/bbqueue.svg)](https://crates.io/crates/bbqueue)\n*   [bitmatch](https://crates.io/crates/bitmatch): A crate that allows you to match, bind, and pack the individual bits of integers. - [![crates.io](https://img.shields.io/crates/v/bitmatch.svg)](https://crates.io/crates/bitmatch)\n*   [biquad](https://crates.io/crates/biquad): A library for creating second-order IIR filters for signal processing based on Biquads, where both a Direct Form 1 (DF1) and Direct Form 2 Transposed (DF2T) implementation is available. [![crates.io](https://img.shields.io/crates/v/biquad.svg)](https://crates.io/crates/biquad)\n*   [bit\\_field](https://crates.io/crates/bit_field): manipulating bitfields and bitarrays - [![crates.io](https://img.shields.io/crates/v/bit_field.svg)](https://crates.io/crates/bit_field)\n*   [bluetooth-hci](https://crates.io/crates/bluetooth-hci): device-independent Bluetooth Host-Controller Interface implementation. [![crates.io](https://img.shields.io/crates/v/bluetooth-hci.svg)](https://crates.io/crates/bluetooth-hci)\n*   [bounded-registers](https://crates.io/crates/bounded-registers) A high-assurance memory-mapped register code generation and interaction library. `bounded-registers` provides a Tock-like API for MMIO registers with the addition of type-based bounds checking. - [![crates.io](https://img.shields.io/crates/v/bounded-registers.svg)](https://crates.io/crates/bounded-registers)\n*   [cam-geom](https://crates.io/crates/cam-geom): Geometric models of cameras for photogrammetry. [![crates.io](https://img.shields.io/crates/v/cam-geom.svg)](https://crates.io/crates/cam-geom)\n*   [combine](https://crates.io/crates/combine): parser combinator library - [![crates.io](https://img.shields.io/crates/v/combine.svg)](https://crates.io/crates/combine)\n*   [console-traits (⭐3)](https://github.com/thejpster/console-traits): Describes a basic text console. Used by [menu (⭐57)](https://github.com/thejpster/menu) and implemented by [vga-framebuffer (⭐31)](https://github.com/thejpster/vga-framebuffer-rs). [![crates.io](https://img.shields.io/crates/v/console-tratis.svg)](https://crates.io/crates/console-tratis)\n*   [`cmim`](https://crates.io/crates/cmim), or Cortex-M Interrupt Move: A crate for Cortex-M devices to move data to interrupt context, without needing a critical section to access the data within an interrupt, and to remove the need for the \"mutex dance\" - [![crates.io](https://img.shields.io/crates/v/cmim.svg)](https://crates.io/crates/cmim)\n*   [`cmsis-dsp-sys`](https://github.com/jacobrosenthal/cmsis-dsp-sys): Rust FFI bindings to the [Arm CMSIS\\_5 (⭐1.5k)](https://github.com/ARM-software/CMSIS_5) math library - [![crates.io](https://img.shields.io/crates/v/cmsis-dsp-sys.svg)](https://crates.io/crates/cmsis-dsp-sys)\n*   [dcmimu](https://crates.io/crates/dcmimu): An algorithm for fusing low-cost triaxial MEMS gyroscope and accelerometer measurements [![crates.io](https://img.shields.io/crates/v/dcmimu.svg)](https://crates.io/crates/dcmimu)\n*   [debouncr](https://crates.io/crates/debouncr): A simple no-std input debouncer to detect rising/falling edges with minimal RAM requirements. [![crates.io](https://img.shields.io/crates/v/debouncr.svg)](https://crates.io/crates/debouncr)\n*   [device-driver](https://crates.io/crates/device-driver): A toolkit to write better device drivers, faster. [![crates.io](https://img.shields.io/crates/v/device-driver.svg)](https://crates.io/crates/device-driver)\n*   [dummy-pin](https://crates.io/crates/dummy-pin): Dummy implementations of the input/output pin traits. [![crates.io](https://img.shields.io/crates/v/dummy-pin.svg)](https://crates.io/crates/dummy-pin)\n*   [embedded-cli](https://crates.io/crates/embedded-cli): CLI library with autocompletion, subcommands, options, help and history support. [![crates.io](https://img.shields.io/crates/v/embedded-cli.svg)](https://crates.io/crates/embedded-cli)\n*   [embedded-crc-macros](https://crates.io/crates/embedded-crc-macros): Macros implementing portable CRC algorithms and build-time lookup table generation. [![crates.io](https://img.shields.io/crates/v/embedded-crc-macros.svg)](https://crates.io/crates/embedded-crc-macros)\n*   [embedded-websocket](https://crates.io/crates/embedded-websocket): A lightweight server and client websocket library for embedded systems. [![crates.io](https://img.shields.io/crates/v/embedded-websocket.svg)](https://crates.io/crates/embedded-websocket)\n*   [ethercrab (⭐315)](https://github.com/ethercrab-rs/ethercrab): A Rust implementation of the [EtherCAT](https://ethercat.org) industrial automation protocol - [![crates.io](https://img.shields.io/crates/v/ethercrab.svg)](https://crates.io/crates/ethercrab)\n*   [heapless](https://crates.io/crates/heapless): provides `Vec`, `String`, `LinearMap`, `RingBuffer` backed by fixed-size buffers  - [![crates.io](https://img.shields.io/crates/v/heapless.svg)](https://crates.io/crates/heapless)\n*   [idsp](https://crates.io/crates/idsp): integer DSP algorithms (trigonometry, filtering, PLL...) tuned for precision and speed - [![crates.io](https://img.shields.io/crates/v/idsp.svg)](https://crates.io/crates/idsp)\n*   [ieee802154](https://crates.io/crates/ieee802154): Partial implementation of the IEEE 802.15.4 standard - [![crates.io](https://img.shields.io/crates/v/ieee802154.svg)](https://crates.io/crates/ieee802154)\n*   [infrared](https://crates.io/crates/infrared): infrared remote control library for embedded rust - [![crates.io](https://img.shields.io/crates/v/infrared.svg)](https://crates.io/crates/infrared)\n*   [intrusive-collections](https://crates.io/crates/intrusive-collections): intrusive (non-allocating) singly/doubly linked lists and red-black trees - [![crates.io](https://img.shields.io/crates/v/intrusive-collections.svg)](https://crates.io/crates/intrusive-collections)\n*   [inverted-pin](https://crates.io/crates/inverted-pin): Implementations of the input/output pin traits with inverted logic. [![crates.io](https://img.shields.io/crates/v/inverted-pin.svg)](https://crates.io/crates/inverted-pin)\n*   [irq](https://crates.io/crates/irq): utilities for writing interrupt handlers (allows moving data into interrupts, and sharing data between them) - [![crates.io](https://img.shields.io/crates/v/irq.svg)](https://crates.io/crates/irq)\n*   [lakers](https://crates.io/crates/lakers): Microcontroller-optimized [EDHOC](https://datatracker.ietf.org/doc/draft-ietf-lake-edhoc/) implementation, with bindings for C and Python - [![crates.io](https://img.shields.io/crates/v/lakers.svg)](https://crates.io/crates/lakers)\n*   [managed](https://crates.io/crates/managed): provides `ManagedSlice`, `ManagedMap` backed by either their std counterparts or fixed-size buffers for `#![no_std]`. - [![crates.io](https://img.shields.io/crates/v/managed.svg)](https://crates.io/crates/managed)\n*   [menu (⭐57)](https://github.com/thejpster/menu): A basic command-line interface library. Has nested menus and basic help functionality. [![crates.io](https://img.shields.io/crates/v/menu.svg)](https://crates.io/crates/menu)\n*   [micropb](https://crates.io/crates/micropb): Rust Protobuf library targetting embedded systems and no\\_std environments without an allocator. - [![crates.io](https://img.shields.io/crates/v/micropb.svg)](https://crates.io/crates/micropb)\n*   [mqtt-sn](https://crates.io/crates/mqtt-sn): Implementation of the MQTT-SN protocol - [![crates.io](https://img.shields.io/crates/v/mqtt-sn.svg)](https://crates.io/crates/mqtt-sn)\n*   [microfft](https://crates.io/crates/microfft): Embedded-friendly (`no_std`, no-`alloc`) fast fourier transforms - [![crates.io](https://img.shields.io/crates/v/microfft.svg)](https://crates.io/crates/microfft)\n*   [micromath (⭐427)](https://github.com/NeoBirth/micromath): Embedded Rust math library featuring fast, safe floating point approximations for common arithmetic operations, 2D and 3D vector types, and statistical analysis - [![crates.io](https://img.shields.io/crates/v/micromath.svg)](https://crates.io/crates/micromath)\n*   [miniconf](https://crates.io/crates/miniconf): Lookup/enumerate/serialize/deserialize nodes in trees of heterogeneous structs/arrays by path/key - [![crates.io](https://img.shields.io/crates/v/miniconf.svg)](https://crates.io/crates/miniconf)\n*   [minimq](https://crates.io/crates/minimq): A minimal MQTT5 client designed for no\\_std platforms - [![crates.io](https://img.shields.io/crates/v/minimq.svg)](https://crates.io/crates/minimq)\n*   [nalgebra](https://crates.io/crates/nalgebra): general-purpose and low-dimensional linear algebra library - [![crates.io](https://img.shields.io/crates/v/nalgebra.svg)](https://crates.io/crates/nalgebra)\n*   [nom](https://crates.io/crates/nom): parser combinator framework - [![crates.io](https://img.shields.io/crates/v/nom.svg)](https://crates.io/crates/nom)\n*   [null-terminated](https://crates.io/crates/null-terminated): generic null-terminated arrays - [![crates.io](https://img.shields.io/crates/v/null-terminated.svg)](https://crates.io/crates/null-terminated)\n*   [num-format](https://crates.io/crates/num-format): Crate for producing string representations of numbers, formatted according to international standards, e.g. \"1,000,000\" for US English - [![crates.io](https://img.shields.io/crates/v/num-format.svg)](https://crates.io/crates/num-format)\n*   [pc-keyboard (⭐111)](https://github.com/thejpster/pc-keyboard): A PS/2 keyboard protocol driver. Transport (bit-banging or SPI) agnostic, but can convert Set 2 Scancodes into Unicode. [![crates.io](https://img.shields.io/crates/v/pc-keyboard.svg)](https://crates.io/crates/pc-keyboard)\n*   [qei](https://crates.io/crates/qei) : A qei wrapper that allows you to extend your qei timers from a 16-bit integer to a 64-bit integer. - [![crates.io](https://img.shields.io/crates/v/qei.svg)](https://crates.io/crates/qei)\n*   [qemu-exit](https://crates.io/crates/qemu-exit): Quit a running QEMU session with user-defined exit code. Useful for unit or integration tests using QEMU. - [![crates.io](https://img.shields.io/crates/v/qemu-exit.svg)](https://crates.io/crates/qemu-exit)\n*   [RampMaker](https://crates.io/crates/ramp-maker): Stepper Motor Acceleration Ramp Generator - [![crates.io](https://img.shields.io/crates/v/ramp-maker.svg)](https://crates.io/crates/ramp-maker)\n*   [register-rs (⭐48)](https://github.com/rust-embedded/register-rs): Unified interface for MMIO and CPU registers. Provides type-safe bitfield manipulation. `register-rs` is Tock registers with added support for CPU register definitions using the same API as for the MMIO registers. This enables homogeneous interfaces to registers of all kinds. - [![crates.io](https://img.shields.io/crates/v/register.svg)](https://crates.io/crates/register)\n*   [scroll](https://crates.io/crates/scroll): extensible and endian-aware Read/Write traits for generic containers - [![crates.io](https://img.shields.io/crates/v/scroll.svg)](https://crates.io/crates/scroll)\n*   [sized-dst](https://crates.io/crates/sized-dst): Owned container for dynamically-sized types (such as trait objects) backed by stack memory. - [![crates.io](https://img.shields.io/crates/v/sized-dst.svg)](https://crates.io/crates/sized-dst)\n*   [smbus-pec](https://crates.io/crates/smbus-pec): Minimal portable System Management Bus Packet Error Code calculation algorithm. [![crates.io](https://img.shields.io/crates/v/smbus-pec.svg)](https://crates.io/crates/smbus-pec)\n*   [smoltcp (⭐4.1k)](https://github.com/m-labs/smoltcp): a small TCP/IP stack that runs without `alloc`. [![crates.io](https://img.shields.io/crates/v/smoltcp.svg)](https://crates.io/crates/smoltcp)\n*   [sntpc](https://crates.io/crates/sntpc): Rust SNTP client to get a timestamp from NTP servers. - [![crates.io](https://img.shields.io/crates/v/sntpc)](https://crates.io/crates/sntpc)\n*   [Stepper](https://crates.io/crates/stepper): Universal Stepper Motor Interface - [![crates.io](https://img.shields.io/crates/v/stepper.svg)](https://crates.io/crates/stepper)\n*   [tinybmp](https://crates.io/crates/tinybmp): No-std, no-alloc BMP parser for embedded systems. [Introductory blog post](https://wapl.es/rust/2019/03/04/embedded-graphics-0.4.7-bmp-support.html) - [![crates.io](https://img.shields.io/crates/v/tinybmp.svg)](https://crates.io/crates/tinybmp)\n*   [vga-framebuffer (⭐31)](https://github.com/thejpster/vga-framebuffer-rs): A VGA signal generator and font renderer for VGA-less microcontrollers. Used by [Monotron (⭐193)](https://github.com/thejpster/monotron) to generate 48 by 36 character display using 3 SPI peripherals and a timer. [![crates.io](https://img.shields.io/crates/v/vga-framebuffer.svg)](https://crates.io/crates/vga-framebuffer)\n*   [wyhash](https://crates.io/crates/wyhash): A fast, simple and portable hashing algorithm and random number generator. - [![crates.io](https://img.shields.io/crates/v/wyhash.svg)](https://crates.io/crates/wyhash)\n*   [adafruit-bluefruit-protocol](https://crates.io/crates/adafruit-bluefruit-protocol): A `no_std` parser for the [Adafruit Bluefruit LE Connect controller protocol](https://learn.adafruit.com/bluefruit-le-connect/controller). - [![crates.io](https://img.shields.io/crates/v/adafruit-bluefruit-protocol)](https://crates.io/crates/adafruit-bluefruit-protocol)\n*   [light-cli (⭐15)](https://github.com/rudihorn/light-cli): a lightweight heapless cli interface [![crates.io](https://img.shields.io/crates/v/light_cli.svg)](https://crates.io/crates/light_cli)\n*   [Rubble (⭐401)](https://github.com/jonas-schievink/rubble): A pure-Rust embedded BLE stack [![crates.io](https://img.shields.io/crates/v/rubble.svg)](https://crates.io/crates/rubble)",
      "content_html": "<h3><p>Tools / Paid and commercially available materials</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/kiffie/edc2svd\" rel=\"noopener noreferrer\">edc2svd (⭐7)</a> Generate SVD files for PIC32 devices from EDC files. - <a href=\"https://crates.io/crates/edc2svd\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/edc2svd.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/embedded-hal-mock\" rel=\"noopener noreferrer\">embedded-hal-mock</a> Mock implementation of <code>embedded-hal</code> traits for testing without accessing real hardware. - <a href=\"https://crates.io/crates/embedded-hal-mock\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/embedded-hal-mock.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bindgen\" rel=\"noopener noreferrer\">bindgen</a> Automatically generates Rust FFI bindings to C and C++ libraries. - <a href=\"https://crates.io/crates/bindgen\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bindgen.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://probe.rs/docs/tools/cargo-flash/\" rel=\"noopener noreferrer\">cargo-flash</a> A small cargo subcommand to download your binary to your target chip. - <a href=\"https://crates.io/crates/cargo-flash\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/cargo-flash.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://probe.rs/docs/tools/cargo-embed/\" rel=\"noopener noreferrer\">cargo-embed</a> A superset of cargo-flash with additional useful features like configuration file support, an RTT terminal, or a GDB server. - <a href=\"https://crates.io/crates/cargo-embed\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/cargo-embed.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/jacobrosenthal/hf2-rs\" rel=\"noopener noreferrer\">cargo-hf2 (⭐53)</a>  A small cargo subcommand to download cargo builds to Microsoft UF2 bootloaders via HID USB . - <a href=\"https://crates.io/crates/cargo-hf2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/cargo-hf2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/esp-rs/espflash\" rel=\"noopener noreferrer\">espflash (⭐596)</a> Serial flasher utility for Espressif SoCs and modules. - <a href=\"https://crates.io/crates/espflash\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/espflash.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/esp-rs/espup\" rel=\"noopener noreferrer\">espup (⭐301)</a> Tool for installing and maintaining Espressif Rust ecosystem. - <a href=\"https://crates.io/crates/espup\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/espup.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/sajattack/uf2conv-rs\" rel=\"noopener noreferrer\">uf2 (⭐28)</a> Converts binary files to Microsoft's UF2 format for copying over to mass storage device uf2 bootloaders - <a href=\"https://crates.io/crates/uf2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/uf2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://codeberg.org/weathered-steel/svd-generator\" rel=\"noopener noreferrer\">svd-generator</a> CLI tool to parse flattened device tree files, and create a SVD file. - <a href=\"https://crates.io/crates/svd-generator\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/svd-generator.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / Microchip</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/sam3x8e\" rel=\"noopener noreferrer\"><code>sam3x8e</code></a> Peripheral access API for Atmel SAMD3X8E microcontrollers (generated using svd2rust)  - <a href=\"https://crates.io/crates/sam3x8e\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/sam3x8e.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/pic32mx2xx\" rel=\"noopener noreferrer\"><code>pic32-pac</code></a> Peripheral access API for PIC32MX1/2xx - <a href=\"https://crates.io/crates/pic32mx2xx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/pic32mx2xx\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / Nordic</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/nrf51\" rel=\"noopener noreferrer\"><code>nrf51</code></a> Peripheral access API for nRF51 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/nrf51\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf51.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf52810-pac\" rel=\"noopener noreferrer\"><code>nrf52810-pac</code></a> - Peripheral access API for the nRF52810 microcontroller (generated using svd2rust) - <a href=\"https://crates.io/crates/nrf52810-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf52810-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf52811-pac\" rel=\"noopener noreferrer\"><code>nrf52811-pac</code></a> - Peripheral access API for the nRF52811 microcontroller (generated using svd2rust) - <a href=\"https://crates.io/crates/nrf52811-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf52811-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf52832-pac\" rel=\"noopener noreferrer\"><code>nrf52832-pac</code></a> - Peripheral access API for the nRF52832 microcontroller (generated using svd2rust) - <a href=\"https://crates.io/crates/nrf52832-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf52832-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf52833-pac\" rel=\"noopener noreferrer\"><code>nrf52833-pac</code></a> - Peripheral access API for the nRF52833 microcontroller (generated using svd2rust) - <a href=\"https://crates.io/crates/nrf52833-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf52833-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf52840-pac\" rel=\"noopener noreferrer\"><code>nrf52840-pac</code></a> - Peripheral access API for the nRF52840 microcontroller (generated using svd2rust) - <a href=\"https://crates.io/crates/nrf52840-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf52840-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf5340-app-pac\" rel=\"noopener noreferrer\"><code>nrf5340-app-pac</code></a> - Peripheral access API for the nRF5340 application core (generated using svd2rust) - <a href=\"https://crates.io/crates/nrf5340-app-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf5340-app-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf5340-net-pac\" rel=\"noopener noreferrer\"><code>nrf5340-net-pac</code></a> - Peripheral access API for the nRF5340 network core (generated using svd2rust) - <a href=\"https://crates.io/crates/nrf5340-net-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf5340-net-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf9160-pac\" rel=\"noopener noreferrer\"><code>nrf9160-pac</code></a> - Peripheral access API for the nRF9160 system-in-package (generated using svd2rust) - <a href=\"https://crates.io/crates/nrf9160-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf9160-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / NXP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/k64\" rel=\"noopener noreferrer\"><code>k64</code></a> - <a href=\"https://crates.io/crates/k64\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/k64.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/lpc11uxx\" rel=\"noopener noreferrer\"><code>lpc11uxx</code></a> - <a href=\"https://crates.io/crates/lpc11uxx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lpc11uxx.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/lpc55s6x-pac\" rel=\"noopener noreferrer\"><code>lpc55s6x-pac</code></a> - <a href=\"https://crates.io/crates/lpc55s6x-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lpc55s6x-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/lpc82x-pac\" rel=\"noopener noreferrer\"><code>lpc82x-pac</code></a> - <a href=\"https://crates.io/crates/lpc82x-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lpc82x-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/lpc845-pac\" rel=\"noopener noreferrer\"><code>lpc845-pac</code></a> - <a href=\"https://crates.io/crates/lpc845-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lpc845-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mkw41z\" rel=\"noopener noreferrer\"><code>mkw41z</code></a> - <a href=\"https://crates.io/crates/mkw41z\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mkw41z.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/imxrt-rs/imxrt-rs\" rel=\"noopener noreferrer\"><code>imxrt-ral</code></a> Register access layer for i.MX RT series. -  <a href=\"https://crates.io/crates/imxrt-ral\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/imxrt-ral.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/SKEAZN642\" rel=\"noopener noreferrer\"><code>SKEAZN642</code></a> Peripheral access API for KEA64 family microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/SKEAZN642\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/SKEAZN642.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / Raspberry Pi Silicon</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/rp2040-pac\" rel=\"noopener noreferrer\"><code>rp2040-pac</code></a> - Peripheral access API for the RP2040 dual-core system-on-chip (generated using svd2rust) - <a href=\"https://crates.io/crates/rp2040-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/rp2040-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / SiFive</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/riscv-rust/e310x\" rel=\"noopener noreferrer\"><code>e310x</code></a> - svd2rust generated interface to SiFive <a href=\"https://www.sifive.com/cores/e31\" rel=\"noopener noreferrer\">Freedom E310</a> MCUs - <a href=\"https://crates.io/crates/e310x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/e310x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / Silicon Labs</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/efm32pg12-pac\" rel=\"noopener noreferrer\"><code>efm32pg12-pac</code></a> - Peripheral access API for Silicon Labs EFM32PG12 microcontrollers - <a href=\"https://crates.io/crates/efm32pg12-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32pg12-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32g-pac\" rel=\"noopener noreferrer\"><code>efm32g-pac</code></a> - <a href=\"https://crates.io/crates/efm32g-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32g-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32gg-pac\" rel=\"noopener noreferrer\"><code>efm32gg-pac</code></a> - <a href=\"https://crates.io/crates/efm32gg-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32gg-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32gg11b-pac\" rel=\"noopener noreferrer\"><code>efm32gg11b-pac</code></a> - <a href=\"https://crates.io/crates/efm32gg11b-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32gg11b-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32gg12b-pac\" rel=\"noopener noreferrer\"><code>efm32gg12b-pac</code></a> - <a href=\"https://crates.io/crates/efm32gg12b-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32gg12b-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32hg-pac\" rel=\"noopener noreferrer\"><code>efm32hg-pac</code></a> - <a href=\"https://crates.io/crates/efm32hg-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32hg-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32jg1b-pac\" rel=\"noopener noreferrer\"><code>efm32jg1b-pac</code></a> - <a href=\"https://crates.io/crates/efm32jg1b-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32jg1b-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32jg12b-pac\" rel=\"noopener noreferrer\"><code>efm32jg12b-pac</code></a> - <a href=\"https://crates.io/crates/efm32jg12b-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32jg12b-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32lg-pac\" rel=\"noopener noreferrer\"><code>efm32lg-pac</code></a> - <a href=\"https://crates.io/crates/efm32lg-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32lg-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32pg-pac\" rel=\"noopener noreferrer\"><code>efm32pg-pac</code></a> - <a href=\"https://crates.io/crates/efm32pg-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32pg-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32pg22-pac\" rel=\"noopener noreferrer\"><code>efm32pg22-pac</code></a> - <a href=\"https://crates.io/crates/efm32pg22-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32pg22-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32pg23-pac\" rel=\"noopener noreferrer\"><code>efm32pg23-pac</code></a> - <a href=\"https://crates.io/crates/efm32pg23-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32pg23-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32tg-pac\" rel=\"noopener noreferrer\"><code>efm32tg-pac</code></a> - <a href=\"https://crates.io/crates/efm32tg-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32tg-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32tg11b-pac\" rel=\"noopener noreferrer\"><code>efm32tg11b-pac</code></a> - <a href=\"https://crates.io/crates/efm32tg11b-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32tg11b-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32wg-pac\" rel=\"noopener noreferrer\"><code>efm32wg-pac</code></a> - <a href=\"https://crates.io/crates/efm32wg-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32wg-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/efm32zg-pac\" rel=\"noopener noreferrer\"><code>efm32zg-pac</code></a> - <a href=\"https://crates.io/crates/efm32zg-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/efm32zg-pac\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / StarFive</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/jh71xx-pac\" rel=\"noopener noreferrer\"><code>j71xx-pac</code></a> - svd2rust generated interface to StarFive <a href=\"https://www.starfivetech.com/en/site/soc\" rel=\"noopener noreferrer\">JH71xx</a> MCUs - <a href=\"https://crates.io/crates/jh71xx-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/jh71xx-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / STMicroelectronics</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f0\" rel=\"noopener noreferrer\"><code>stm32f0</code></a> - <a href=\"https://crates.io/crates/stm32f0\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f0.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f1\" rel=\"noopener noreferrer\"><code>stm32f1</code></a> - <a href=\"https://crates.io/crates/stm32f1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f2\" rel=\"noopener noreferrer\"><code>stm32f2</code></a> - <a href=\"https://crates.io/crates/stm32f2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f3\" rel=\"noopener noreferrer\"><code>stm32f3</code></a> - <a href=\"https://crates.io/crates/stm32f3\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f3.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f4\" rel=\"noopener noreferrer\"><code>stm32f4</code></a> - <a href=\"https://crates.io/crates/stm32f4\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f4.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f7\" rel=\"noopener noreferrer\"><code>stm32f7</code></a> - <a href=\"https://crates.io/crates/stm32f7\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f7.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32g0\" rel=\"noopener noreferrer\"><code>stm32g0</code></a> - <a href=\"https://crates.io/crates/stm32g0\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32g0.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32g4\" rel=\"noopener noreferrer\"><code>stm32g4</code></a> - <a href=\"https://crates.io/crates/stm32g4\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32g4.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32h7\" rel=\"noopener noreferrer\"><code>stm32h7</code></a> - <a href=\"https://crates.io/crates/stm32h7\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32h7.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32l0\" rel=\"noopener noreferrer\"><code>stm32l0</code></a> - <a href=\"https://crates.io/crates/stm32l0\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32l0.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32l1\" rel=\"noopener noreferrer\"><code>stm32l1</code></a> - <a href=\"https://crates.io/crates/stm32l1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32l1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32l4\" rel=\"noopener noreferrer\"><code>stm32l4</code></a> - <a href=\"https://crates.io/crates/stm32l4\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32l4.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / MSP430</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/msp430fr6972\" rel=\"noopener noreferrer\"><code>msp430fr6972</code></a> - <a href=\"https://crates.io/crates/msp430fr6972\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/msp430fr6972\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / Espressif</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/esp-rs/esp-pacs/tree/main/esp32\" rel=\"noopener noreferrer\"><code>esp32</code></a> - <a href=\"https://crates.io/crates/esp32\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/esp32.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/esp-rs/esp-pacs/tree/main/esp32c2\" rel=\"noopener noreferrer\"><code>esp32c2</code></a> - <a href=\"https://crates.io/crates/esp32c2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/esp32c2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/esp-rs/esp-pacs/tree/main/esp32c3\" rel=\"noopener noreferrer\"><code>esp32c3</code></a> - <a href=\"https://crates.io/crates/esp32c3\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/esp32c3.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/esp-rs/esp-pacs/tree/main/esp32c6\" rel=\"noopener noreferrer\"><code>esp32c6</code></a> - <a href=\"https://crates.io/crates/esp32c6\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/esp32c6.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/esp-rs/esp-pacs/tree/main/esp32h2\" rel=\"noopener noreferrer\"><code>esp32h2</code></a> - <a href=\"https://crates.io/crates/esp32h2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/esp32h2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/esp-rs/esp-pacs/tree/main/esp32s2\" rel=\"noopener noreferrer\"><code>esp32s2</code></a> - <a href=\"https://crates.io/crates/esp32s2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/esp32s2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/esp-rs/esp-pacs/tree/main/esp32s3\" rel=\"noopener noreferrer\"><code>esp32s3</code></a> - <a href=\"https://crates.io/crates/esp32s3\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/esp32s3.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / GigaDevice</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/riscv-rust/gd32vf103-pac\" rel=\"noopener noreferrer\"><code>gd32vf103-pac</code></a> Peripheral access API for GD32VF103 RISC-V microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/gd32vf103-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/gd32vf103-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/gd32e2\" rel=\"noopener noreferrer\"><code>gd32e2</code></a> Peripheral access API for GD32E23x Cortex-M23 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/gd32e2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/gd32e2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/gd32f1\" rel=\"noopener noreferrer\"><code>gd32f1</code></a> Peripheral access API for GD32F1x0 Cortex-M3 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/gd32f1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/gd32f1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/gd32f2\" rel=\"noopener noreferrer\"><code>gd32f2</code></a> Peripheral access API for GD32F20x Cortex-M3 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/gd32f2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/gd32f2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / XMC</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/xmc-rs/xmc4100\" rel=\"noopener noreferrer\"><code>xmc4100</code></a> - <a href=\"https://crates.io/crates/xmc4100\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/xmc4100.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/xmc-rs/xmc4200\" rel=\"noopener noreferrer\"><code>xmc4200</code></a> - <a href=\"https://crates.io/crates/xmc4200\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/xmc4200.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/xmc-rs/xmc4300\" rel=\"noopener noreferrer\"><code>xmc4300</code></a> - <a href=\"https://crates.io/crates/xmc4300\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/xmc4300.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/xmc-rs/xmc4400\" rel=\"noopener noreferrer\"><code>xmc4400</code></a> - <a href=\"https://crates.io/crates/xmc4400\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/xmc4400.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/xmc-rs/xmc4500\" rel=\"noopener noreferrer\"><code>xmc4500</code></a> - <a href=\"https://crates.io/crates/xmc4500\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/xmc4500.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/xmc-rs/xmc4700\" rel=\"noopener noreferrer\"><code>xmc4700</code></a> - <a href=\"https://crates.io/crates/xmc4700\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/xmc4700.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/xmc-rs/xmc4800\" rel=\"noopener noreferrer\"><code>xmc4800</code></a> - <a href=\"https://crates.io/crates/xmc4800\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/xmc4800.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / Vorago</p>\n</h3>\n<ul>\n<li><a href=\"https://egit.irs.uni-stuttgart.de/rust/va108xx-rs\" rel=\"noopener noreferrer\"><code>va108xx</code></a> - <a href=\"https://crates.io/crates/va108xx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/va108xx.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://egit.irs.uni-stuttgart.de/rust/va416xx-rs\" rel=\"noopener noreferrer\"><code>va416xx</code></a> - <a href=\"https://crates.io/crates/va416xx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/va416xx.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / Wiznet</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/w7500x-pac\" rel=\"noopener noreferrer\"><code>w7500x-pac</code></a> Peripheral Access Crate for Wiznet's W7500x microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/w7500x-pac\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/w7500x-pac.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Peripheral Access Crates / Renesas</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra2a1\" rel=\"noopener noreferrer\"><code>ra2a1</code></a> Peripheral Access Crate for ra2a1 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra2a1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra2a1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra2e1\" rel=\"noopener noreferrer\"><code>ra2e1</code></a> Peripheral Access Crate for ra2e1 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra2e1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra2e1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra2e2\" rel=\"noopener noreferrer\"><code>ra2e2</code></a> Peripheral Access Crate for ra2e2 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra2e2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra2e2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra2l1\" rel=\"noopener noreferrer\"><code>ra2l1</code></a> Peripheral Access Crate for ra2l1 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra2l1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra2l1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra4e1\" rel=\"noopener noreferrer\"><code>ra4e1</code></a> Peripheral Access Crate for ra4e1 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra4e1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra4e1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra4m1\" rel=\"noopener noreferrer\"><code>ra4m1</code></a> Peripheral Access Crate for ra4m1 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra4m1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra4m1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra4m2\" rel=\"noopener noreferrer\"><code>ra4m2</code></a> Peripheral Access Crate for ra4m2 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra4m2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra4m2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra4m3\" rel=\"noopener noreferrer\"><code>ra4m3</code></a> Peripheral Access Crate for ra4m3 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra4m3\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra4m3.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra4w1\" rel=\"noopener noreferrer\"><code>ra4w1</code></a> Peripheral Access Crate for ra4w1 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra4w1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra4w1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra6e1\" rel=\"noopener noreferrer\"><code>ra6e1</code></a> Peripheral Access Crate for ra6e1 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra6e1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra6e1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra6m1\" rel=\"noopener noreferrer\"><code>ra6m1</code></a> Peripheral Access Crate for ra6m1 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra6m1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra6m1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra6m2\" rel=\"noopener noreferrer\"><code>ra6m2</code></a> Peripheral Access Crate for ra6m2 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra6m2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra6m2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra6m3\" rel=\"noopener noreferrer\"><code>ra6m3</code></a> Peripheral Access Crate for ra6m3 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra6m3\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra6m3.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra6m4\" rel=\"noopener noreferrer\"><code>ra6m4</code></a> Peripheral Access Crate for ra6m4 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra6m4\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra6m4.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra6t1\" rel=\"noopener noreferrer\"><code>ra6t1</code></a> Peripheral Access Crate for ra6t1 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra6t1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra6t1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ra-rs/ra/tree/main/pac/ra6t2\" rel=\"noopener noreferrer\"><code>ra6t2</code></a> Peripheral Access Crate for ra6t2 microcontrollers (generated using svd2rust) - <a href=\"https://crates.io/crates/ra6t2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ra6t2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/da14531\" rel=\"noopener noreferrer\"><code>da14531</code></a> Peripheral Access Crate for DA14531 Ultra-Low Power BT 5.1 System-on-Chip - <a href=\"https://crates.io/crates/da14531\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/da14531.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>HAL implementation crates / OS</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/linux-embedded-hal\" rel=\"noopener noreferrer\"><code>linux-embedded-hal</code></a> for embedded Linux systems like the Raspberry Pi. - <a href=\"https://crates.io/crates/linux-embedded-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/linux-embedded-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/freebsd-embedded-hal\" rel=\"noopener noreferrer\"><code>freebsd-embedded-hal</code></a> for embedded (or <a href=\"https://www.freebsd.org/cgi/man.cgi?query=cp2112&amp;sektion=4\" rel=\"noopener noreferrer\">not</a>) FreeBSD systems. - <a href=\"https://crates.io/crates/freebsd-embedded-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/freebsd-embedded-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>HAL implementation crates / Microchip</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/atsam4-hal\" rel=\"noopener noreferrer\"><code>atsam4-hal</code></a> - HAL for SAM4E, SAM4N and SAM4S - <a href=\"https://crates.io/crates/atsam4-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/atsam4-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/atsamd-hal\" rel=\"noopener noreferrer\"><code>atsamd-hal</code></a> - HAL for SAMD11, SAMD21, SAMD51 and SAME54 - <a href=\"https://crates.io/crates/atsamd-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/atsamd-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/atsamx7x-hal\" rel=\"noopener noreferrer\"><code>atsamx7x-hal</code></a> - HAL for SAM S70/E70/V70/V71-based devices - <a href=\"https://crates.io/crates/atsamx7x-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/atsamx7x-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/pic32-hal\" rel=\"noopener noreferrer\"><code>pic32-hal</code></a> - HAL for PIC32MX - <a href=\"https://crates.io/crates/pic32-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/pic32-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>HAL implementation crates / Nordic</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/nrf51-hal\" rel=\"noopener noreferrer\"><code>nrf51-hal</code></a> - <a href=\"https://crates.io/crates/nrf51-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf51-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf52810-hal\" rel=\"noopener noreferrer\"><code>nrf52810-hal</code></a> - <a href=\"https://crates.io/crates/nrf52810-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf52810-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf52811-hal\" rel=\"noopener noreferrer\"><code>nrf52811-hal</code></a> - <a href=\"https://crates.io/crates/nrf52811-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf52811-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf52832-hal\" rel=\"noopener noreferrer\"><code>nrf52832-hal</code></a> - <a href=\"https://crates.io/crates/nrf52832-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf52832-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf52833-hal\" rel=\"noopener noreferrer\"><code>nrf52833-hal</code></a> - <a href=\"https://crates.io/crates/nrf52833-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf52833-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf52840-hal\" rel=\"noopener noreferrer\"><code>nrf52840-hal</code></a> - <a href=\"https://crates.io/crates/nrf52840-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf52840-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf9160-hal\" rel=\"noopener noreferrer\"><code>nrf9160-hal</code></a> - <a href=\"https://crates.io/crates/nrf9160-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf9160-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>HAL implementation crates / NXP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/mkw41z-hal\" rel=\"noopener noreferrer\"><code>mkw41z-hal</code></a> - <a href=\"https://crates.io/crates/mkw41z-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mkw41z-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/imxrt-rs/imxrt-rs\" rel=\"noopener noreferrer\"><code>imxrt-hal</code></a> - HAL for i.MX RT series. -  <a href=\"https://crates.io/crates/imxrt-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/imxrt-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>HAL implementation crates / Raspberry Pi Silicon</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/rp2040-hal\" rel=\"noopener noreferrer\"><code>rp2040-hal</code></a> - HAL for the RP2040 dual-core system-on-chip - <a href=\"https://crates.io/crates/rp2040-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/rp2040-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>HAL implementation crates / SiFive</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/riscv-rust/e310x-hal\" rel=\"noopener noreferrer\"><code>e310x-hal</code></a> - HAL for SiFive <a href=\"https://www.sifive.com/cores/e31\" rel=\"noopener noreferrer\">Freedom E310</a> MCUs - <a href=\"https://crates.io/crates/e310x-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/e310x-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>HAL implementation crates / STMicroelectronics</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f3xx-hal\" rel=\"noopener noreferrer\"><code>stm32f3xx-hal</code></a> - <a href=\"https://crates.io/crates/stm32f3xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f3xx-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32g0xx-hal\" rel=\"noopener noreferrer\"><code>stm32g0xx-hal</code></a> - <a href=\"https://crates.io/crates/stm32g0xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32g0xx-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32l1xx-hal\" rel=\"noopener noreferrer\"><code>stm32l1xx-hal</code></a> - <a href=\"https://crates.io/crates/stm32l1xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32l1xx-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32l151-hal\" rel=\"noopener noreferrer\"><code>stm32l151-hal</code></a> - <a href=\"https://crates.io/crates/stm32l151-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32l151-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>HAL implementation crates / XMC</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/david-sawatzke/xmc1100-hal\" rel=\"noopener noreferrer\"><code>xmc1100-hal</code></a> - <a href=\"https://crates.io/crates/xmc1100-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/xmc1100-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/xmc-rs/xmc4-hal\" rel=\"noopener noreferrer\"><code>xmc4-hal</code></a> - <a href=\"https://crates.io/crates/xmc4-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/xmc4-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>HAL implementation crates / Renesas</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/da14531-hal\" rel=\"noopener noreferrer\"><code>da14531-hal</code></a> HAL crate for DA14531 Ultra-Low Power BT 5.1 System-on-Chip - <a href=\"https://crates.io/crates/da14531-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/da14531-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>HAL implementation crates / StarFive</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/jh71xx-hal\" rel=\"noopener noreferrer\"><code>j71xx-hal</code></a> - HAL crate for StarFive <a href=\"https://www.starfivetech.com/en/site/soc\" rel=\"noopener noreferrer\">JH71xx</a> MCUs - <a href=\"https://crates.io/crates/jh71xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/jh71xx-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Architecture support crates / ARM</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/andre-richter/cortex-a\" rel=\"noopener noreferrer\"><code>cortex-a</code></a> Low-level access to Cortex-A processors (early state) - <a href=\"https://crates.io/crates/cortex-a\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/cortex-a.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/japaric/cortex-m\" rel=\"noopener noreferrer\"><code>cortex-m</code></a> Low-level access to Cortex-M processors - <a href=\"https://crates.io/crates/cortex-m\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/cortex-m.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Architecture support crates / RISC-V</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/rust-embedded/riscv\" rel=\"noopener noreferrer\"><code>riscv</code></a> Low-level access to RISC-V processors - <a href=\"https://crates.io/crates/riscv\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/riscv.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Architecture support crates / MIPS</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Harry-Chen/rust-mips\" rel=\"noopener noreferrer\"><code>mips</code></a> Low-level access to MIPS32 processors - <a href=\"https://crates.io/crates/mips\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mips.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/kiffie/pic32-rs/tree/master/mips-mcu\" rel=\"noopener noreferrer\"><code>mips-mcu</code></a> Low-level access to MIPS MCU cores - <a href=\"https://crates.io/crates/mips-mcu\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mips-mcu.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / 1BitSquared</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/onebitsy\" rel=\"noopener noreferrer\"><code>onebitsy</code></a> - Board support crate for the <a href=\"https://1bitsy.org/\" rel=\"noopener noreferrer\">1bitsy</a> STM32F4-based board - <a href=\"https://crates.io/crates/onebitsy\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/onebitsy.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / Adafruit</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/metro_m0\" rel=\"noopener noreferrer\"><code>metro_m0</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/3505\" rel=\"noopener noreferrer\">Metro M0 board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 1 support (⭐612)</a> board. <a href=\"https://crates.io/crates/metro_m0\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/metro_m0.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/metro_m4\" rel=\"noopener noreferrer\"><code>metro_m4</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/3382\" rel=\"noopener noreferrer\">Metro M4 board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 1 support (⭐612)</a> board. <a href=\"https://crates.io/crates/metro_m4\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/metro_m4.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/pyportal\" rel=\"noopener noreferrer\"><code>pyportal</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/4116\" rel=\"noopener noreferrer\">PyPortal board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/pyportal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/pyportal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/pygamer\" rel=\"noopener noreferrer\"><code>pygamer</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/4242\" rel=\"noopener noreferrer\">PyGamer board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 1 support (⭐612)</a> board. <a href=\"https://crates.io/crates/pygamer\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/pygamer.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/trellis_m4\" rel=\"noopener noreferrer\"><code>trellis_m4</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/3938\" rel=\"noopener noreferrer\">NeoTrellis M4 board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/trellis_m4\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/trellis_m4.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/feather-f405\" rel=\"noopener noreferrer\"><code>feather-f405</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/4382\" rel=\"noopener noreferrer\">Feather STM32F405 Express</a>. <a href=\"https://crates.io/crates/feather-f405\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/feather-f405.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/feather_m0\" rel=\"noopener noreferrer\"><code>feather_m0</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/2772\" rel=\"noopener noreferrer\">Feather M0 board</a>, and some variants in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 1 support (⭐612)</a> board. <a href=\"https://crates.io/crates/feather_m0\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/feather_m0.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/feather_m4\" rel=\"noopener noreferrer\"><code>feather_m4</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/3857\" rel=\"noopener noreferrer\">Feather M4 board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 1 support (⭐612)</a> board. <a href=\"https://crates.io/crates/feather_m4\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/feather_m4.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/circuit_playground_express\" rel=\"noopener noreferrer\"><code>circuit_playground_express</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/3333\" rel=\"noopener noreferrer\">Circuit Playground Express board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/circuit_playground_express\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/circuit_playground_express.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/edgebadge\" rel=\"noopener noreferrer\"><code>edgebadge</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/4400\" rel=\"noopener noreferrer\">EdgeBadge board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/edgebadge\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/edgebadge.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/gemma_m0\" rel=\"noopener noreferrer\"><code>gemma_m0</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/3501\" rel=\"noopener noreferrer\">Gemma M0 board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/gemma_m0\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/gemma_m0.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/itsybitsy_m0\" rel=\"noopener noreferrer\"><code>itsybitsy_m0</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/3727\" rel=\"noopener noreferrer\">ItsyBitsy M0 board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/itsybitsy_m0\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/itsybitsy_m0.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/itsybitsy_m4\" rel=\"noopener noreferrer\"><code>itsybitsy_m4</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/3800\" rel=\"noopener noreferrer\">ItsyBitsy M4 Express board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/itsybitsy_m4\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/itsybitsy_m4.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/trinket_m0\" rel=\"noopener noreferrer\"><code>trinket_m0</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/3500\" rel=\"noopener noreferrer\">Trinket M0 board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/trinket_m0\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/trinket_m0.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/neo_trinkey\" rel=\"noopener noreferrer\"><code>neo_trinkey</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/4870\" rel=\"noopener noreferrer\">neo trinkey board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/neo_trinkey\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/neo_trinkey.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/neokey_trinkey\" rel=\"noopener noreferrer\"><code>neokey_trinkey</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/5020\" rel=\"noopener noreferrer\">neokey trinkey board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/neokey_trinkey\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/neokey_trinkey.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/grand_central_m4\" rel=\"noopener noreferrer\"><code>grand_central_m4</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/4064\" rel=\"noopener noreferrer\">grand central m4 board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/grand_central_m4\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/grand_central_m4.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/qt_py_m0\" rel=\"noopener noreferrer\"><code>qt_py_m0</code></a> - Board support for the <a href=\"https://www.adafruit.com/product/4600\" rel=\"noopener noreferrer\">QT Py board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/qt_py_m0\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/qt_py_m0.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / Arduino</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/arduino_mkr1000\" rel=\"noopener noreferrer\"><code>arduino_mkr1000</code></a> - Board support for the <a href=\"https://docs.arduino.cc/hardware/mkr-1000-wifi\" rel=\"noopener noreferrer\">MKR 1000 WiFi board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/arduino_mkr1000\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/arduino_mkr1000.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/arduino_mkrvidor4000\" rel=\"noopener noreferrer\"><code>arduino_mkrvidor4000</code></a> - Board support for the <a href=\"https://store.arduino.cc/usa/mkr-vidor-4000\" rel=\"noopener noreferrer\">MKR Vidor board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/arduino_mkrvidor4000\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/arduino_mkrvidor4000.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/arduino_mkrzero\" rel=\"noopener noreferrer\"><code>arduino_mkrzero</code></a> - Board support for the <a href=\"https://store.arduino.cc/arduino-mkrzero\" rel=\"noopener noreferrer\">mkrzero board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/arduino_mkrzero\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/arduino_mkrzero.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/arduino_nano33iot\" rel=\"noopener noreferrer\"><code>arduino_nano33iot</code></a> - Board support for the <a href=\"https://store.arduino.cc/products/arduino-nano-33-iot\" rel=\"noopener noreferrer\">Arduino Nano 33 IoT</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/arduino_nano33iot\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/arduino_nano33iot.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / Nordic</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/dwm1001\" rel=\"noopener noreferrer\"><code>dwm1001</code></a> - <a href=\"https://www.decawave.com/product/dwm1001-development-board/\" rel=\"noopener noreferrer\">Decawave DWM1001-DEV</a> - <a href=\"https://crates.io/crates/dwm1001\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/dwm1001.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/microbit\" rel=\"noopener noreferrer\"><code>microbit</code></a> - <a href=\"http://microbit.org/\" rel=\"noopener noreferrer\">micro:bit</a> - <a href=\"https://crates.io/crates/microbit\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/microbit.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nrf52840-dk-bsp\" rel=\"noopener noreferrer\"><code>nrf52840-dk-bsp</code></a> - <a href=\"https://www.nordicsemi.com/Products/Development-hardware/nrf52840-dk\" rel=\"noopener noreferrer\">nrf52840-dk</a> - <a href=\"https://crates.io/crates/nrf52840-dk-bsp\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nrf52840-dk-bsp.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/thingy-91-nrf9160-bsp\" rel=\"noopener noreferrer\"><code>Thingy:91-nrf9160</code></a> - <a href=\"https://www.nordicsemi.com/Products/Development-hardware/Nordic-Thingy-91\" rel=\"noopener noreferrer\">thingy:91</a> - <a href=\"https://crates.io/crates/thingy-91-nrf9160-bsp\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/thingy-91-nrf9160-bsp.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / NXP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/frdm-kw41z\" rel=\"noopener noreferrer\"><code>frdm-kw41z</code></a> - <a href=\"https://www.nxp.com/products/processors-and-microcontrollers/arm-based-processors-and-mcus/kinetis-cortex-m-mcus/w-serieswireless-conn.m0-plus-m4/freedom-development-kit-for-kinetis-kw41z-31z-21z-mcus:FRDM-KW41Z\" rel=\"noopener noreferrer\">FRDM-KW41Z</a> - <a href=\"https://crates.io/crates/frdm-kw41z\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/frdm-kw41z.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / Sparkfun</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/samd21_mini\" rel=\"noopener noreferrer\"><code>samd21_mini</code></a> - Board support for the <a href=\"https://www.sparkfun.com/products/13664\" rel=\"noopener noreferrer\">SAMD21 Mini Breakout</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/samd21_mini\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/samd21_mini.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / SeeedStudio</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/xiao_m0\" rel=\"noopener noreferrer\"><code>xiao_m0</code></a> - Board support for the <a href=\"http://wiki.seeedstudio.com/Seeeduino-XIAO/\" rel=\"noopener noreferrer\">Seeed Studio Seeeduino XIAO</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/xiao_m0\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/xiao_m0.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/wio_lite_mg126\" rel=\"noopener noreferrer\"><code>wio_lite_mg126</code></a> - Board support for the <a href=\"https://wiki.seeedstudio.com/Wio-Lite-MG126\" rel=\"noopener noreferrer\">Seeed Studio wio_lite_mg126</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/wio_lite_mg126\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/wio_lite_mg126.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/wio_lite_w600\" rel=\"noopener noreferrer\"><code>wio_lite_w600</code></a> - Board support for the <a href=\"https://wiki.seeedstudio.com/Wio-Lite-W600/\" rel=\"noopener noreferrer\">Seeed Studio wio_lite_w600</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/wio_lite_w600\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/wio_lite_w600.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/wio_terminal\" rel=\"noopener noreferrer\"><code>wio_terminal</code></a> - Board support for the <a href=\"https://wiki.seeedstudio.com/Wio-Terminal-Getting-Started/\" rel=\"noopener noreferrer\">Seeed Studio wio_terminal</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 1 support (⭐612)</a> board <a href=\"https://crates.io/crates/wio_terminal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/wio_terminal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / SiFive</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/riscv-rust/hifive1\" rel=\"noopener noreferrer\"><code>hifive1</code></a> - Board support crate for <a href=\"https://www.sifive.com/boards/hifive1\" rel=\"noopener noreferrer\">HiFive1</a> and <a href=\"https://hackaday.io/project/26909-lofive\" rel=\"noopener noreferrer\">LoFive</a> boards - <a href=\"https://crates.io/crates/hifive\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/hifive.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / STMicroelectronics</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/f3\" rel=\"noopener noreferrer\"><code>f3</code></a> Board Support Crate for the <a href=\"http://www.st.com/en/evaluation-tools/stm32f3discovery.html\" rel=\"noopener noreferrer\">STM32F3DISCOVERY</a> - <a href=\"https://crates.io/crates/f3\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/f3.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/jkristell/nucleo-f401re.git\" rel=\"noopener noreferrer\"><code>nucleo-f401re</code></a> - <a href=\"https://www.st.com/en/evaluation-tools/nucleo-f401re.html\" rel=\"noopener noreferrer\">Nucleo-F401RE</a> <a href=\"https://crates.io/crates/nucleo-f401re\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nucleo-f401re.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/solo-bsp\" rel=\"noopener noreferrer\"><code>solo-bsp</code></a> Board Support Crate for <a href=\"https://solokeys.com/\" rel=\"noopener noreferrer\">Solo</a>, an open source security token (WIP) - <a href=\"https://crates.io/crates/solo-bsp\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/solo-bsp.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f407g-disc\" rel=\"noopener noreferrer\"><code>stm32f407g-disc</code></a> Board Support Crate for the <a href=\"https://www.st.com/en/evaluation-tools/stm32f4discovery.html\" rel=\"noopener noreferrer\">STM32F4DISCOVERY</a> (WIP) - <a href=\"https://crates.io/crates/stm32f407g-disc\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f407g-disc.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f429i-disc\" rel=\"noopener noreferrer\"><code>stm32f429i-disc</code></a> Board Support Crate for the <a href=\"https://www.st.com/en/evaluation-tools/32f429idiscovery.html\" rel=\"noopener noreferrer\">STM32F429DISCOVERY</a> (WIP) - <a href=\"https://crates.io/crates/stm32f429i-disc\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f429i-disc.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f3-discovery\" rel=\"noopener noreferrer\"><code>stm32f3-discovery</code></a> Board Support Crate for the <a href=\"http://www.st.com/en/evaluation-tools/stm32f3discovery.html\" rel=\"noopener noreferrer\">STM32F3DISCOVERY</a> used in <a href=\"https://rust-embedded.github.io/discovery/index.html\" rel=\"noopener noreferrer\">Rust Embedded Discovery book</a> - <a href=\"https://crates.io/crates/stm32f3-discovery\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f3-discovery\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / Texas Instruments</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/stellaris-launchpad\" rel=\"noopener noreferrer\"><code>stellaris-launchpad</code></a> - For the Texas Instruments Stellaris Launchpad and Tiva-C Launchpad <a href=\"https://crates.io/crates/stellaris-launchpad\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stellaris-launchpad.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / Sodaq</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/sodaq_sara_aff\" rel=\"noopener noreferrer\"><code>sodaq_sara_aff</code></a> - Board support for the <a href=\"https://shop.sodaq.com/sodaq-sara-sff-r410m.html\" rel=\"noopener noreferrer\">Sodaq sara aff board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/sodaq_sara_aff\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/sodaq_sara_aff.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Board support crates / Other</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/serpente\" rel=\"noopener noreferrer\"><code>serpente</code></a> - Board support for the <a href=\"https://www.solder.party/docs/serpente/\" rel=\"noopener noreferrer\">serpente board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/serpente\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/serpente.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/p1am_100\" rel=\"noopener noreferrer\"><code>p1am_100</code></a> - Board support for the <a href=\"https://facts-engineering.github.io\" rel=\"noopener noreferrer\">p1am_100 board</a> in the <a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\">atsamd-rs (⭐612)</a> repo. It is an <a href=\"https://github.com/atsamd-rs/atsamd#how-to-use-a-bsp-ie-getting-started-writing-your-own-code\" rel=\"noopener noreferrer\">atsamd-rs tier 2 support (⭐612)</a> board. <a href=\"https://crates.io/crates/p1am_100\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/p1am_100.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Component abstraction crates / Other</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/NeoBirth/accelerometer.rs\" rel=\"noopener noreferrer\"><code>accelerometer</code></a> - Generic accelerometer support, including traits and types for taking readings from 2 or 3-axis accelerometers and tracking device orientations - <a href=\"https://crates.io/crates/accelerometer\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/accelerometer.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/embedded-graphics\" rel=\"noopener noreferrer\"><code>embedded-graphics</code></a>: 2D drawing library for any size display - <a href=\"https://crates.io/crates/embedded-graphics\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/embedded-graphics.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ryankurte/rust-radio\" rel=\"noopener noreferrer\"><code>radio</code></a> - Generic radio transceiver traits, mocks, and helpers - <a href=\"https://crates.io/crates/radio\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/radio.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mvirkkunen/usb-device\" rel=\"noopener noreferrer\"><code>usb-device</code></a>: Abstraction layer between USB peripheral crates &amp; USB class crates - <a href=\"https://crates.io/crates/usb-device\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/usb-device.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/BlackbirdHQ/atat\" rel=\"noopener noreferrer\"><code>atat</code></a>: Abstraction crate to ease writing AT based driver crates - <a href=\"https://crates.io/crates/atat\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/atat.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rust-embedded-community/embedded-nal\" rel=\"noopener noreferrer\"><code>embedded-nal</code></a>: An Embedded Network Abstraction Layer - <a href=\"https://crates.io/crates/embedded-nal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/embedded-nal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rubberduck203/switch-hal\" rel=\"noopener noreferrer\"><code>switch-hal</code></a>: An \"on\"/\"off\" abstraction for input and output switches - <a href=\"https://crates.io/crates/switch-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/switch-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Driver crates / Other</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/ad983x\" rel=\"noopener noreferrer\">AD983x</a> - SPI - AD9833/AD9837 waveform generators / DDS - <a href=\"https://blog.eldruin.com/ad983x-waveform-generator-dds-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/ad983x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ad983x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/adafruit-alphanum4\" rel=\"noopener noreferrer\">adafruit-alphanum4</a> - I2C - Driver for <a href=\"https://learn.adafruit.com/adafruit-led-backpack/0-54-alphanumeric\" rel=\"noopener noreferrer\">Adafruit 14-segment LED Alphanumeric Backpack</a> based on the ht16k33 chip - <a href=\"https://crates.io/crates/adafruit-alphanum4\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adafruit-alphanum4.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ade791x\" rel=\"noopener noreferrer\">ADE791x</a> - SPI - ADE7912/ADE7913 3-Channel, Isolated, Sigma-Delta ADC - <a href=\"https://github.com/GrepitAB/ade791x-rs\" rel=\"noopener noreferrer\">github (⭐1)</a> - <a href=\"https://crates.io/crates/ade791x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ade791x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ads1x1x\" rel=\"noopener noreferrer\">ADS1x1x</a> - I2C - 12/16-bit ADCs like ADS1013, ADS1015, ADS1115, etc. - <a href=\"https://blog.eldruin.com/ads1x1x-analog-to-digital-converter-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/ads1x1x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ads1x1x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/adxl313\" rel=\"noopener noreferrer\">ADXL313</a> - SPI - 3-axis accelerometer - <a href=\"https://crates.io/crates/adxl313\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adxl313.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/adxl343\" rel=\"noopener noreferrer\">ADXL343</a> - I2C - 3-axis accelerometer - <a href=\"https://crates.io/crates/adxl343\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adxl343.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/adxl355\" rel=\"noopener noreferrer\">ADXL355</a> - SPI - 3-axis accelerometer - <a href=\"https://jitter.company/blog/2020/02/14/adxl355-embedded-hal-driver-crate/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/adxl355\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adxl355.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/pulse-loop/afe4404\" rel=\"noopener noreferrer\">AFE4404 (⭐2)</a> - I2C - Pulse oximeter - <a href=\"https://crates.io/crates/afe4404\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/afe4404.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/aht20\" rel=\"noopener noreferrer\">AHT20</a> - I2C - Humidity and temperature sensor - <a href=\"https://github.com/chocol4te/aht20\" rel=\"noopener noreferrer\">github (⭐3)</a> - <a href=\"https://crates.io/crates/aht20\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/aht20.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/aht20-driver\" rel=\"noopener noreferrer\">AHT20-driver</a> - I2C - Humidity and temperature sensor - <a href=\"http://www.rawmeat.org/code/20220130-aht20_driver/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://github.com/anglerud/aht20-driver\" rel=\"noopener noreferrer\">github (⭐10)</a> - <a href=\"https://crates.io/crates/aht20-driver\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/aht20-driver.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/anyleaf\" rel=\"noopener noreferrer\">AnyLeaf</a> - I2C - pH sensor module - <a href=\"https://github.com/AnyLeaf/ph-rust\" rel=\"noopener noreferrer\">github (⭐6)</a> - <a href=\"https://crates.io/crates/anyleaf\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/anyleaf.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/radio-at86rf212\" rel=\"noopener noreferrer\">AT86RF212</a> - SPI - Low power IEEE 802.15.4-2011 ISM RF Transceiver - <a href=\"http://web.archive.org/web/20230328083333/https://ryan.kurte.nz/notes/2020-01-05-rust-radio\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/radio-at86rf212\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/radio-at86rf212.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bluenrg\" rel=\"noopener noreferrer\">BlueNRG</a> - SPI - driver for BlueNRG-MS Bluetooth module - <a href=\"https://www.219design.com/bluetooth-low-energy-with-rust/\" rel=\"noopener noreferrer\">Intro post</a> <a href=\"https://crates.io/crates/bluenrg\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bluenrg.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bma400\" rel=\"noopener noreferrer\">BMA400</a> - I2C/SPI - Bosch 12-bit 3-axis accelerometer - <a href=\"https://github.com/cfrenette/bma400-rs\" rel=\"noopener noreferrer\">github (⭐4)</a> <a href=\"https://crates.io/crates/bma400\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bma400.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bno055\" rel=\"noopener noreferrer\">BNO055</a> - I2C - Bosch Sensortec BNO055 9-axis IMU driver - <a href=\"https://www.reddit.com/r/rust/comments/ao4sqq/embeddedhal_bno055_9axis_imu_driver/\" rel=\"noopener noreferrer\">Intro post</a> <a href=\"https://crates.io/crates/bno055\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bno055.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/cd74hc4067\" rel=\"noopener noreferrer\">CD74HC4067</a> - GPIO - 16-channel digital and analog multiplexer - <a href=\"https://barafael.github.io/A-Platform-Agnostic-Driver-for-the-CD74HC4067\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://github.com/barafael/cd74hc4067-rs\" rel=\"noopener noreferrer\">github (⭐1)</a> - <a href=\"https://crates.io/crates/cd74hc4067\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/cd74hc4067.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/dht-sensor\" rel=\"noopener noreferrer\">dht-sensor</a> - 1-Wire - DHT11/DHT22 temperature/humidity sensor driver - <a href=\"https://github.com/michaelbeaumont/dht-sensor\" rel=\"noopener noreferrer\">github (⭐32)</a> - <a href=\"https://crates.io/crates/dht-sensor\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/dht-sensor.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/embedded-dht-rs\" rel=\"noopener noreferrer\">embedded-dht-rs</a> - 1-Wire, I2C - DHT11/DHT20/DHT22 temperature/humidity sensor driver - <a href=\"https://github.com/rust-dd/embedded-dht-rs\" rel=\"noopener noreferrer\">github (⭐23)</a> - <a href=\"https://crates.io/crates/embedded-dht-rs\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/embedded-dht-rs.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/drv8825\" rel=\"noopener noreferrer\">DRV8825</a> - DRV8825 Stepper Motor Driver (based on <a href=\"https://crates.io/crates/stepper\" rel=\"noopener noreferrer\">Stepper</a>) - <a href=\"http://web.archive.org/web/20210129151911/https://flott-motion.org/news/announcing-step-dir/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/drv8825\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/drv8825.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ds1307\" rel=\"noopener noreferrer\">DS1307</a> - I2C - Real-time clock driver - <a href=\"https://blog.eldruin.com/ds1307-real-time-clock-rtc-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/ds1307\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ds1307.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ebyte-e32\" rel=\"noopener noreferrer\">ebyte-e32</a> - SERIAL - Ebyte E32 LoRa module driver - <a href=\"https://barafael.github.io/A-Platform-Agnostic-Driver-for-EBYTE-E32-LoRa-Modules/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/ebyte-e32\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ebyte-e32.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/eeprom24x\" rel=\"noopener noreferrer\">EEPROM24x</a> - I2C - 24x series serial EEPROM driver - <a href=\"https://blog.eldruin.com/24x-serial-eeprom-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/eeprom24x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/eeprom24x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/embedded-ccs811\" rel=\"noopener noreferrer\">embedded-ccs811</a> - I2C - Gas and VOC sensor driver for monitoring indoor air quality - <a href=\"https://blog.eldruin.com/ccs811-indoor-air-quality-sensor-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/embedded-ccs811\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/embedded-ccs811.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/embedded-sdmmc\" rel=\"noopener noreferrer\">embedded-sdmmc</a> - SPI - SD/MMC Card Driver with MS-DOS Partition and FAT16/FAT32 support - <a href=\"https://www.reddit.com/r/rust/comments/ascvls/introducing_embeddedsdmmc_a_purerust_no_std_sd/\" rel=\"noopener noreferrer\">Intro post</a> <a href=\"https://crates.io/crates/embedded-sdmmc\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/embedded-sdmmc.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/enc28j60\" rel=\"noopener noreferrer\">ENC28J60</a> - SPI - Ethernet controller - <a href=\"http://blog.japaric.io/wd-4-enc28j60/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/enc28j60\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/enc28j60.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/hc12-at\" rel=\"noopener noreferrer\">HC-12</a> - SERIAL - Wireless serial transceiver module - <a href=\"https://barafael.github.io/A-Platform-Agnostic-Driver-for-the-HC12-serial-radio-module/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://github.com/barafael/hc12-at-rs\" rel=\"noopener noreferrer\">github (⭐1)</a> - <a href=\"https://crates.io/crates/hc12-at\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/hc12-at.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/hts221\" rel=\"noopener noreferrer\">HTS221</a> - I2C - Humidity and temperature sensor - <a href=\"https://medium.com/@pdanielgallagher/hts221-humidity-and-temperature-sensor-88056ea9e5fa\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/hts221\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/hts221.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/iis2mdc\" rel=\"noopener noreferrer\">IIS2MDC</a> - I2C - ST's High accuracy, ultra-low-power, 3-axis digital output magnetometer - <a href=\"https://crates.io/crates/iis2mdc\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/iis2mdc.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ism330dhcx\" rel=\"noopener noreferrer\">ISM330DHCX</a> - I2C - ST's IMU with 3D accelerometer, 3D gyroscope, ML core and more - <a href=\"https://crates.io/crates/ism330dhcx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ism330dhcx.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/keypad\" rel=\"noopener noreferrer\">keypad</a> - GPIO - Keypad matrix circuits - <a href=\"https://www.reddit.com/r/rust/comments/9j42o9/weekly_driver_keypad_matrix_circuits/\" rel=\"noopener noreferrer\">Intro post</a> - <a href=\"https://crates.io/crates/keypad\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/keypad.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/kxcj9\" rel=\"noopener noreferrer\">KXCJ9</a> - I2C - KXCJ9/KXCJB 3-axis accelerometers - <a href=\"https://blog.eldruin.com/kxcj9-kxcjb-tri-axis-mems-accelerator-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/kxcj9\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/kxcj9.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/l3gd20\" rel=\"noopener noreferrer\">L3GD20</a> - SPI - Gyroscope - <a href=\"http://blog.japaric.io/wd-1-2-l3gd20-lsm303dlhc-madgwick/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/l3gd20\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/l3gd20.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/lsm303dlhc\" rel=\"noopener noreferrer\">LSM303DLHC</a> - I2C - Accelerometer + compass (magnetometer) - <a href=\"http://blog.japaric.io/wd-1-2-l3gd20-lsm303dlhc-madgwick/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/lsm303dlhc\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lsm303dlhc.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/max6675-hal\" rel=\"noopener noreferrer\">MAX6675</a> - SPI - A driver for the MAX6675 digital thermocouple converter - <a href=\"https://barretts.club/posts/max6675-hal/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/max6675-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/max6675-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/max6955\" rel=\"noopener noreferrer\">MAX6955</a> - I2C - Driver for Alphanumeric LED display driver - <a href=\"https://lonesometraveler.github.io/2020/03/20/max6955.html\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/max6955\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/max6955.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/max116xx-10bit\" rel=\"noopener noreferrer\">MAX116xx-10bit</a> - SPI - Driver for the MAX11619-MAX11621, MAX11624 and MAX11625 10-bit ADCs - <a href=\"https://robamu.github.io/post/max11619-driver-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/max116xx-10bit\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/max116xx-10bit.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/microchip-eeprom-25lcxx\" rel=\"noopener noreferrer\">MCP25LCXX</a> - SPI - Driver for Microchip's 25LC series of EEPROMs - <a href=\"https://crates.io/crates/microchip-eeprom-25lcxx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/microchip-eeprom-25lcxx.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/adc-mcp3008\" rel=\"noopener noreferrer\">MCP3008</a> - SPI - 8 channel 10-bit ADC - <a href=\"http://pramode.in/2018/02/24/an-introduction-to-writing-embedded-hal-based-drivers-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/adc-mcp3008\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adc-mcp3008.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mcp3425\" rel=\"noopener noreferrer\">MCP3425</a> - I2C - 16-bit ADC - <a href=\"https://blog.dbrgn.ch/2018/3/13/rust-mcp3425-driver/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/mcp3425\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mcp3425.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mcp794xx\" rel=\"noopener noreferrer\">MCP794xx</a> - I2C - Real-time clock / calendar driver - <a href=\"https://blog.eldruin.com/mcp794xx-real-time-clock-rtc-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/mcp794xx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mcp794xx.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/eldruin/opt300x-rs\" rel=\"noopener noreferrer\">OPT300x (⭐7)</a> - I2C - Ambient light sensor family driver  - <a href=\"https://blog.eldruin.com/opt300x-ambient-light-sensor-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/opt300x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/opt300x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/kiranshila/pac194x\" rel=\"noopener noreferrer\">PAC194X (⭐3)</a> - I2C - Single/multi channel power monitor - <a href=\"https://blog.kiranshila.com/post/pac_rust_driver\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/pac194x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/pac194x\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/port-expander\" rel=\"noopener noreferrer\">port-expander</a> - I2C - Driver for I2C port expanders (supports <code>PCA95xx</code>, <code>PCF85xx</code>) - <a href=\"https://blog.rahix.de/port-expander/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/port-expander\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/port-expander.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/pwm-pca9685\" rel=\"noopener noreferrer\">pwm-pca9685</a> - I2C - 16-channel, 12-bit PWM/Servo/LED controller - <a href=\"https://blog.eldruin.com/pca9685-pwm-led-servo-controller-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/pwm-pca9685\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/pwm-pca9685.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/rainbow-hat-rs\" rel=\"noopener noreferrer\">rainbow-hat-rs</a> - I2C/SPI/GPIO - Pimoroni Rainbow HAT driver for Raspberry Pi - <a href=\"https://github.com/yannart/rainbow-hat-rs\" rel=\"noopener noreferrer\">github (⭐3)</a> - <a href=\"https://crates.io/crates/rainbow-hat-rs\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/rainbow-hat-rs.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/rotary-encoder-hal\" rel=\"noopener noreferrer\">rotary-encoder-hal</a> - GPIO - A rotary encoder driver using <code>embedded-hal</code> - <a href=\"https://leshow.github.io/post/rotary_encoder_hal/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/rotary-encoder-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/rotary-encoder-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/sega-controller\" rel=\"noopener noreferrer\">sega-controller</a> - GPIO - Sega controller input - <a href=\"https://github.com/UnderLogic/sega-controller\" rel=\"noopener noreferrer\">github (⭐2)</a> - <a href=\"https://crates.io/crates/sega-controller\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/sega-controller.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/sgp30\" rel=\"noopener noreferrer\">SGP30</a> - I2C - Gas sensor - <a href=\"https://blog.dbrgn.ch/2018/4/1/rust-sgp30-driver/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/sgp30\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/sgp30.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/sh1106\" rel=\"noopener noreferrer\">SH1106</a> - I2C - Monochrome OLED display controller - <a href=\"https://wapl.es/electronics/rust/2019/02/13/sh1106-driver.html\" rel=\"noopener noreferrer\">Intro post</a> <a href=\"https://crates.io/crates/sh1106\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/sh1106.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/Rahix/shared-bus\" rel=\"noopener noreferrer\">shared-bus (⭐134)</a> - I2C - utility driver for sharing a bus between multiple devices - <a href=\"https://blog.rahix.de/001-shared-bus/\" rel=\"noopener noreferrer\">Intro post</a> <a href=\"https://crates.io/crates/shared-bus\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/shared-bus.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/shift-register-driver\" rel=\"noopener noreferrer\">shift-register-driver</a> - GPIO - Shift register - <a href=\"https://www.joshmcguigan.com/blog/shift-register-driver/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/shift-register-driver\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/shift-register-driver.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/si4703\" rel=\"noopener noreferrer\">Si4703</a> - I2C - FM radio turner (receiver) driver  - <a href=\"https://blog.eldruin.com/si4703-fm-radio-receiver-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/si4703\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/si4703.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/sram23x\" rel=\"noopener noreferrer\">SRAM23x</a> - SPI - Microchip 23x series serial SRAM/NVSRAM driver - <a href=\"https://blog.a1w.ca/p/rust-embedded-driver-microchip-23x-sram\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/sram23x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/sram23x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ssd1306\" rel=\"noopener noreferrer\">SSD1306</a> - I2C/SPI - OLED display controller - <a href=\"https://wapl.es/electronics/rust/2018/04/30/ssd1306-driver.html\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/ssd1306\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ssd1306.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ssd1309\" rel=\"noopener noreferrer\">SSD1309</a> - I2C/SPI - OLED display controller - <a href=\"https://antonok.com/projects/ssd1309\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/ssd1309\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ssd1309.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stspin220\" rel=\"noopener noreferrer\">STSPIN220</a> - STSPIN220 Stepper Motor Driver (based on <a href=\"https://crates.io/crates/stepper\" rel=\"noopener noreferrer\">Stepper</a>) - <a href=\"http://web.archive.org/web/20210129151911/https://flott-motion.org/news/announcing-step-dir/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/stspin220\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stspin220.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/radio-sx127x\" rel=\"noopener noreferrer\">Sx127x</a> - SPI - Long Range Low Power Sub GHz (Gfsk, LoRa) RF Transceiver - <a href=\"http://web.archive.org/web/20230328083333/https://ryan.kurte.nz/notes/2020-01-05-rust-radio\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/radio-sx127x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/radio-sx127x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/radio-sx128x\" rel=\"noopener noreferrer\">Sx128x</a> - SPI - Long range, low power 2.4 GHz (Gfsk, Flrc, LoRa) RF Transceiver - <a href=\"http://web.archive.org/web/20230328083333/https://ryan.kurte.nz/notes/2020-01-05-rust-radio\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/radio-sx128x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/radio-sx128x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/microchip-tc72r-rs\" rel=\"noopener noreferrer\">TC72</a> - SPI - Microchip TC72 temperature sensor - <a href=\"https://crates.io/crates/microchip-tc72r-rs\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/microchip-tc72r-rs.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/tcn75a\" rel=\"noopener noreferrer\">TCN75A</a> - I2C - Microchip TCN75A temperature sensor - <a href=\"https://crates.io/crates/tcn75a\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/tcn75a.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/tmp006\" rel=\"noopener noreferrer\">TMP006</a> - I2C - Contact-less infrared (IR) thermopile temperature sensor driver - <a href=\"https://blog.eldruin.com/tmp006-contact-less-infrared-ir-thermopile-driver-in-rust/\" rel=\"noopener noreferrer\">Intro post</a> <a href=\"https://crates.io/crates/tmp006\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/tmp006.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/tmp1x2\" rel=\"noopener noreferrer\">TMP1x2</a> - I2C - TMP102 and TMP112x temperature sensor driver - <a href=\"https://blog.eldruin.com/tmp1x2-temperature-sensor-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> <a href=\"https://crates.io/crates/tmp1x2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/tmp1x2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/tsic\" rel=\"noopener noreferrer\">TSIC</a> - GPIO - TSIC 306 temperature sensor driver - <a href=\"https://nitschinger.at/Rusty-PID-Porting-the-TSic-sensor-from-C-to-Rust/\" rel=\"noopener noreferrer\">Intro blog post</a> <a href=\"https://crates.io/crates/tsic\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/tsic.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/tsl256x\" rel=\"noopener noreferrer\">TSL256X</a> - I2C - Light Intensity Sensor - <a href=\"https://www.joshmcguigan.com/blog/tsl256x-light-intensity-sensor-driver/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/tsl256x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/tsl256x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/veml6030\" rel=\"noopener noreferrer\">VEML6030/VEML7700</a> - I2C - Ambient light sensors - <a href=\"https://blog.eldruin.com/veml6030-ambient-light-sensor-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/veml6030\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/veml6030.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/veml6075\" rel=\"noopener noreferrer\">VEML6075</a> - I2C - UVA and UVB light sensor - <a href=\"https://blog.eldruin.com/veml6075-uva-uvb-uv-index-light-sensor-driver-in-rust/\" rel=\"noopener noreferrer\">Intro blog post</a> - <a href=\"https://crates.io/crates/veml6075\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/veml6075.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"http://crates.io/crates/usbd-serial\" rel=\"noopener noreferrer\">usbd-serial</a> - USB CDC-ACM class (serial) implementation - <a href=\"https://github.com/mvirkkunen/usbd-serial\" rel=\"noopener noreferrer\">github (⭐126)</a> - <a href=\"https://crates.io/crates/usbd-serial\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/usbd-serial.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"http://crates.io/crates/usbd-hid\" rel=\"noopener noreferrer\">usbd-hid</a> - USB HID class implementation - <a href=\"https://github.com/twitchyliquid64/usbd-hid\" rel=\"noopener noreferrer\">github (⭐97)</a> - <a href=\"https://crates.io/crates/usbd-hid\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/usbd-hid.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"http://crates.io/crates/usbd-hid-device\" rel=\"noopener noreferrer\">usbd-hid-device</a> - USB HID class implementation without <code>unsafe</code> - <a href=\"https://github.com/agalakhov/usbd-hid-device\" rel=\"noopener noreferrer\">github (⭐13)</a> - <a href=\"https://crates.io/crates/usbd-hid-device\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/usbd-hid-device.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dlkj/usbd-human-interface-device\" rel=\"noopener noreferrer\">usbd-human-interface-device (⭐133)</a> - Batteries included embedded USB HID library for <code>usb-device</code>. Includes concrete Keyboard (boot and NKRO), Mouse and Consumer Control implementations as well as support for building your own HID classes - <a href=\"https://github.com/dlkj/usbd-human-interface-device\" rel=\"noopener noreferrer\">github (⭐133)</a> - <a href=\"https://crates.io/crates/usbd-human-interface-device\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/usbd-human-interface-device.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"http://crates.io/crates/usbd-midi\" rel=\"noopener noreferrer\">usbd-midi</a> - USB MIDI class implementation - <a href=\"https://github.com/btrepp/usbd-midi\" rel=\"noopener noreferrer\">github (⭐55)</a> - <a href=\"https://crates.io/crates/usbd-midi\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/usbd-midi.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"http://crates.io/crates/usbd-webusb\" rel=\"noopener noreferrer\">usbd-webusb</a> - USB webUSB class implementation - <a href=\"https://github.com/redpfire/usbd-webusb\" rel=\"noopener noreferrer\">github (⭐22)</a> - <a href=\"https://crates.io/crates/usbd-webusb\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/usbd-webusb.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"http://crates.io/crates/shtcx\" rel=\"noopener noreferrer\">SHTCx</a> - I2C - Temperature / humidity sensors - <a href=\"https://github.com/dbrgn/shtcx-rs\" rel=\"noopener noreferrer\">github (⭐15)</a> - <a href=\"https://crates.io/crates/shtcx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/shtcx.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"http://crates.io/crates/st7789\" rel=\"noopener noreferrer\">ST7789</a> - SPI - An embedded-graphics compatible driver for the popular lcd family from Sitronix used in the PineTime watch - <a href=\"https://github.com/almindor/st7789\" rel=\"noopener noreferrer\">github (⭐60)</a> - <a href=\"https://crates.io/crates/st7789\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/st7789.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/dw1000\" rel=\"noopener noreferrer\">DW1000</a> - SPI - Radio transceiver (IEEE 802.15.4 and position tracking) - <a href=\"https://braun-embedded.com/dw1000/\" rel=\"noopener noreferrer\">Article</a> - <a href=\"https://crates.io/crates/dw1000\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/dw1000.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/adafruit-7segment\" rel=\"noopener noreferrer\">Adafruit-7segment</a> - I2C - Driver for Adafruit 7-segment LED Numeric Backpack based on the ht16k33 chip - <a href=\"https://github.com/kallemooo/adafruit-7segment\" rel=\"noopener noreferrer\">github (⭐3)</a> - <a href=\"https://crates.io/crates/adafruit-7segment\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adafruit-7segment.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"http://crates.io/crates/st7565\" rel=\"noopener noreferrer\">ST7565</a> - SPI - An embedded-graphics compatible driver for LCD displays based on the ST7565 chip - <a href=\"https://github.com/Finomnis/st7565\" rel=\"noopener noreferrer\">github (⭐7)</a> - <a href=\"https://crates.io/crates/st7565\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/st7565.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/tb6612fng\" rel=\"noopener noreferrer\">tb6612fng</a> - A <code>no_std</code> driver for the TB6612FNG motor driver - <a href=\"https://crates.io/crates/tb6612fng\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/tb6612fng.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/vl53l1x-uld\" rel=\"noopener noreferrer\">vl53l1x-uld</a> - I2C - A pure-rust driver for the <a href=\"https://www.st.com/en/imaging-and-photonics-solutions/vl53l1x.html\" rel=\"noopener noreferrer\">ST VL53L1X</a> - <a href=\"https://crates.io/crates/vl53l1x-uld\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/vl53l1x-uld.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/i2c-multiplexer\" rel=\"noopener noreferrer\">i2c-multiplexer</a> - I2C - An I2C Multiplexer library that supports the PCA9546 and TCA9546A chips - <a href=\"https://github.com/FloppyDisck/i2c-multiplexer\" rel=\"noopener noreferrer\">github (⭐2)</a> - <a href=\"https://crates.io/crates/i2c-multiplexer\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/i2c-multiplexer.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/sht31\" rel=\"noopener noreferrer\">SHT31-rs</a> - I2C - Fully supported SHT temperature / humidity sensors - <a href=\"https://github.com/FloppyDisck/SHT31-rs\" rel=\"noopener noreferrer\">github (⭐6)</a> - <a href=\"https://crates.io/crates/sht31\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/sht31.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Driver crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/ad9850\" rel=\"noopener noreferrer\">AD9850</a> - Embedded driver for the AD9850 DDS synthesizer chip - <a href=\"https://crates.io/crates/ad9850\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ad9850.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/apds9960\" rel=\"noopener noreferrer\">APDS9960</a> - I2C - Proximity, ambient light, RGB, and gesture sensor - <a href=\"https://crates.io/crates/apds9960\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/apds9960.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/deltronix/ad57xx\" rel=\"noopener noreferrer\">ad57xx (⭐1)</a> - SPI - Quad and dual channel DAC - <a href=\"https://crates.io/crates/ad57xx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ad57xx.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bme280\" rel=\"noopener noreferrer\">BME280</a> - A rust device driver for the Bosch BME280 temperature, humidity, and atmospheric pressure sensor and the Bosch BMP280 temperature and atmospheric pressure sensor. <a href=\"https://crates.io/crates/bme280\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bme280.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/marcelbuesing/bme680\" rel=\"noopener noreferrer\">bme680 (⭐30)</a> - I2C - Temperature / humidity / gas / pressure sensor - <a href=\"https://crates.io/crates/bme680\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bme680.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bmi160\" rel=\"noopener noreferrer\">BMI160</a> - I2C / SPI - Inertial Measurement Unit - <a href=\"https://crates.io/crates/bmi160\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bmi160.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bmp280-ehal\" rel=\"noopener noreferrer\">BMP280</a> - A platform agnostic driver to interface with the BMP280 pressure sensor <a href=\"https://crates.io/crates/bmp280-ehal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bmp280-ehal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/cc1101\" rel=\"noopener noreferrer\">CC1101</a> - SPI - Sub-1GHz RF Transceiver - <a href=\"https://crates.io/crates/cc1101\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/cc1101.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ds323x\" rel=\"noopener noreferrer\">DS323x</a> - I2C/SPI - Real-time clocks (RTC): DS3231, DS3232 and DS3234 - <a href=\"https://crates.io/crates/ds323x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ds323x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/epd-waveshare\" rel=\"noopener noreferrer\">epd-waveshare</a> - SPI - driver for E-Paper Modules from Waveshare <a href=\"https://crates.io/crates/epd-waveshare\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/epd-waveshare.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/embedded-morse\" rel=\"noopener noreferrer\">embedded-morse</a> - Output morse messages - <a href=\"https://crates.io/crates/embedded-morse\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/embedded-morse.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ft6x36\" rel=\"noopener noreferrer\">Ft6x36</a> - I2C - Rust driver for focal tech touch screen FT6236, FT6336 - <a href=\"https://crates.io/crates/ft6x36\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ft6x36.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/grove-matrix-led-my9221-rs\" rel=\"noopener noreferrer\">grove-matrix-led-my9221-rs</a> - I2C - Rust driver for Grove RGB Matrix Led with my-9221 Driver - <a href=\"https://crates.io/crates/grove-matrix-led-my9221-rs\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/grove-matrix-led-my9221-rs.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/grideye\" rel=\"noopener noreferrer\">GridEYE</a> - I2C - Rust driver for Grid-EYE / Panasonic AMG88(33) - <a href=\"https://crates.io/crates/GridEYE\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/GridEYE.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/hd44780-driver\" rel=\"noopener noreferrer\">HD44780-driver</a> - GPIO - LCD controller - <a href=\"https://crates.io/crates/hd44780-driver\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/hd44780-driver.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/hm11\" rel=\"noopener noreferrer\">HM11</a> - USART - HM-11 bluetooth module AT configuration crate - <a href=\"https://crates.io/crates/hm11\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/hm11.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/hrs3300\" rel=\"noopener noreferrer\">HRS3300</a> - I2C - Heart rate sensor / monitor used in the PineTime smartwatch, for example. - <a href=\"https://crates.io/crates/hrs3300\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/hrs3300.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/hdc20xx\" rel=\"noopener noreferrer\">HDC20xx</a> - I2C - Temperature and humidity sensor compatible with HDC2080, HDC2021 and HDC2010. - <a href=\"https://crates.io/crates/hdc20xx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/hdc20xx.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/david-sawatzke/hub75-rs\" rel=\"noopener noreferrer\">hub75 (⭐26)</a> - A driver for rgb led matrices with the hub75 interface  - <a href=\"https://crates.io/crates/hub75\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/hub75.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/hzgrow-r502\" rel=\"noopener noreferrer\">hzgrow-r502</a> - UART capacitive fingerprint reader - <a href=\"https://crates.io/crates/hzgrow-r502\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/hzgrow-r502.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ina260\" rel=\"noopener noreferrer\">INA260</a> - I2C - power monitor - <a href=\"https://crates.io/crates/ina260\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ina260.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/isl29125\" rel=\"noopener noreferrer\">ISL29125</a> - I2C - RGB Color Light Sensor with IR Blocking Filter - <a href=\"https://crates.io/crates/isl29125\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/isl29125.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ist7920\" rel=\"noopener noreferrer\">IST7920</a> - SPI monochrome LCD display - <a href=\"https://crates.io/crates/ist7920\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ist7920.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/lm75\" rel=\"noopener noreferrer\">LM75</a> - I2C - Temperature sensor and thermal watchdog (also compatible with LM75A, LM75B, LM75C, AT30TS75A, DS1775, DS75, DS7505, G751, MAX7500/1/2/3/4, MAX6625, MCP9800/1/2/3, STDS75, TCN75, PCT2075) - <a href=\"https://crates.io/crates/lm75\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lm75.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/lp586x\" rel=\"noopener noreferrer\">lp586x</a> - I2C/SPI - LED matrix driver <a href=\"https://crates.io/crates/lp586x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lp586x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/lsm303agr\" rel=\"noopener noreferrer\">LSM303AGR</a> - I2C/SPI - 3D accelerometer + 3D magnetometer. (Used in e.g. micro:bit boards) <a href=\"https://crates.io/crates/lsm303agr\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lsm303agr.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/lsm303c\" rel=\"noopener noreferrer\">LSM303C</a> - A platform agnostic driver to interface with the LSM303C (accelerometer + compass) <a href=\"https://crates.io/crates/lsm303c\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lsm303c.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/lsm9ds1\" rel=\"noopener noreferrer\">LSM9DS1</a> - I2C/SPI - 9-axis motion sensor module <a href=\"https://crates.io/crates/lsm9ds1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lsm9ds1.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ltr-559\" rel=\"noopener noreferrer\">ltr-559</a> - I2C - Ambient Light Sensor and Proximity sensor <a href=\"https://crates.io/crates/ltr-559\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ltr-559.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rafaelcaricio/lvgl-rs\" rel=\"noopener noreferrer\">lvgl (⭐797)</a> - no_std <a href=\"https://github.com/littlevgl/lvgl\" rel=\"noopener noreferrer\">LittleVGL (⭐20k)</a> port - <a href=\"https://crates.io/crates/lvgl\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lvgl.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/m95320\" rel=\"noopener noreferrer\">M95320</a> - SPI - STMicroelectronics Serial flash EEPROM - <a href=\"https://crates.io/crates/m95320\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/m95320.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/max17048\" rel=\"noopener noreferrer\">MAX17048/9</a> - I2C - LiPo Fuel gauge, battery monitoring IC - <a href=\"https://crates.io/crates/max17048\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/max17048.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/eldruin/max170xx-rs\" rel=\"noopener noreferrer\">MAX170xx (⭐12)</a> - I2C - LiPo Fuel gauge, battery monitoring ICs compatible with MAX17043/4, MAX17048/9, MAX17058/9. - <a href=\"https://crates.io/crates/max170xx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/max170xx.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/max3010x\" rel=\"noopener noreferrer\">MAX3010x</a> - I2C - Pulse oximeter and heart-rate sensor. ATM Compatible with MAX30102. - <a href=\"https://crates.io/crates/max3010x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/max3010x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/cs2dsb/max31855.rs\" rel=\"noopener noreferrer\">MAX31855 (⭐4)</a> - SPI - Thermocouple digital converter -<a href=\"https://crates.io/crates/max31855\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/max31855.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/max31865\" rel=\"noopener noreferrer\">MAX31865</a> - SPI - RTD to Digital converter - <a href=\"https://crates.io/crates/max31865\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/max31865.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/max44009\" rel=\"noopener noreferrer\">MAX44009</a> - I2C - Ambient light sensor - <a href=\"https://crates.io/crates/max44009\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/max44009.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/almindor/max7219\" rel=\"noopener noreferrer\">MAX7219 (⭐16)</a> - SPI - LED display driver - <a href=\"https://crates.io/crates/max7219\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/max7219.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mcp4725\" rel=\"noopener noreferrer\">MCP4725</a> - I2C - 12-bit DAC - <a href=\"https://crates.io/crates/mcp4725\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mcp4725\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mcp49xx\" rel=\"noopener noreferrer\">MCP49xx</a> - SPI - 8/10/12-bit DACs like MCP4921, MCP4922, MCP4801, etc. - <a href=\"https://crates.io/crates/mcp49xx\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mcp49xx.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mcp9808\" rel=\"noopener noreferrer\">MCP9808</a> - I2C - Temperature sensor - <a href=\"https://crates.io/crates/mcp9808\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mcp9808.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mcp4x\" rel=\"noopener noreferrer\">MCP4x</a> - SPI - Digital potentiometers (digipot) like MCP41010, MCP41050, MCP41100, MCP42010, MCP42050 and MCP42100, etc. - <a href=\"https://crates.io/crates/mcp4x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mcp4x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/midi-port\" rel=\"noopener noreferrer\">midi-port</a> - UART - MIDI input - <a href=\"https://crates.io/crates/midi-port\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/midi-port.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mlx9061x\" rel=\"noopener noreferrer\">MLX9061x</a> - I2C - MLX90614/MLX90615 Contact-less infrared (IR) temperature sensor driver. - <a href=\"https://crates.io/crates/mlx9061x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mlx9061x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mma8x5x\" rel=\"noopener noreferrer\">MMA8x5x</a> - I2C - Tri-axis accelerometers like MMA8451Q, MMA8452Q, MMA8453Q, MMA8652FC and MMA8653FC. - <a href=\"https://crates.io/crates/mma8x5x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mma8x5x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mpu6050\" rel=\"noopener noreferrer\">MPU6050</a> - I2C - no_std driver for the MPU6050 <a href=\"https://crates.io/crates/mpu6050\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mpu6050.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mpu9250\" rel=\"noopener noreferrer\">MPU9250</a> - no_std driver for the MPU9250 (and other MPU* devices) &amp; onboard AK8963 (accelerometer + gyroscope +  magnetometer IMU) <a href=\"https://crates.io/crates/mpu9250\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mpu9250.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ms5637\" rel=\"noopener noreferrer\">MS5637</a> - no_std I2C driver for the MS5637 temperature and pressure sensor <a href=\"https://crates.io/crates/ms5637\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ms5637.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/onewire\" rel=\"noopener noreferrer\">OneWire</a> - 1wire - OneWire protocol implementation with drivers for devices such as <a href=\"https://datasheets.maximintegrated.com/en/ds/DS18B20.pdf\" rel=\"noopener noreferrer\">DS18B20</a> - <a href=\"https://crates.io/crates/onewire\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/onewire.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/pcd8544\" rel=\"noopener noreferrer\">PCD8544_rich</a> - SPI - Rich driver for 48x84 pixels matrix LCD controller  - <a href=\"https://crates.io/crates/pcd8544\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/pcd8544.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/pcf857x\" rel=\"noopener noreferrer\">PCF857x</a> - I2C - I/O expanders: PCF8574, PCF8574A, PCF8575 <a href=\"https://crates.io/crates/pcf857x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/pcf857x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/radio-at86rf212\" rel=\"noopener noreferrer\">radio-at86rf212</a> - SPI - Sub GHz 802.15.4 radio transceiver <a href=\"https://crates.io/crates/radio-at86rf212\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/radio-at86rf212.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/scd30\" rel=\"noopener noreferrer\">SCD30</a> - I2C - CO₂ sensor - <a href=\"https://crates.io/crates/scd30\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/scd30.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/roxgib/SPL06-007\" rel=\"noopener noreferrer\">SPL06-007 (⭐1)</a> - I2C - Pressure and temperature sensor - <a href=\"https://crates.io/crates/spl06-007\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/spl06-007.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/jonas-schievink/spi-memory/\" rel=\"noopener noreferrer\">spi-memory (⭐25)</a> - SPI - A generic driver for various SPI Flash and EEPROM chips - <a href=\"https://crates.io/crates/spi-memory\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/spi-memory.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ssd1320\" rel=\"noopener noreferrer\">SSD1320</a> - SPI - Graphical OLED display controller - <a href=\"https://crates.io/crates/ssd1320\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ssd1320.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ssd1322\" rel=\"noopener noreferrer\">SSD1322</a> - SPI - Graphical OLED display controller - <a href=\"https://crates.io/crates/ssd1322\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ssd1322.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ssd1322_rs\" rel=\"noopener noreferrer\">SSD1322_rs</a> - SPI - Async graphics driver for SSD1322 screen - <a href=\"https://crates.io/crates/ssd1322_rs\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ssd1322_rs.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ssd1351\" rel=\"noopener noreferrer\">SSD1351</a> - SPI - 16bit colour OLED display driver - <a href=\"https://crates.io/crates/ssd1351\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ssd1351.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ssd1675\" rel=\"noopener noreferrer\">SSD1675</a> - SPI - Tri-color ePaper display controller - <a href=\"https://crates.io/crates/ssd1675\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ssd1675.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dotcypress/st7032i\" rel=\"noopener noreferrer\">st7032i (⭐2)</a> - I2C - Dot Matrix LCD Controller driver (Sitronix ST7032i or similar). - <a href=\"https://crates.io/crates/st7032i\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/st7032i.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/st7735-lcd\" rel=\"noopener noreferrer\">ST7735-lcd</a> - SPI - An embedded-graphics compatible driver for the popular lcd family from Sitronix <a href=\"https://crates.io/crates/st7735-lcd\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/st7735-lcd.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/st7920\" rel=\"noopener noreferrer\">ST7920</a> - SPI - LCD displays using the ST7920 controller <a href=\"https://crates.io/crates/st7920\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/st7920.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/tcs3472\" rel=\"noopener noreferrer\">TCS3472</a> - I2C - RGB color light sensor - <a href=\"https://crates.io/crates/tcs3472\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/tcs3472.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/tpa2016d2\" rel=\"noopener noreferrer\">TPA2016D2</a> - I2C - A driver for interfacing with the Texas Instruments TPA2016D2 Class-D amplifier - <a href=\"https://crates.io/crates/tpa2016d2\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/tpa2016d2.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/veml6040\" rel=\"noopener noreferrer\">VEML6040</a> - I2C - RGBW color light sensor - <a href=\"https://crates.io/crates/veml6040\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/veml6040.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/veml6070\" rel=\"noopener noreferrer\">VEML6070</a> - I2C - UVA light sensor - <a href=\"https://crates.io/crates/veml6070\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/veml6070.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/veml7700\" rel=\"noopener noreferrer\">VEML7700</a> - I2C - Ambient light sensors - <a href=\"https://crates.io/crates/veml7700\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/veml7700.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/chocol4te/vesc-comm\" rel=\"noopener noreferrer\">vesc-comm (⭐1)</a> - A driver for communicating with <a href=\"http://vedder.se/2015/01/vesc-open-source-esc/\" rel=\"noopener noreferrer\">VESC-compatible electronic speed controllers</a> <a href=\"https://crates.io/crates/vesc-comm\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/vesc-comm.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/vl53l0x\" rel=\"noopener noreferrer\">VL53L0X</a> - A platform agnostic driver to interface with the vl53l0x (time-of-flight sensor) <a href=\"https://crates.io/crates/vl53l0x\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/vl53l0x.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/w5500\" rel=\"noopener noreferrer\">w5500</a> - SPI - Ethernet Module with hardwired protocols : TCP, UDP, ICMP, IPv4, ARP, IGMP, PPPoE - <a href=\"https://crates.io/crates/w5500\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/w5500.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/xca9548a\" rel=\"noopener noreferrer\">xCA9548A</a> - I2C - I2C switches/multiplexers: TCA9548A, PCA9548A - <a href=\"https://crates.io/crates/xca9548a\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/xca9548a.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/adskalman\" rel=\"noopener noreferrer\">adskalman</a>: Kalman filter and Rauch-Tung-Striebel smoothing implementation. <a href=\"https://crates.io/crates/adskalman\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adskalman.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/atomic\" rel=\"noopener noreferrer\">atomic</a>: Generic Atomic wrapper type. <a href=\"https://crates.io/crates/atomic\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/atomic.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bbqueue\" rel=\"noopener noreferrer\">bbqueue</a>: A SPSC, statically allocatable queue based on BipBuffers suitable for DMA transfers - <a href=\"https://crates.io/crates/bbqueue\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bbqueue.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bitmatch\" rel=\"noopener noreferrer\">bitmatch</a>: A crate that allows you to match, bind, and pack the individual bits of integers. - <a href=\"https://crates.io/crates/bitmatch\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bitmatch.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/biquad\" rel=\"noopener noreferrer\">biquad</a>: A library for creating second-order IIR filters for signal processing based on Biquads, where both a Direct Form 1 (DF1) and Direct Form 2 Transposed (DF2T) implementation is available. <a href=\"https://crates.io/crates/biquad\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/biquad.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bit_field\" rel=\"noopener noreferrer\">bit_field</a>: manipulating bitfields and bitarrays - <a href=\"https://crates.io/crates/bit_field\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bit_field.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bluetooth-hci\" rel=\"noopener noreferrer\">bluetooth-hci</a>: device-independent Bluetooth Host-Controller Interface implementation. <a href=\"https://crates.io/crates/bluetooth-hci\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bluetooth-hci.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/bounded-registers\" rel=\"noopener noreferrer\">bounded-registers</a> A high-assurance memory-mapped register code generation and interaction library. <code>bounded-registers</code> provides a Tock-like API for MMIO registers with the addition of type-based bounds checking. - <a href=\"https://crates.io/crates/bounded-registers\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/bounded-registers.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/cam-geom\" rel=\"noopener noreferrer\">cam-geom</a>: Geometric models of cameras for photogrammetry. <a href=\"https://crates.io/crates/cam-geom\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/cam-geom.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/combine\" rel=\"noopener noreferrer\">combine</a>: parser combinator library - <a href=\"https://crates.io/crates/combine\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/combine.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/thejpster/console-traits\" rel=\"noopener noreferrer\">console-traits (⭐3)</a>: Describes a basic text console. Used by <a href=\"https://github.com/thejpster/menu\" rel=\"noopener noreferrer\">menu (⭐57)</a> and implemented by <a href=\"https://github.com/thejpster/vga-framebuffer-rs\" rel=\"noopener noreferrer\">vga-framebuffer (⭐31)</a>. <a href=\"https://crates.io/crates/console-tratis\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/console-tratis.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/cmim\" rel=\"noopener noreferrer\"><code>cmim</code></a>, or Cortex-M Interrupt Move: A crate for Cortex-M devices to move data to interrupt context, without needing a critical section to access the data within an interrupt, and to remove the need for the \"mutex dance\" - <a href=\"https://crates.io/crates/cmim\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/cmim.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/jacobrosenthal/cmsis-dsp-sys\" rel=\"noopener noreferrer\"><code>cmsis-dsp-sys</code></a>: Rust FFI bindings to the <a href=\"https://github.com/ARM-software/CMSIS_5\" rel=\"noopener noreferrer\">Arm CMSIS_5 (⭐1.5k)</a> math library - <a href=\"https://crates.io/crates/cmsis-dsp-sys\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/cmsis-dsp-sys.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/dcmimu\" rel=\"noopener noreferrer\">dcmimu</a>: An algorithm for fusing low-cost triaxial MEMS gyroscope and accelerometer measurements <a href=\"https://crates.io/crates/dcmimu\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/dcmimu.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/debouncr\" rel=\"noopener noreferrer\">debouncr</a>: A simple no-std input debouncer to detect rising/falling edges with minimal RAM requirements. <a href=\"https://crates.io/crates/debouncr\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/debouncr.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/device-driver\" rel=\"noopener noreferrer\">device-driver</a>: A toolkit to write better device drivers, faster. <a href=\"https://crates.io/crates/device-driver\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/device-driver.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/dummy-pin\" rel=\"noopener noreferrer\">dummy-pin</a>: Dummy implementations of the input/output pin traits. <a href=\"https://crates.io/crates/dummy-pin\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/dummy-pin.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/embedded-cli\" rel=\"noopener noreferrer\">embedded-cli</a>: CLI library with autocompletion, subcommands, options, help and history support. <a href=\"https://crates.io/crates/embedded-cli\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/embedded-cli.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/embedded-crc-macros\" rel=\"noopener noreferrer\">embedded-crc-macros</a>: Macros implementing portable CRC algorithms and build-time lookup table generation. <a href=\"https://crates.io/crates/embedded-crc-macros\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/embedded-crc-macros.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/embedded-websocket\" rel=\"noopener noreferrer\">embedded-websocket</a>: A lightweight server and client websocket library for embedded systems. <a href=\"https://crates.io/crates/embedded-websocket\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/embedded-websocket.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ethercrab-rs/ethercrab\" rel=\"noopener noreferrer\">ethercrab (⭐315)</a>: A Rust implementation of the <a href=\"https://ethercat.org\" rel=\"noopener noreferrer\">EtherCAT</a> industrial automation protocol - <a href=\"https://crates.io/crates/ethercrab\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ethercrab.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/heapless\" rel=\"noopener noreferrer\">heapless</a>: provides <code>Vec</code>, <code>String</code>, <code>LinearMap</code>, <code>RingBuffer</code> backed by fixed-size buffers  - <a href=\"https://crates.io/crates/heapless\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/heapless.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/idsp\" rel=\"noopener noreferrer\">idsp</a>: integer DSP algorithms (trigonometry, filtering, PLL...) tuned for precision and speed - <a href=\"https://crates.io/crates/idsp\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/idsp.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ieee802154\" rel=\"noopener noreferrer\">ieee802154</a>: Partial implementation of the IEEE 802.15.4 standard - <a href=\"https://crates.io/crates/ieee802154\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ieee802154.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/infrared\" rel=\"noopener noreferrer\">infrared</a>: infrared remote control library for embedded rust - <a href=\"https://crates.io/crates/infrared\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/infrared.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/intrusive-collections\" rel=\"noopener noreferrer\">intrusive-collections</a>: intrusive (non-allocating) singly/doubly linked lists and red-black trees - <a href=\"https://crates.io/crates/intrusive-collections\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/intrusive-collections.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/inverted-pin\" rel=\"noopener noreferrer\">inverted-pin</a>: Implementations of the input/output pin traits with inverted logic. <a href=\"https://crates.io/crates/inverted-pin\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/inverted-pin.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/irq\" rel=\"noopener noreferrer\">irq</a>: utilities for writing interrupt handlers (allows moving data into interrupts, and sharing data between them) - <a href=\"https://crates.io/crates/irq\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/irq.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/lakers\" rel=\"noopener noreferrer\">lakers</a>: Microcontroller-optimized <a href=\"https://datatracker.ietf.org/doc/draft-ietf-lake-edhoc/\" rel=\"noopener noreferrer\">EDHOC</a> implementation, with bindings for C and Python - <a href=\"https://crates.io/crates/lakers\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lakers.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/managed\" rel=\"noopener noreferrer\">managed</a>: provides <code>ManagedSlice</code>, <code>ManagedMap</code> backed by either their std counterparts or fixed-size buffers for <code>#![no_std]</code>. - <a href=\"https://crates.io/crates/managed\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/managed.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/thejpster/menu\" rel=\"noopener noreferrer\">menu (⭐57)</a>: A basic command-line interface library. Has nested menus and basic help functionality. <a href=\"https://crates.io/crates/menu\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/menu.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/micropb\" rel=\"noopener noreferrer\">micropb</a>: Rust Protobuf library targetting embedded systems and no_std environments without an allocator. - <a href=\"https://crates.io/crates/micropb\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/micropb.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/mqtt-sn\" rel=\"noopener noreferrer\">mqtt-sn</a>: Implementation of the MQTT-SN protocol - <a href=\"https://crates.io/crates/mqtt-sn\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/mqtt-sn.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/microfft\" rel=\"noopener noreferrer\">microfft</a>: Embedded-friendly (<code>no_std</code>, no-<code>alloc</code>) fast fourier transforms - <a href=\"https://crates.io/crates/microfft\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/microfft.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/NeoBirth/micromath\" rel=\"noopener noreferrer\">micromath (⭐427)</a>: Embedded Rust math library featuring fast, safe floating point approximations for common arithmetic operations, 2D and 3D vector types, and statistical analysis - <a href=\"https://crates.io/crates/micromath\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/micromath.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/miniconf\" rel=\"noopener noreferrer\">miniconf</a>: Lookup/enumerate/serialize/deserialize nodes in trees of heterogeneous structs/arrays by path/key - <a href=\"https://crates.io/crates/miniconf\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/miniconf.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/minimq\" rel=\"noopener noreferrer\">minimq</a>: A minimal MQTT5 client designed for no_std platforms - <a href=\"https://crates.io/crates/minimq\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/minimq.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nalgebra\" rel=\"noopener noreferrer\">nalgebra</a>: general-purpose and low-dimensional linear algebra library - <a href=\"https://crates.io/crates/nalgebra\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nalgebra.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/nom\" rel=\"noopener noreferrer\">nom</a>: parser combinator framework - <a href=\"https://crates.io/crates/nom\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/nom.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/null-terminated\" rel=\"noopener noreferrer\">null-terminated</a>: generic null-terminated arrays - <a href=\"https://crates.io/crates/null-terminated\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/null-terminated.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/num-format\" rel=\"noopener noreferrer\">num-format</a>: Crate for producing string representations of numbers, formatted according to international standards, e.g. \"1,000,000\" for US English - <a href=\"https://crates.io/crates/num-format\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/num-format.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/thejpster/pc-keyboard\" rel=\"noopener noreferrer\">pc-keyboard (⭐111)</a>: A PS/2 keyboard protocol driver. Transport (bit-banging or SPI) agnostic, but can convert Set 2 Scancodes into Unicode. <a href=\"https://crates.io/crates/pc-keyboard\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/pc-keyboard.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/qei\" rel=\"noopener noreferrer\">qei</a> : A qei wrapper that allows you to extend your qei timers from a 16-bit integer to a 64-bit integer. - <a href=\"https://crates.io/crates/qei\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/qei.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/qemu-exit\" rel=\"noopener noreferrer\">qemu-exit</a>: Quit a running QEMU session with user-defined exit code. Useful for unit or integration tests using QEMU. - <a href=\"https://crates.io/crates/qemu-exit\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/qemu-exit.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ramp-maker\" rel=\"noopener noreferrer\">RampMaker</a>: Stepper Motor Acceleration Ramp Generator - <a href=\"https://crates.io/crates/ramp-maker\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/ramp-maker.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rust-embedded/register-rs\" rel=\"noopener noreferrer\">register-rs (⭐48)</a>: Unified interface for MMIO and CPU registers. Provides type-safe bitfield manipulation. <code>register-rs</code> is Tock registers with added support for CPU register definitions using the same API as for the MMIO registers. This enables homogeneous interfaces to registers of all kinds. - <a href=\"https://crates.io/crates/register\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/register.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/scroll\" rel=\"noopener noreferrer\">scroll</a>: extensible and endian-aware Read/Write traits for generic containers - <a href=\"https://crates.io/crates/scroll\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/scroll.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/sized-dst\" rel=\"noopener noreferrer\">sized-dst</a>: Owned container for dynamically-sized types (such as trait objects) backed by stack memory. - <a href=\"https://crates.io/crates/sized-dst\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/sized-dst.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/smbus-pec\" rel=\"noopener noreferrer\">smbus-pec</a>: Minimal portable System Management Bus Packet Error Code calculation algorithm. <a href=\"https://crates.io/crates/smbus-pec\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/smbus-pec.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/m-labs/smoltcp\" rel=\"noopener noreferrer\">smoltcp (⭐4.1k)</a>: a small TCP/IP stack that runs without <code>alloc</code>. <a href=\"https://crates.io/crates/smoltcp\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/smoltcp.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/sntpc\" rel=\"noopener noreferrer\">sntpc</a>: Rust SNTP client to get a timestamp from NTP servers. - <a href=\"https://crates.io/crates/sntpc\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/sntpc\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/stepper\" rel=\"noopener noreferrer\">Stepper</a>: Universal Stepper Motor Interface - <a href=\"https://crates.io/crates/stepper\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stepper.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/tinybmp\" rel=\"noopener noreferrer\">tinybmp</a>: No-std, no-alloc BMP parser for embedded systems. <a href=\"https://wapl.es/rust/2019/03/04/embedded-graphics-0.4.7-bmp-support.html\" rel=\"noopener noreferrer\">Introductory blog post</a> - <a href=\"https://crates.io/crates/tinybmp\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/tinybmp.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/thejpster/vga-framebuffer-rs\" rel=\"noopener noreferrer\">vga-framebuffer (⭐31)</a>: A VGA signal generator and font renderer for VGA-less microcontrollers. Used by <a href=\"https://github.com/thejpster/monotron\" rel=\"noopener noreferrer\">Monotron (⭐193)</a> to generate 48 by 36 character display using 3 SPI peripherals and a timer. <a href=\"https://crates.io/crates/vga-framebuffer\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/vga-framebuffer.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/wyhash\" rel=\"noopener noreferrer\">wyhash</a>: A fast, simple and portable hashing algorithm and random number generator. - <a href=\"https://crates.io/crates/wyhash\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/wyhash.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/adafruit-bluefruit-protocol\" rel=\"noopener noreferrer\">adafruit-bluefruit-protocol</a>: A <code>no_std</code> parser for the <a href=\"https://learn.adafruit.com/bluefruit-le-connect/controller\" rel=\"noopener noreferrer\">Adafruit Bluefruit LE Connect controller protocol</a>. - <a href=\"https://crates.io/crates/adafruit-bluefruit-protocol\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/adafruit-bluefruit-protocol\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rudihorn/light-cli\" rel=\"noopener noreferrer\">light-cli (⭐15)</a>: a lightweight heapless cli interface <a href=\"https://crates.io/crates/light_cli\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/light_cli.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/jonas-schievink/rubble\" rel=\"noopener noreferrer\">Rubble (⭐401)</a>: A pure-Rust embedded BLE stack <a href=\"https://crates.io/crates/rubble\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/rubble.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/09/11/",
      "title": "Awesome Embedded Rust Updates on Sep 11, 2024",
      "_short_title": "Sep 11, 2024",
      "_slug": "2024/09/11/",
      "summary": "1 awesome projects updated on Sep 11, 2024",
      "_filepath": "/content/2024/09/11/README.md",
      "url": "https://www.trackawesomelist.com/2024/09/11/",
      "date_published": "2024-09-11T12:20:26.000Z",
      "date_modified": "2024-09-11T12:20:26.000Z",
      "content_text": "\n\n### Tools / Paid and commercially available materials\n\n*   [probe-rs (⭐2.2k)](https://github.com/probe-rs/probe-rs): a modern, embedded debugging toolkit, written in Rust",
      "content_html": "<h3><p>Tools / Paid and commercially available materials</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/probe-rs/probe-rs\" rel=\"noopener noreferrer\">probe-rs (⭐2.2k)</a>: a modern, embedded debugging toolkit, written in Rust</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/08/12/",
      "title": "Awesome Embedded Rust Updates on Aug 12, 2024",
      "_short_title": "Aug 12, 2024",
      "_slug": "2024/08/12/",
      "summary": "1 awesome projects updated on Aug 12, 2024",
      "_filepath": "/content/2024/08/12/README.md",
      "url": "https://www.trackawesomelist.com/2024/08/12/",
      "date_published": "2024-08-12T06:47:48.000Z",
      "date_modified": "2024-08-12T06:47:48.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [wtx (⭐302)](https://github.com/c410-f3r/wtx): Among other things, provides implementations to interact with HTTP, WebSockets and Databases.",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/c410-f3r/wtx\" rel=\"noopener noreferrer\">wtx (⭐302)</a>: Among other things, provides implementations to interact with HTTP, WebSockets and Databases.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/07/03/",
      "title": "Awesome Embedded Rust Updates on Jul 03, 2024",
      "_short_title": "Jul 03, 2024",
      "_slug": "2024/07/03/",
      "summary": "44 awesome projects updated on Jul 03, 2024",
      "_filepath": "/content/2024/07/03/README.md",
      "url": "https://www.trackawesomelist.com/2024/07/03/",
      "date_published": "2024-07-03T07:30:54.000Z",
      "date_modified": "2024-07-03T07:32:48.000Z",
      "content_text": "\n\n### Books, blogs, and training materials / Free and public materials\n\n*   [The Embedded Rust Book](https://rust-embedded.github.io/book/) - An introductory book about using the Rust Programming Language on \"Bare Metal\" embedded systems, such as Microcontrollers.\n*   [The Rust on ESP Book](https://esp-rs.github.io/book/) - This book aims to provide a comprehensive guide on using the Rust programming language with Espressif SoCs and modules.\n*   [Embedded Rust (no\\_std) on Espressif](https://docs.esp-rs.org/no_std-training/) - Training for Rust using no\\_std approach development on ESP32-C3.\n*   [Embedded Rust (std) on Espressif](https://docs.esp-rs.org/std-training/) - Training for Rust using std approach development on ESP32-C3 by Ferrous Systems.\n*   [Discovery](https://rust-embedded.github.io/discovery) by @rust-embedded — this book is an introductory course on microcontroller-based embedded systems that uses Rust as the teaching language. Original author: @japaric\n*   [Cortex-M Quickstart](https://docs.rs/cortex-m-quickstart/0.3.1/cortex_m_quickstart/) by @japaric – a template and introduction to embedded Rust, suitable for developers familiar with embedded development but new to embedded Rust.\n*   [MicroRust](https://droogmic.github.io/microrust/) Introductory book for embedded development in Rust on the micro:bit.\n*   [Physical Computing With Rust](https://rahul-thakoor.github.io/physical-computing-rust/) A (WIP) guide to physical computing with Rust on the Raspberry Pi.\n*   [Writing an embedded OS in Rust on the Raspberry Pi (⭐14k)](https://github.com/rust-embedded/rust-raspi3-OS-tutorials) A set of tutorials that give a guided, step-by-step tour of how to write a monolithic Operating System kernel for an embedded system from scratch. Runs on the Raspberry Pi 3 and the Raspberry Pi 4.\n*   [Writing embedded drivers in Rust isn't that hard](https://hboeving.dev/blog/rust-2c-driver-p1/) A guide to building an embedded-hal driver. [Part 2](https://hboeving.dev/blog/rust-i2c-driver-p2/)\n*   [Ferrous Systems' Embedded Training Courses: 2020-current edition (⭐255)](https://github.com/ferrous-systems/embedded-trainings-2020) A hands-on training course for beginner and advanced learners of Embedded Rust, based on Nordic Semiconductor's nRF52840 hardware. This training was given at Oxidize Conferences and by [Ferrous Systems](https://ferrous-systems.com) to corporate customers.\n*   [Ferrous Systems' Knurling Sessions](https://knurling.ferrous-systems.com/sessions/) are hands-on embedded projects that explore specific concepts using generally available hardware, building full systems and components using microcontrollers, sensors, and actuators.\n*   [DSP on STM32F407G-DISC1 (⭐33)](https://github.com/jacobrosenthal/dsp-discoveryf4-rust/) Unofficial oxidization of the [Digital Signal Processing using Arm Cortex-M based Microcontrollers: Theory and Practice](https://www.amazon.com/Digital-Signal-Processing-Cortex-M-Microcontrollers/dp/1911531166) book. The book isn't necessary to enjoy the examples and learn a functional DSP Rust coding style.\n*   [Building a sailing starter board with Rust (RTIC)](https://gill.net.in/posts/stm32-pcb-sailing-and-rust/) A step-by-step story/guide to build STM32-based PCB and program it with Rust for fun and games.\n*   [STM32F4xx with Embedded Rust at the HAL](https://apollolabsblog.hashnode.dev/series/stm32f4-embedded-rust-hal) A blog containing a series of tutorials demonstrating the use of several peripherals through simple examples leveraging the stm32f4xx-hal crate.\n*   [Embedded Rust programming playlist](https://www.youtube.com/playlist?list=PLP_X41VhYn5X6Wwjnm0bRwI3n2pdaszxU) Various livestreams with Embedded Rust live coding\n*   [ESP32-C3 Rust Tutorials](https://youtube.com/playlist?list=PLkch9g9DEE0Lkm1LqcD7pZNDmXEczOo-a) Short videos and [Github project (⭐74)](https://github.com/shanemmattner/ESP32-C3_Rust_Tutorials) implementing various peripherals of the ESP32-C3 with the end goal of creating a complete data logger application.\n*   [Tweede golf's workshop](https://workshop.tweede.golf) - A full workshop about Rust and embedded Rust. The embedded parts use the nRF52840-DK and a LIS3DH breakout board. ([github source (⭐19)](https://github.com/tweedegolf/rust-workshop))\n\n### Books, blogs, and training materials / Paid and commercially available materials\n\n*   [Simplified Embedded Rust: Standard Library Edition](https://www.theembeddedrustacean.com/c/ser-std) - This book provides a quick path to start learning embedded Rust with minimal setup. Book is based on ESP devices and the Wokwi Simulator. This edition uses the standard library development approach which is based on the ESP-IDF framework.\n*   [Simplified Embedded Rust: Core Library Edition](https://www.theembeddedrustacean.com/c/ser-no-std) - This book provides a quick path to start learning embedded Rust with minimal setup. Book is based on ESP devices and the Wokwi Simulator. This edition uses the core library development approach for bare metal development.\n\n### Tools / Paid and commercially available materials\n\n*   [svd2rust (⭐782)](https://github.com/japaric/svd2rust) Generate Rust structs with register mappings from SVD files.\n*   [cortex-m semihosting (⭐0)](https://github.com/japaric/cortex-m-semihosting) Semihosting for ARM Cortex-M processors\n*   [bobbin-cli (⭐113)](https://github.com/bobbin-rs/bobbin-cli) A Rust command line tool to simplify embedded development and deployment.\n*   [ferros (⭐117)](https://github.com/auxoncorp/ferros) A Rust-based userland which also adds compile-time assurances to seL4 development.\n*   [cargo-bloat (⭐2.6k)](https://github.com/RazrFalcon/cargo-bloat) Find out what takes most of the space in your executable.\n*   [cargo-call-stack](https://crates.io/crates/cargo-call-stack) Static, whole program stack usage analyzer.\n*   [cargo-dfu](https://crates.io/crates/cargo-dfu) Cargo extension for flashing embedded rust programs via DFU.\n\n### Real-time / Real-time Operating System (RTOS)\n\n*   [Drone OS](https://drone-os.github.io) An Embedded Operating System for writing real-time applications in Rust.\n*   [FreeRTOS.rs (⭐239)](https://github.com/hashmismatch/freertos.rs) Rust interface for the FreeRTOS API\n*   [FreeRTOS-rust (⭐431)](https://github.com/lobaro/FreeRTOS-rust) Rust interface for FreeRTOS with Rust entry point and build support crate.\n*   [RIOT-OS](https://doc.riot-os.org/using-rust.html) directly supports applications written in Rust, both in terms of build system integration and by having safe and idiomatic wrappers.\n*   [Tock](https://www.tockos.org) An embedded operating system designed for running multiple concurrent, mutually distrustful applications on low-memory and low-power microcontrollers\n*   [Hubris (⭐3.2k)](https://github.com/oxidecomputer/hubris) A real-time operating system built by Oxide Computer to run the Service Controller processor in the mainboards of their rack-mount servers.\n\n### Peripheral Access Crates / Texas Instruments\n\n*   [`tm4c123x`](https://crates.io/crates/tm4c123x) Peripheral access API for TM4C123x microcontrollers (generated using svd2rust)\n*   [`tm4c129x`](https://crates.io/crates/tm4c129x) Peripheral access API for TM4C129x microcontrollers (generated using svd2rust)\n\n### Peripheral Access Crates / MSP430\n\n*   [`msp430fr2355`](https://crates.io/crates/msp430fr2355) Peripheral access API for MSP430FR2355 microcontrollers (generated using svd2rust)\n\n### Old books, blogs, and training materials / WIP\n\n*   [Exploring Rust on Teensy](https://branan.github.io/teensy/) by @branan — Beginner set of articles on getting into embedded dev in Rust.\n*   [Pragmatic Bare Metal Rust](http://www.hashmismatch.net/pragmatic-bare-metal-rust/) A starter article about starting Rust development on STM32 microcontrollers (cubeMX + FFI).\n*   [Using Rust in an Embedded Project: A Simple Example](https://spin.atomicobject.com/2016/07/08/rust-embedded-project-example/#.V3-os-6qlZw.hackernews) Article and some links on setting up Rust cross-compiling.\n*   [Robigalia](https://robigalia.org) general purpose robust operating system in Rust running on secure seL4 microkernel.\n*   [intermezzOS](http://intermezzos.github.io) A small teaching operating system in Rust. A book with some explanations is also included.\n*   [Fearless concurrency](http://blog.japaric.io/fearless-concurrency/) by @japaric — How to easily develop Rust programs for pretty much any ARM Cortex-M microcontroller with memory-safe concurrency.\n*   [Internet of Streams](https://www.youtube.com/playlist?list=PLX44HkctSkTewrL9frlUz0yeKLKecebT1) A video series  by [@jamesmunns](https://github.com/jamesmunns) building a bare metal IoT Sensor Node Platform from (nearly) scratch in Rust\n*   [Ferrous Systems' Embedded Training Courses: 2019 edition (⭐118)](https://github.com/ferrous-systems/embedded-trainings/) A hands-on training course for beginner and advanced learners of Embedded Rust, based on Nordic Semiconductor's nRF52 and Decawave's DWM1001-DEV hardware. This training was given at Oxidize Conferences and by Ferrous Systems to corporate customers.",
      "content_html": "<h3><p>Books, blogs, and training materials / Free and public materials</p>\n</h3>\n<ul>\n<li><a href=\"https://rust-embedded.github.io/book/\" rel=\"noopener noreferrer\">The Embedded Rust Book</a> - An introductory book about using the Rust Programming Language on \"Bare Metal\" embedded systems, such as Microcontrollers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://esp-rs.github.io/book/\" rel=\"noopener noreferrer\">The Rust on ESP Book</a> - This book aims to provide a comprehensive guide on using the Rust programming language with Espressif SoCs and modules.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://docs.esp-rs.org/no_std-training/\" rel=\"noopener noreferrer\">Embedded Rust (no_std) on Espressif</a> - Training for Rust using no_std approach development on ESP32-C3.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://docs.esp-rs.org/std-training/\" rel=\"noopener noreferrer\">Embedded Rust (std) on Espressif</a> - Training for Rust using std approach development on ESP32-C3 by Ferrous Systems.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://rust-embedded.github.io/discovery\" rel=\"noopener noreferrer\">Discovery</a> by @rust-embedded — this book is an introductory course on microcontroller-based embedded systems that uses Rust as the teaching language. Original author: @japaric</li>\n</ul>\n\n<ul>\n<li><a href=\"https://docs.rs/cortex-m-quickstart/0.3.1/cortex_m_quickstart/\" rel=\"noopener noreferrer\">Cortex-M Quickstart</a> by @japaric – a template and introduction to embedded Rust, suitable for developers familiar with embedded development but new to embedded Rust.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://droogmic.github.io/microrust/\" rel=\"noopener noreferrer\">MicroRust</a> Introductory book for embedded development in Rust on the micro:bit.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://rahul-thakoor.github.io/physical-computing-rust/\" rel=\"noopener noreferrer\">Physical Computing With Rust</a> A (WIP) guide to physical computing with Rust on the Raspberry Pi.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rust-embedded/rust-raspi3-OS-tutorials\" rel=\"noopener noreferrer\">Writing an embedded OS in Rust on the Raspberry Pi (⭐14k)</a> A set of tutorials that give a guided, step-by-step tour of how to write a monolithic Operating System kernel for an embedded system from scratch. Runs on the Raspberry Pi 3 and the Raspberry Pi 4.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://hboeving.dev/blog/rust-2c-driver-p1/\" rel=\"noopener noreferrer\">Writing embedded drivers in Rust isn't that hard</a> A guide to building an embedded-hal driver. <a href=\"https://hboeving.dev/blog/rust-i2c-driver-p2/\" rel=\"noopener noreferrer\">Part 2</a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ferrous-systems/embedded-trainings-2020\" rel=\"noopener noreferrer\">Ferrous Systems' Embedded Training Courses: 2020-current edition (⭐255)</a> A hands-on training course for beginner and advanced learners of Embedded Rust, based on Nordic Semiconductor's nRF52840 hardware. This training was given at Oxidize Conferences and by <a href=\"https://ferrous-systems.com\" rel=\"noopener noreferrer\">Ferrous Systems</a> to corporate customers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://knurling.ferrous-systems.com/sessions/\" rel=\"noopener noreferrer\">Ferrous Systems' Knurling Sessions</a> are hands-on embedded projects that explore specific concepts using generally available hardware, building full systems and components using microcontrollers, sensors, and actuators.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/jacobrosenthal/dsp-discoveryf4-rust/\" rel=\"noopener noreferrer\">DSP on STM32F407G-DISC1 (⭐33)</a> Unofficial oxidization of the <a href=\"https://www.amazon.com/Digital-Signal-Processing-Cortex-M-Microcontrollers/dp/1911531166\" rel=\"noopener noreferrer\">Digital Signal Processing using Arm Cortex-M based Microcontrollers: Theory and Practice</a> book. The book isn't necessary to enjoy the examples and learn a functional DSP Rust coding style.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://gill.net.in/posts/stm32-pcb-sailing-and-rust/\" rel=\"noopener noreferrer\">Building a sailing starter board with Rust (RTIC)</a> A step-by-step story/guide to build STM32-based PCB and program it with Rust for fun and games.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://apollolabsblog.hashnode.dev/series/stm32f4-embedded-rust-hal\" rel=\"noopener noreferrer\">STM32F4xx with Embedded Rust at the HAL</a> A blog containing a series of tutorials demonstrating the use of several peripherals through simple examples leveraging the stm32f4xx-hal crate.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.youtube.com/playlist?list=PLP_X41VhYn5X6Wwjnm0bRwI3n2pdaszxU\" rel=\"noopener noreferrer\">Embedded Rust programming playlist</a> Various livestreams with Embedded Rust live coding</li>\n</ul>\n\n<ul>\n<li><a href=\"https://youtube.com/playlist?list=PLkch9g9DEE0Lkm1LqcD7pZNDmXEczOo-a\" rel=\"noopener noreferrer\">ESP32-C3 Rust Tutorials</a> Short videos and <a href=\"https://github.com/shanemmattner/ESP32-C3_Rust_Tutorials\" rel=\"noopener noreferrer\">Github project (⭐74)</a> implementing various peripherals of the ESP32-C3 with the end goal of creating a complete data logger application.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://workshop.tweede.golf\" rel=\"noopener noreferrer\">Tweede golf's workshop</a> - A full workshop about Rust and embedded Rust. The embedded parts use the nRF52840-DK and a LIS3DH breakout board. (<a href=\"https://github.com/tweedegolf/rust-workshop\" rel=\"noopener noreferrer\">github source (⭐19)</a>)</li>\n</ul>\n<h3><p>Books, blogs, and training materials / Paid and commercially available materials</p>\n</h3>\n<ul>\n<li><a href=\"https://www.theembeddedrustacean.com/c/ser-std\" rel=\"noopener noreferrer\">Simplified Embedded Rust: Standard Library Edition</a> - This book provides a quick path to start learning embedded Rust with minimal setup. Book is based on ESP devices and the Wokwi Simulator. This edition uses the standard library development approach which is based on the ESP-IDF framework.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.theembeddedrustacean.com/c/ser-no-std\" rel=\"noopener noreferrer\">Simplified Embedded Rust: Core Library Edition</a> - This book provides a quick path to start learning embedded Rust with minimal setup. Book is based on ESP devices and the Wokwi Simulator. This edition uses the core library development approach for bare metal development.</li>\n</ul>\n<h3><p>Tools / Paid and commercially available materials</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/japaric/svd2rust\" rel=\"noopener noreferrer\">svd2rust (⭐782)</a> Generate Rust structs with register mappings from SVD files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/japaric/cortex-m-semihosting\" rel=\"noopener noreferrer\">cortex-m semihosting (⭐0)</a> Semihosting for ARM Cortex-M processors</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/bobbin-rs/bobbin-cli\" rel=\"noopener noreferrer\">bobbin-cli (⭐113)</a> A Rust command line tool to simplify embedded development and deployment.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/auxoncorp/ferros\" rel=\"noopener noreferrer\">ferros (⭐117)</a> A Rust-based userland which also adds compile-time assurances to seL4 development.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/RazrFalcon/cargo-bloat\" rel=\"noopener noreferrer\">cargo-bloat (⭐2.6k)</a> Find out what takes most of the space in your executable.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/cargo-call-stack\" rel=\"noopener noreferrer\">cargo-call-stack</a> Static, whole program stack usage analyzer.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/cargo-dfu\" rel=\"noopener noreferrer\">cargo-dfu</a> Cargo extension for flashing embedded rust programs via DFU.</li>\n</ul>\n<h3><p>Real-time / Real-time Operating System (RTOS)</p>\n</h3>\n<ul>\n<li><a href=\"https://drone-os.github.io\" rel=\"noopener noreferrer\">Drone OS</a> An Embedded Operating System for writing real-time applications in Rust.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/hashmismatch/freertos.rs\" rel=\"noopener noreferrer\">FreeRTOS.rs (⭐239)</a> Rust interface for the FreeRTOS API</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/lobaro/FreeRTOS-rust\" rel=\"noopener noreferrer\">FreeRTOS-rust (⭐431)</a> Rust interface for FreeRTOS with Rust entry point and build support crate.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://doc.riot-os.org/using-rust.html\" rel=\"noopener noreferrer\">RIOT-OS</a> directly supports applications written in Rust, both in terms of build system integration and by having safe and idiomatic wrappers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.tockos.org\" rel=\"noopener noreferrer\">Tock</a> An embedded operating system designed for running multiple concurrent, mutually distrustful applications on low-memory and low-power microcontrollers</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/oxidecomputer/hubris\" rel=\"noopener noreferrer\">Hubris (⭐3.2k)</a> A real-time operating system built by Oxide Computer to run the Service Controller processor in the mainboards of their rack-mount servers.</li>\n</ul>\n<h3><p>Peripheral Access Crates / Texas Instruments</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/tm4c123x\" rel=\"noopener noreferrer\"><code>tm4c123x</code></a> Peripheral access API for TM4C123x microcontrollers (generated using svd2rust)</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/tm4c129x\" rel=\"noopener noreferrer\"><code>tm4c129x</code></a> Peripheral access API for TM4C129x microcontrollers (generated using svd2rust)</li>\n</ul>\n<h3><p>Peripheral Access Crates / MSP430</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/msp430fr2355\" rel=\"noopener noreferrer\"><code>msp430fr2355</code></a> Peripheral access API for MSP430FR2355 microcontrollers (generated using svd2rust)</li>\n</ul>\n<h3><p>Old books, blogs, and training materials / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://branan.github.io/teensy/\" rel=\"noopener noreferrer\">Exploring Rust on Teensy</a> by @branan — Beginner set of articles on getting into embedded dev in Rust.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.hashmismatch.net/pragmatic-bare-metal-rust/\" rel=\"noopener noreferrer\">Pragmatic Bare Metal Rust</a> A starter article about starting Rust development on STM32 microcontrollers (cubeMX + FFI).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://spin.atomicobject.com/2016/07/08/rust-embedded-project-example/#.V3-os-6qlZw.hackernews\" rel=\"noopener noreferrer\">Using Rust in an Embedded Project: A Simple Example</a> Article and some links on setting up Rust cross-compiling.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://robigalia.org\" rel=\"noopener noreferrer\">Robigalia</a> general purpose robust operating system in Rust running on secure seL4 microkernel.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://intermezzos.github.io\" rel=\"noopener noreferrer\">intermezzOS</a> A small teaching operating system in Rust. A book with some explanations is also included.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://blog.japaric.io/fearless-concurrency/\" rel=\"noopener noreferrer\">Fearless concurrency</a> by @japaric — How to easily develop Rust programs for pretty much any ARM Cortex-M microcontroller with memory-safe concurrency.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.youtube.com/playlist?list=PLX44HkctSkTewrL9frlUz0yeKLKecebT1\" rel=\"noopener noreferrer\">Internet of Streams</a> A video series  by <a href=\"https://github.com/jamesmunns\" rel=\"noopener noreferrer\">@jamesmunns</a> building a bare metal IoT Sensor Node Platform from (nearly) scratch in Rust</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ferrous-systems/embedded-trainings/\" rel=\"noopener noreferrer\">Ferrous Systems' Embedded Training Courses: 2019 edition (⭐118)</a> A hands-on training course for beginner and advanced learners of Embedded Rust, based on Nordic Semiconductor's nRF52 and Decawave's DWM1001-DEV hardware. This training was given at Oxidize Conferences and by Ferrous Systems to corporate customers.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/05/29/",
      "title": "Awesome Embedded Rust Updates on May 29, 2024",
      "_short_title": "May 29, 2024",
      "_slug": "2024/05/29/",
      "summary": "1 awesome projects updated on May 29, 2024",
      "_filepath": "/content/2024/05/29/README.md",
      "url": "https://www.trackawesomelist.com/2024/05/29/",
      "date_published": "2024-05-29T06:10:15.000Z",
      "date_modified": "2024-05-29T06:10:15.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [lorawan-encoding (⭐350)](https://github.com/lora-rs/lora-rs/tree/main/lorawan-encoding): A LoRaWAN packet codec.",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/lora-rs/lora-rs/tree/main/lorawan-encoding\" rel=\"noopener noreferrer\">lorawan-encoding (⭐350)</a>: A LoRaWAN packet codec.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/05/21/",
      "title": "Awesome Embedded Rust Updates on May 21, 2024",
      "_short_title": "May 21, 2024",
      "_slug": "2024/05/21/",
      "summary": "1 awesome projects updated on May 21, 2024",
      "_filepath": "/content/2024/05/21/README.md",
      "url": "https://www.trackawesomelist.com/2024/05/21/",
      "date_published": "2024-05-21T09:44:16.000Z",
      "date_modified": "2024-05-21T09:44:16.000Z",
      "content_text": "\n\n### Firmware projects / WIP\n\n*   [LuLuu (⭐8)](https://github.com/fu5ha/luluu): Firmware for a custom RP2040-based display controller that streams animated images from a microSD card to a small LCD display.",
      "content_html": "<h3><p>Firmware projects / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/fu5ha/luluu\" rel=\"noopener noreferrer\">LuLuu (⭐8)</a>: Firmware for a custom RP2040-based display controller that streams animated images from a microSD card to a small LCD display.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/05/03/",
      "title": "Awesome Embedded Rust Updates on May 03, 2024",
      "_short_title": "May 03, 2024",
      "_slug": "2024/05/03/",
      "summary": "1 awesome projects updated on May 03, 2024",
      "_filepath": "/content/2024/05/03/README.md",
      "url": "https://www.trackawesomelist.com/2024/05/03/",
      "date_published": "2024-05-03T19:18:07.000Z",
      "date_modified": "2024-05-03T19:18:07.000Z",
      "content_text": "\n\n### Firmware projects / WIP\n\n*   [prinThor (⭐181)](https://github.com/cbruiz/printhor): 3DPrinter/CNC/Engraver firmware framework powered by rust embassy for stm32 families and rp2040.",
      "content_html": "<h3><p>Firmware projects / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/cbruiz/printhor\" rel=\"noopener noreferrer\">prinThor (⭐181)</a>: 3DPrinter/CNC/Engraver firmware framework powered by rust embassy for stm32 families and rp2040.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/04/15/",
      "title": "Awesome Embedded Rust Updates on Apr 15, 2024",
      "_short_title": "Apr 15, 2024",
      "_slug": "2024/04/15/",
      "summary": "1 awesome projects updated on Apr 15, 2024",
      "_filepath": "/content/2024/04/15/README.md",
      "url": "https://www.trackawesomelist.com/2024/04/15/",
      "date_published": "2024-04-15T06:40:28.000Z",
      "date_modified": "2024-04-15T06:40:28.000Z",
      "content_text": "\n\n### Community / Community Chat Rooms\n\n*   [rust-embedded:QQ group](https://qm.qq.com/q/A8Hl57xR1C) - Chinese community for Rust embedded",
      "content_html": "<h3><p>Community / Community Chat Rooms</p>\n</h3>\n<ul>\n<li><a href=\"https://qm.qq.com/q/A8Hl57xR1C\" rel=\"noopener noreferrer\">rust-embedded:QQ group</a> - Chinese community for Rust embedded</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/01/24/",
      "title": "Awesome Embedded Rust Updates on Jan 24, 2024",
      "_short_title": "Jan 24, 2024",
      "_slug": "2024/01/24/",
      "summary": "1 awesome projects updated on Jan 24, 2024",
      "_filepath": "/content/2024/01/24/README.md",
      "url": "https://www.trackawesomelist.com/2024/01/24/",
      "date_published": "2024-01-24T14:41:15.000Z",
      "date_modified": "2024-01-24T14:41:15.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [lorawan-device (⭐350)](https://github.com/lora-rs/lora-rs/tree/main/lorawan-device): A LoRaWAN MAC implementation supporting both event-driven and async mode.",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/lora-rs/lora-rs/tree/main/lorawan-device\" rel=\"noopener noreferrer\">lorawan-device (⭐350)</a>: A LoRaWAN MAC implementation supporting both event-driven and async mode.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/12/20/",
      "title": "Awesome Embedded Rust Updates on Dec 20, 2023",
      "_short_title": "Dec 20, 2023",
      "_slug": "2023/12/20/",
      "summary": "7 awesome projects updated on Dec 20, 2023",
      "_filepath": "/content/2023/12/20/README.md",
      "url": "https://www.trackawesomelist.com/2023/12/20/",
      "date_published": "2023-12-20T08:27:54.000Z",
      "date_modified": "2023-12-20T08:27:54.000Z",
      "content_text": "\n\n### Books, blogs, and training materials / Free and public materials\n\n*   [Writing an OS in Rust](https://os.phil-opp.com/) A blog series creating a small operating system in Rust\n\n### Board support crates / Teensy\n\n*   [`teensy4-rs`](https://github.com/mciantyre/teensy4-rs) Board Support crate for the \\[Teensy 4.0]\n\n### Driver crates / WIP\n\n*   [DS3231 (⭐7)](https://github.com/wose/ds3231) - I2C - real-time clock\n*   [DS3234 (⭐2k)](https://github.com/rust-embedded/wg/issues/39#issuecomment-375262785) - SPI - Real-time clock\n*   [HX711 (⭐9)](https://github.com/DaneSlattery/hx711) - GPIO - An interrupt-based driver for the HX711 Load Cell Amplifier IC. no-std.\n\n### Firmware projects / WIP\n\n*   [air-gradient-pro-rs (⭐11)](https://github.com/jonlamb-gh/air-gradient-pro-rs): Bootloader, firmware, and CLI tools for the AirGradient PRO\n*   [Card/IO ECG (⭐40)](https://github.com/card-io-ecg/card-io-fw): Firmware for a business-card-sized ECG device with Wifi connectivity",
      "content_html": "<h3><p>Books, blogs, and training materials / Free and public materials</p>\n</h3>\n<ul>\n<li><a href=\"https://os.phil-opp.com/\" rel=\"noopener noreferrer\">Writing an OS in Rust</a> A blog series creating a small operating system in Rust</li>\n</ul>\n<h3><p>Board support crates / Teensy</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/mciantyre/teensy4-rs\" rel=\"noopener noreferrer\"><code>teensy4-rs</code></a> Board Support crate for the [Teensy 4.0]</li>\n</ul>\n<h3><p>Driver crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/wose/ds3231\" rel=\"noopener noreferrer\">DS3231 (⭐7)</a> - I2C - real-time clock</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rust-embedded/wg/issues/39#issuecomment-375262785\" rel=\"noopener noreferrer\">DS3234 (⭐2k)</a> - SPI - Real-time clock</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/DaneSlattery/hx711\" rel=\"noopener noreferrer\">HX711 (⭐9)</a> - GPIO - An interrupt-based driver for the HX711 Load Cell Amplifier IC. no-std.</li>\n</ul>\n<h3><p>Firmware projects / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/jonlamb-gh/air-gradient-pro-rs\" rel=\"noopener noreferrer\">air-gradient-pro-rs (⭐11)</a>: Bootloader, firmware, and CLI tools for the AirGradient PRO</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/card-io-ecg/card-io-fw\" rel=\"noopener noreferrer\">Card/IO ECG (⭐40)</a>: Firmware for a business-card-sized ECG device with Wifi connectivity</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/12/08/",
      "title": "Awesome Embedded Rust Updates on Dec 08, 2023",
      "_short_title": "Dec 08, 2023",
      "_slug": "2023/12/08/",
      "summary": "1 awesome projects updated on Dec 08, 2023",
      "_filepath": "/content/2023/12/08/README.md",
      "url": "https://www.trackawesomelist.com/2023/12/08/",
      "date_published": "2023-12-08T11:05:14.000Z",
      "date_modified": "2023-12-08T11:05:14.000Z",
      "content_text": "\n\n### Peripheral Access Crates / Microchip\n\n*   [`atsamx7x-rust`](https://github.com/atsams-rs/atsamx7x-rust) Peripheral access API for Microchip (formerly Atmel) SAM S70/E70/V70/V71 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.",
      "content_html": "<h3><p>Peripheral Access Crates / Microchip</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/atsams-rs/atsamx7x-rust\" rel=\"noopener noreferrer\"><code>atsamx7x-rust</code></a> Peripheral access API for Microchip (formerly Atmel) SAM S70/E70/V70/V71 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/10/17/",
      "title": "Awesome Embedded Rust Updates on Oct 17, 2023",
      "_short_title": "Oct 17, 2023",
      "_slug": "2023/10/17/",
      "summary": "1 awesome projects updated on Oct 17, 2023",
      "_filepath": "/content/2023/10/17/README.md",
      "url": "https://www.trackawesomelist.com/2023/10/17/",
      "date_published": "2023-10-17T12:28:22.000Z",
      "date_modified": "2023-10-17T12:28:22.000Z",
      "content_text": "\n\n### Firmware projects / WIP\n\n*   [rmk (⭐1.2k)](https://github.com/HaoboGu/rmk): Mechanical keyboard firmware for stm32/rp2040, supports vial/dynamic keymap/eeprom, written in Rust",
      "content_html": "<h3><p>Firmware projects / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/HaoboGu/rmk\" rel=\"noopener noreferrer\">rmk (⭐1.2k)</a>: Mechanical keyboard firmware for stm32/rp2040, supports vial/dynamic keymap/eeprom, written in Rust</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/10/10/",
      "title": "Awesome Embedded Rust Updates on Oct 10, 2023",
      "_short_title": "Oct 10, 2023",
      "_slug": "2023/10/10/",
      "summary": "1 awesome projects updated on Oct 10, 2023",
      "_filepath": "/content/2023/10/10/README.md",
      "url": "https://www.trackawesomelist.com/2023/10/10/",
      "date_published": "2023-10-10T21:20:28.000Z",
      "date_modified": "2023-10-10T21:20:28.000Z",
      "content_text": "\n\n### Community / Community Chat Rooms\n\n*   [#ethercrab:matrix.org](https://matrix.to/#/#ethercrab:matrix.org) - For discussion of general EtherCAT and the Rust implementation, EtherCrab",
      "content_html": "<h3><p>Community / Community Chat Rooms</p>\n</h3>\n<ul>\n<li><a href=\"https://matrix.to/#/#ethercrab:matrix.org\" rel=\"noopener noreferrer\">#ethercrab:matrix.org</a> - For discussion of general EtherCAT and the Rust implementation, EtherCrab</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/09/05/",
      "title": "Awesome Embedded Rust Updates on Sep 05, 2023",
      "_short_title": "Sep 05, 2023",
      "_slug": "2023/09/05/",
      "summary": "1 awesome projects updated on Sep 05, 2023",
      "_filepath": "/content/2023/09/05/README.md",
      "url": "https://www.trackawesomelist.com/2023/09/05/",
      "date_published": "2023-09-05T15:29:07.000Z",
      "date_modified": "2023-09-05T15:29:07.000Z",
      "content_text": "\n\n### Firmware projects / WIP\n\n*   [BillMock (⭐16)](https://github.com/pmnxis/billmock-app-rs): Firmware for credit card terminal add-on hardware to install on Korean arcade machines",
      "content_html": "<h3><p>Firmware projects / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/pmnxis/billmock-app-rs\" rel=\"noopener noreferrer\">BillMock (⭐16)</a>: Firmware for credit card terminal add-on hardware to install on Korean arcade machines</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/08/22/",
      "title": "Awesome Embedded Rust Updates on Aug 22, 2023",
      "_short_title": "Aug 22, 2023",
      "_slug": "2023/08/22/",
      "summary": "1 awesome projects updated on Aug 22, 2023",
      "_filepath": "/content/2023/08/22/README.md",
      "url": "https://www.trackawesomelist.com/2023/08/22/",
      "date_published": "2023-08-22T11:34:25.000Z",
      "date_modified": "2023-08-22T11:34:25.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [Slint](https://crates.io/crates/slint): Declarative GUI framework that works on microcontrollers. [![crates.io](https://img.shields.io/crates/v/slint.svg)](https://crates.io/crates/slint)",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/slint\" rel=\"noopener noreferrer\">Slint</a>: Declarative GUI framework that works on microcontrollers. <a href=\"https://crates.io/crates/slint\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/slint.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/07/18/",
      "title": "Awesome Embedded Rust Updates on Jul 18, 2023",
      "_short_title": "Jul 18, 2023",
      "_slug": "2023/07/18/",
      "summary": "3 awesome projects updated on Jul 18, 2023",
      "_filepath": "/content/2023/07/18/README.md",
      "url": "https://www.trackawesomelist.com/2023/07/18/",
      "date_published": "2023-07-18T10:06:27.000Z",
      "date_modified": "2023-07-18T10:38:08.000Z",
      "content_text": "\n\n### Firmware projects / WIP\n\n*   [Stabilizer (⭐125)](https://github.com/quartiq/stabilizer): Firmware for a DSP tool used in quantum physics experimentation, includes telemetry via MQTT and run-time configuration\n*   [Booster (⭐13)](https://github.com/quartiq/booster): Firmware for an RF power amplifier, including telemetry via MQTT and run-time configuration\n*   [Thermostat EEM (⭐8)](https://github.com/quartiq/thermostat-eem): Firmware for a multi-channel temperature controller used in physics experiments",
      "content_html": "<h3><p>Firmware projects / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/quartiq/stabilizer\" rel=\"noopener noreferrer\">Stabilizer (⭐125)</a>: Firmware for a DSP tool used in quantum physics experimentation, includes telemetry via MQTT and run-time configuration</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/quartiq/booster\" rel=\"noopener noreferrer\">Booster (⭐13)</a>: Firmware for an RF power amplifier, including telemetry via MQTT and run-time configuration</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/quartiq/thermostat-eem\" rel=\"noopener noreferrer\">Thermostat EEM (⭐8)</a>: Firmware for a multi-channel temperature controller used in physics experiments</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/05/30/",
      "title": "Awesome Embedded Rust Updates on May 30, 2023",
      "_short_title": "May 30, 2023",
      "_slug": "2023/05/30/",
      "summary": "2 awesome projects updated on May 30, 2023",
      "_filepath": "/content/2023/05/30/README.md",
      "url": "https://www.trackawesomelist.com/2023/05/30/",
      "date_published": "2023-05-30T08:13:48.000Z",
      "date_modified": "2023-05-30T08:13:48.000Z",
      "content_text": "\n\n### Driver crates / Other\n\n*   [FUSB302B (⭐22)](https://github.com/fmckeogh/usb-pd-rs) - I2C - Programmable USB Type‐C Controller with USB Power Delivery - [github (⭐22)](https://github.com/fmckeogh/usb-pd-rs)\n\n### no-std crates / WIP\n\n*   [usb-pd (⭐22)](https://github.com/fmckeogh/usb-pd-rs): USB-PD library, supports using the FUSB302B as a Sink driver, with Source functionality planned.",
      "content_html": "<h3><p>Driver crates / Other</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/fmckeogh/usb-pd-rs\" rel=\"noopener noreferrer\">FUSB302B (⭐22)</a> - I2C - Programmable USB Type‐C Controller with USB Power Delivery - <a href=\"https://github.com/fmckeogh/usb-pd-rs\" rel=\"noopener noreferrer\">github (⭐22)</a></li>\n</ul>\n<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/fmckeogh/usb-pd-rs\" rel=\"noopener noreferrer\">usb-pd (⭐22)</a>: USB-PD library, supports using the FUSB302B as a Sink driver, with Source functionality planned.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/04/21/",
      "title": "Awesome Embedded Rust Updates on Apr 21, 2023",
      "_short_title": "Apr 21, 2023",
      "_slug": "2023/04/21/",
      "summary": "2 awesome projects updated on Apr 21, 2023",
      "_filepath": "/content/2023/04/21/README.md",
      "url": "https://www.trackawesomelist.com/2023/04/21/",
      "date_published": "2023-04-21T09:22:52.000Z",
      "date_modified": "2023-04-21T09:22:52.000Z",
      "content_text": "\n\n### HAL implementation crates / Espressif\n\n*   [`esp-idf-hal`](https://github.com/esp-rs/esp-idf-hal)\n    *   An embedded-hal implementation for Rust on ESP32 microcontrollers and ESP-IDF\n*   [`esp-hal`](https://github.com/esp-rs/esp-hal)\n    *   A `no_std` Hardware Abstraction Layers for ESP32 microcontrollers",
      "content_html": "<h3><p>HAL implementation crates / Espressif</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/esp-rs/esp-idf-hal\" rel=\"noopener noreferrer\"><code>esp-idf-hal</code></a><ul>\n<li>An embedded-hal implementation for Rust on ESP32 microcontrollers and ESP-IDF</li>\n</ul>\n</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/esp-rs/esp-hal\" rel=\"noopener noreferrer\"><code>esp-hal</code></a><ul>\n<li>A <code>no_std</code> Hardware Abstraction Layers for ESP32 microcontrollers</li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/04/19/",
      "title": "Awesome Embedded Rust Updates on Apr 19, 2023",
      "_short_title": "Apr 19, 2023",
      "_slug": "2023/04/19/",
      "summary": "1 awesome projects updated on Apr 19, 2023",
      "_filepath": "/content/2023/04/19/README.md",
      "url": "https://www.trackawesomelist.com/2023/04/19/",
      "date_published": "2023-04-19T17:58:26.000Z",
      "date_modified": "2023-04-19T17:58:26.000Z",
      "content_text": "\n\n### Firmware projects / WIP\n\n*   [μLA (⭐860)](https://github.com/dotcypress/ula): Micro Logic Analyzer for RP2040",
      "content_html": "<h3><p>Firmware projects / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/dotcypress/ula\" rel=\"noopener noreferrer\">μLA (⭐860)</a>: Micro Logic Analyzer for RP2040</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/04/01/",
      "title": "Awesome Embedded Rust Updates on Apr 01, 2023",
      "_short_title": "Apr 01, 2023",
      "_slug": "2023/04/01/",
      "summary": "1 awesome projects updated on Apr 01, 2023",
      "_filepath": "/content/2023/04/01/README.md",
      "url": "https://www.trackawesomelist.com/2023/04/01/",
      "date_published": "2023-04-01T13:48:56.000Z",
      "date_modified": "2023-04-01T13:48:56.000Z",
      "content_text": "\n\n### Community / Community Chat Rooms\n\n*   [#rust-embedded-space:matrix.org](https://matrix.to/#/#rust-embedded-space:matrix.org) Most Embedded Rust related Matrix rooms are in the Rust Embedded Space",
      "content_html": "<h3><p>Community / Community Chat Rooms</p>\n</h3>\n<ul>\n<li><a href=\"https://matrix.to/#/#rust-embedded-space:matrix.org\" rel=\"noopener noreferrer\">#rust-embedded-space:matrix.org</a> Most Embedded Rust related Matrix rooms are in the Rust Embedded Space</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/03/31/",
      "title": "Awesome Embedded Rust Updates on Mar 31, 2023",
      "_short_title": "Mar 31, 2023",
      "_slug": "2023/03/31/",
      "summary": "1 awesome projects updated on Mar 31, 2023",
      "_filepath": "/content/2023/03/31/README.md",
      "url": "https://www.trackawesomelist.com/2023/03/31/",
      "date_published": "2023-03-31T00:54:15.000Z",
      "date_modified": "2023-03-31T00:54:15.000Z",
      "content_text": "\n\n### Board support crates / STMicroelectronics\n\n*   [`nucleo-h723zg`](https://github.com/jlogan03/nucleo-h723zg) Board support crate for the Nucleo H723ZG",
      "content_html": "<h3><p>Board support crates / STMicroelectronics</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/jlogan03/nucleo-h723zg\" rel=\"noopener noreferrer\"><code>nucleo-h723zg</code></a> Board support crate for the Nucleo H723ZG</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/03/29/",
      "title": "Awesome Embedded Rust Updates on Mar 29, 2023",
      "_short_title": "Mar 29, 2023",
      "_slug": "2023/03/29/",
      "summary": "1 awesome projects updated on Mar 29, 2023",
      "_filepath": "/content/2023/03/29/README.md",
      "url": "https://www.trackawesomelist.com/2023/03/29/",
      "date_published": "2023-03-29T16:49:54.000Z",
      "date_modified": "2023-03-29T16:49:54.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [crossbus (⭐126)](https://github.com/hominee/crossbus): A Platform-Less, Runtime-Less Actor Computing Model.",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/hominee/crossbus\" rel=\"noopener noreferrer\">crossbus (⭐126)</a>: A Platform-Less, Runtime-Less Actor Computing Model.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/12/06/",
      "title": "Awesome Embedded Rust Updates on Dec 06, 2022",
      "_short_title": "Dec 06, 2022",
      "_slug": "2022/12/06/",
      "summary": "1 awesome projects updated on Dec 06, 2022",
      "_filepath": "/content/2022/12/06/README.md",
      "url": "https://www.trackawesomelist.com/2022/12/06/",
      "date_published": "2022-12-06T22:00:29.000Z",
      "date_modified": "2022-12-06T22:00:29.000Z",
      "content_text": "\n\n### Board support crates / Texas Instruments\n\n*   [`tm4c129-launchpad`](https://github.com/jlogan03/tm4c129-launchpad) - For the Texas Instruments TM4C129-XL Launchpad board",
      "content_html": "<h3><p>Board support crates / Texas Instruments</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/jlogan03/tm4c129-launchpad\" rel=\"noopener noreferrer\"><code>tm4c129-launchpad</code></a> - For the Texas Instruments TM4C129-XL Launchpad board</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/10/20/",
      "title": "Awesome Embedded Rust Updates on Oct 20, 2022",
      "_short_title": "Oct 20, 2022",
      "_slug": "2022/10/20/",
      "summary": "1 awesome projects updated on Oct 20, 2022",
      "_filepath": "/content/2022/10/20/README.md",
      "url": "https://www.trackawesomelist.com/2022/10/20/",
      "date_published": "2022-10-20T02:51:52.000Z",
      "date_modified": "2022-10-20T02:51:52.000Z",
      "content_text": "\n\n### Driver crates / WIP\n\n*   [atwinc1500-rs](https://crates.io/crates/atwinc1500) - SPI - A host driver for the Atwinc1500 network controller",
      "content_html": "<h3><p>Driver crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/atwinc1500\" rel=\"noopener noreferrer\">atwinc1500-rs</a> - SPI - A host driver for the Atwinc1500 network controller</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/07/18/",
      "title": "Awesome Embedded Rust Updates on Jul 18, 2022",
      "_short_title": "Jul 18, 2022",
      "_slug": "2022/07/18/",
      "summary": "1 awesome projects updated on Jul 18, 2022",
      "_filepath": "/content/2022/07/18/README.md",
      "url": "https://www.trackawesomelist.com/2022/07/18/",
      "date_published": "2022-07-18T21:12:22.000Z",
      "date_modified": "2022-07-18T21:12:22.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [moonboot (⭐27)](https://github.com/jhbruhn/moonboot): OTA Bootloader Construction Framework for Rust no\\_std environments, especially embedded devices without an OS",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/jhbruhn/moonboot\" rel=\"noopener noreferrer\">moonboot (⭐27)</a>: OTA Bootloader Construction Framework for Rust no_std environments, especially embedded devices without an OS</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/06/15/",
      "title": "Awesome Embedded Rust Updates on Jun 15, 2022",
      "_short_title": "Jun 15, 2022",
      "_slug": "2022/06/15/",
      "summary": "4 awesome projects updated on Jun 15, 2022",
      "_filepath": "/content/2022/06/15/README.md",
      "url": "https://www.trackawesomelist.com/2022/06/15/",
      "date_published": "2022-06-15T06:25:45.000Z",
      "date_modified": "2022-06-15T06:25:45.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [drogue-device (⭐195)](https://github.com/drogue-iot/drogue-device): A distribution of tools and examples for building embedded applications in Rust.\n*   [ector (⭐57)](https://github.com/drogue-iot/ector): An async actor framework for embedded, based on embassy.\n*   [embedded-update (⭐26)](https://github.com/drogue-iot/embedded-update): Pluggable firmware update protocol for embedded devices.\n*   [embedded-tls (⭐193)](https://github.com/drogue-iot/embedded-tls): A TLS 1.3 implementation that runs in a no-std environment.",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/drogue-iot/drogue-device\" rel=\"noopener noreferrer\">drogue-device (⭐195)</a>: A distribution of tools and examples for building embedded applications in Rust.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/drogue-iot/ector\" rel=\"noopener noreferrer\">ector (⭐57)</a>: An async actor framework for embedded, based on embassy.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/drogue-iot/embedded-update\" rel=\"noopener noreferrer\">embedded-update (⭐26)</a>: Pluggable firmware update protocol for embedded devices.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/drogue-iot/embedded-tls\" rel=\"noopener noreferrer\">embedded-tls (⭐193)</a>: A TLS 1.3 implementation that runs in a no-std environment.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/04/03/",
      "title": "Awesome Embedded Rust Updates on Apr 03, 2022",
      "_short_title": "Apr 03, 2022",
      "_slug": "2022/04/03/",
      "summary": "1 awesome projects updated on Apr 03, 2022",
      "_filepath": "/content/2022/04/03/README.md",
      "url": "https://www.trackawesomelist.com/2022/04/03/",
      "date_published": "2022-04-03T09:29:42.000Z",
      "date_modified": "2022-04-03T09:29:42.000Z",
      "content_text": "\n\n### Board support crates / STMicroelectronics\n\n*   [`nucleo-h743zi`](https://github.com/astraw/nucleo-h743zi) Beginner-oriented support crate for the Nucleo H743ZI and Nucleo H743ZI2",
      "content_html": "<h3><p>Board support crates / STMicroelectronics</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/astraw/nucleo-h743zi\" rel=\"noopener noreferrer\"><code>nucleo-h743zi</code></a> Beginner-oriented support crate for the Nucleo H743ZI and Nucleo H743ZI2</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/03/29/",
      "title": "Awesome Embedded Rust Updates on Mar 29, 2022",
      "_short_title": "Mar 29, 2022",
      "_slug": "2022/03/29/",
      "summary": "1 awesome projects updated on Mar 29, 2022",
      "_filepath": "/content/2022/03/29/README.md",
      "url": "https://www.trackawesomelist.com/2022/03/29/",
      "date_published": "2022-03-29T12:32:12.000Z",
      "date_modified": "2022-03-29T12:32:12.000Z",
      "content_text": "\n\n### Community / Community Chat Rooms\n\n*   [#esp-rs:matrix.org](https://matrix.to/#/#esp-rs:matrix.org) - For discussion of using Embedded Rust on Espressif devices",
      "content_html": "<h3><p>Community / Community Chat Rooms</p>\n</h3>\n<ul>\n<li><a href=\"https://matrix.to/#/#esp-rs:matrix.org\" rel=\"noopener noreferrer\">#esp-rs:matrix.org</a> - For discussion of using Embedded Rust on Espressif devices</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/01/09/",
      "title": "Awesome Embedded Rust Updates on Jan 09, 2022",
      "_short_title": "Jan 09, 2022",
      "_slug": "2022/01/09/",
      "summary": "1 awesome projects updated on Jan 09, 2022",
      "_filepath": "/content/2022/01/09/README.md",
      "url": "https://www.trackawesomelist.com/2022/01/09/",
      "date_published": "2022-01-09T03:10:45.000Z",
      "date_modified": "2022-01-09T03:10:45.000Z",
      "content_text": "\n\n### Community / Community Chat Rooms\n\n*   [#atsamd-rs:gitter.im](https://matrix.to/#/#atsamd-rs_community:gitter.im) - For discussions of using Embedded Rust on ATSAMD devices",
      "content_html": "<h3><p>Community / Community Chat Rooms</p>\n</h3>\n<ul>\n<li><a href=\"https://matrix.to/#/#atsamd-rs_community:gitter.im\" rel=\"noopener noreferrer\">#atsamd-rs:gitter.im</a> - For discussions of using Embedded Rust on ATSAMD devices</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/01/08/",
      "title": "Awesome Embedded Rust Updates on Jan 08, 2022",
      "_short_title": "Jan 08, 2022",
      "_slug": "2022/01/08/",
      "summary": "1 awesome projects updated on Jan 08, 2022",
      "_filepath": "/content/2022/01/08/README.md",
      "url": "https://www.trackawesomelist.com/2022/01/08/",
      "date_published": "2022-01-08T22:56:54.000Z",
      "date_modified": "2022-01-08T22:56:54.000Z",
      "content_text": "\n\n### Peripheral Access Crates / Microchip\n\n*   [`atsame53`](https://github.com/atsamd-rs/atsamd) Peripheral access API for Microchip (formerly Atmel) SAME53 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.",
      "content_html": "<h3><p>Peripheral Access Crates / Microchip</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\"><code>atsame53</code></a> Peripheral access API for Microchip (formerly Atmel) SAME53 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/12/30/",
      "title": "Awesome Embedded Rust Updates on Dec 30, 2021",
      "_short_title": "Dec 30, 2021",
      "_slug": "2021/12/30/",
      "summary": "1 awesome projects updated on Dec 30, 2021",
      "_filepath": "/content/2021/12/30/README.md",
      "url": "https://www.trackawesomelist.com/2021/12/30/",
      "date_published": "2021-12-30T18:44:19.000Z",
      "date_modified": "2021-12-30T18:44:19.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [fixed-fft](https://crates.io/crates/fixed-fft): Fixed-point Fast Fourier Transform - [![Crates.io](https://img.shields.io/crates/v/fixed-fft.svg)](https://crates.io/crates/fixed-fft)",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/fixed-fft\" rel=\"noopener noreferrer\">fixed-fft</a>: Fixed-point Fast Fourier Transform - <a href=\"https://crates.io/crates/fixed-fft\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/fixed-fft.svg\" alt=\"Crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/12/26/",
      "title": "Awesome Embedded Rust Updates on Dec 26, 2021",
      "_short_title": "Dec 26, 2021",
      "_slug": "2021/12/26/",
      "summary": "1 awesome projects updated on Dec 26, 2021",
      "_filepath": "/content/2021/12/26/README.md",
      "url": "https://www.trackawesomelist.com/2021/12/26/",
      "date_published": "2021-12-26T19:57:48.000Z",
      "date_modified": "2021-12-26T19:57:48.000Z",
      "content_text": "\n\n### HAL implementation crates / Texas Instruments\n\n*   [`tm4c123x-hal`](https://github.com/rust-embedded-community/tm4c-hal/)",
      "content_html": "<h3><p>HAL implementation crates / Texas Instruments</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/rust-embedded-community/tm4c-hal/\" rel=\"noopener noreferrer\"><code>tm4c123x-hal</code></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/12/20/",
      "title": "Awesome Embedded Rust Updates on Dec 20, 2021",
      "_short_title": "Dec 20, 2021",
      "_slug": "2021/12/20/",
      "summary": "1 awesome projects updated on Dec 20, 2021",
      "_filepath": "/content/2021/12/20/README.md",
      "url": "https://www.trackawesomelist.com/2021/12/20/",
      "date_published": "2021-12-20T09:46:35.000Z",
      "date_modified": "2021-12-20T09:46:35.000Z",
      "content_text": "\n\n### Tools / Paid and commercially available materials\n\n*   [Embassy start (⭐27)](https://github.com/titanclass/embassy-start) is a GitHub repo template for setting up async embedded Rust projects that use [Embassy (⭐7.1k)](https://github.com/embassy-rs/embassy). This particular template targets nRF hardware and networking using the Uarte for the purposes of illustration only.",
      "content_html": "<h3><p>Tools / Paid and commercially available materials</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/titanclass/embassy-start\" rel=\"noopener noreferrer\">Embassy start (⭐27)</a> is a GitHub repo template for setting up async embedded Rust projects that use <a href=\"https://github.com/embassy-rs/embassy\" rel=\"noopener noreferrer\">Embassy (⭐7.1k)</a>. This particular template targets nRF hardware and networking using the Uarte for the purposes of illustration only.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/12/17/",
      "title": "Awesome Embedded Rust Updates on Dec 17, 2021",
      "_short_title": "Dec 17, 2021",
      "_slug": "2021/12/17/",
      "summary": "2 awesome projects updated on Dec 17, 2021",
      "_filepath": "/content/2021/12/17/README.md",
      "url": "https://www.trackawesomelist.com/2021/12/17/",
      "date_published": "2021-12-17T00:00:10.000Z",
      "date_modified": "2021-12-17T00:03:15.000Z",
      "content_text": "\n\n### HAL implementation crates / Vorago\n\n*   [`va108xx-hal`](https://egit.irs.uni-stuttgart.de/rust/va108xx-rs) - [![crates.io](https://img.shields.io/crates/v/va108xx-hal.svg)](https://crates.io/crates/va108xx-hal)\n    *   [Blogpost](https://robamu.github.io/post/rust-ecosystem/)\n\n### Board support crates / Vorago\n\n*   [`vorago-reb1`](https://egit.irs.uni-stuttgart.de/rust/va108xx-rs) - [![crates.io](https://img.shields.io/crates/v/vorago-reb1.svg)](https://crates.io/crates/vorago-reb1)\n    *   [Blogpost](https://robamu.github.io/post/rust-ecosystem/)",
      "content_html": "<h3><p>HAL implementation crates / Vorago</p>\n</h3>\n<ul>\n<li><a href=\"https://egit.irs.uni-stuttgart.de/rust/va108xx-rs\" rel=\"noopener noreferrer\"><code>va108xx-hal</code></a> - <a href=\"https://crates.io/crates/va108xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/va108xx-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li><a href=\"https://robamu.github.io/post/rust-ecosystem/\" rel=\"noopener noreferrer\">Blogpost</a></li>\n</ul>\n</li>\n</ul>\n<h3><p>Board support crates / Vorago</p>\n</h3>\n<ul>\n<li><a href=\"https://egit.irs.uni-stuttgart.de/rust/va108xx-rs\" rel=\"noopener noreferrer\"><code>vorago-reb1</code></a> - <a href=\"https://crates.io/crates/vorago-reb1\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/vorago-reb1.svg\" alt=\"crates.io\" /></a><ul>\n<li><a href=\"https://robamu.github.io/post/rust-ecosystem/\" rel=\"noopener noreferrer\">Blogpost</a></li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/10/26/",
      "title": "Awesome Embedded Rust Updates on Oct 26, 2021",
      "_short_title": "Oct 26, 2021",
      "_slug": "2021/10/26/",
      "summary": "1 awesome projects updated on Oct 26, 2021",
      "_filepath": "/content/2021/10/26/README.md",
      "url": "https://www.trackawesomelist.com/2021/10/26/",
      "date_published": "2021-10-26T16:34:54.000Z",
      "date_modified": "2021-10-26T16:34:54.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [scapegoat](https://crates.io/crates/scapegoat): Safe, stack-only alternative to `BTreeSet` and `BTreeMap`. - [![crates.io](https://img.shields.io/crates/v/scapegoat.svg)](https://crates.io/crates/scapegoat)",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/scapegoat\" rel=\"noopener noreferrer\">scapegoat</a>: Safe, stack-only alternative to <code>BTreeSet</code> and <code>BTreeMap</code>. - <a href=\"https://crates.io/crates/scapegoat\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/scapegoat.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/10/14/",
      "title": "Awesome Embedded Rust Updates on Oct 14, 2021",
      "_short_title": "Oct 14, 2021",
      "_slug": "2021/10/14/",
      "summary": "1 awesome projects updated on Oct 14, 2021",
      "_filepath": "/content/2021/10/14/README.md",
      "url": "https://www.trackawesomelist.com/2021/10/14/",
      "date_published": "2021-10-14T15:43:36.000Z",
      "date_modified": "2021-10-14T15:43:36.000Z",
      "content_text": "\n\n### Tools / Paid and commercially available materials\n\n*   [embedded-hal-compat (⭐16)](https://github.com/ryankurte/embedded-hal-compat), a compatibility layer to provide interoperability between `v0.2.x` and `v1.x.x` hal implementations and drivers",
      "content_html": "<h3><p>Tools / Paid and commercially available materials</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ryankurte/embedded-hal-compat\" rel=\"noopener noreferrer\">embedded-hal-compat (⭐16)</a>, a compatibility layer to provide interoperability between <code>v0.2.x</code> and <code>v1.x.x</code> hal implementations and drivers</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/08/24/",
      "title": "Awesome Embedded Rust Updates on Aug 24, 2021",
      "_short_title": "Aug 24, 2021",
      "_slug": "2021/08/24/",
      "summary": "2 awesome projects updated on Aug 24, 2021",
      "_filepath": "/content/2021/08/24/README.md",
      "url": "https://www.trackawesomelist.com/2021/08/24/",
      "date_published": "2021-08-24T09:01:49.000Z",
      "date_modified": "2021-08-24T14:08:56.000Z",
      "content_text": "\n\n### Community / Community Chat Rooms\n\n*   [embedded.rs-wasm-iot](https://t.me/embeddedrust) - English Telegram chat about Rust and WASM for microcontrollers and IoT\n*   [#rp-rs:matrix.org](https://matrix.to/#/#rp-rs:matrix.org) - For discussion of using Embedded Rust on RP2040 based devices",
      "content_html": "<h3><p>Community / Community Chat Rooms</p>\n</h3>\n<ul>\n<li><a href=\"https://t.me/embeddedrust\" rel=\"noopener noreferrer\">embedded.rs-wasm-iot</a> - English Telegram chat about Rust and WASM for microcontrollers and IoT</li>\n</ul>\n\n<ul>\n<li><a href=\"https://matrix.to/#/#rp-rs:matrix.org\" rel=\"noopener noreferrer\">#rp-rs:matrix.org</a> - For discussion of using Embedded Rust on RP2040 based devices</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/08/23/",
      "title": "Awesome Embedded Rust Updates on Aug 23, 2021",
      "_short_title": "Aug 23, 2021",
      "_slug": "2021/08/23/",
      "summary": "2 awesome projects updated on Aug 23, 2021",
      "_filepath": "/content/2021/08/23/README.md",
      "url": "https://www.trackawesomelist.com/2021/08/23/",
      "date_published": "2021-08-23T08:02:31.000Z",
      "date_modified": "2021-08-23T08:02:31.000Z",
      "content_text": "\n\n### Community / Community Chat Rooms\n\n*   [#avr-rust:gitter.im](https://matrix.to/#/#avr-rust_Lobby:gitter.im) - For discussion of using Embedded Rust on AVR devices\n*   [#stm32-rs:matrix.org](https://matrix.to/#/#stm32-rs:matrix.org) - For discussion of using Embedded Rust on STM32 based devices",
      "content_html": "<h3><p>Community / Community Chat Rooms</p>\n</h3>\n<ul>\n<li><a href=\"https://matrix.to/#/#avr-rust_Lobby:gitter.im\" rel=\"noopener noreferrer\">#avr-rust:gitter.im</a> - For discussion of using Embedded Rust on AVR devices</li>\n</ul>\n\n<ul>\n<li><a href=\"https://matrix.to/#/#stm32-rs:matrix.org\" rel=\"noopener noreferrer\">#stm32-rs:matrix.org</a> - For discussion of using Embedded Rust on STM32 based devices</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/04/13/",
      "title": "Awesome Embedded Rust Updates on Apr 13, 2021",
      "_short_title": "Apr 13, 2021",
      "_slug": "2021/04/13/",
      "summary": "1 awesome projects updated on Apr 13, 2021",
      "_filepath": "/content/2021/04/13/README.md",
      "url": "https://www.trackawesomelist.com/2021/04/13/",
      "date_published": "2021-04-13T16:28:33.000Z",
      "date_modified": "2021-04-13T16:28:33.000Z",
      "content_text": "\n\n### HAL implementation crates / GigaDevice\n\n*   [`gd32f1x0-hal`](https://crates.io/crates/gd32f1x0-hal) - [![crates.io](https://img.shields.io/crates/v/gd32f1x0-hal.svg)](https://crates.io/crates/gd32f1x0-hal)\n    *   HAL implementation for GD32F1x0 microcontrollers",
      "content_html": "<h3><p>HAL implementation crates / GigaDevice</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/gd32f1x0-hal\" rel=\"noopener noreferrer\"><code>gd32f1x0-hal</code></a> - <a href=\"https://crates.io/crates/gd32f1x0-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/gd32f1x0-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li>HAL implementation for GD32F1x0 microcontrollers</li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/01/20/",
      "title": "Awesome Embedded Rust Updates on Jan 20, 2021",
      "_short_title": "Jan 20, 2021",
      "_slug": "2021/01/20/",
      "summary": "1 awesome projects updated on Jan 20, 2021",
      "_filepath": "/content/2021/01/20/README.md",
      "url": "https://www.trackawesomelist.com/2021/01/20/",
      "date_published": "2021-01-20T04:06:07.000Z",
      "date_modified": "2021-01-20T04:06:07.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [embassy (⭐8)](https://github.com/akiles/embassy): A set of embedded async tools to make async/await a first-class option for embedded development",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/akiles/embassy\" rel=\"noopener noreferrer\">embassy (⭐8)</a>: A set of embedded async tools to make async/await a first-class option for embedded development</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/01/14/",
      "title": "Awesome Embedded Rust Updates on Jan 14, 2021",
      "_short_title": "Jan 14, 2021",
      "_slug": "2021/01/14/",
      "summary": "1 awesome projects updated on Jan 14, 2021",
      "_filepath": "/content/2021/01/14/README.md",
      "url": "https://www.trackawesomelist.com/2021/01/14/",
      "date_published": "2021-01-14T08:48:43.000Z",
      "date_modified": "2021-01-14T08:48:43.000Z",
      "content_text": "\n\n### Component abstraction crates / Other\n\n*   [`embedded-storage`](https://github.com/rust-embedded-community/embedded-storage): An Embedded Storage Abstraction Layer",
      "content_html": "<h3><p>Component abstraction crates / Other</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/rust-embedded-community/embedded-storage\" rel=\"noopener noreferrer\"><code>embedded-storage</code></a>: An Embedded Storage Abstraction Layer</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/08/31/",
      "title": "Awesome Embedded Rust Updates on Aug 31, 2020",
      "_short_title": "Aug 31, 2020",
      "_slug": "2020/08/31/",
      "summary": "1 awesome projects updated on Aug 31, 2020",
      "_filepath": "/content/2020/08/31/README.md",
      "url": "https://www.trackawesomelist.com/2020/08/31/",
      "date_published": "2020-08-31T23:54:19.000Z",
      "date_modified": "2020-08-31T23:54:19.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [static-bytes (⭐7)](https://github.com/xoac/static-bytes): Help work with buffers without dynamic allocation. Implement traits from bytes crate. [![crate.io](https://img.shields.io/crates/v/static-bytes.svg)](https://crates.io/crates/static-bytes)",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/xoac/static-bytes\" rel=\"noopener noreferrer\">static-bytes (⭐7)</a>: Help work with buffers without dynamic allocation. Implement traits from bytes crate. <a href=\"https://crates.io/crates/static-bytes\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/static-bytes.svg\" alt=\"crate.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/07/31/",
      "title": "Awesome Embedded Rust Updates on Jul 31, 2020",
      "_short_title": "Jul 31, 2020",
      "_slug": "2020/07/31/",
      "summary": "1 awesome projects updated on Jul 31, 2020",
      "_filepath": "/content/2020/07/31/README.md",
      "url": "https://www.trackawesomelist.com/2020/07/31/",
      "date_published": "2020-07-31T15:06:31.000Z",
      "date_modified": "2020-07-31T15:06:31.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [gdbstub](https://crates.io/crates/gdbstub): zero-allocation, pure Rust implementation of the GDB Remote Serial Protocol - [![crates.io](https://img.shields.io/crates/v/gdbstub.svg)](https://crates.io/crates/gdbstub)",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/gdbstub\" rel=\"noopener noreferrer\">gdbstub</a>: zero-allocation, pure Rust implementation of the GDB Remote Serial Protocol - <a href=\"https://crates.io/crates/gdbstub\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/gdbstub.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/06/26/",
      "title": "Awesome Embedded Rust Updates on Jun 26, 2020",
      "_short_title": "Jun 26, 2020",
      "_slug": "2020/06/26/",
      "summary": "1 awesome projects updated on Jun 26, 2020",
      "_filepath": "/content/2020/06/26/README.md",
      "url": "https://www.trackawesomelist.com/2020/06/26/",
      "date_published": "2020-06-26T11:35:13.000Z",
      "date_modified": "2020-06-26T11:35:13.000Z",
      "content_text": "\n\n### Driver crates / WIP\n\n*   [ublox-cellular-rs (⭐23)](https://github.com/BlackbirdHQ/ublox-cellular-rs) - Serial - Cellular driver for the full Ublox cellular serial based family",
      "content_html": "<h3><p>Driver crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/BlackbirdHQ/ublox-cellular-rs\" rel=\"noopener noreferrer\">ublox-cellular-rs (⭐23)</a> - Serial - Cellular driver for the full Ublox cellular serial based family</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/06/12/",
      "title": "Awesome Embedded Rust Updates on Jun 12, 2020",
      "_short_title": "Jun 12, 2020",
      "_slug": "2020/06/12/",
      "summary": "1 awesome projects updated on Jun 12, 2020",
      "_filepath": "/content/2020/06/12/README.md",
      "url": "https://www.trackawesomelist.com/2020/06/12/",
      "date_published": "2020-06-12T16:40:20.000Z",
      "date_modified": "2020-06-12T16:40:20.000Z",
      "content_text": "\n\n### Community / Community Chat Rooms\n\n*   [#rtic-rs:matrix.org](https://matrix.to/#/#rtic-rs:matrix.org) - For discussion of the Real-Time Interrupt-driven Concurrency framework",
      "content_html": "<h3><p>Community / Community Chat Rooms</p>\n</h3>\n<ul>\n<li><a href=\"https://matrix.to/#/#rtic-rs:matrix.org\" rel=\"noopener noreferrer\">#rtic-rs:matrix.org</a> - For discussion of the Real-Time Interrupt-driven Concurrency framework</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/03/30/",
      "title": "Awesome Embedded Rust Updates on Mar 30, 2020",
      "_short_title": "Mar 30, 2020",
      "_slug": "2020/03/30/",
      "summary": "1 awesome projects updated on Mar 30, 2020",
      "_filepath": "/content/2020/03/30/README.md",
      "url": "https://www.trackawesomelist.com/2020/03/30/",
      "date_published": "2020-03-30T17:12:22.000Z",
      "date_modified": "2020-03-30T17:12:22.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [endian\\_codec](https://crates.io/crates/endian_codec): (En/De)code rust types as packed bytes with specific order (endian). Supports derive. - [![crates.io](https://img.shields.io/crates/v/endian_codec.svg)](https://crates.io/crates/endian_codec)",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/endian_codec\" rel=\"noopener noreferrer\">endian_codec</a>: (En/De)code rust types as packed bytes with specific order (endian). Supports derive. - <a href=\"https://crates.io/crates/endian_codec\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/endian_codec.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/02/17/",
      "title": "Awesome Embedded Rust Updates on Feb 17, 2020",
      "_short_title": "Feb 17, 2020",
      "_slug": "2020/02/17/",
      "summary": "5 awesome projects updated on Feb 17, 2020",
      "_filepath": "/content/2020/02/17/README.md",
      "url": "https://www.trackawesomelist.com/2020/02/17/",
      "date_published": "2020-02-17T13:35:02.000Z",
      "date_modified": "2020-02-17T13:35:02.000Z",
      "content_text": "\n\n### Community / Community Chat Rooms\n\n*   You can usually find community members (including embedded WG members) in the official [`#rust-embedded:matrix.org` Matrix room](https://matrix.to/#/#rust-embedded:matrix.org).\n*   [embedded.rs](https://t.me/embedded_rs) - Telegram chat about Rust for microcontrollers in the Russian language.\n*   [#nrf-rs:matrix.org](https://matrix.to/#/#nrf-rs:matrix.org) - For discussion of using Embedded Rust on Nordic Semiconductor devices\n*   [#probe-rs:matrix.org](https://matrix.to/#/#probe-rs:matrix.org) - For discussion of the Probe-rs debugging toolkit\n*   [#rust-embedded-graphics:matrix.org](https://matrix.to/#/#rust-embedded-graphics:matrix.org) - For discussion of the [`embedded-graphics`](https://crates.io/crates/embedded-graphics) crate and ecosystem",
      "content_html": "<h3><p>Community / Community Chat Rooms</p>\n</h3>\n<ul>\n<li>You can usually find community members (including embedded WG members) in the official <a href=\"https://matrix.to/#/#rust-embedded:matrix.org\" rel=\"noopener noreferrer\"><code>#rust-embedded:matrix.org</code> Matrix room</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://t.me/embedded_rs\" rel=\"noopener noreferrer\">embedded.rs</a> - Telegram chat about Rust for microcontrollers in the Russian language.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://matrix.to/#/#nrf-rs:matrix.org\" rel=\"noopener noreferrer\">#nrf-rs:matrix.org</a> - For discussion of using Embedded Rust on Nordic Semiconductor devices</li>\n</ul>\n\n<ul>\n<li><a href=\"https://matrix.to/#/#probe-rs:matrix.org\" rel=\"noopener noreferrer\">#probe-rs:matrix.org</a> - For discussion of the Probe-rs debugging toolkit</li>\n</ul>\n\n<ul>\n<li><a href=\"https://matrix.to/#/#rust-embedded-graphics:matrix.org\" rel=\"noopener noreferrer\">#rust-embedded-graphics:matrix.org</a> - For discussion of the <a href=\"https://crates.io/crates/embedded-graphics\" rel=\"noopener noreferrer\"><code>embedded-graphics</code></a> crate and ecosystem</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/02/07/",
      "title": "Awesome Embedded Rust Updates on Feb 07, 2020",
      "_short_title": "Feb 07, 2020",
      "_slug": "2020/02/07/",
      "summary": "4 awesome projects updated on Feb 07, 2020",
      "_filepath": "/content/2020/02/07/README.md",
      "url": "https://www.trackawesomelist.com/2020/02/07/",
      "date_published": "2020-02-07T15:40:53.000Z",
      "date_modified": "2020-02-07T15:40:53.000Z",
      "content_text": "\n\n### Peripheral Access Crates / Ambiq Micro\n\n*   [`ambiq-apollo1-pac`](https://crates.io/crates/ambiq-apollo1-pac) Peripheral access API for Ambiq Apollo 1 microcontrollers (generated using svd2rust)\n*   [`ambiq-apollo2-pac`](https://crates.io/crates/ambiq-apollo2-pac) Peripheral access API for Ambiq Apollo 2 microcontrollers (generated using svd2rust)\n*   [`ambiq-apollo3-pac`](https://crates.io/crates/ambiq-apollo3-pac) Peripheral access API for Ambiq Apollo 3 microcontrollers (generated using svd2rust)\n*   [`ambiq-apollo3p-pac`](https://crates.io/crates/ambiq-apollo3p-pac) Peripheral access API for Ambiq Apollo 3 Plus microcontrollers (generated using svd2rust)",
      "content_html": "<h3><p>Peripheral Access Crates / Ambiq Micro</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/ambiq-apollo1-pac\" rel=\"noopener noreferrer\"><code>ambiq-apollo1-pac</code></a> Peripheral access API for Ambiq Apollo 1 microcontrollers (generated using svd2rust)</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ambiq-apollo2-pac\" rel=\"noopener noreferrer\"><code>ambiq-apollo2-pac</code></a> Peripheral access API for Ambiq Apollo 2 microcontrollers (generated using svd2rust)</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ambiq-apollo3-pac\" rel=\"noopener noreferrer\"><code>ambiq-apollo3-pac</code></a> Peripheral access API for Ambiq Apollo 3 microcontrollers (generated using svd2rust)</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/ambiq-apollo3p-pac\" rel=\"noopener noreferrer\"><code>ambiq-apollo3p-pac</code></a> Peripheral access API for Ambiq Apollo 3 Plus microcontrollers (generated using svd2rust)</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/01/26/",
      "title": "Awesome Embedded Rust Updates on Jan 26, 2020",
      "_short_title": "Jan 26, 2020",
      "_slug": "2020/01/26/",
      "summary": "3 awesome projects updated on Jan 26, 2020",
      "_filepath": "/content/2020/01/26/README.md",
      "url": "https://www.trackawesomelist.com/2020/01/26/",
      "date_published": "2020-01-26T09:14:02.000Z",
      "date_modified": "2020-01-26T09:14:02.000Z",
      "content_text": "\n\n### HAL implementation crates / GigaDevice\n\n*   [`gd32vf103xx-hal`](https://github.com/riscv-rust/gd32vf103xx-hal) - [![crates.io](https://img.shields.io/crates/v/gd32vf103xx-hal.svg)](https://crates.io/crates/gd32vf103xx-hal)\n    *   HAL for GD32VF103xx microcontrollers\n\n### Board support crates / SeeedStudio\n\n*   [`seedstudio-gd32v`](https://github.com/riscv-rust/seedstudio-gd32v) - Board support crate for the [GD32 RISC-V Dev Board](https://www.seeedstudio.com/SeeedStudio-GD32-RISC-V-Dev-Board-p-4302.html)\n    [![crates.io](https://img.shields.io/crates/v/seedstudio-gd32v.svg)](https://crates.io/crates/seedstudio-gd32v)\n    *   Contains runnable examples for this board\n\n### Board support crates / Sipeed\n\n*   [`longan-nano`](https://github.com/riscv-rust/longan-nano) - Board support package for the [Longan Nano board](https://www.seeedstudio.com/Sipeed-Longan-Nano-RISC-V-GD32VF103CBT6-Development-Board-p-4205.html)\n    [![crates.io](https://img.shields.io/crates/v/longan-nano.svg)](https://crates.io/crates/longan-nano)\n    *   Contains runnable examples for this board",
      "content_html": "<h3><p>HAL implementation crates / GigaDevice</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/riscv-rust/gd32vf103xx-hal\" rel=\"noopener noreferrer\"><code>gd32vf103xx-hal</code></a> - <a href=\"https://crates.io/crates/gd32vf103xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/gd32vf103xx-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li>HAL for GD32VF103xx microcontrollers</li>\n</ul>\n</li>\n</ul>\n<h3><p>Board support crates / SeeedStudio</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/riscv-rust/seedstudio-gd32v\" rel=\"noopener noreferrer\"><code>seedstudio-gd32v</code></a> - Board support crate for the <a href=\"https://www.seeedstudio.com/SeeedStudio-GD32-RISC-V-Dev-Board-p-4302.html\" rel=\"noopener noreferrer\">GD32 RISC-V Dev Board</a>\n<a href=\"https://crates.io/crates/seedstudio-gd32v\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/seedstudio-gd32v.svg\" alt=\"crates.io\" /></a><ul>\n<li>Contains runnable examples for this board</li>\n</ul>\n</li>\n</ul>\n<h3><p>Board support crates / Sipeed</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/riscv-rust/longan-nano\" rel=\"noopener noreferrer\"><code>longan-nano</code></a> - Board support package for the <a href=\"https://www.seeedstudio.com/Sipeed-Longan-Nano-RISC-V-GD32VF103CBT6-Development-Board-p-4205.html\" rel=\"noopener noreferrer\">Longan Nano board</a>\n<a href=\"https://crates.io/crates/longan-nano\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/longan-nano.svg\" alt=\"crates.io\" /></a><ul>\n<li>Contains runnable examples for this board</li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/01/11/",
      "title": "Awesome Embedded Rust Updates on Jan 11, 2020",
      "_short_title": "Jan 11, 2020",
      "_slug": "2020/01/11/",
      "summary": "1 awesome projects updated on Jan 11, 2020",
      "_filepath": "/content/2020/01/11/README.md",
      "url": "https://www.trackawesomelist.com/2020/01/11/",
      "date_published": "2020-01-11T17:52:39.000Z",
      "date_modified": "2020-01-11T17:52:39.000Z",
      "content_text": "\n\n### Peripheral Access Crates / Microchip\n\n*   [`atsamd11`](https://github.com/atsamd-rs/atsamd) Peripheral access API for Microchip (formerly Atmel) SAMD11 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.",
      "content_html": "<h3><p>Peripheral Access Crates / Microchip</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\"><code>atsamd11</code></a> Peripheral access API for Microchip (formerly Atmel) SAMD11 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/01/10/",
      "title": "Awesome Embedded Rust Updates on Jan 10, 2020",
      "_short_title": "Jan 10, 2020",
      "_slug": "2020/01/10/",
      "summary": "29 awesome projects updated on Jan 10, 2020",
      "_filepath": "/content/2020/01/10/README.md",
      "url": "https://www.trackawesomelist.com/2020/01/10/",
      "date_published": "2020-01-10T20:06:25.000Z",
      "date_modified": "2020-01-10T20:06:25.000Z",
      "content_text": "\n\n### HAL implementation crates / OS\n\n*   [`ftdi-embedded-hal`](https://crates.io/crates/ftdi-embedded-hal) for FTDI FTx232H chips connected to Linux systems via USB\n\n### HAL implementation crates / NXP\n\n*   [`lpc8xx-hal`](https://crates.io/crates/lpc8xx-hal) - HAL for lpc82x and lpc845 - [![crates.io](https://img.shields.io/crates/v/lpc8xx-hal.svg)](https://crates.io/crates/lpc8xx-hal)\n\n### Component abstraction crates / Other\n\n*   [`smart-leds`](https://github.com/smart-leds-rs): Support for addressable LEDs including WS2812 and APA102\n\n### Driver crates / Other\n\n*   [MMA7660FC](https://crates.io/crates/mma7660fc) - I2C - 3-axis accelerometer - [Intro blog post](https://rahul-thakoor.github.io/an-i2c-rust-driver-for-mma7660fc-based-3-axis-digital-accelerometer/)\n\n### Driver crates / WIP\n\n*   [AFE4400 (⭐6)](https://github.com/ReeceStevens/afe4400) - SPI - Pulse oximeter\n*   [AS5048A (⭐1)](https://github.com/uwearzt/as5048a) - SPI - AMS AS5048A Magnetic Rotary Encoder\n*   [AXP209 (⭐5)](https://github.com/RandomInsano/axp209-rs) - I2C - Power management unit\n*   [BH1750 (⭐2)](https://github.com/wose/bh1750) - I2C - ambient light sensor (lux meter)\n*   [embedded-nrf24l01](https://crates.io/crates/embedded-nrf24l01) - SPI+GPIO - 2.4 GHz radio\n*   [HC-SR04 (⭐17)](https://github.com/nordmoen/hc-sr04) - DIO - Ultrasound sensor\n*   [HD44780 (⭐12)](http://github.com/kunerd/clerk) - Parallel port - LCD controller\n*   [iAQ-Core (⭐2)](https://github.com/eldruin/iaq-core-rs) - I2C - iAQ-Core-C/iAQ-Core-P Gas and VOC sensor driver for monitoring indoor air quality.\n*   [ILI9341 (⭐64)](https://github.com/yuri91/ili9341-rs) - SPI - TFT LCD display\n*   [LS010B7DH01 (⭐6)](https://github.com/byronwasti/ls010b7dh01) - SPI - Memory LCD\n*   [MAG3110 (⭐1)](https://github.com/therealprof/mag3110) - I2C - Magnetometer\n*   [MFRC522 (⭐31)](https://github.com/japaric/mfrc522) - SPI - RFID tag reader/writer\n*   [motor-driver (⭐11)](https://github.com/japaric/motor-driver) - Motor drivers: L298N, TB6612FNG, etc.\n*   [NRF24L01 (⭐28)](https://github.com/maikelwever/nrf24l01) - SPI - 2.4 GHz wireless communication\n*   [PCD8544 (⭐0)](https://github.com/pcein/pcd8544) - SPI - 48x84 pixels matrix LCD controller\n*   [RFM69 (⭐12)](https://github.com/lolzballs/rfm69) - SPI - ISM radio transceiver\n*   [RN2xx3 (⭐5)](https://github.com/dbrgn/rn2xx3-rs/) - Serial - A driver for the RN2483 / RN2903 LoRaWAN modems by Microchip\n*   [SHT2x (⭐2)](https://github.com/dbrgn/sht2x-rs) - I2C - temperature / humidity sensors\n*   [SHT3x (⭐9)](https://github.com/miek/sht3x-rs) - I2C - Temperature / humidity sensors\n*   [SI5351 (⭐3)](https://github.com/ilya-epifanov/si5351) - I2C - clock generator\n*   [SI7021 (⭐5)](https://github.com/wose/si7021) - I2C - Humidity and temperature sensor\n*   [stm32-eth (⭐156)](https://github.com/stm32-rs/stm32-eth) - MCU - Ethernet\n*   [SX1278 (⭐11)](https://github.com/susu/sx1278) - SPI - Long range (LoRa) transceiver\n*   [SX1509 (⭐1)](https://github.com/wez/sx1509) - I2C - IO Expander / Keypad driver\n\n### no-std crates / WIP\n\n*   [gcode (⭐95)](https://github.com/Michael-F-Bryan/gcode-rs): A gcode parser for no-std applications - [![crates.io](https://img.shields.io/crates/v/gcode.svg)](https://crates.io/crates/gcode)",
      "content_html": "<h3><p>HAL implementation crates / OS</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/ftdi-embedded-hal\" rel=\"noopener noreferrer\"><code>ftdi-embedded-hal</code></a> for FTDI FTx232H chips connected to Linux systems via USB</li>\n</ul>\n<h3><p>HAL implementation crates / NXP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/lpc8xx-hal\" rel=\"noopener noreferrer\"><code>lpc8xx-hal</code></a> - HAL for lpc82x and lpc845 - <a href=\"https://crates.io/crates/lpc8xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lpc8xx-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n<h3><p>Component abstraction crates / Other</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/smart-leds-rs\" rel=\"noopener noreferrer\"><code>smart-leds</code></a>: Support for addressable LEDs including WS2812 and APA102</li>\n</ul>\n<h3><p>Driver crates / Other</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/mma7660fc\" rel=\"noopener noreferrer\">MMA7660FC</a> - I2C - 3-axis accelerometer - <a href=\"https://rahul-thakoor.github.io/an-i2c-rust-driver-for-mma7660fc-based-3-axis-digital-accelerometer/\" rel=\"noopener noreferrer\">Intro blog post</a></li>\n</ul>\n<h3><p>Driver crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ReeceStevens/afe4400\" rel=\"noopener noreferrer\">AFE4400 (⭐6)</a> - SPI - Pulse oximeter</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/uwearzt/as5048a\" rel=\"noopener noreferrer\">AS5048A (⭐1)</a> - SPI - AMS AS5048A Magnetic Rotary Encoder</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/RandomInsano/axp209-rs\" rel=\"noopener noreferrer\">AXP209 (⭐5)</a> - I2C - Power management unit</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/wose/bh1750\" rel=\"noopener noreferrer\">BH1750 (⭐2)</a> - I2C - ambient light sensor (lux meter)</li>\n</ul>\n\n<ul>\n<li><a href=\"https://crates.io/crates/embedded-nrf24l01\" rel=\"noopener noreferrer\">embedded-nrf24l01</a> - SPI+GPIO - 2.4 GHz radio</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/nordmoen/hc-sr04\" rel=\"noopener noreferrer\">HC-SR04 (⭐17)</a> - DIO - Ultrasound sensor</li>\n</ul>\n\n<ul>\n<li><a href=\"http://github.com/kunerd/clerk\" rel=\"noopener noreferrer\">HD44780 (⭐12)</a> - Parallel port - LCD controller</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/eldruin/iaq-core-rs\" rel=\"noopener noreferrer\">iAQ-Core (⭐2)</a> - I2C - iAQ-Core-C/iAQ-Core-P Gas and VOC sensor driver for monitoring indoor air quality.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/yuri91/ili9341-rs\" rel=\"noopener noreferrer\">ILI9341 (⭐64)</a> - SPI - TFT LCD display</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/byronwasti/ls010b7dh01\" rel=\"noopener noreferrer\">LS010B7DH01 (⭐6)</a> - SPI - Memory LCD</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/therealprof/mag3110\" rel=\"noopener noreferrer\">MAG3110 (⭐1)</a> - I2C - Magnetometer</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/japaric/mfrc522\" rel=\"noopener noreferrer\">MFRC522 (⭐31)</a> - SPI - RFID tag reader/writer</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/japaric/motor-driver\" rel=\"noopener noreferrer\">motor-driver (⭐11)</a> - Motor drivers: L298N, TB6612FNG, etc.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/maikelwever/nrf24l01\" rel=\"noopener noreferrer\">NRF24L01 (⭐28)</a> - SPI - 2.4 GHz wireless communication</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/pcein/pcd8544\" rel=\"noopener noreferrer\">PCD8544 (⭐0)</a> - SPI - 48x84 pixels matrix LCD controller</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/lolzballs/rfm69\" rel=\"noopener noreferrer\">RFM69 (⭐12)</a> - SPI - ISM radio transceiver</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dbrgn/rn2xx3-rs/\" rel=\"noopener noreferrer\">RN2xx3 (⭐5)</a> - Serial - A driver for the RN2483 / RN2903 LoRaWAN modems by Microchip</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dbrgn/sht2x-rs\" rel=\"noopener noreferrer\">SHT2x (⭐2)</a> - I2C - temperature / humidity sensors</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/miek/sht3x-rs\" rel=\"noopener noreferrer\">SHT3x (⭐9)</a> - I2C - Temperature / humidity sensors</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ilya-epifanov/si5351\" rel=\"noopener noreferrer\">SI5351 (⭐3)</a> - I2C - clock generator</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/wose/si7021\" rel=\"noopener noreferrer\">SI7021 (⭐5)</a> - I2C - Humidity and temperature sensor</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/stm32-rs/stm32-eth\" rel=\"noopener noreferrer\">stm32-eth (⭐156)</a> - MCU - Ethernet</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/susu/sx1278\" rel=\"noopener noreferrer\">SX1278 (⭐11)</a> - SPI - Long range (LoRa) transceiver</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/wez/sx1509\" rel=\"noopener noreferrer\">SX1509 (⭐1)</a> - I2C - IO Expander / Keypad driver</li>\n</ul>\n<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Michael-F-Bryan/gcode-rs\" rel=\"noopener noreferrer\">gcode (⭐95)</a>: A gcode parser for no-std applications - <a href=\"https://crates.io/crates/gcode\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/gcode.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/12/29/",
      "title": "Awesome Embedded Rust Updates on Dec 29, 2019",
      "_short_title": "Dec 29, 2019",
      "_slug": "2019/12/29/",
      "summary": "1 awesome projects updated on Dec 29, 2019",
      "_filepath": "/content/2019/12/29/README.md",
      "url": "https://www.trackawesomelist.com/2019/12/29/",
      "date_published": "2019-12-29T10:41:02.000Z",
      "date_modified": "2019-12-29T10:41:02.000Z",
      "content_text": "\n\n### Peripheral Access Crates / Microchip\n\n*   [`atsame54`](https://github.com/atsamd-rs/atsamd) Peripheral access API for Microchip (formerly Atmel) SAME54 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.",
      "content_html": "<h3><p>Peripheral Access Crates / Microchip</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\"><code>atsame54</code></a> Peripheral access API for Microchip (formerly Atmel) SAME54 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/10/11/",
      "title": "Awesome Embedded Rust Updates on Oct 11, 2019",
      "_short_title": "Oct 11, 2019",
      "_slug": "2019/10/11/",
      "summary": "1 awesome projects updated on Oct 11, 2019",
      "_filepath": "/content/2019/10/11/README.md",
      "url": "https://www.trackawesomelist.com/2019/10/11/",
      "date_published": "2019-10-11T12:57:27.000Z",
      "date_modified": "2019-10-11T12:57:27.000Z",
      "content_text": "\n\n### HAL implementation crates / GigaDevice\n\n*   [`gd32vf103-hal`](https://github.com/luojia65/gd32vf103-hal) - [![crates.io](https://img.shields.io/crates/v/gd32vf103-hal.svg)](https://crates.io/crates/gd32vf103-hal)\n    *   (WIP) Hardware abstract layer (HAL) for the GD32VF103 RISC-V microcontroller",
      "content_html": "<h3><p>HAL implementation crates / GigaDevice</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/luojia65/gd32vf103-hal\" rel=\"noopener noreferrer\"><code>gd32vf103-hal</code></a> - <a href=\"https://crates.io/crates/gd32vf103-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/gd32vf103-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li>(WIP) Hardware abstract layer (HAL) for the GD32VF103 RISC-V microcontroller</li>\n</ul>\n</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/09/04/",
      "title": "Awesome Embedded Rust Updates on Sep 04, 2019",
      "_short_title": "Sep 04, 2019",
      "_slug": "2019/09/04/",
      "summary": "2 awesome projects updated on Sep 04, 2019",
      "_filepath": "/content/2019/09/04/README.md",
      "url": "https://www.trackawesomelist.com/2019/09/04/",
      "date_published": "2019-09-04T12:32:22.000Z",
      "date_modified": "2019-09-04T12:32:22.000Z",
      "content_text": "\n\n### HAL implementation crates / OS\n\n*   [`bitbang-hal`](https://crates.io/crates/bitbang-hal) software protocol implementations for microcontrollers with digital::OutputPin and digital::InputPin\n\n### HAL implementation crates / NXP\n\n*   [`lpc55s6x-hal`](https://crates.io/crates/lpc55s6x-hal) - [![crates.io](https://img.shields.io/crates/v/lpc55s6x-hal.svg)](https://crates.io/crates/lpc55s6x-hal)",
      "content_html": "<h3><p>HAL implementation crates / OS</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/bitbang-hal\" rel=\"noopener noreferrer\"><code>bitbang-hal</code></a> software protocol implementations for microcontrollers with digital::OutputPin and digital::InputPin</li>\n</ul>\n<h3><p>HAL implementation crates / NXP</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/lpc55s6x-hal\" rel=\"noopener noreferrer\"><code>lpc55s6x-hal</code></a> - <a href=\"https://crates.io/crates/lpc55s6x-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/lpc55s6x-hal.svg\" alt=\"crates.io\" /></a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/06/25/",
      "title": "Awesome Embedded Rust Updates on Jun 25, 2019",
      "_short_title": "Jun 25, 2019",
      "_slug": "2019/06/25/",
      "summary": "2 awesome projects updated on Jun 25, 2019",
      "_filepath": "/content/2019/06/25/README.md",
      "url": "https://www.trackawesomelist.com/2019/06/25/",
      "date_published": "2019-06-25T19:39:01.000Z",
      "date_modified": "2019-06-25T19:56:26.000Z",
      "content_text": "\n\n### Peripheral Access Crates / Microchip\n\n*   [`avr-device`](https://github.com/Rahix/avr-device) Peripheral access API for Microchip (formerly Atmel) AVR microcontroller family.\n\n### Board support crates / Arduino\n\n*   [`avr-hal`](https://github.com/Rahix/avr-hal) - Board support crate for several AVR-based boards including the Arduino Uno and the Arduino Leonardo",
      "content_html": "<h3><p>Peripheral Access Crates / Microchip</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Rahix/avr-device\" rel=\"noopener noreferrer\"><code>avr-device</code></a> Peripheral access API for Microchip (formerly Atmel) AVR microcontroller family.</li>\n</ul>\n<h3><p>Board support crates / Arduino</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Rahix/avr-hal\" rel=\"noopener noreferrer\"><code>avr-hal</code></a> - Board support crate for several AVR-based boards including the Arduino Uno and the Arduino Leonardo</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/05/04/",
      "title": "Awesome Embedded Rust Updates on May 04, 2019",
      "_short_title": "May 04, 2019",
      "_slug": "2019/05/04/",
      "summary": "2 awesome projects updated on May 04, 2019",
      "_filepath": "/content/2019/05/04/README.md",
      "url": "https://www.trackawesomelist.com/2019/05/04/",
      "date_published": "2019-05-04T03:36:52.000Z",
      "date_modified": "2019-05-04T03:36:52.000Z",
      "content_text": "\n\n### Peripheral Access Crates / Microchip\n\n*   [`atsamd21`](https://github.com/atsamd-rs/atsamd) Peripheral access API for Microchip (formerly Atmel) SAMD21 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.\n*   [`atsamd51`](https://github.com/atsamd-rs/atsamd) Peripheral access API for Microchip (formerly Atmel) SAMD51 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.",
      "content_html": "<h3><p>Peripheral Access Crates / Microchip</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\"><code>atsamd21</code></a> Peripheral access API for Microchip (formerly Atmel) SAMD21 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/atsamd-rs/atsamd\" rel=\"noopener noreferrer\"><code>atsamd51</code></a> Peripheral access API for Microchip (formerly Atmel) SAMD51 microcontrollers.  This git repo hosts both the peripheral access crate and the hal.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/01/26/",
      "title": "Awesome Embedded Rust Updates on Jan 26, 2019",
      "_short_title": "Jan 26, 2019",
      "_slug": "2019/01/26/",
      "summary": "1 awesome projects updated on Jan 26, 2019",
      "_filepath": "/content/2019/01/26/README.md",
      "url": "https://www.trackawesomelist.com/2019/01/26/",
      "date_published": "2019-01-26T01:01:03.000Z",
      "date_modified": "2019-01-26T01:01:03.000Z",
      "content_text": "\n\n### Community\n\n*   [Embedded WG (⭐2k)](https://github.com/rust-embedded/wg/), including newsletters with progress updates.",
      "content_html": "<h3><p>Community</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/rust-embedded/wg/\" rel=\"noopener noreferrer\">Embedded WG (⭐2k)</a>, including newsletters with progress updates.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/11/08/",
      "title": "Awesome Embedded Rust Updates on Nov 08, 2018",
      "_short_title": "Nov 08, 2018",
      "_slug": "2018/11/08/",
      "summary": "1 awesome projects updated on Nov 08, 2018",
      "_filepath": "/content/2018/11/08/README.md",
      "url": "https://www.trackawesomelist.com/2018/11/08/",
      "date_published": "2018-11-08T20:44:30.000Z",
      "date_modified": "2018-11-08T20:44:30.000Z",
      "content_text": "\n\n### Board support crates / Sony\n\n*   [`prussia`](https://github.com/ZirconiumX/prussia) - SDK for the PlayStation 2.",
      "content_html": "<h3><p>Board support crates / Sony</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ZirconiumX/prussia\" rel=\"noopener noreferrer\"><code>prussia</code></a> - SDK for the PlayStation 2.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/09/27/",
      "title": "Awesome Embedded Rust Updates on Sep 27, 2018",
      "_short_title": "Sep 27, 2018",
      "_slug": "2018/09/27/",
      "summary": "1 awesome projects updated on Sep 27, 2018",
      "_filepath": "/content/2018/09/27/README.md",
      "url": "https://www.trackawesomelist.com/2018/09/27/",
      "date_published": "2018-09-27T17:00:05.000Z",
      "date_modified": "2018-09-27T17:00:05.000Z",
      "content_text": "\n\n### no-std crates / WIP\n\n*   [OxCC (⭐21)](https://github.com/jonlamb-gh/oxcc): A port of Open Source Car Control written in Rust",
      "content_html": "<h3><p>no-std crates / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/jonlamb-gh/oxcc\" rel=\"noopener noreferrer\">OxCC (⭐21)</a>: A port of Open Source Car Control written in Rust</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/08/01/",
      "title": "Awesome Embedded Rust Updates on Aug 01, 2018",
      "_short_title": "Aug 01, 2018",
      "_slug": "2018/08/01/",
      "summary": "1 awesome projects updated on Aug 01, 2018",
      "_filepath": "/content/2018/08/01/README.md",
      "url": "https://www.trackawesomelist.com/2018/08/01/",
      "date_published": "2018-08-01T12:03:06.000Z",
      "date_modified": "2018-08-01T12:03:06.000Z",
      "content_text": "\n\n### Board support crates / Special Purpose\n\n*   [`betafpv-f3`](https://github.com/JoshMcguigan/betafpv-f3) - For the BetaFPV F3 drone flight controller",
      "content_html": "<h3><p>Board support crates / Special Purpose</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/JoshMcguigan/betafpv-f3\" rel=\"noopener noreferrer\"><code>betafpv-f3</code></a> - For the BetaFPV F3 drone flight controller</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/07/09/",
      "title": "Awesome Embedded Rust Updates on Jul 09, 2018",
      "_short_title": "Jul 09, 2018",
      "_slug": "2018/07/09/",
      "summary": "1 awesome projects updated on Jul 09, 2018",
      "_filepath": "/content/2018/07/09/README.md",
      "url": "https://www.trackawesomelist.com/2018/07/09/",
      "date_published": "2018-07-09T16:40:11.000Z",
      "date_modified": "2018-07-09T16:40:11.000Z",
      "content_text": "\n\n### Board support crates / Texas Instruments\n\n*   [`monotron`](https://github.com/thejpster/monotron) - A 1980s home-computer style application for the Texas Instruments Stellaris Launchpad. PS/2 keyboard input, text output on a bit-bashed 800x600 VGA signal. Uses [menu (⭐57)](https://github.com/thejpster/menu), [vga-framebuffer (⭐31)](https://github.com/thejpster/vga-framebuffer-rs) and [pc-keyboard (⭐111)](https://github.com/thejpster/pc-keyboard).",
      "content_html": "<h3><p>Board support crates / Texas Instruments</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/thejpster/monotron\" rel=\"noopener noreferrer\"><code>monotron</code></a> - A 1980s home-computer style application for the Texas Instruments Stellaris Launchpad. PS/2 keyboard input, text output on a bit-bashed 800x600 VGA signal. Uses <a href=\"https://github.com/thejpster/menu\" rel=\"noopener noreferrer\">menu (⭐57)</a>, <a href=\"https://github.com/thejpster/vga-framebuffer-rs\" rel=\"noopener noreferrer\">vga-framebuffer (⭐31)</a> and <a href=\"https://github.com/thejpster/pc-keyboard\" rel=\"noopener noreferrer\">pc-keyboard (⭐111)</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/05/02/",
      "title": "Awesome Embedded Rust Updates on May 02, 2018",
      "_short_title": "May 02, 2018",
      "_slug": "2018/05/02/",
      "summary": "1 awesome projects updated on May 02, 2018",
      "_filepath": "/content/2018/05/02/README.md",
      "url": "https://www.trackawesomelist.com/2018/05/02/",
      "date_published": "2018-05-02T14:27:18.000Z",
      "date_modified": "2018-05-02T14:27:18.000Z",
      "content_text": "\n\n### Firmware projects / WIP\n\n*   [anne-key (⭐567)](https://github.com/ah-/anne-key): Alternate keyboard firmware for the Obins ANNE Pro",
      "content_html": "<h3><p>Firmware projects / WIP</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ah-/anne-key\" rel=\"noopener noreferrer\">anne-key (⭐567)</a>: Alternate keyboard firmware for the Obins ANNE Pro</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2018/04/01/",
      "title": "Awesome Embedded Rust Updates on Apr 01, 2018",
      "_short_title": "Apr 01, 2018",
      "_slug": "2018/04/01/",
      "summary": "3 awesome projects updated on Apr 01, 2018",
      "_filepath": "/content/2018/04/01/README.md",
      "url": "https://www.trackawesomelist.com/2018/04/01/",
      "date_published": "2018-04-01T21:17:28.000Z",
      "date_modified": "2018-04-01T22:49:14.000Z",
      "content_text": "\n\n### HAL implementation crates / STMicroelectronics\n\n*   [`stm32f0xx-hal`](https://crates.io/crates/stm32f0xx-hal) - [![crates.io](https://img.shields.io/crates/v/stm32f0xx-hal.svg)](https://crates.io/crates/stm32f0xx-hal)\n    *   Has examples that can run on boards like the [Nucleo-F042K6](http://www.st.com/en/evaluation-tools/nucleo-f042k6.html) and similar boards\n\n### Board support crates / STMicroelectronics\n\n*   [`nucleo-f042k6`](https://github.com/therealprof/nucleo-f042k6.git) - [Nucleo-F042K6](http://www.st.com/en/evaluation-tools/nucleo-f042k6.html)\n*   [`nucleo-f103rb`](https://github.com/therealprof/nucleo-f103rb.git) - [Nucleo-F103RB](http://www.st.com/en/evaluation-tools/nucleo-f103rb.html)",
      "content_html": "<h3><p>HAL implementation crates / STMicroelectronics</p>\n</h3>\n<ul>\n<li><a href=\"https://crates.io/crates/stm32f0xx-hal\" rel=\"noopener noreferrer\"><code>stm32f0xx-hal</code></a> - <a href=\"https://crates.io/crates/stm32f0xx-hal\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/crates/v/stm32f0xx-hal.svg\" alt=\"crates.io\" /></a><ul>\n<li>Has examples that can run on boards like the <a href=\"http://www.st.com/en/evaluation-tools/nucleo-f042k6.html\" rel=\"noopener noreferrer\">Nucleo-F042K6</a> and similar boards</li>\n</ul>\n</li>\n</ul>\n<h3><p>Board support crates / STMicroelectronics</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/therealprof/nucleo-f042k6.git\" rel=\"noopener noreferrer\"><code>nucleo-f042k6</code></a> - <a href=\"http://www.st.com/en/evaluation-tools/nucleo-f042k6.html\" rel=\"noopener noreferrer\">Nucleo-F042K6</a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/therealprof/nucleo-f103rb.git\" rel=\"noopener noreferrer\"><code>nucleo-f103rb</code></a> - <a href=\"http://www.st.com/en/evaluation-tools/nucleo-f103rb.html\" rel=\"noopener noreferrer\">Nucleo-F103RB</a></li>\n</ul>\n"
    }
  ]
}
