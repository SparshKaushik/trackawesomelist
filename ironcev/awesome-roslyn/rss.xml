<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Track Awesome Roslyn Updates Daily</title>
  <id>https://www.trackawesomelist.com/ironcev/awesome-roslyn/feed.xml</id>
  <updated>2021-03-09T20:43:11.000Z</updated>
  <link rel="self" type="application/atom+xml" href="https://www.trackawesomelist.com/ironcev/awesome-roslyn/feed.xml"/>
  <link rel="alternate" type="application/json" href="https://www.trackawesomelist.com/ironcev/awesome-roslyn/feed.json"/>
  <link rel="alternate" type="text/html" href="https://www.trackawesomelist.com/ironcev/awesome-roslyn/"/>
  <generator uri="https://github.com/bcomnes/jsonfeed-to-atom#readme" version="1.2.2">jsonfeed-to-atom</generator>
  <icon>https://www.trackawesomelist.com/favicon.ico</icon>
  <logo>https://www.trackawesomelist.com/icon.png</logo>
  <subtitle>Curated list of awesome Roslyn books, tutorials, open-source projects, analyzers, code fixes, refactorings, and source generators</subtitle>
  <entry>
    <id>https://www.trackawesomelist.com/2021/03/09/</id>
    <title>Awesome Roslyn Updates on Mar 09, 2021</title>
    <updated>2021-03-09T20:43:11.000Z</updated>
    <published>2021-03-09T20:43:11.000Z</published>
    <content type="html"><![CDATA[<h3><p>Open Source Analyzers, Code Fixes, and Refactorings</p>
</h3>
<ul>
<li><a href="https://github.com/tom-englert/Nullable.Extended" rel="noopener noreferrer">Nullable.Extended (⭐51)</a> - Roslyn tools and analyzers to improve the experience when coding with nullable reference types.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2021/03/09/"/>
    <summary>1 awesome projects updated on Mar 09, 2021</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2020/11/19/</id>
    <title>Awesome Roslyn Updates on Nov 19, 2020</title>
    <updated>2020-11-19T19:15:30.000Z</updated>
    <published>2020-11-19T19:15:30.000Z</published>
    <content type="html"><![CDATA[<h3><p>Source Generators</p>
</h3>
<ul>
<li><a href="https://github.com/diegofrata/Generator.Equals" rel="noopener noreferrer">Generator.Equals (⭐158)</a> - Automatically implements equality and hashing for classes and records. Supports different comparison strategies. Offers similar functionality like IL weaving-based <a href="https://github.com/Fody/Equals" rel="noopener noreferrer">Equals.Fody (⭐111)</a>.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2020/11/19/"/>
    <summary>1 awesome projects updated on Nov 19, 2020</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2020/10/30/</id>
    <title>Awesome Roslyn Updates on Oct 30, 2020</title>
    <updated>2020-10-30T16:26:19.000Z</updated>
    <published>2020-10-30T16:26:19.000Z</published>
    <content type="html"><![CDATA[<h3><p>Blog Posts and Articles</p>
</h3>
<ul>
<li><a href="https://medium.com/microsoft-open-source-stories/how-microsoft-rewrote-its-c-compiler-in-c-and-made-it-open-source-4ebed5646f98" rel="noopener noreferrer">How Microsoft rewrote its C# compiler in C# and made it open source</a> - Roslyn's journey, presented by Mads Torgersen, the lead designer of C#. Inspiring story on how Roslyn project started and why, and what it took to make it open source.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2020/10/30/"/>
    <summary>1 awesome projects updated on Oct 30, 2020</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2020/10/21/</id>
    <title>Awesome Roslyn Updates on Oct 21, 2020</title>
    <updated>2020-10-21T18:17:19.000Z</updated>
    <published>2020-10-21T06:05:05.000Z</published>
    <content type="html"><![CDATA[<h3><p>Open Source Analyzers, Code Fixes, and Refactorings</p>
</h3>
<ul>
<li><a href="https://github.com/cezarypiatek/MappingGenerator" rel="noopener noreferrer">Mapping Generator (⭐1k)</a> - Code fix that generates arbitrary complex object-object mappings. It recognizes out of the box a large number of scenarios where mappings are used. A design-time alternative to <a href="https://automapper.org/" rel="noopener noreferrer">AutoMapper</a>.</li>
</ul>
<h3><p>Source Generators</p>
</h3>
<ul>
<li><a href="https://github.com/martinothamar/WrapperValueObject" rel="noopener noreferrer">WrapperValueObject (⭐53)</a> - Creates boilerplate free wrappers around types. Especially useful for creating <a href="https://andrewlock.net/series/using-strongly-typed-entity-ids-to-avoid-primitive-obsession/" rel="noopener noreferrer">strongly typed wrappers around primitive types</a>.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2020/10/21/"/>
    <summary>2 awesome projects updated on Oct 21, 2020</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2020/10/16/</id>
    <title>Awesome Roslyn Updates on Oct 16, 2020</title>
    <updated>2020-10-16T17:06:05.000Z</updated>
    <published>2020-10-16T17:06:05.000Z</published>
    <content type="html"><![CDATA[<h3><p>Tutorials</p>
</h3>
<ul>
<li><a href="https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/" rel="noopener noreferrer">Introducing C# Source Generators</a> - Original announcement of the C# 9.0 Source Generators feature. Explains what source generators are, in which scenarios they are useful, and shows how to write a simple source generator.</li>
</ul>

<ul>
<li><a href="https://devblogs.microsoft.com/dotnet/new-c-source-generator-samples/" rel="noopener noreferrer">New C# Source Generator Samples</a> - Samples on how to write a non-trivial code generator driven by additional, non-code files like CSV files or <a href="https://mustache.github.io/" rel="noopener noreferrer">Mustache</a> templates.</li>
</ul>

<ul>
<li><a href="https://github.com/amis92/csharp-source-generators" rel="noopener noreferrer">C# Source Generators (⭐2.2k)</a> - Comprehensive list of additional learning sources, samples, and experimental and productive source generators. A perfect reference once you grasp the basics.</li>
</ul>
<h3><p>Source Generators</p>
</h3>
<ul>
<li><a href="https://github.com/lsoft/DpdtInject" rel="noopener noreferrer">DpDtInject (⭐34)</a> - Proof-of-concept of a dependency injection container that transfers huge piece of resolving logic to the compilation stage. Offers additional compile-time safety and fast runtime resolution.</li>
</ul>

<ul>
<li><a href="https://github.com/trampster/JsonSrcGen" rel="noopener noreferrer">JsonSrcGen (⭐150)</a> - Reflection-free JSON serializer. Allows extremely fast JSON processing by generating reflection-free serializers at the compile time.</li>
</ul>

<ul>
<li><a href="https://sourcegen.dev/" rel="noopener noreferrer">Source Generator Playground</a> - Online application that lets you experiment with source generators. Perfect for learning and testing your ideas. Write your own source generator or learn from built-in examples and see the generated output.</li>
</ul>

<ul>
<li><a href="https://github.com/YairHalberstadt/stronginject" rel="noopener noreferrer">StrongInject (⭐858)</a> - Compile-time dependency injection container. Compile-time checked, reflection-free and runtime code generation free, thus fast and <a href="https://devblogs.microsoft.com/dotnet/app-trimming-in-net-5/" rel="noopener noreferrer">app-trimming</a>-friendly.</li>
</ul>

<ul>
<li><a href="https://github.com/RudolfKurka/StructPacker" rel="noopener noreferrer">StructPacker (⭐78)</a> - Low-level, lightweight and performance-focused serializer for C# struct types. Auto-generates C# serialization code to achieve peak runtime performance and efficiency.</li>
</ul>

<ul>
<li><a href="https://github.com/wieslawsoltes/SourceGenerators" rel="noopener noreferrer">Svg to C# Source Generators (⭐3)</a> - SVG to C# compiler. Compiles SVG drawing markup to C# using <a href="https://github.com/mono/SkiaSharp" rel="noopener noreferrer">SkiaSharp (⭐5k)</a> as rendering engine.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2020/10/16/"/>
    <summary>9 awesome projects updated on Oct 16, 2020</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2020/09/09/</id>
    <title>Awesome Roslyn Updates on Sep 09, 2020</title>
    <updated>2020-09-09T19:05:04.000Z</updated>
    <published>2020-09-09T19:05:04.000Z</published>
    <content type="html"><![CDATA[<h3><p>Tutorials</p>
</h3>
<ul>
<li><a href="https://github.com/dotnet/roslyn/blob/master/docs/wiki/How-To-Write-a-C%23-Analyzer-and-Code-Fix.md" rel="noopener noreferrer">How To Write a C# Analyzer and Code Fix (⭐20k)</a> - The mother of all Roslyn tutorials :-) A realistic step-by-step introduction to syntax and semantic analysis as well as the syntax transformation.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2020/09/09/"/>
    <summary>1 awesome projects updated on Sep 09, 2020</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2020/03/13/</id>
    <title>Awesome Roslyn Updates on Mar 13, 2020</title>
    <updated>2020-03-13T08:18:54.000Z</updated>
    <published>2020-03-13T08:18:54.000Z</published>
    <content type="html"><![CDATA[<h3><p>Open Source Analyzers, Code Fixes, and Refactorings</p>
</h3>
<ul>
<li><a href="https://github.com/SergeyTeplyakov/ErrorProne.NET" rel="noopener noreferrer">ErrorProne.NET (⭐1.1k)</a> - Set of analyzers and code fixes focusing on the correctness and performance of C# programs. Inspired with Google's <a href="https://github.com/google/error-prone" rel="noopener noreferrer">Error Prone (⭐7k)</a>.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2020/03/13/"/>
    <summary>1 awesome projects updated on Mar 13, 2020</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2019/11/13/</id>
    <title>Awesome Roslyn Updates on Nov 13, 2019</title>
    <updated>2019-11-13T08:34:20.000Z</updated>
    <published>2019-11-13T08:34:20.000Z</published>
    <content type="html"><![CDATA[<h3><p>Libraries and Frameworks for Testing Analyzers, Code Fixes, and Refactorings</p>
</h3>
<ul>
<li><a href="https://github.com/dotnet/roslyn-sdk/tree/master/src/Microsoft.CodeAnalysis.Testing" rel="noopener noreferrer">Microsoft.CodeAnalysis.Testing (⭐533)</a> - Library for testing analyzers and code fixes with NUnit, xUnit and MSTest frameworks. A part of <a href="https://github.com/dotnet/roslyn-sdk" rel="noopener noreferrer">Roslyn SDK (⭐533)</a>.</li>
</ul>

<ul>
<li><a href="https://github.com/cezarypiatek/RoslynTestKit" rel="noopener noreferrer">RoslynTestKit (⭐25)</a> - Lightweight framework for writing unit tests for analyzers, code fixes, refactorings, and completion providers. It's unit testing framework agnostic.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2019/11/13/"/>
    <summary>2 awesome projects updated on Nov 13, 2019</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2019/09/24/</id>
    <title>Awesome Roslyn Updates on Sep 24, 2019</title>
    <updated>2019-09-24T09:39:39.000Z</updated>
    <published>2019-09-24T09:39:39.000Z</published>
    <content type="html"><![CDATA[<h3><p>Open Source Projects</p>
</h3>
<ul>
<li><a href="https://github.com/dotnetcore/FlubuCore" rel="noopener noreferrer">FlubuCore (⭐916)</a> - Cross platform build automation tool for building projects and executing deployment scripts using C# code.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2019/09/24/"/>
    <summary>1 awesome projects updated on Sep 24, 2019</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2019/03/01/</id>
    <title>Awesome Roslyn Updates on Mar 01, 2019</title>
    <updated>2019-03-01T21:21:17.000Z</updated>
    <published>2019-03-01T21:21:17.000Z</published>
    <content type="html"><![CDATA[<h3><p>Books</p>
</h3>
<ul>
<li><a href="https://www.syncfusion.com/ebooks/roslyn" rel="noopener noreferrer">Roslyn Succinctly</a> - <em>Free e-book</em> by Alessandro Del Sole and the perfect book to start with. Explains Roslyn APIs and afterward focuses on writing analyzers and refactorings.</li>
</ul>

<ul>
<li><a href="https://www.apress.com/la/book/9781484221105" rel="noopener noreferrer">.NET Development Using the Compiler API</a> - Book by Jason Bock. Besides analyzers and refactorings, it also explains the scripting API and provides an interesting reflection on the future of the Compiler API.</li>
</ul>

<ul>
<li><a href="https://www.packtpub.com/application-development/roslyn-cookbook" rel="noopener noreferrer">Roslyn Cookbook</a> - Book by Manish Vasani, a member of the Roslyn analyzers team. After covering analyzers, refactorings, and scripting in detail, the book goes in-depth explaining how to develop new C# language features and contribute to the Roslyn source code.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2019/03/01/"/>
    <summary>3 awesome projects updated on Mar 01, 2019</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2018/11/24/</id>
    <title>Awesome Roslyn Updates on Nov 24, 2018</title>
    <updated>2018-11-24T13:50:55.000Z</updated>
    <published>2018-11-24T13:50:55.000Z</published>
    <content type="html"><![CDATA[<h3><p>Open Source Analyzers, Code Fixes, and Refactorings</p>
</h3>
<ul>
<li><a href="https://github.com/DotNetAnalyzers" rel="noopener noreferrer">.NET Analyzers</a> - GitHub organization for the development of Roslyn analyzers. Various repositories within the organization cover analyzers for ASP.NET Core, WPF, IDisposable, usages of System.Reflection, etc.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2018/11/24/"/>
    <summary>1 awesome projects updated on Nov 24, 2018</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2018/10/18/</id>
    <title>Awesome Roslyn Updates on Oct 18, 2018</title>
    <updated>2018-10-18T22:35:12.000Z</updated>
    <published>2018-10-18T22:35:12.000Z</published>
    <content type="html"><![CDATA[<h3><p>Tutorials</p>
</h3>
<ul>
<li><a href="https://joshvarty.com/learn-roslyn-now/" rel="noopener noreferrer">Learn Roslyn Now</a> - Series of blog posts that explore the Roslyn compiler API. It introduces the power of Roslyn through small self-contained examples. A perfect tutorial to start with :-)</li>
</ul>

<ul>
<li><a href="https://msdn.microsoft.com/en-us/magazine/dn879356.aspx" rel="noopener noreferrer">C# and Visual Basic - Use Roslyn to Write a Live Code Analyzer for Your API</a> - Older but still not outdated, very detailed MSDN article on writing code analyzers.</li>
</ul>

<ul>
<li><a href="https://msdn.microsoft.com/en-us/magazine/dn904670.aspx" rel="noopener noreferrer">C# - Adding a Code Fix to Your Roslyn Analyzer</a> - The sequel to the previous MSDN article. A detailed introduction into code fixes.</li>
</ul>
<h3><p>Open Source Projects</p>
</h3>
<ul>
<li><a href="https://github.com/bridgedotnet/Bridge" rel="noopener noreferrer">Bridge</a> - C# to JavaScript transpiler. Write modern mobile and web apps in C# and run them anywhere in JavaScript.</li>
</ul>

<ul>
<li><a href="https://github.com/icsharpcode/CodeConverter/" rel="noopener noreferrer">Code Converter (⭐875)</a> - C# to VB.NET and VB.NET to C# transpiler.</li>
</ul>

<ul>
<li><a href="https://github.com/pvginkel/Microsoft.CodeAnalysis.CSharp.PatternMatching" rel="noopener noreferrer">CodeAnalysis.CSharp.PatternMatching (⭐30)</a> - Intuitive pattern matching for Roslyn syntax trees. Simplifies C# syntax and semantic analysis.</li>
</ul>

<ul>
<li><a href="https://github.com/AArnott/CodeGeneration.Roslyn" rel="noopener noreferrer">CodeGeneration.Roslyn (⭐410)</a> - Roslyn-based Code Generation during a build with design-time support.</li>
</ul>

<ul>
<li><a href="https://github.com/filipw/dotnet-script" rel="noopener noreferrer">dotnet-script (⭐2.9k)</a> - Runs C# scripts from the .NET CLI, defines NuGet packages inline and edit/debugs them in VS Code.</li>
</ul>

<ul>
<li><a href="https://github.com/ashmind/mirrorsharp" rel="noopener noreferrer">MirrorSharp (⭐229)</a> - Online C#, VB.NET, and F# code editor. Features code completion, method signature help, quick fixes, and diagnostics.</li>
</ul>

<ul>
<li><a href="https://roslynpad.net/" rel="noopener noreferrer">RoslynPad</a> - Cross-platform C# editor. Features code completion, method signature help, quick fixes, and diagnostics.</li>
</ul>

<ul>
<li><a href="https://github.com/KirillOsenkov/RoslynQuoter" rel="noopener noreferrer">RoslynQuoter (⭐1k)</a> - Online tool that for a given C# program generates syntax tree API calls that construct syntax tree of that program.</li>
</ul>

<ul>
<li><a href="http://scriptcs.net/" rel="noopener noreferrer">scriptcs</a> - Turns C# into a powerful scripting tool. Features C# REPL, installation of NuGet packages, and execution of scripts with a single line of code.</li>
</ul>

<ul>
<li><a href="https://github.com/daveaglick/Scripty" rel="noopener noreferrer">Scripty (⭐619)</a> - Tool to use Roslyn-powered C# scripts for code generation. You can think of it as a scripted alternative to T4 templates.</li>
</ul>

<ul>
<li><a href="http://sharpen.rocks" rel="noopener noreferrer">Sharpen</a> - Visual Studio extension that intelligently introduces new C# language features into your existing code base.</li>
</ul>

<ul>
<li><a href="https://github.com/Testura/Testura.Code" rel="noopener noreferrer">Testura.Code (⭐299)</a> - Wrapper around the Roslyn API used for generation, saving, and compiling C# code. Provides methods and helpers to generate classes, methods, statements, and expressions.</li>
</ul>

<ul>
<li><a href="https://github.com/nventive/Uno.SourceGeneration" rel="noopener noreferrer">Uno SourceGenerator (⭐130)</a> - C# source code generator based on a project being built, using all of its syntactic and semantic model information.</li>
</ul>
<h3><p>Open Source Analyzers, Code Fixes, and Refactorings</p>
</h3>
<ul>
<li><a href="https://github.com/code-cracker/code-cracker" rel="noopener noreferrer">Code Cracker (⭐1.1k)</a> - Analyzer library for C# and VB.NET. Offers diagnostics in many categories like performance, coding styles, as well as some basic refactorings.</li>
</ul>

<ul>
<li><a href="https://github.com/Microsoft/RoslynClrHeapAllocationAnalyzer" rel="noopener noreferrer">Roslyn Clr Heap Allocation Analyzer (⭐648)</a> - C# heap allocation analyzer that can detect explicit and many implicit allocations like boxing, closures, implicit delegate creations, etc.</li>
</ul>

<ul>
<li><a href="https://github.com/JosefPihrt/Roslynator" rel="noopener noreferrer">Roslynator (⭐3.2k)</a> - Collection of 190+ analyzers and 190+ refactorings for C#. Covers coding style, code readability and simplification, removing redundancies, fixing compiler errors, and many more.</li>
</ul>

<ul>
<li><a href="https://github.com/SonarSource/sonar-csharp" rel="noopener noreferrer">SonarC# (⭐854)</a> - Static code analyzer for C# language used as an extension for the SonarQube platform.</li>
</ul>

<ul>
<li><a href="https://github.com/DotNetAnalyzers/StyleCopAnalyzers" rel="noopener noreferrer">StyleCop Analyzers for the .NET Compiler Platform (⭐2.7k)</a> - Port of StyleCop rules to Roslyn.</li>
</ul>

<ul>
<li><a href="https://github.com/Vannevelj/VSDiagnostics" rel="noopener noreferrer">VSDiagnostics (⭐67)</a> - Collection of code-quality analyzers. Covers usages of async methods, flags enums, best practices in exception handling as well as many other code-quality checks.</li>
</ul>
<h3><p>Blog Posts and Articles</p>
</h3>
<ul>
<li><a href="https://robinsedlaczek.com/2015/04/29/inside-the-net-compiler-platform-performance-considerations-during-syntax-analysis-speakroslyn/" rel="noopener noreferrer">Inside the .NET Compiler Platform – Performance Considerations during Syntax Analysis (#SpeakRoslyn)</a> - In-depth look at Roslyn's performance with the focus on memory consumption.</li>
</ul>

<ul>
<li><a href="https://blogs.msdn.microsoft.com/ericlippert/2012/06/08/persistence-facades-and-roslyns-red-green-trees/" rel="noopener noreferrer">Persistence, Facades and Roslyn's Red-Green Trees</a> - Inspiring introduction on how Roslyn team implemented immutable, reusable trees with cheap parent references and many other goodies. Quote: "But on the Roslyn team we routinely do impossible things" :-)</li>
</ul>

<ul>
<li><a href="https://blog.jetbrains.com/dotnet/2014/04/10/resharper-and-roslyn-qa/" rel="noopener noreferrer">ReSharper and Roslyn: Q&amp;A</a> - Excellent explanation why ReSharper will not use Roslyn. Includes good discussion on static code analysis and some limits of Roslyn.</li>
</ul>

<ul>
<li><a href="https://blogs.msdn.microsoft.com/csharpfaq/2014/01/15/roslyn-performance-matt-gertz/" rel="noopener noreferrer">Roslyn performance (Matt Gertz)</a> - Insight on how Roslyn team approaches the topic of evaluating and achieving performance.</li>
</ul>
<h3><p>Talks</p>
</h3>
<ul>
<li><a href="https://www.youtube.com/watch?v=nXljhGDokqA" rel="noopener noreferrer">The Power of Roslyn</a> - Great talk by Kasey Uhlenhuth at NDC Oslo 2018 covering Roslyn essentials and APIs and tools for building code analyzers and fixes.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2018/10/18/"/>
    <summary>27 awesome projects updated on Oct 18, 2018</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2018/06/02/</id>
    <title>Awesome Roslyn Updates on Jun 02, 2018</title>
    <updated>2018-06-02T10:17:49.000Z</updated>
    <published>2018-06-02T10:17:49.000Z</published>
    <content type="html"><![CDATA[<h3><p>Open Source Analyzers, Code Fixes, and Refactorings</p>
</h3>
<ul>
<li><a href="https://github.com/bkoelman/CSharpGuidelinesAnalyzer" rel="noopener noreferrer">CSharpGuidelinesAnalyzer (⭐148)</a> - Reports diagnostics for C# coding guidelines (<a href="https://csharpcodingguidelines.com/" rel="noopener noreferrer">https://csharpcodingguidelines.com/</a>).</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2018/06/02/"/>
    <summary>1 awesome projects updated on Jun 02, 2018</summary>
  </entry>
  <entry>
    <id>https://www.trackawesomelist.com/2018/04/14/</id>
    <title>Awesome Roslyn Updates on Apr 14, 2018</title>
    <updated>2018-04-14T19:53:40.000Z</updated>
    <published>2018-04-14T02:00:20.000Z</published>
    <content type="html"><![CDATA[<h3><p>Open Source Projects</p>
</h3>
<ul>
<li><a href="http://www.omnisharp.net/" rel="noopener noreferrer">OmniSharp</a> - Enables a cross platform .NET development in the editor of your choice. A family of open source projects, each with one goal: To enable a great .NET experience in your editor of choice.</li>
</ul>

<ul>
<li><a href="https://github.com/antiufo/roslyn-linq-rewrite" rel="noopener noreferrer">roslyn-linq-rewrite (⭐715)</a> - Compiles C# code by first rewriting the syntax trees of LINQ expressions using plain procedural code. This increases performance by minimizes heap allocations and dynamic dispatch.</li>
</ul>

<ul>
<li><a href="https://sharplab.io/" rel="noopener noreferrer">SharpLab</a> - .NET code playground. Displays intermediate steps and results of code compilation. Shows the code as compiler sees it. Allows selecting different branches and versions of Roslyn. Runs C#, VB.NET, and F# code in the browser.</li>
</ul>
<h3><p>Open Source Analyzers, Code Fixes, and Refactorings</p>
</h3>
<ul>
<li><a href="https://github.com/dotnet/roslyn-analyzers" rel="noopener noreferrer">.NET Compiler Platform ("Roslyn") Analyzers (⭐1.7k)</a> - Diagnostic analyzers developed by the Roslyn team. Initially developed to help flesh out the design and implementation of the static analysis APIs. The analyzers cover code quality, .NET Core, desktop .NET Framework, comments in code, and more.</li>
</ul>

<ul>
<li><a href="https://github.com/icsharpcode/RefactoringEssentials/" rel="noopener noreferrer">Refactoring Essentials for Visual Studio (⭐635)</a> - Refactorings, analyzers and code fixes for C# and VB.NET.</li>
</ul>
]]></content>
    <link rel="alternate" href="https://www.trackawesomelist.com/2018/04/14/"/>
    <summary>5 awesome projects updated on Apr 14, 2018</summary>
  </entry>
</feed>