{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Mar 17, 2023",
  "_site_title": "Track Awesome List",
  "description": "3 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Mar 17, 2023 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/mostafatouny/awesome-theoretical-computer-science/",
      "title": "Awesome Theoretical Computer Science",
      "_slug": "mostafatouny/awesome-theoretical-computer-science/",
      "_filepath": "/content/mostafatouny/awesome-theoretical-computer-science/README.md",
      "url": "https://www.trackawesomelist.com/mostafatouny/awesome-theoretical-computer-science/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Lecture Videos Playlists / Monograph\n\n*   [Harsha & Strivastava. Toolkit for Theoretical Computer Science. Tata Institute](https://www.tifr.res.in/~prahladh/teaching/2020-21/toolkit/)\n\n### Lecture Notes / Monograph\n\n*   [Zhou. A Theorist's Toolkit. Illinois](https://yuanz.web.illinois.edu/teaching/B609fa16/) - It covers a large number of the math/CS topics that you need to know for reading and doing research in Computer Science Theory.\n*   [O'Donnell. A Theorist's Toolkit. CMU](https://www.cs.cmu.edu/~odonnell/toolkit13/) - It covers a large number of the math/CS topics that you need to know for reading and doing research in Computer Science Theory.\n*   [Arora. Thinking Like a Theorist. Princeton](https://www.cs.princeton.edu/courses/archive/fall07/cos597D/Site/lectopics.html) - It covers a large number of the math/CS topics that you need to know for reading and doing research in Computer Science Theory.\n*   [Arora. A Theorist's Toolkit. Princeton](https://www.cs.princeton.edu/courses/archive/fall02/cs597D/) - Aimed primarily at first and second year graduate students who plan to do research in theoretical computer science. We will introduce probabilistic, algebraic, combinatorial, and algorithmic methods useful in proofs.\n*   [Kelner. Topics in Theoretical Computer Science: An Algorithmist's Toolkit. MIT](https://ocw.mit.edu/courses/18-409-topics-in-theoretical-computer-science-an-algorithmists-toolkit-fall-2009/) - It covers a collection of geometric techniques that apply broadly in modern algorithm design.\n*   [Maji & Valiant. Theoretical Computer Science Toolkit. Purdue](https://www.cs.purdue.edu/homes/hmaji/teaching/Spring%202023/CS-58500-Spring-2023.html)",
      "content_html": "<h3><p>Lecture Videos Playlists / Monograph</p>\n</h3><ul>\n<li><a href=\"https://www.tifr.res.in/~prahladh/teaching/2020-21/toolkit/\" rel=\"noopener noreferrer\">Harsha &amp; Strivastava. Toolkit for Theoretical Computer Science. Tata Institute</a></li>\n</ul>\n<h3><p>Lecture Notes / Monograph</p>\n</h3><ul>\n<li><a href=\"https://yuanz.web.illinois.edu/teaching/B609fa16/\" rel=\"noopener noreferrer\">Zhou. A Theorist's Toolkit. Illinois</a> - It covers a large number of the math/CS topics that you need to know for reading and doing research in Computer Science Theory.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.cs.cmu.edu/~odonnell/toolkit13/\" rel=\"noopener noreferrer\">O'Donnell. A Theorist's Toolkit. CMU</a> - It covers a large number of the math/CS topics that you need to know for reading and doing research in Computer Science Theory.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.cs.princeton.edu/courses/archive/fall07/cos597D/Site/lectopics.html\" rel=\"noopener noreferrer\">Arora. Thinking Like a Theorist. Princeton</a> - It covers a large number of the math/CS topics that you need to know for reading and doing research in Computer Science Theory.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.cs.princeton.edu/courses/archive/fall02/cs597D/\" rel=\"noopener noreferrer\">Arora. A Theorist's Toolkit. Princeton</a> - Aimed primarily at first and second year graduate students who plan to do research in theoretical computer science. We will introduce probabilistic, algebraic, combinatorial, and algorithmic methods useful in proofs.</li>\n</ul>\n<ul>\n<li><a href=\"https://ocw.mit.edu/courses/18-409-topics-in-theoretical-computer-science-an-algorithmists-toolkit-fall-2009/\" rel=\"noopener noreferrer\">Kelner. Topics in Theoretical Computer Science: An Algorithmist's Toolkit. MIT</a> - It covers a collection of geometric techniques that apply broadly in modern algorithm design.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.cs.purdue.edu/homes/hmaji/teaching/Spring%202023/CS-58500-Spring-2023.html\" rel=\"noopener noreferrer\">Maji &amp; Valiant. Theoretical Computer Science Toolkit. Purdue</a></li>\n</ul>\n",
      "date_published": "2023-03-17T10:11:35.000Z",
      "date_modified": "2023-03-17T10:22:43.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/markets/awesome-ruby/",
      "title": "Awesome Ruby",
      "_slug": "markets/awesome-ruby/",
      "_filepath": "/content/markets/awesome-ruby/README.md",
      "url": "https://www.trackawesomelist.com/markets/awesome-ruby/",
      "summary": "3 awesome projects updated",
      "content_text": "\n\n### API Builder and Discovery\n\n*   [Alba (⭐1k)](https://github.com/okuramasafumi/alba) - A JSON serializer for Ruby, JRuby and TruffleRuby.\n\n### Core Extensions\n\n*   [MemoWise (⭐620)](https://github.com/panorama-ed/memo_wise) - Memoize any instance/class/module method, including support for frozen objects - rigorously tested and benchmarked on all Rubies - fast performance of memoized reads.\n\n### Third-party APIs\n\n*   [Notion Ruby Client (⭐123)](https://github.com/orbit-love/notion-ruby-client) - A Ruby wrapper for the Notion API.",
      "content_html": "<h3><p>API Builder and Discovery</p>\n</h3><ul>\n<li><a href=\"https://github.com/okuramasafumi/alba\" rel=\"noopener noreferrer\">Alba (⭐1k)</a> - A JSON serializer for Ruby, JRuby and TruffleRuby.</li>\n</ul>\n<h3><p>Core Extensions</p>\n</h3><ul>\n<li><a href=\"https://github.com/panorama-ed/memo_wise\" rel=\"noopener noreferrer\">MemoWise (⭐620)</a> - Memoize any instance/class/module method, including support for frozen objects - rigorously tested and benchmarked on all Rubies - fast performance of memoized reads.</li>\n</ul>\n<h3><p>Third-party APIs</p>\n</h3><ul>\n<li><a href=\"https://github.com/orbit-love/notion-ruby-client\" rel=\"noopener noreferrer\">Notion Ruby Client (⭐123)</a> - A Ruby wrapper for the Notion API.</li>\n</ul>\n",
      "date_published": "2023-03-17T10:00:21.000Z",
      "date_modified": "2023-03-17T13:59:04.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/fffaraz/awesome-cpp/",
      "title": "Awesome Cpp",
      "_slug": "fffaraz/awesome-cpp/",
      "_filepath": "/content/fffaraz/awesome-cpp/README.md",
      "url": "https://www.trackawesomelist.com/fffaraz/awesome-cpp/",
      "summary": "13 awesome projects updated",
      "content_text": "\n\n### Frameworks\n\n*   [Boost](https://github.com/boostorg) :zap: - A large collection of generic C++ libraries. \\[Boost] [website](https://www.boost.org)\n\n### CLI\n\n*   [Boost.Program\\_options (⭐119)](https://github.com/boostorg/program_options) - A library to obtain program options via conventional methods such as command line and config file. \\[Boost] [website](https://boost.org/libs/program_options)\n\n### Concurrency\n\n*   [Boost.Compute (⭐1.6k)](https://github.com/boostorg/compute) - A C++ GPU Computing Library for OpenCL. \\[Boost] [website](https://boost.org/libs/compute)\n*   [Quantum (⭐602)](https://github.com/bloomberg/quantum) - A powerful C++ coroutine dispatcher framework built on top of [Boost.Coroutine2](https://boost.org/libs/coroutine2).\n\n### Debug\n\n*   [Boost.Test (⭐200)](https://github.com/boostorg/test) - Boost Test Library. \\[Boost] [website](https://boost.org/libs/test)\n\n### Image Processing\n\n*   [Boost.GIL (⭐184)](https://github.com/boostorg/gil) - Generic Image Library. \\[Boost] [website](https://boost.org/libs/gil)\n\n### Inter-process communication\n\n*   [Boost.Interprocess (⭐154)](https://github.com/boostorg/interprocess) - Header-only Boost library that supports kernel-level shared memory and memory-mapped files, with in-built synchronization mechanisms (semaphores, mutexes, and more). \\[Boost] [website](https://boost.org/libs/interprocess)\n\n### XML\n\n*   [Boost.PropertyTree (⭐58)](https://github.com/boostorg/property_tree) - A property tree parser/generator that can be used to parse XML/JSON/INI/Info files. \\[Boost] [website](https://boost.org/libs/property_tree)\n\n### Logging\n\n*   [Boost.Log (⭐195)](https://github.com/boostorg/log) - Designed to be very modular and extensible. \\[Boost] [website](https://boost.org/libs/log)\n\n### Math\n\n*   [Boost.Multiprecision (⭐222)](https://github.com/boostorg/multiprecision) - provides higher-range/precision integer, rational and floating-point types in C++, header-only or with GMP/MPFR/LibTomMath backends. \\[Boost] [website](https://boost.org/libs/multiprecision)\n\n### Reflection\n\n*   [CPFG (⭐220)](https://github.com/cpgf/cpgf) - A C++03 library for reflection, callback and script binding. \\[Apache2]\n\n### Scripting\n\n*   [Boost.Python (⭐507)](https://github.com/boostorg/python) - A C++ library which enables seamless interoperability between C++ and the Python programming language. \\[Boost] [website](https://boost.org/libs/python)\n\n### Serialization\n\n*   [Boost.Serialization (⭐128)](https://github.com/boostorg/serialization) - Boost Serialization Library. \\[Boost] [website](https://boost.org/libs/serialization)\n\n### Miscellaneous\n\n*   [Boost.Signals2 (⭐83)](https://github.com/boostorg/signals2) - An implementation of a managed signals and slots system. \\[Boost] [website](https://boost.org/libs/signals2)",
      "content_html": "<h3><p>Frameworks</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg\" rel=\"noopener noreferrer\">Boost</a> ⚡ - A large collection of generic C++ libraries. [Boost] <a href=\"https://www.boost.org\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n<h3><p>CLI</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg/program_options\" rel=\"noopener noreferrer\">Boost.Program_options (⭐119)</a> - A library to obtain program options via conventional methods such as command line and config file. [Boost] <a href=\"https://boost.org/libs/program_options\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n<h3><p>Concurrency</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg/compute\" rel=\"noopener noreferrer\">Boost.Compute (⭐1.6k)</a> - A C++ GPU Computing Library for OpenCL. [Boost] <a href=\"https://boost.org/libs/compute\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/bloomberg/quantum\" rel=\"noopener noreferrer\">Quantum (⭐602)</a> - A powerful C++ coroutine dispatcher framework built on top of <a href=\"https://boost.org/libs/coroutine2\" rel=\"noopener noreferrer\">Boost.Coroutine2</a>.</li>\n</ul>\n<h3><p>Debug</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg/test\" rel=\"noopener noreferrer\">Boost.Test (⭐200)</a> - Boost Test Library. [Boost] <a href=\"https://boost.org/libs/test\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n<h3><p>Image Processing</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg/gil\" rel=\"noopener noreferrer\">Boost.GIL (⭐184)</a> - Generic Image Library. [Boost] <a href=\"https://boost.org/libs/gil\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n<h3><p>Inter-process communication</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg/interprocess\" rel=\"noopener noreferrer\">Boost.Interprocess (⭐154)</a> - Header-only Boost library that supports kernel-level shared memory and memory-mapped files, with in-built synchronization mechanisms (semaphores, mutexes, and more). [Boost] <a href=\"https://boost.org/libs/interprocess\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n<h3><p>XML</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg/property_tree\" rel=\"noopener noreferrer\">Boost.PropertyTree (⭐58)</a> - A property tree parser/generator that can be used to parse XML/JSON/INI/Info files. [Boost] <a href=\"https://boost.org/libs/property_tree\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n<h3><p>Logging</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg/log\" rel=\"noopener noreferrer\">Boost.Log (⭐195)</a> - Designed to be very modular and extensible. [Boost] <a href=\"https://boost.org/libs/log\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n<h3><p>Math</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg/multiprecision\" rel=\"noopener noreferrer\">Boost.Multiprecision (⭐222)</a> - provides higher-range/precision integer, rational and floating-point types in C++, header-only or with GMP/MPFR/LibTomMath backends. [Boost] <a href=\"https://boost.org/libs/multiprecision\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n<h3><p>Reflection</p>\n</h3><ul>\n<li><a href=\"https://github.com/cpgf/cpgf\" rel=\"noopener noreferrer\">CPFG (⭐220)</a> - A C++03 library for reflection, callback and script binding. [Apache2]</li>\n</ul>\n<h3><p>Scripting</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg/python\" rel=\"noopener noreferrer\">Boost.Python (⭐507)</a> - A C++ library which enables seamless interoperability between C++ and the Python programming language. [Boost] <a href=\"https://boost.org/libs/python\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n<h3><p>Serialization</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg/serialization\" rel=\"noopener noreferrer\">Boost.Serialization (⭐128)</a> - Boost Serialization Library. [Boost] <a href=\"https://boost.org/libs/serialization\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n<h3><p>Miscellaneous</p>\n</h3><ul>\n<li><a href=\"https://github.com/boostorg/signals2\" rel=\"noopener noreferrer\">Boost.Signals2 (⭐83)</a> - An implementation of a managed signals and slots system. [Boost] <a href=\"https://boost.org/libs/signals2\" rel=\"noopener noreferrer\">website</a></li>\n</ul>\n",
      "date_published": "2023-03-17T06:09:17.000Z",
      "date_modified": "2023-03-17T06:52:51.000Z"
    }
  ]
}
