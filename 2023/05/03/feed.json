{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on May 03, 2023",
  "_site_title": "Track Awesome List",
  "description": "10 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on May 03, 2023 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/nix-community/awesome-nix/",
      "title": "Awesome Nix",
      "_slug": "nix-community/awesome-nix/",
      "_filepath": "/content/nix-community/awesome-nix/README.md",
      "url": "https://www.trackawesomelist.com/nix-community/awesome-nix/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Development / Discovery\n\n*   [haumea (⭐349)](https://github.com/nix-community/haumea) - Filesystem-based module system for the Nix language similar to traditional programming languages, with support for file hierarchy and visibility.\n*   [namaka (⭐125)](https://github.com/nix-community/namaka) - Snapshot testing for Nix based on haumea.",
      "content_html": "<h3><p>Development / Discovery</p>\n</h3><ul>\n<li><a href=\"https://github.com/nix-community/haumea\" rel=\"noopener noreferrer\">haumea (⭐349)</a> - Filesystem-based module system for the Nix language similar to traditional programming languages, with support for file hierarchy and visibility.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/nix-community/namaka\" rel=\"noopener noreferrer\">namaka (⭐125)</a> - Snapshot testing for Nix based on haumea.</li>\n</ul>\n",
      "date_published": "2023-05-03T21:02:44.000Z",
      "date_modified": "2023-05-03T21:06:09.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/ocaml-community/awesome-ocaml/",
      "title": "Awesome Ocaml",
      "_slug": "ocaml-community/awesome-ocaml/",
      "_filepath": "/content/ocaml-community/awesome-ocaml/README.md",
      "url": "https://www.trackawesomelist.com/ocaml-community/awesome-ocaml/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Printers helpers\n\n*   Reason's native [**Console.log**](https://github.com/reasonml/reason-native/tree/master/src/console#consoleloganything)\n*   [**Dum**](https://github.com/mjambon/dum#readme)\n*   [**Inspect**](https://github.com/krohrer/caml-inspect#readme)\n*   [**ppx\\_deriving** ](https://github.com/ocaml-ppx/ppx_deriving#usage)’s `[@@deriving show]`.\n*   [**refl** ](https://github.com/thierry-martinez/refl#basic-usage), a ppx\\_deriving-like.\n*   [**lrt** ](https://github.com/LexiFi/lrt#getting-started), another ppx\\_deriving-like.\n*   [**tpf** ](https://github.com/pqwy/tpf#readme), again a ppx\\_deriving-like.\n*   [**typerep** ](https://github.com/janestreet/typerep), probably a ppx\\_deriving-like with ppx\\_typerep\\_conv.\n*   [**repr**](https://mirage.github.io/repr/repr/Repr/index.html#val-pp_json), which appears to have the user build the type representation manually from combinators in addition to also having the user pass it where needed.\n*   [**data-encoding**](https://gitlab.com/nomadic-labs/data-encoding/-/blob/master/src/tutorial.md#how-to-build-an-encoding), also fully manual.\n*   [**cmon** ](https://github.com/let-def/cmon#documentation), fully manual.\n*   [**Genprint** ](https://github.com/progman1/genprintlib#readme)\n*   [**OCaml@p** ](https://github.com/tsubame-sp/ocaml_at_p#readme)",
      "content_html": "<h3><p>Printers helpers</p>\n</h3><ul>\n<li>Reason's native <a href=\"https://github.com/reasonml/reason-native/tree/master/src/console#consoleloganything\" rel=\"noopener noreferrer\"><strong>Console.log</strong></a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mjambon/dum#readme\" rel=\"noopener noreferrer\"><strong>Dum</strong></a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/krohrer/caml-inspect#readme\" rel=\"noopener noreferrer\"><strong>Inspect</strong></a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ocaml-ppx/ppx_deriving#usage\" rel=\"noopener noreferrer\"><strong>ppx_deriving</strong> </a>’s <code>[@@deriving show]</code>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/thierry-martinez/refl#basic-usage\" rel=\"noopener noreferrer\"><strong>refl</strong> </a>, a ppx_deriving-like.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/LexiFi/lrt#getting-started\" rel=\"noopener noreferrer\"><strong>lrt</strong> </a>, another ppx_deriving-like.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/pqwy/tpf#readme\" rel=\"noopener noreferrer\"><strong>tpf</strong> </a>, again a ppx_deriving-like.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/janestreet/typerep\" rel=\"noopener noreferrer\"><strong>typerep</strong> </a>, probably a ppx_deriving-like with ppx_typerep_conv.</li>\n</ul>\n<ul>\n<li><a href=\"https://mirage.github.io/repr/repr/Repr/index.html#val-pp_json\" rel=\"noopener noreferrer\"><strong>repr</strong></a>, which appears to have the user build the type representation manually from combinators in addition to also having the user pass it where needed.</li>\n</ul>\n<ul>\n<li><a href=\"https://gitlab.com/nomadic-labs/data-encoding/-/blob/master/src/tutorial.md#how-to-build-an-encoding\" rel=\"noopener noreferrer\"><strong>data-encoding</strong></a>, also fully manual.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/let-def/cmon#documentation\" rel=\"noopener noreferrer\"><strong>cmon</strong> </a>, fully manual.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/progman1/genprintlib#readme\" rel=\"noopener noreferrer\"><strong>Genprint</strong> </a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/tsubame-sp/ocaml_at_p#readme\" rel=\"noopener noreferrer\"><strong>OCaml@p</strong> </a></li>\n</ul>\n",
      "date_published": "2023-05-03T18:17:38.000Z",
      "date_modified": "2023-05-03T18:17:38.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/briatte/awesome-network-analysis/",
      "title": "Awesome Network Analysis",
      "_slug": "briatte/awesome-network-analysis/",
      "_filepath": "/content/briatte/awesome-network-analysis/README.md",
      "url": "https://www.trackawesomelist.com/briatte/awesome-network-analysis/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Books / Topic-specific\n\n*   *[Economic Networks: Theory and Computation](https://networks.quantecon.org/)*, by John Stachurski and Thomas J. Sargent (2022).",
      "content_html": "<h3><p>Books / Topic-specific</p>\n</h3><ul>\n<li><em><a href=\"https://networks.quantecon.org/\" rel=\"noopener noreferrer\">Economic Networks: Theory and Computation</a></em>, by John Stachurski and Thomas J. Sargent (2022).</li>\n</ul>\n",
      "date_published": "2023-05-03T16:00:20.000Z",
      "date_modified": "2023-05-03T16:00:20.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/directus-community/awesome-directus/",
      "title": "Awesome Directus",
      "_slug": "directus-community/awesome-directus/",
      "_filepath": "/content/directus-community/awesome-directus/README.md",
      "url": "https://www.trackawesomelist.com/directus-community/awesome-directus/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Articles / Educational\n\n*   [Creating a Custom Panel in Directus With Chart.js](https://blog.eperedo.com/2023/02/14/custom-panel-directus-chart-js)",
      "content_html": "<h3><p>Articles / Educational</p>\n</h3><ul>\n<li><a href=\"https://blog.eperedo.com/2023/02/14/custom-panel-directus-chart-js\" rel=\"noopener noreferrer\">Creating a Custom Panel in Directus With Chart.js</a></li>\n</ul>\n",
      "date_published": "2023-05-03T15:37:50.000Z",
      "date_modified": "2023-05-03T15:37:50.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/fkromer/awesome-ros2/",
      "title": "Awesome Ros2",
      "_slug": "fkromer/awesome-ros2/",
      "_filepath": "/content/fkromer/awesome-ros2/README.md",
      "url": "https://www.trackawesomelist.com/fkromer/awesome-ros2/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Packages / Data collection\n\n*   [ros2\\_data\\_collection (⭐108)](https://github.com/Minipada/ros2_data_collection) - Collect, validate and send data reliably from ROS 2 to create APIs and dashboards. ![ros2\\_data\\_collection](https://img.shields.io/github/stars/minipada/ros2_data_collection.svg)",
      "content_html": "<h3><p>Packages / Data collection</p>\n</h3><ul>\n<li><a href=\"https://github.com/Minipada/ros2_data_collection\" rel=\"noopener noreferrer\">ros2_data_collection (⭐108)</a> - Collect, validate and send data reliably from ROS 2 to create APIs and dashboards. <img src=\"https://img.shields.io/github/stars/minipada/ros2_data_collection.svg\" alt=\"ros2\\_data\\_collection\" /></li>\n</ul>\n",
      "date_published": "2023-05-03T11:03:19.000Z",
      "date_modified": "2023-05-03T11:03:19.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/ripienaar/free-for-dev/",
      "title": "Free for Dev",
      "_slug": "ripienaar/free-for-dev/",
      "_filepath": "/content/ripienaar/free-for-dev/README.md",
      "url": "https://www.trackawesomelist.com/ripienaar/free-for-dev/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### CMS\n\n*   [Hygraph](https://hygraph.com/) - Offers free tier for small projects. GraphQL first API. Move away from legacy solutions to the GraphQL native Headless CMS - and deliver omnichannel content API first.",
      "content_html": "<h3><p>CMS</p>\n</h3><ul>\n<li><a href=\"https://hygraph.com/\" rel=\"noopener noreferrer\">Hygraph</a> - Offers free tier for small projects. GraphQL first API. Move away from legacy solutions to the GraphQL native Headless CMS - and deliver omnichannel content API first.</li>\n</ul>\n",
      "date_published": "2023-05-03T09:21:00.000Z",
      "date_modified": "2023-05-03T09:21:00.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/TaptuIT/awesome-devsecops/",
      "title": "Awesome Devsecops",
      "_slug": "TaptuIT/awesome-devsecops/",
      "_filepath": "/content/TaptuIT/awesome-devsecops/README.md",
      "url": "https://www.trackawesomelist.com/TaptuIT/awesome-devsecops/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Supply Chain Security / Ruby\n\n*   [Overlay (⭐225)](https://github.com/os-scar/overlay) - *SCAR* - a browser extension helping developers evaluate open source packages before picking them.",
      "content_html": "<h3><p>Supply Chain Security / Ruby</p>\n</h3><ul>\n<li><a href=\"https://github.com/os-scar/overlay\" rel=\"noopener noreferrer\">Overlay (⭐225)</a> - <em>SCAR</em> - a browser extension helping developers evaluate open source packages before picking them.</li>\n</ul>\n",
      "date_published": "2023-05-03T07:40:47.000Z",
      "date_modified": "2023-05-03T07:40:47.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/mxschmitt/awesome-playwright/",
      "title": "Awesome Playwright",
      "_slug": "mxschmitt/awesome-playwright/",
      "_filepath": "/content/mxschmitt/awesome-playwright/README.md",
      "url": "https://www.trackawesomelist.com/mxschmitt/awesome-playwright/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Utils\n\n*   [playwright-python-language-injection (⭐5)](https://github.com/Mattwmaster58/playwright-python-language-injection) - Language injection definitions for CSS/JS syntax highlighting when using `python-playwright` in PyCharm.",
      "content_html": "<h3><p>Utils</p>\n</h3><ul>\n<li><a href=\"https://github.com/Mattwmaster58/playwright-python-language-injection\" rel=\"noopener noreferrer\">playwright-python-language-injection (⭐5)</a> - Language injection definitions for CSS/JS syntax highlighting when using <code>python-playwright</code> in PyCharm.</li>\n</ul>\n",
      "date_published": "2023-05-03T06:50:31.000Z",
      "date_modified": "2023-05-03T06:50:31.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/n2cholas/awesome-jax/",
      "title": "Awesome Jax",
      "_slug": "n2cholas/awesome-jax/",
      "_filepath": "/content/n2cholas/awesome-jax/README.md",
      "url": "https://www.trackawesomelist.com/n2cholas/awesome-jax/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Libraries / New Libraries\n\n*   [Lorax (⭐140)](https://github.com/davisyoshida/lorax) - Automatically apply LoRA to JAX models (Flax, Haiku, etc.)",
      "content_html": "<h3><p>Libraries / New Libraries</p>\n</h3><ul>\n<li><a href=\"https://github.com/davisyoshida/lorax\" rel=\"noopener noreferrer\">Lorax (⭐140)</a> - Automatically apply LoRA to JAX models (Flax, Haiku, etc.)</li>\n</ul>\n",
      "date_published": "2023-05-03T05:51:07.000Z",
      "date_modified": "2023-05-03T05:51:07.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/brillout/awesome-react-components/",
      "title": "Awesome React Components",
      "_slug": "brillout/awesome-react-components/",
      "_filepath": "/content/brillout/awesome-react-components/README.md",
      "url": "https://www.trackawesomelist.com/brillout/awesome-react-components/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Boilerplate / Mouse Events\n\n*   [elegant (⭐210)](https://github.com/elegantframework/elegant-cli) - [docs](https://www.elegantframework.com/docs/installation) - [demo](https://www.elegantframework.com/) - A simple React framework for rapidly building beautiful and expressive web applications with Next.js, Tailwind CSS, and Markdown loading.",
      "content_html": "<h3><p>Boilerplate / Mouse Events</p>\n</h3><ul>\n<li><a href=\"https://github.com/elegantframework/elegant-cli\" rel=\"noopener noreferrer\">elegant (⭐210)</a> - <a href=\"https://www.elegantframework.com/docs/installation\" rel=\"noopener noreferrer\">docs</a> - <a href=\"https://www.elegantframework.com/\" rel=\"noopener noreferrer\">demo</a> - A simple React framework for rapidly building beautiful and expressive web applications with Next.js, Tailwind CSS, and Markdown loading.</li>\n</ul>\n",
      "date_published": "2023-05-03T05:00:51.000Z",
      "date_modified": "2023-05-03T05:00:51.000Z"
    }
  ]
}
