{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Apr 17 - Apr 23, 2023",
  "_site_title": "Track Awesome List",
  "description": "55 awesome lists updated this week.",
  "_seo_title": "Awesome List Updates on Apr 17 - Apr 23, 2023 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/AboutRSS/ALL-about-RSS/week/",
      "title": "ALL About RSS",
      "_slug": "AboutRSS/ALL-about-RSS/week/",
      "_filepath": "/content/AboutRSS/ALL-about-RSS/week/README.md",
      "url": "https://www.trackawesomelist.com/AboutRSS/ALL-about-RSS/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### FreshRSS / Outline Processor Markup Language\n\n*   <https://feeds.flossboxin.org.in> by [vdbhb59](https://github.com/vdbhb59) ![Website](https://img.shields.io/website?down_color=Red\\&down_message=Down\\&style=plastic\\&up_color=Green\\&up_message=Up\\&url=https%3A%2F%2Ffeeds.flossboxin.org.in) (user:demo2023 passwd:demodemo)",
      "content_html": "<h3><p>FreshRSS / Outline Processor Markup Language</p>\n</h3><ul>\n<li><a href=\"https://feeds.flossboxin.org.in\" rel=\"noopener noreferrer\">https://feeds.flossboxin.org.in</a> by <a href=\"https://github.com/vdbhb59\" rel=\"noopener noreferrer\">vdbhb59</a> <img src=\"https://img.shields.io/website?down_color=Red&amp;down_message=Down&amp;style=plastic&amp;up_color=Green&amp;up_message=Up&amp;url=https%3A%2F%2Ffeeds.flossboxin.org.in\" alt=\"Website\" /> (user:demo2023 passwd:demodemo)</li>\n</ul>\n",
      "date_published": "2023-04-23T12:36:42.000Z",
      "date_modified": "2023-04-23T12:36:42.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/dhamaniasad/awesome-postgres/week/",
      "title": "Awesome Postgres",
      "_slug": "dhamaniasad/awesome-postgres/week/",
      "_filepath": "/content/dhamaniasad/awesome-postgres/week/README.md",
      "url": "https://www.trackawesomelist.com/dhamaniasad/awesome-postgres/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Contents / CLI\n\n*   [atlas (‚≠ê7k)](https://github.com/ariga/atlas) - Atlas is a tool for managing and migrating database schemas using modern DevOps principles.",
      "content_html": "<h3><p>Contents / CLI</p>\n</h3><ul>\n<li><a href=\"https://github.com/ariga/atlas\" rel=\"noopener noreferrer\">atlas (‚≠ê7k)</a> - Atlas is a tool for managing and migrating database schemas using modern DevOps principles.</li>\n</ul>\n",
      "date_published": "2023-04-23T11:28:22.000Z",
      "date_modified": "2023-04-23T11:28:22.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/Kazhnuz/awesome-gnome/week/",
      "title": "Awesome Gnome",
      "_slug": "Kazhnuz/awesome-gnome/week/",
      "_filepath": "/content/Kazhnuz/awesome-gnome/week/README.md",
      "url": "https://www.trackawesomelist.com/Kazhnuz/awesome-gnome/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### System and Customization\n\n*   [GDM Settings](https://gdm-settings.github.io) - A settings app for GDM (GNOME's Login Screen a.k.a GNOME Display Manager).",
      "content_html": "<h3><p>System and Customization</p>\n</h3><ul>\n<li><a href=\"https://gdm-settings.github.io\" rel=\"noopener noreferrer\">GDM Settings</a> - A settings app for GDM (GNOME's Login Screen a.k.a GNOME Display Manager).</li>\n</ul>\n",
      "date_published": "2023-04-23T11:23:29.000Z",
      "date_modified": "2023-04-23T11:23:29.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/sindresorhus/awesome/week/",
      "title": "Awesome List",
      "_slug": "sindresorhus/awesome/week/",
      "_filepath": "/content/sindresorhus/awesome/week/README.md",
      "url": "https://www.trackawesomelist.com/sindresorhus/awesome/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Gaming\n\n*   [GameMaker (‚≠ê381)](https://github.com/bytecauldron/awesome-gamemaker#readme) - Game engine.\n\n### Learn\n\n*   [Hackathon (‚≠ê166)](https://github.com/dribdat/awesome-hackathon#readme) - Running fun and productive hackathons.",
      "content_html": "<h3><p>Gaming</p>\n</h3><ul>\n<li><a href=\"https://github.com/bytecauldron/awesome-gamemaker#readme\" rel=\"noopener noreferrer\">GameMaker (‚≠ê381)</a> - Game engine.</li>\n</ul>\n<h3><p>Learn</p>\n</h3><ul>\n<li><a href=\"https://github.com/dribdat/awesome-hackathon#readme\" rel=\"noopener noreferrer\">Hackathon (‚≠ê166)</a> - Running fun and productive hackathons.</li>\n</ul>\n",
      "date_published": "2023-04-23T08:31:52.000Z",
      "date_modified": "2023-04-23T17:55:21.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/RayBB/awesome-social-enterprise/week/",
      "title": "Awesome Social Enterprise",
      "_slug": "RayBB/awesome-social-enterprise/week/",
      "_filepath": "/content/RayBB/awesome-social-enterprise/week/README.md",
      "url": "https://www.trackawesomelist.com/RayBB/awesome-social-enterprise/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Fellowships / Articles\n\n*   [Radical Partners](https://www.radical.partners) - Miami-based social impact accelerator.\n*   [Seaworthy Collective](https://www.seaworthycollective.com) - Miami-based BlueTech entrepreneur support organization.\n\n### Institutions üè´ / Articles\n\n*   [Pepperdine's MA in Social Entrepreneurship and Change](https://gsep.pepperdine.edu/masters-social-entrepreneurship-and-change/)",
      "content_html": "<h3><p>Fellowships / Articles</p>\n</h3><ul>\n<li><a href=\"https://www.radical.partners\" rel=\"noopener noreferrer\">Radical Partners</a> - Miami-based social impact accelerator.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.seaworthycollective.com\" rel=\"noopener noreferrer\">Seaworthy Collective</a> - Miami-based BlueTech entrepreneur support organization.</li>\n</ul>\n<h3><p>Institutions üè´ / Articles</p>\n</h3><ul>\n<li><a href=\"https://gsep.pepperdine.edu/masters-social-entrepreneurship-and-change/\" rel=\"noopener noreferrer\">Pepperdine's MA in Social Entrepreneurship and Change</a></li>\n</ul>\n",
      "date_published": "2023-04-23T08:22:06.000Z",
      "date_modified": "2023-04-23T09:02:56.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/sindresorhus/amas/week/",
      "title": "Amas",
      "_slug": "sindresorhus/amas/week/",
      "_filepath": "/content/sindresorhus/amas/week/README.md",
      "url": "https://www.trackawesomelist.com/sindresorhus/amas/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Ask these people anything!\n\n*   [Angelo Pirola (‚≠ê0)](https://github.com/angelodotnet/ama) - Microsoft (.NET) Backend Web Developer, GitHub contributor and based in Italy.",
      "content_html": "<h3><p>Ask these people anything!</p>\n</h3><ul>\n<li><a href=\"https://github.com/angelodotnet/ama\" rel=\"noopener noreferrer\">Angelo Pirola (‚≠ê0)</a> - Microsoft (.NET) Backend Web Developer, GitHub contributor and based in Italy.</li>\n</ul>\n",
      "date_published": "2023-04-23T08:07:47.000Z",
      "date_modified": "2023-04-23T08:07:47.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/kdeldycke/awesome-billing/week/",
      "title": "Awesome Billing",
      "_slug": "kdeldycke/awesome-billing/week/",
      "_filepath": "/content/kdeldycke/awesome-billing/week/README.md",
      "url": "https://www.trackawesomelist.com/kdeldycke/awesome-billing/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Fraud / Cards\n\n*   [Reproducible Machine Learning for Credit Card Fraud detection](https://fraud-detection-handbook.github.io/fraud-detection-handbook/) - A practical handbook on how to identify patterns in transactions.",
      "content_html": "<h3><p>Fraud / Cards</p>\n</h3><ul>\n<li><a href=\"https://fraud-detection-handbook.github.io/fraud-detection-handbook/\" rel=\"noopener noreferrer\">Reproducible Machine Learning for Credit Card Fraud detection</a> - A practical handbook on how to identify patterns in transactions.</li>\n</ul>\n",
      "date_published": "2023-04-22T18:39:14.000Z",
      "date_modified": "2023-04-22T18:39:14.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/unixorn/awesome-zsh-plugins/week/",
      "title": "Awesome Zsh Plugins",
      "_slug": "unixorn/awesome-zsh-plugins/week/",
      "_filepath": "/content/unixorn/awesome-zsh-plugins/week/README.md",
      "url": "https://www.trackawesomelist.com/unixorn/awesome-zsh-plugins/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Plugins / [superconsole](https://github.com/alexchmykhalo/superconsole) - Windows-only\n\n*   [aws-vault (‚≠ê90)](https://github.com/blimmer/zsh-aws-vault) - Plugin for [aws-vault (‚≠ê8.8k)](https://github.com/99designs/aws-vault). Includes tab completions.\n*   [fzf-tab (‚≠ê4k)](https://github.com/Aloxaf/fzf-tab) - Replace ZSH's default completion selection menu with [fzf (‚≠ê72k)](https://github.com/junegunn/fzf).\n*   [pnpm (leizhenpeng) (‚≠ê5)](https://github.com/Leizhenpeng/zsh-plugin-pnpm) - Adds useful aliases for common [pnpm](https://pnpm.io/) commands.\n*   [todotxt (‚≠ê0)](https://github.com/Neluji/omz-todotxt) - Adds aliases for [todo.sh (‚≠ê23)](https://github.com/benignoc/alfred-todotxt/).\n\n### Themes / [superconsole](https://github.com/alexchmykhalo/superconsole) - Windows-only\n\n*   [ai-hayasaka (‚≠ê0)](https://github.com/aeghost/ai-hayasaka-zsh-theme) - Minimalist theme with `git` status, ruby env and python virtualenv decorators.",
      "content_html": "<h3><p>Plugins / <a href=\"https://github.com/alexchmykhalo/superconsole\" rel=\"noopener noreferrer\">superconsole</a> - Windows-only</p>\n</h3><ul>\n<li><a href=\"https://github.com/blimmer/zsh-aws-vault\" rel=\"noopener noreferrer\">aws-vault (‚≠ê90)</a> - Plugin for <a href=\"https://github.com/99designs/aws-vault\" rel=\"noopener noreferrer\">aws-vault (‚≠ê8.8k)</a>. Includes tab completions.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Aloxaf/fzf-tab\" rel=\"noopener noreferrer\">fzf-tab (‚≠ê4k)</a> - Replace ZSH's default completion selection menu with <a href=\"https://github.com/junegunn/fzf\" rel=\"noopener noreferrer\">fzf (‚≠ê72k)</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Leizhenpeng/zsh-plugin-pnpm\" rel=\"noopener noreferrer\">pnpm (leizhenpeng) (‚≠ê5)</a> - Adds useful aliases for common <a href=\"https://pnpm.io/\" rel=\"noopener noreferrer\">pnpm</a> commands.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Neluji/omz-todotxt\" rel=\"noopener noreferrer\">todotxt (‚≠ê0)</a> - Adds aliases for <a href=\"https://github.com/benignoc/alfred-todotxt/\" rel=\"noopener noreferrer\">todo.sh (‚≠ê23)</a>.</li>\n</ul>\n<h3><p>Themes / <a href=\"https://github.com/alexchmykhalo/superconsole\" rel=\"noopener noreferrer\">superconsole</a> - Windows-only</p>\n</h3><ul>\n<li><a href=\"https://github.com/aeghost/ai-hayasaka-zsh-theme\" rel=\"noopener noreferrer\">ai-hayasaka (‚≠ê0)</a> - Minimalist theme with <code>git</code> status, ruby env and python virtualenv decorators.</li>\n</ul>\n",
      "date_published": "2023-04-22T14:57:21.000Z",
      "date_modified": "2023-04-23T13:55:51.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/chentsulin/awesome-graphql/week/",
      "title": "Awesome Graphql",
      "_slug": "chentsulin/awesome-graphql/week/",
      "_filepath": "/content/chentsulin/awesome-graphql/week/README.md",
      "url": "https://www.trackawesomelist.com/chentsulin/awesome-graphql/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Tools - Miscellaneous / React\n\n*   [DronaHQ](https://www.dronahq.com/) - Build internal tools, dashboards, admin panel on top of GraphQL data in minutes",
      "content_html": "<h3><p>Tools - Miscellaneous / React</p>\n</h3><ul>\n<li><a href=\"https://www.dronahq.com/\" rel=\"noopener noreferrer\">DronaHQ</a> - Build internal tools, dashboards, admin panel on top of GraphQL data in minutes</li>\n</ul>\n",
      "date_published": "2023-04-22T10:04:10.000Z",
      "date_modified": "2023-04-22T10:04:10.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/vuejs/awesome-vue/week/",
      "title": "Awesome Vue",
      "_slug": "vuejs/awesome-vue/week/",
      "_filepath": "/content/vuejs/awesome-vue/week/README.md",
      "url": "https://www.trackawesomelist.com/vuejs/awesome-vue/week/",
      "summary": "3 awesome projects updated",
      "content_text": "\n\n### Resources / Community\n\n*   [VueJS Translations Ukraine](https://t.me/vuejs_ukraine) - Telegram Group (Ukraine)\n\n### Projects Using Vue.js / Open Source\n\n*   [vue-paho-mqtt (‚≠ê26)](https://github.com/kaandesu/vue-paho-mqtt) - Easy-to-use Paho MQTT client library for Vue 3 with centralized subscription management, type support, and built-in optional alert notification library.\n*   [VueFinder File Library (‚≠ê350)](https://github.com/n1crack/vuefinder) - Web File Manager Library.\n\n### Components & Libraries / UI Components\n\n*   [vue-maplibre-gl (‚≠ê107)](https://github.com/razorness/vue-maplibre-gl) - Vue 3.x wrapper around Maplibre GL JS library written in TS. Including style switch and frame rate control.\n*   [Everright-formEditor (‚≠ê489)](https://github.com/Liberty-liu/Everright-formEditor) - A visual drag-and-drop low-code form editor",
      "content_html": "<h3><p>Resources / Community</p>\n</h3><ul>\n<li><a href=\"https://t.me/vuejs_ukraine\" rel=\"noopener noreferrer\">VueJS Translations Ukraine</a> - Telegram Group (Ukraine)</li>\n</ul>\n<h3><p>Projects Using Vue.js / Open Source</p>\n</h3><ul>\n<li><a href=\"https://github.com/kaandesu/vue-paho-mqtt\" rel=\"noopener noreferrer\">vue-paho-mqtt (‚≠ê26)</a> - Easy-to-use Paho MQTT client library for Vue 3 with centralized subscription management, type support, and built-in optional alert notification library.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/n1crack/vuefinder\" rel=\"noopener noreferrer\">VueFinder File Library (‚≠ê350)</a> - Web File Manager Library.</li>\n</ul>\n<h3><p>Components &amp; Libraries / UI Components</p>\n</h3><ul>\n<li><a href=\"https://github.com/razorness/vue-maplibre-gl\" rel=\"noopener noreferrer\">vue-maplibre-gl (‚≠ê107)</a> - Vue 3.x wrapper around Maplibre GL JS library written in TS. Including style switch and frame rate control.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Liberty-liu/Everright-formEditor\" rel=\"noopener noreferrer\">Everright-formEditor (‚≠ê489)</a> - A visual drag-and-drop low-code form editor</li>\n</ul>\n",
      "date_published": "2023-04-22T07:26:00.000Z",
      "date_modified": "2023-04-22T10:17:06.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/kdeldycke/awesome-iam/week/",
      "title": "Awesome Iam",
      "_slug": "kdeldycke/awesome-iam/week/",
      "_filepath": "/content/kdeldycke/awesome-iam/week/README.md",
      "url": "https://www.trackawesomelist.com/kdeldycke/awesome-iam/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Competitive Analysis / GDPR\n\n*   [Best-of Digital Identity (‚≠ê139)](https://github.com/jruizaranguren/best-of-digital-identity) - Ranking, popularity and activity status of open-source digital identity projects.",
      "content_html": "<h3><p>Competitive Analysis / GDPR</p>\n</h3><ul>\n<li><a href=\"https://github.com/jruizaranguren/best-of-digital-identity\" rel=\"noopener noreferrer\">Best-of Digital Identity (‚≠ê139)</a> - Ranking, popularity and activity status of open-source digital identity projects.</li>\n</ul>\n",
      "date_published": "2023-04-22T06:32:22.000Z",
      "date_modified": "2023-04-22T06:32:22.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/rothgar/awesome-tmux/week/",
      "title": "Awesome Tmux",
      "_slug": "rothgar/awesome-tmux/week/",
      "_filepath": "/content/rothgar/awesome-tmux/week/README.md",
      "url": "https://www.trackawesomelist.com/rothgar/awesome-tmux/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Tools and session management\n\n*   [twm (‚≠ê41)](https://github.com/vinnymeller/twm) A highly configurable workspace manager that is easy to extend with shell scripts, written in Rust",
      "content_html": "<h3><p>Tools and session management</p>\n</h3><ul>\n<li><a href=\"https://github.com/vinnymeller/twm\" rel=\"noopener noreferrer\">twm (‚≠ê41)</a> A highly configurable workspace manager that is easy to extend with shell scripts, written in Rust</li>\n</ul>\n",
      "date_published": "2023-04-21T21:05:30.000Z",
      "date_modified": "2023-04-21T21:05:30.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/agarrharr/awesome-cli-apps/week/",
      "title": "Awesome Cli Apps",
      "_slug": "agarrharr/awesome-cli-apps/week/",
      "_filepath": "/content/agarrharr/awesome-cli-apps/week/README.md",
      "url": "https://www.trackawesomelist.com/agarrharr/awesome-cli-apps/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Files and Directories / File Managers\n\n*   [clifm (‚≠ê1.4k)](https://github.com/leo-arch/clifm) - The command line file manager.",
      "content_html": "<h3><p>Files and Directories / File Managers</p>\n</h3><ul>\n<li><a href=\"https://github.com/leo-arch/clifm\" rel=\"noopener noreferrer\">clifm (‚≠ê1.4k)</a> - The command line file manager.</li>\n</ul>\n",
      "date_published": "2023-04-21T19:35:53.000Z",
      "date_modified": "2023-04-21T19:35:53.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/kdeldycke/awesome-falsehood/week/",
      "title": "Awesome Falsehood",
      "_slug": "kdeldycke/awesome-falsehood/week/",
      "_filepath": "/content/kdeldycke/awesome-falsehood/week/README.md",
      "url": "https://www.trackawesomelist.com/kdeldycke/awesome-falsehood/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Software Engineering\n\n*   [The weird world of Windows file paths](https://www.fileside.app/blog/2023-03-17_windows-file-paths/) - ‚ÄúOn any Unix-derived system, a path is an admirably simple thing: if it starts with a `/`, it's a path. Not so on Windows.‚Äù",
      "content_html": "<h3><p>Software Engineering</p>\n</h3><ul>\n<li><a href=\"https://www.fileside.app/blog/2023-03-17_windows-file-paths/\" rel=\"noopener noreferrer\">The weird world of Windows file paths</a> - ‚ÄúOn any Unix-derived system, a path is an admirably simple thing: if it starts with a <code>/</code>, it's a path. Not so on Windows.‚Äù</li>\n</ul>\n",
      "date_published": "2023-04-21T17:34:42.000Z",
      "date_modified": "2023-04-21T17:34:42.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/pluja/awesome-privacy/week/",
      "title": "Awesome Privacy",
      "_slug": "pluja/awesome-privacy/week/",
      "_filepath": "/content/pluja/awesome-privacy/week/README.md",
      "url": "https://www.trackawesomelist.com/pluja/awesome-privacy/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### ChatGPT\n\n*   [LocalAI (‚≠ê34k)](https://github.com/go-skynet/LocalAI) - Self-hosted, community-driven simple local OpenAI-compatible API written in go. Can be used as a drop-in replacement for OpenAI, running on CPU with consumer-grade hardware.",
      "content_html": "<h3><p>ChatGPT</p>\n</h3><ul>\n<li><a href=\"https://github.com/go-skynet/LocalAI\" rel=\"noopener noreferrer\">LocalAI (‚≠ê34k)</a> - Self-hosted, community-driven simple local OpenAI-compatible API written in go. Can be used as a drop-in replacement for OpenAI, running on CPU with consumer-grade hardware.</li>\n</ul>\n",
      "date_published": "2023-04-21T14:38:55.000Z",
      "date_modified": "2023-04-21T14:38:55.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/awesome-selfhosted/awesome-selfhosted/week/",
      "title": "Awesome Selfhosted",
      "_slug": "awesome-selfhosted/awesome-selfhosted/week/",
      "_filepath": "/content/awesome-selfhosted/awesome-selfhosted/week/README.md",
      "url": "https://www.trackawesomelist.com/awesome-selfhosted/awesome-selfhosted/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Software / Archiving and Digital Preservation (DP)\n\n*   [Webarchive (‚≠ê146)](https://github.com/derfenix/webarchive) - Lightweight self-hosted *wayback machine* that creates HTML and PDF files from your bookmarks. `BSD-3-Clause` `Go`",
      "content_html": "<h3><p>Software / Archiving and Digital Preservation (DP)</p>\n</h3><ul>\n<li><a href=\"https://github.com/derfenix/webarchive\" rel=\"noopener noreferrer\">Webarchive (‚≠ê146)</a> - Lightweight self-hosted <em>wayback machine</em> that creates HTML and PDF files from your bookmarks. <code>BSD-3-Clause</code> <code>Go</code></li>\n</ul>\n",
      "date_published": "2023-04-21T13:01:21.000Z",
      "date_modified": "2023-04-21T13:01:21.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/markets/awesome-ruby/week/",
      "title": "Awesome Ruby",
      "_slug": "markets/awesome-ruby/week/",
      "_filepath": "/content/markets/awesome-ruby/week/README.md",
      "url": "https://www.trackawesomelist.com/markets/awesome-ruby/week/",
      "summary": "4 awesome projects updated",
      "content_text": "\n\n### Database Tools\n\n*   [Online Migrations (‚≠ê694)](https://github.com/fatkodima/online_migrations) - Catch unsafe PostgreSQL migrations in development and run them easier in production.\n\n### Feature Flippers and A/B Testing\n\n*   [Unleash (‚≠ê60)](https://github.com/Unleash/unleash-client-ruby) - Ruby client for Unleash, a powerful feature toggle system that gives you a great overview over all feature toggles across all your applications and services.\n\n### Machine Learning\n\n*   [ruby-openai (‚≠ê3.1k)](https://github.com/alexrudall/ruby-openai) - OpenAI API + Ruby!\n\n### PDF\n\n*   [Grim (‚≠ê227)](https://github.com/jonmagic/grim) - Extract PDF pages as images and text. A simple Ruby API to ghostscript, imagemagick, and pdftotext.",
      "content_html": "<h3><p>Database Tools</p>\n</h3><ul>\n<li><a href=\"https://github.com/fatkodima/online_migrations\" rel=\"noopener noreferrer\">Online Migrations (‚≠ê694)</a> - Catch unsafe PostgreSQL migrations in development and run them easier in production.</li>\n</ul>\n<h3><p>Feature Flippers and A/B Testing</p>\n</h3><ul>\n<li><a href=\"https://github.com/Unleash/unleash-client-ruby\" rel=\"noopener noreferrer\">Unleash (‚≠ê60)</a> - Ruby client for Unleash, a powerful feature toggle system that gives you a great overview over all feature toggles across all your applications and services.</li>\n</ul>\n<h3><p>Machine Learning</p>\n</h3><ul>\n<li><a href=\"https://github.com/alexrudall/ruby-openai\" rel=\"noopener noreferrer\">ruby-openai (‚≠ê3.1k)</a> - OpenAI API + Ruby!</li>\n</ul>\n<h3><p>PDF</p>\n</h3><ul>\n<li><a href=\"https://github.com/jonmagic/grim\" rel=\"noopener noreferrer\">Grim (‚≠ê227)</a> - Extract PDF pages as images and text. A simple Ruby API to ghostscript, imagemagick, and pdftotext.</li>\n</ul>\n",
      "date_published": "2023-04-21T09:12:03.000Z",
      "date_modified": "2023-04-23T00:20:17.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/brillout/awesome-react-components/week/",
      "title": "Awesome React Components",
      "_slug": "brillout/awesome-react-components/week/",
      "_filepath": "/content/brillout/awesome-react-components/week/README.md",
      "url": "https://www.trackawesomelist.com/brillout/awesome-react-components/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Chart\n\n*   [echarts for react (‚≠ê4.8k)](https://github.com/hustcc/echarts-for-react) - Wrapper around beautiful Apache Echarts",
      "content_html": "<h3><p>Chart</p>\n</h3><ul>\n<li><a href=\"https://github.com/hustcc/echarts-for-react\" rel=\"noopener noreferrer\">echarts for react (‚≠ê4.8k)</a> - Wrapper around beautiful Apache Echarts</li>\n</ul>\n",
      "date_published": "2023-04-21T00:48:47.000Z",
      "date_modified": "2023-04-21T00:48:47.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/erwanlemerrer/awesome-audit-algorithms/week/",
      "title": "Awesome Audit Algorithms",
      "_slug": "erwanlemerrer/awesome-audit-algorithms/week/",
      "_filepath": "/content/erwanlemerrer/awesome-audit-algorithms/week/README.md",
      "url": "https://www.trackawesomelist.com/erwanlemerrer/awesome-audit-algorithms/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Papers / 2023\n\n*   [Confidential-PROFITT: Confidential PROof of FaIr Training of Trees](https://openreview.net/pdf?id=iIfDQVyuFD) - (ICLR) *Proposes fair decision tree learning algorithms along with zero-knowledge proof protocols to obtain a proof of fairness on the audited server.*",
      "content_html": "<h3><p>Papers / 2023</p>\n</h3><ul>\n<li><a href=\"https://openreview.net/pdf?id=iIfDQVyuFD\" rel=\"noopener noreferrer\">Confidential-PROFITT: Confidential PROof of FaIr Training of Trees</a> - (ICLR) <em>Proposes fair decision tree learning algorithms along with zero-knowledge proof protocols to obtain a proof of fairness on the audited server.</em></li>\n</ul>\n",
      "date_published": "2023-04-20T14:46:34.000Z",
      "date_modified": "2023-04-20T14:46:34.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/shuaibiyy/awesome-terraform/week/",
      "title": "Awesome Terraform",
      "_slug": "shuaibiyy/awesome-terraform/week/",
      "_filepath": "/content/shuaibiyy/awesome-terraform/week/README.md",
      "url": "https://www.trackawesomelist.com/shuaibiyy/awesome-terraform/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Tools / Community providers\n\n*   [terraform-repl (‚≠ê132)](https://github.com/paololazzari/terraform-repl) - A terraform console wrapper for a better interactive console experience.",
      "content_html": "<h3><p>Tools / Community providers</p>\n</h3><ul>\n<li><a href=\"https://github.com/paololazzari/terraform-repl\" rel=\"noopener noreferrer\">terraform-repl (‚≠ê132)</a> - A terraform console wrapper for a better interactive console experience.</li>\n</ul>\n",
      "date_published": "2023-04-20T11:17:39.000Z",
      "date_modified": "2023-04-20T11:17:39.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/jivoi/awesome-osint/week/",
      "title": "Awesome Osint",
      "_slug": "jivoi/awesome-osint/week/",
      "_filepath": "/content/jivoi/awesome-osint/week/README.md",
      "url": "https://www.trackawesomelist.com/jivoi/awesome-osint/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Real-Time Search, Social Media Search, and General Social Media Tools\n\n*   [Epieos](https://epieos.com) - Search for social accounts with e-mail and phone",
      "content_html": "<h3><p>Real-Time Search, Social Media Search, and General Social Media Tools</p>\n</h3><ul>\n<li><a href=\"https://epieos.com\" rel=\"noopener noreferrer\">Epieos</a> - Search for social accounts with e-mail and phone</li>\n</ul>\n",
      "date_published": "2023-04-20T09:16:15.000Z",
      "date_modified": "2023-04-20T09:16:15.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/ddotta/awesome-polars/week/",
      "title": "Awesome Polars",
      "_slug": "ddotta/awesome-polars/week/",
      "_filepath": "/content/ddotta/awesome-polars/week/README.md",
      "url": "https://www.trackawesomelist.com/ddotta/awesome-polars/week/",
      "summary": "3 awesome projects updated",
      "content_text": "\n\n### Tutorials & workshops / Miscellaneous\n\n*   [How to display Polars dataframes with itables](https://mwouts.github.io/itables/polars_dataframes.html) - A tutorial that explains how to display Polars dataframes with [itables](https://mwouts.github.io/itables/quick_start.html) by [@mwouts](https://github.com/mwouts).\n\n### Blog posts / Miscellaneous\n\n*   [The fastest way to read a CSV file in Python](https://itnext.io/the-fastest-way-to-read-a-csv-file-in-pandas-2-0-532c1f978201) - A blog post that compares different ways (including Polars, pyarrow and C) to read a CSV file with Python by [Finn Andersen](https://medium.com/@finndersen).\n\n### Talks and videos / Miscellaneous\n\n*   [An opinionated introduction to Polars](https://www.dropbox.com/s/fphay3yav2b2rdq/2023_polars.pdf?dl=1) - Great Polars introduction slides from [@krlng](https://github.com/krlng) at PyCon 2023.",
      "content_html": "<h3><p>Tutorials &amp; workshops / Miscellaneous</p>\n</h3><ul>\n<li><a href=\"https://mwouts.github.io/itables/polars_dataframes.html\" rel=\"noopener noreferrer\">How to display Polars dataframes with itables</a> - A tutorial that explains how to display Polars dataframes with <a href=\"https://mwouts.github.io/itables/quick_start.html\" rel=\"noopener noreferrer\">itables</a> by <a href=\"https://github.com/mwouts\" rel=\"noopener noreferrer\">@mwouts</a>.</li>\n</ul>\n<h3><p>Blog posts / Miscellaneous</p>\n</h3><ul>\n<li><a href=\"https://itnext.io/the-fastest-way-to-read-a-csv-file-in-pandas-2-0-532c1f978201\" rel=\"noopener noreferrer\">The fastest way to read a CSV file in Python</a> - A blog post that compares different ways (including Polars, pyarrow and C) to read a CSV file with Python by <a href=\"https://medium.com/@finndersen\" rel=\"noopener noreferrer\">Finn Andersen</a>.</li>\n</ul>\n<h3><p>Talks and videos / Miscellaneous</p>\n</h3><ul>\n<li><a href=\"https://www.dropbox.com/s/fphay3yav2b2rdq/2023_polars.pdf?dl=1\" rel=\"noopener noreferrer\">An opinionated introduction to Polars</a> - Great Polars introduction slides from <a href=\"https://github.com/krlng\" rel=\"noopener noreferrer\">@krlng</a> at PyCon 2023.</li>\n</ul>\n",
      "date_published": "2023-04-20T07:07:06.000Z",
      "date_modified": "2023-04-21T07:33:20.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/vitejs/awesome-vite/week/",
      "title": "Awesome Vite",
      "_slug": "vitejs/awesome-vite/week/",
      "_filepath": "/content/vitejs/awesome-vite/week/README.md",
      "url": "https://www.trackawesomelist.com/vitejs/awesome-vite/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Framework-agnostic Plugins / Integrations\n\n*   [vite-plugin-auto-mpa-html (‚≠ê9)](https://github.com/iamspark1e/vite-plugin-auto-mpa-html) - A file directory-based automated multi-page build plugin that supports HTML templates using EJS.\n\n### Vue / Transformers\n\n*   ![v3](https://img.shields.io/badge/-v3-35495e) [vite-plugin-vue-css-modules (‚≠ê20)](https://github.com/zeokku/vite-plugin-vue-css-modules) - Implicit usage of CSS Modules for template and script SFC tags with static replacement.",
      "content_html": "<h3><p>Framework-agnostic Plugins / Integrations</p>\n</h3><ul>\n<li><a href=\"https://github.com/iamspark1e/vite-plugin-auto-mpa-html\" rel=\"noopener noreferrer\">vite-plugin-auto-mpa-html (‚≠ê9)</a> - A file directory-based automated multi-page build plugin that supports HTML templates using EJS.</li>\n</ul>\n<h3><p>Vue / Transformers</p>\n</h3><ul>\n<li><img src=\"https://img.shields.io/badge/-v3-35495e\" alt=\"v3\" /> <a href=\"https://github.com/zeokku/vite-plugin-vue-css-modules\" rel=\"noopener noreferrer\">vite-plugin-vue-css-modules (‚≠ê20)</a> - Implicit usage of CSS Modules for template and script SFC tags with static replacement.</li>\n</ul>\n",
      "date_published": "2023-04-20T03:41:24.000Z",
      "date_modified": "2023-04-21T10:35:12.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/APA-Technology-Division/urban-and-regional-planning-resources/week/",
      "title": "Urban and Regional Planning Resources",
      "_slug": "APA-Technology-Division/urban-and-regional-planning-resources/week/",
      "_filepath": "/content/APA-Technology-Division/urban-and-regional-planning-resources/week/README.md",
      "url": "https://www.trackawesomelist.com/APA-Technology-Division/urban-and-regional-planning-resources/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Planning Data Specifications / Transportation\n\n*   [OpenSidewalks (‚≠ê52)](https://github.com/OpenSidewalks/OpenSidewalks-Schema) - A data specification for routable pedestrian networks and describing and sharing pedestrian network and pedestrian network-adjacent data.",
      "content_html": "<h3><p>Planning Data Specifications / Transportation</p>\n</h3><ul>\n<li><a href=\"https://github.com/OpenSidewalks/OpenSidewalks-Schema\" rel=\"noopener noreferrer\">OpenSidewalks (‚≠ê52)</a> - A data specification for routable pedestrian networks and describing and sharing pedestrian network and pedestrian network-adjacent data.</li>\n</ul>\n",
      "date_published": "2023-04-19T21:30:08.000Z",
      "date_modified": "2023-04-19T21:30:08.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/arbox/machine-learning-with-ruby/week/",
      "title": "Machine Learning with Ruby",
      "_slug": "arbox/machine-learning-with-ruby/week/",
      "_filepath": "/content/arbox/machine-learning-with-ruby/week/README.md",
      "url": "https://www.trackawesomelist.com/arbox/machine-learning-with-ruby/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Machine Learning Libraries / Vector search\n\n*   [milvus (‚≠ê29)](https://github.com/andreibondarev/milvus) ‚Äî\n    Ruby client for Milvus Vector DB.\n*   [pinecone (‚≠ê65)](https://github.com/ScotterC/pinecone) ‚Äî\n    Ruby client for Pinecone Vector DB.\n*   [qdrant-ruby (‚≠ê48)](https://github.com/andreibondarev/qdrant-ruby) ‚Äî\n    Ruby wrapper for the Qdrant vector search database API.\n*   [weaviate-ruby (‚≠ê55)](https://github.com/andreibondarev/weaviate-ruby) ‚Äî\n    Ruby wrapper for the Weaviate vector search database API.",
      "content_html": "<h3><p>Machine Learning Libraries / Vector search</p>\n</h3><ul>\n<li><a href=\"https://github.com/andreibondarev/milvus\" rel=\"noopener noreferrer\">milvus (‚≠ê29)</a> ‚Äî\nRuby client for Milvus Vector DB.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ScotterC/pinecone\" rel=\"noopener noreferrer\">pinecone (‚≠ê65)</a> ‚Äî\nRuby client for Pinecone Vector DB.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/andreibondarev/qdrant-ruby\" rel=\"noopener noreferrer\">qdrant-ruby (‚≠ê48)</a> ‚Äî\nRuby wrapper for the Qdrant vector search database API.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/andreibondarev/weaviate-ruby\" rel=\"noopener noreferrer\">weaviate-ruby (‚≠ê55)</a> ‚Äî\nRuby wrapper for the Weaviate vector search database API.</li>\n</ul>\n",
      "date_published": "2023-04-19T20:06:22.000Z",
      "date_modified": "2023-04-22T14:51:55.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/academic/awesome-datascience/week/",
      "title": "Awesome Datascience",
      "_slug": "academic/awesome-datascience/week/",
      "_filepath": "/content/academic/awesome-datascience/week/README.md",
      "url": "https://www.trackawesomelist.com/academic/awesome-datascience/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### MOOC's\n\n*   [Programming with Julia](https://www.udemy.com/course/programming-with-julia/)",
      "content_html": "<h3><p>MOOC's</p>\n</h3><ul>\n<li><a href=\"https://www.udemy.com/course/programming-with-julia/\" rel=\"noopener noreferrer\">Programming with Julia</a></li>\n</ul>\n",
      "date_published": "2023-04-19T19:52:15.000Z",
      "date_modified": "2023-04-19T19:52:15.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/rust-embedded/awesome-embedded-rust/week/",
      "title": "Awesome Embedded Rust",
      "_slug": "rust-embedded/awesome-embedded-rust/week/",
      "_filepath": "/content/rust-embedded/awesome-embedded-rust/week/README.md",
      "url": "https://www.trackawesomelist.com/rust-embedded/awesome-embedded-rust/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### HAL implementation crates / Espressif\n\n*   [`esp-idf-hal`](https://github.com/esp-rs/esp-idf-hal)\n    *   An embedded-hal implementation for Rust on ESP32 microcontrollers and ESP-IDF\n*   [`esp-hal`](https://github.com/esp-rs/esp-hal)\n    *   A `no_std` Hardware Abstraction Layers for ESP32 microcontrollers\n\n### Firmware projects / WIP\n\n*   [ŒºLA (‚≠ê860)](https://github.com/dotcypress/ula): Micro Logic Analyzer for RP2040",
      "content_html": "<h3><p>HAL implementation crates / Espressif</p>\n</h3><ul>\n<li><a href=\"https://github.com/esp-rs/esp-idf-hal\" rel=\"noopener noreferrer\"><code>esp-idf-hal</code></a><ul>\n<li>An embedded-hal implementation for Rust on ESP32 microcontrollers and ESP-IDF</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/esp-rs/esp-hal\" rel=\"noopener noreferrer\"><code>esp-hal</code></a><ul>\n<li>A <code>no_std</code> Hardware Abstraction Layers for ESP32 microcontrollers</li>\n</ul>\n</li>\n</ul>\n<h3><p>Firmware projects / WIP</p>\n</h3><ul>\n<li><a href=\"https://github.com/dotcypress/ula\" rel=\"noopener noreferrer\">ŒºLA (‚≠ê860)</a>: Micro Logic Analyzer for RP2040</li>\n</ul>\n",
      "date_published": "2023-04-19T17:58:26.000Z",
      "date_modified": "2023-04-21T09:22:52.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/Fr0sT-Brutal/awesome-pascal/week/",
      "title": "Awesome Pascal",
      "_slug": "Fr0sT-Brutal/awesome-pascal/week/",
      "_filepath": "/content/Fr0sT-Brutal/awesome-pascal/week/README.md",
      "url": "https://www.trackawesomelist.com/Fr0sT-Brutal/awesome-pascal/week/",
      "summary": "13 awesome projects updated",
      "content_text": "\n\n### General Libraries\n\n*   [mORMot (‚≠ê808)](https://github.com/synopse/mORMot). `[Delphi]` `[FPC]` Client-Server ORM/ODM SOA MVC framework for Delphi 6 and higher, or FPC 2.7. Direct SQL/NoSQL database access, ORM/ODM over objects, RESTful ORM and SOA services via interfaces over high performance HTTP server, MVC/MVVM web sites, testing including mocks and stubs, logging, cryptography, compression, command line parser, threading, service/daemon support; huge documentation.\n*   [minilib (‚≠ê77)](https://github.com/parmaja/minilib). `[Delphi]` `[FPC]` cross platform library, Socket wrapper (include SSL and TLS), and Database connection (SQLite, PostgreSQL, FirebirdSQL, MariaDB), XML reader and writer, ComPort (COM1, COM2 etc).\n*   [Fido Library (‚≠ê47)](https://github.com/mirko-bianco/FidoLib). `[Delphi]` The Fido library has been created to make the life of a Delphi developer easier by following the \"describe behavior instead of coding it, whenever is possible\" design principle. Below is a list of the most important core features: Mappers, JSON marshalling and unmarshalling, Virtual database features, Virtual Api clients, Virtual Api servers, Websockets, Consul and Fabio support, Boxes, Events driven architecture, Functional programming, Currying, Caching, Channels\n\n### Audio\n\n*   [FMXAudio (‚≠ê60)](https://github.com/HemulGM/FMXAudio). `[Delphi]` Audio player component based [BASS](https://www.un4seen.com) for FMX (Windows, Android)\n\n### Graphic\n\n*   [Blen2d4Delphi (‚≠ê19)](https://github.com/fatihtsp/Blen2d4Delphi). `[Delphi]` Blend2D is a high performance 2D vector graphics engine written in C++ and released under the Zlib license. The engine utilizes a built-in JIT compiler to generate optimized pipelines at runtime and is capable of using multiple threads to boost the performance beyond the possibilities of single-threaded rendering.\n*   [Delphi wrapper for libdmtx (‚≠ê8)](https://github.com/JanOosting/delphidmtx). `[Delphi]` Libdmtx is a software library that enables programs to read and write Data Matrix barcodes of the modern ECC200 variety. The library runs natively on several platforms and can be accessed by multiple languages using the libdmtx language wrappers\n\n### Serial port\n\n*   [ComPortDriver (‚≠ê58)](https://github.com/MHumm/ComPortDriver). '\\[Delphi]' Delphi/C++ Builder serial communications component. Tested up to 921600 baud. Supports sending break as well. Works asynchronously by polling via timer (interval configurable). Demo included.\n*   [ComPort Library (‚≠ê92)](https://github.com/CWBudde/ComPort-Library). `[Delphi]` COM Port Library for Delphi (fork from SourceForge) . The ComPort Library contains code to access COM Ports. Originally, the COM port was the name of the serial port interface of IBM-PC compatible computers. While nowadays COM ports get less important for communication in favor for USB access, it is still in use as virtual ports, especially as simple communication protocol for maker boards.\n*   [Usb serial controller for Android (‚≠ê1.9k)](https://github.com/felHR85/UsbSerial) `[Delphi]` Usb serial controller for Android\n\n### Event bus\n\n*   [PubSub Chimera](https://code.google.com/p/pubsubchimera). `[Delphi]` Open Source (MIT License) library for Delphi which provides a fast and cross platform PubSub and Message Queue implementation under a license that doesn't suck.\n*   [Delphi Event Bus (‚≠ê486)](https://github.com/spinettaro/delphi-event-bus) (for short DEB). `[Delphi]` Event Bus framework for Delphi.\n*   [DelphiEventBus (‚≠ê40)](https://github.com/BitecSPB/DelphiEventBus). `[Delphi]` Yet another Event Bus framework for Delphi, with annotations and rich event filtering.\n*   [VSoft.Messaging (‚≠ê56)](https://github.com/VSoftTechnologies/VSoft.Messaging). `[Delphi]` Libary that provides an internal synchronous/asynchronous publish/subscribe messaging system for Delphi applications.\n*   [iPub Messaging (‚≠ê58)](https://github.com/viniciusfbb/ipub-messaging). `[Delphi]` Thread safe, asynchronous and simplistic messaging system for communication between classes / layers in delphi created by the iPub team.\n*   [NX-Horizon (‚≠ê123)](https://github.com/dalijap/nx-horizon). `[Delphi]` Event Bus for Delphi. Implements the publish/subscribe pattern, supports sync/async types of event delivery, simple in both implementation and usage, fast, full thread safety.\n\n### Other GUI\n\n*   [FMXTrayIcon (‚≠ê28)](https://github.com/HemulGM/FMXTrayIcon). `[Delphi]` TrayIcon for FMX Windows\n*   [Form Designer component for Delphi (VCL) (‚≠ê75)](https://github.com/havlicekp/form-designer). `[Delphi]` Form Designer (TFormDesigner) can be used to design and modify Delphi (VCL) forms at runtime. The behavior and appearance is similar to that of Delphi IDE.\n\n### Database\n\n*   [SQLite for Delphi and FreePascal/Lazarus (‚≠ê128)](https://github.com/plashenkov/SQLite3-Delphi-FPC). `[Delphi]` `[FPC]` Complete SQLite3 API translation for Delphi and FreePascal/Lazarus, as well as a simple Unicode-enabled object wrapper to simplify the use of this database engine.\n\n### Machine Learning\n\n*   [Keras4Delphi (‚≠ê55)](https://github.com/Pigrecos/Keras4Delphi). `[Delphi]` High-level neural networks API, written in Pascal with Python Binding\n*   [Marvin.IA (‚≠ê47)](https://github.com/marvinbraga/Marvin.IA). `[Delphi]` Machine learning collection of object-oriented Pascal primitives (only interfaces and classes).\n*   [TensorFlow.Delphi (‚≠ê79)](https://github.com/Pigrecos/TensorFlow.Delphi). `[Delphi]` [TensorFlow](https://tensorflow.org) library binding for Delphi. It aims to implement the complete Tensorflow API in Delphi which allows Pascal developers to develop, train and deploy Machine Learning models with the Pascal Delphi\n\n### Memory managers\n\n*   [Delphi64RTL (‚≠ê37)](https://github.com/RDP1974/Delphi64RTL). `[Delphi]` Object Pascal wrappers from Intel Integrated Performance Primitives and Intel Threading Building Blocks royalty-free packages. Includes lock-free scalable allocator, simd enabled rtl subset routines (memory fill, copy, compare) and accelerated zlib compression\r\n    // *Uses Intel DLLs for accelerated low-level memory manipulations*\n\n### Other non-visual\n\n*   [TDiff (‚≠ê58)](https://github.com/rickard67/TextDiff). `[Delphi]` `[FPC]` Text compare component for Delphi and Free Pascal. Dramatically simplify programming tasks that require calculations of 'shortest path' or 'longest common sequence' as typically required in file compare utilities.\n*   [GraphQL for Delphi (‚≠ê71)](https://github.com/lminuti/graphql). `[Delphi]` Simple implementation for GraphQL, a query language for APIs created by Facebook. GraphQL is a query language for your API and a server-side runtime for executing queries using a type system you define for your data. GraphQL isn't tied to any specific database or storage engine and is instead backed by your existing code and data.\n*   [GraphQL Constructor (‚≠ê10)](https://github.com/HemulGM/GraphQL). `[Delphi]` GraphQL Constructor (constructor only)\n\n### OS\n\n*   [SVGShellExtensions (‚≠ê168)](https://github.com/EtheaDev/SVGShellExtensions). `[Delphi]` Shell extensions for SVG files (Preview Panel, Thumbnail Icon, SVG Editor)\n*   [MarkdownShellExtensions (‚≠ê88)](https://github.com/EtheaDev/MarkdownShellExtensions). `[Delphi]` Markdown file Shell Extensions for Windows Explorer plus a Markdown file editor with instant preview\n\n### Report generating\n\n*   [Kryvich's Delphi Reporter (‚≠ê18)](https://github.com/Kryuski/kryvich-delphi-reporter). `[Delphi]` Simple but powerful reporting tool for Embarcadero's (CodeGear, Borland) Delphi. It generates reports in TXT, RTF, HTML and XML formats based on custom templates and information from any TDataSet compatible data sets.\n\n### Other\n\n*   [James - The Delphi Project Manager (‚≠ê51)](https://github.com/alefragnani/delphi-james). `[Delphi]` It makes your life easier while switching from one project to another. If you see yourself manually installing components and updating Delphi settings every time you have to switch from one project to another, James may help you.",
      "content_html": "<h3><p>General Libraries</p>\n</h3><ul>\n<li><a href=\"https://github.com/synopse/mORMot\" rel=\"noopener noreferrer\">mORMot (‚≠ê808)</a>. <code>[Delphi]</code> <code>[FPC]</code> Client-Server ORM/ODM SOA MVC framework for Delphi 6 and higher, or FPC 2.7. Direct SQL/NoSQL database access, ORM/ODM over objects, RESTful ORM and SOA services via interfaces over high performance HTTP server, MVC/MVVM web sites, testing including mocks and stubs, logging, cryptography, compression, command line parser, threading, service/daemon support; huge documentation.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/parmaja/minilib\" rel=\"noopener noreferrer\">minilib (‚≠ê77)</a>. <code>[Delphi]</code> <code>[FPC]</code> cross platform library, Socket wrapper (include SSL and TLS), and Database connection (SQLite, PostgreSQL, FirebirdSQL, MariaDB), XML reader and writer, ComPort (COM1, COM2 etc).</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mirko-bianco/FidoLib\" rel=\"noopener noreferrer\">Fido Library (‚≠ê47)</a>. <code>[Delphi]</code> The Fido library has been created to make the life of a Delphi developer easier by following the \"describe behavior instead of coding it, whenever is possible\" design principle. Below is a list of the most important core features: Mappers, JSON marshalling and unmarshalling, Virtual database features, Virtual Api clients, Virtual Api servers, Websockets, Consul and Fabio support, Boxes, Events driven architecture, Functional programming, Currying, Caching, Channels</li>\n</ul>\n<h3><p>Audio</p>\n</h3><ul>\n<li><a href=\"https://github.com/HemulGM/FMXAudio\" rel=\"noopener noreferrer\">FMXAudio (‚≠ê60)</a>. <code>[Delphi]</code> Audio player component based <a href=\"https://www.un4seen.com\" rel=\"noopener noreferrer\">BASS</a> for FMX (Windows, Android)</li>\n</ul>\n<h3><p>Graphic</p>\n</h3><ul>\n<li><a href=\"https://github.com/fatihtsp/Blen2d4Delphi\" rel=\"noopener noreferrer\">Blen2d4Delphi (‚≠ê19)</a>. <code>[Delphi]</code> Blend2D is a high performance 2D vector graphics engine written in C++ and released under the Zlib license. The engine utilizes a built-in JIT compiler to generate optimized pipelines at runtime and is capable of using multiple threads to boost the performance beyond the possibilities of single-threaded rendering.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/JanOosting/delphidmtx\" rel=\"noopener noreferrer\">Delphi wrapper for libdmtx (‚≠ê8)</a>. <code>[Delphi]</code> Libdmtx is a software library that enables programs to read and write Data Matrix barcodes of the modern ECC200 variety. The library runs natively on several platforms and can be accessed by multiple languages using the libdmtx language wrappers</li>\n</ul>\n<h3><p>Serial port</p>\n</h3><ul>\n<li><a href=\"https://github.com/MHumm/ComPortDriver\" rel=\"noopener noreferrer\">ComPortDriver (‚≠ê58)</a>. '[Delphi]' Delphi/C++ Builder serial communications component. Tested up to 921600 baud. Supports sending break as well. Works asynchronously by polling via timer (interval configurable). Demo included.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/CWBudde/ComPort-Library\" rel=\"noopener noreferrer\">ComPort Library (‚≠ê92)</a>. <code>[Delphi]</code> COM Port Library for Delphi (fork from SourceForge) . The ComPort Library contains code to access COM Ports. Originally, the COM port was the name of the serial port interface of IBM-PC compatible computers. While nowadays COM ports get less important for communication in favor for USB access, it is still in use as virtual ports, especially as simple communication protocol for maker boards.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/felHR85/UsbSerial\" rel=\"noopener noreferrer\">Usb serial controller for Android (‚≠ê1.9k)</a> <code>[Delphi]</code> Usb serial controller for Android</li>\n</ul>\n<h3><p>Event bus</p>\n</h3><ul>\n<li><a href=\"https://code.google.com/p/pubsubchimera\" rel=\"noopener noreferrer\">PubSub Chimera</a>. <code>[Delphi]</code> Open Source (MIT License) library for Delphi which provides a fast and cross platform PubSub and Message Queue implementation under a license that doesn't suck.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/spinettaro/delphi-event-bus\" rel=\"noopener noreferrer\">Delphi Event Bus (‚≠ê486)</a> (for short DEB). <code>[Delphi]</code> Event Bus framework for Delphi.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/BitecSPB/DelphiEventBus\" rel=\"noopener noreferrer\">DelphiEventBus (‚≠ê40)</a>. <code>[Delphi]</code> Yet another Event Bus framework for Delphi, with annotations and rich event filtering.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/VSoftTechnologies/VSoft.Messaging\" rel=\"noopener noreferrer\">VSoft.Messaging (‚≠ê56)</a>. <code>[Delphi]</code> Libary that provides an internal synchronous/asynchronous publish/subscribe messaging system for Delphi applications.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/viniciusfbb/ipub-messaging\" rel=\"noopener noreferrer\">iPub Messaging (‚≠ê58)</a>. <code>[Delphi]</code> Thread safe, asynchronous and simplistic messaging system for communication between classes / layers in delphi created by the iPub team.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/dalijap/nx-horizon\" rel=\"noopener noreferrer\">NX-Horizon (‚≠ê123)</a>. <code>[Delphi]</code> Event Bus for Delphi. Implements the publish/subscribe pattern, supports sync/async types of event delivery, simple in both implementation and usage, fast, full thread safety.</li>\n</ul>\n<h3><p>Other GUI</p>\n</h3><ul>\n<li><a href=\"https://github.com/HemulGM/FMXTrayIcon\" rel=\"noopener noreferrer\">FMXTrayIcon (‚≠ê28)</a>. <code>[Delphi]</code> TrayIcon for FMX Windows</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/havlicekp/form-designer\" rel=\"noopener noreferrer\">Form Designer component for Delphi (VCL) (‚≠ê75)</a>. <code>[Delphi]</code> Form Designer (TFormDesigner) can be used to design and modify Delphi (VCL) forms at runtime. The behavior and appearance is similar to that of Delphi IDE.</li>\n</ul>\n<h3><p>Database</p>\n</h3><ul>\n<li><a href=\"https://github.com/plashenkov/SQLite3-Delphi-FPC\" rel=\"noopener noreferrer\">SQLite for Delphi and FreePascal/Lazarus (‚≠ê128)</a>. <code>[Delphi]</code> <code>[FPC]</code> Complete SQLite3 API translation for Delphi and FreePascal/Lazarus, as well as a simple Unicode-enabled object wrapper to simplify the use of this database engine.</li>\n</ul>\n<h3><p>Machine Learning</p>\n</h3><ul>\n<li><a href=\"https://github.com/Pigrecos/Keras4Delphi\" rel=\"noopener noreferrer\">Keras4Delphi (‚≠ê55)</a>. <code>[Delphi]</code> High-level neural networks API, written in Pascal with Python Binding</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/marvinbraga/Marvin.IA\" rel=\"noopener noreferrer\">Marvin.IA (‚≠ê47)</a>. <code>[Delphi]</code> Machine learning collection of object-oriented Pascal primitives (only interfaces and classes).</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Pigrecos/TensorFlow.Delphi\" rel=\"noopener noreferrer\">TensorFlow.Delphi (‚≠ê79)</a>. <code>[Delphi]</code> <a href=\"https://tensorflow.org\" rel=\"noopener noreferrer\">TensorFlow</a> library binding for Delphi. It aims to implement the complete Tensorflow API in Delphi which allows Pascal developers to develop, train and deploy Machine Learning models with the Pascal Delphi</li>\n</ul>\n<h3><p>Memory managers</p>\n</h3><ul>\n<li><a href=\"https://github.com/RDP1974/Delphi64RTL\" rel=\"noopener noreferrer\">Delphi64RTL (‚≠ê37)</a>. <code>[Delphi]</code> Object Pascal wrappers from Intel Integrated Performance Primitives and Intel Threading Building Blocks royalty-free packages. Includes lock-free scalable allocator, simd enabled rtl subset routines (memory fill, copy, compare) and accelerated zlib compression\n// <em>Uses Intel DLLs for accelerated low-level memory manipulations</em></li>\n</ul>\n<h3><p>Other non-visual</p>\n</h3><ul>\n<li><a href=\"https://github.com/rickard67/TextDiff\" rel=\"noopener noreferrer\">TDiff (‚≠ê58)</a>. <code>[Delphi]</code> <code>[FPC]</code> Text compare component for Delphi and Free Pascal. Dramatically simplify programming tasks that require calculations of 'shortest path' or 'longest common sequence' as typically required in file compare utilities.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/lminuti/graphql\" rel=\"noopener noreferrer\">GraphQL for Delphi (‚≠ê71)</a>. <code>[Delphi]</code> Simple implementation for GraphQL, a query language for APIs created by Facebook. GraphQL is a query language for your API and a server-side runtime for executing queries using a type system you define for your data. GraphQL isn't tied to any specific database or storage engine and is instead backed by your existing code and data.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/HemulGM/GraphQL\" rel=\"noopener noreferrer\">GraphQL Constructor (‚≠ê10)</a>. <code>[Delphi]</code> GraphQL Constructor (constructor only)</li>\n</ul>\n<h3><p>OS</p>\n</h3><ul>\n<li><a href=\"https://github.com/EtheaDev/SVGShellExtensions\" rel=\"noopener noreferrer\">SVGShellExtensions (‚≠ê168)</a>. <code>[Delphi]</code> Shell extensions for SVG files (Preview Panel, Thumbnail Icon, SVG Editor)</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/EtheaDev/MarkdownShellExtensions\" rel=\"noopener noreferrer\">MarkdownShellExtensions (‚≠ê88)</a>. <code>[Delphi]</code> Markdown file Shell Extensions for Windows Explorer plus a Markdown file editor with instant preview</li>\n</ul>\n<h3><p>Report generating</p>\n</h3><ul>\n<li><a href=\"https://github.com/Kryuski/kryvich-delphi-reporter\" rel=\"noopener noreferrer\">Kryvich's Delphi Reporter (‚≠ê18)</a>. <code>[Delphi]</code> Simple but powerful reporting tool for Embarcadero's (CodeGear, Borland) Delphi. It generates reports in TXT, RTF, HTML and XML formats based on custom templates and information from any TDataSet compatible data sets.</li>\n</ul>\n<h3><p>Other</p>\n</h3><ul>\n<li><a href=\"https://github.com/alefragnani/delphi-james\" rel=\"noopener noreferrer\">James - The Delphi Project Manager (‚≠ê51)</a>. <code>[Delphi]</code> It makes your life easier while switching from one project to another. If you see yourself manually installing components and updating Delphi settings every time you have to switch from one project to another, James may help you.</li>\n</ul>\n",
      "date_published": "2023-04-19T15:06:27.000Z",
      "date_modified": "2023-04-20T09:38:49.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/directus-community/awesome-directus/week/",
      "title": "Awesome Directus",
      "_slug": "directus-community/awesome-directus/week/",
      "_filepath": "/content/directus-community/awesome-directus/week/README.md",
      "url": "https://www.trackawesomelist.com/directus-community/awesome-directus/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Extensions / Community\n\n*   [Generate Types (‚≠ê245)](https://github.com/maltejur/directus-extension-generate-types) - Adds a module for generating typescript types for a Directus JS-SDK connected to that Directus database. Also can generate Python or OpenAPI types.\n*   [Computed Interface (‚≠ê219)](https://github.com/rezo-labs/directus-extension-computed-interface) - Perform computed value based on other fields.",
      "content_html": "<h3><p>Extensions / Community</p>\n</h3><ul>\n<li><a href=\"https://github.com/maltejur/directus-extension-generate-types\" rel=\"noopener noreferrer\">Generate Types (‚≠ê245)</a> - Adds a module for generating typescript types for a Directus JS-SDK connected to that Directus database. Also can generate Python or OpenAPI types.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/rezo-labs/directus-extension-computed-interface\" rel=\"noopener noreferrer\">Computed Interface (‚≠ê219)</a> - Perform computed value based on other fields.</li>\n</ul>\n",
      "date_published": "2023-04-19T11:38:22.000Z",
      "date_modified": "2023-04-20T07:52:50.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/croqaz/awesome-decentralized/week/",
      "title": "Awesome Decentralized",
      "_slug": "croqaz/awesome-decentralized/week/",
      "_filepath": "/content/croqaz/awesome-decentralized/week/README.md",
      "url": "https://www.trackawesomelist.com/croqaz/awesome-decentralized/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Applications\n\n*   [Nostr (‚≠ê11k)](https://github.com/nostr-protocol/nostr) - A decentralized social network with a chance of working. A simple, open protocol that enables a truly censorship-resistant and global social network (<https://nostr.com/>)",
      "content_html": "<h3><p>Applications</p>\n</h3><ul>\n<li><a href=\"https://github.com/nostr-protocol/nostr\" rel=\"noopener noreferrer\">Nostr (‚≠ê11k)</a> - A decentralized social network with a chance of working. A simple, open protocol that enables a truly censorship-resistant and global social network (<a href=\"https://nostr.com/\" rel=\"noopener noreferrer\">https://nostr.com/</a>)</li>\n</ul>\n",
      "date_published": "2023-04-19T11:22:02.000Z",
      "date_modified": "2023-04-19T11:22:02.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/lvwzhen/tools/week/",
      "title": "Tools",
      "_slug": "lvwzhen/tools/week/",
      "_filepath": "/content/lvwzhen/tools/week/README.md",
      "url": "https://www.trackawesomelist.com/lvwzhen/tools/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Placeholder\n\n*   [placehold.it](https://place-hold.it/)",
      "content_html": "<h3><p>Placeholder</p>\n</h3><ul>\n<li><a href=\"https://place-hold.it/\" rel=\"noopener noreferrer\">placehold.it</a></li>\n</ul>\n",
      "date_published": "2023-04-19T08:51:30.000Z",
      "date_modified": "2023-04-19T08:51:30.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/avelino/awesome-go/week/",
      "title": "Awesome Go",
      "_slug": "avelino/awesome-go/week/",
      "_filepath": "/content/avelino/awesome-go/week/README.md",
      "url": "https://www.trackawesomelist.com/avelino/awesome-go/week/",
      "summary": "5 awesome projects updated",
      "content_text": "\n\n### Continuous Integration\n\n*   [go-test-coverage (‚≠ê157)](https://github.com/vladopajic/go-test-coverage) - Tool and GitHub action which reports issues when test coverage is below set threshold.\n\n### Caches\n\n*   [imcache (‚≠ê125)](https://github.com/erni27/imcache) - A generic in-memory cache Go library. It supports expiration, sliding expiration, max entries limit, eviction callbacks and sharding.\n*   [theine (‚≠ê335)](https://github.com/Yiling-J/theine-go) - High performance, near optimal in-memory cache with proactive TTL expiration and generics.\n\n### Images\n\n*   [color-extractor (‚≠ê99)](https://github.com/marekm4/color-extractor) - Dominant color extractor with no external dependencies.\n\n### Logging\n\n*   [log (‚≠ê3)](https://github.com/no-src/log) - A simple logging framework out of the box.\n\n### Other Software / Libraries for creating HTTP middlewares\n\n*   [zs](https://git.mills.io/prologic/zs) - an extremely minimal static site generator.",
      "content_html": "<h3><p>Continuous Integration</p>\n</h3><ul>\n<li><a href=\"https://github.com/vladopajic/go-test-coverage\" rel=\"noopener noreferrer\">go-test-coverage (‚≠ê157)</a> - Tool and GitHub action which reports issues when test coverage is below set threshold.</li>\n</ul>\n<h3><p>Caches</p>\n</h3><ul>\n<li><a href=\"https://github.com/erni27/imcache\" rel=\"noopener noreferrer\">imcache (‚≠ê125)</a> - A generic in-memory cache Go library. It supports expiration, sliding expiration, max entries limit, eviction callbacks and sharding.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Yiling-J/theine-go\" rel=\"noopener noreferrer\">theine (‚≠ê335)</a> - High performance, near optimal in-memory cache with proactive TTL expiration and generics.</li>\n</ul>\n<h3><p>Images</p>\n</h3><ul>\n<li><a href=\"https://github.com/marekm4/color-extractor\" rel=\"noopener noreferrer\">color-extractor (‚≠ê99)</a> - Dominant color extractor with no external dependencies.</li>\n</ul>\n<h3><p>Logging</p>\n</h3><ul>\n<li><a href=\"https://github.com/no-src/log\" rel=\"noopener noreferrer\">log (‚≠ê3)</a> - A simple logging framework out of the box.</li>\n</ul>\n<h3><p>Other Software / Libraries for creating HTTP middlewares</p>\n</h3><ul>\n<li><a href=\"https://git.mills.io/prologic/zs\" rel=\"noopener noreferrer\">zs</a> - an extremely minimal static site generator.</li>\n</ul>\n",
      "date_published": "2023-04-19T05:09:24.000Z",
      "date_modified": "2023-04-23T03:55:44.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/beardicus/awesome-plotters/week/",
      "title": "Awesome Plotters",
      "_slug": "beardicus/awesome-plotters/week/",
      "_filepath": "/content/beardicus/awesome-plotters/week/README.md",
      "url": "https://www.trackawesomelist.com/beardicus/awesome-plotters/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Inspiration, Instruction, and Research / Fonts\n\n*   [CuriousMarc: Refilling or Replacing Vintage HP Plotter Pens](https://www.youtube.com/watch?v=h-oj4HrTH14) - Video showing how to open, clean, and refill vintage HP plotter pens.\n\n### Manuals, Ephemera, Papers, and Patents / Ephemera\n\n*   [Hewlett-Packard Journal Volume 32 Number 10](https://archive.org/details/Hewlett-Packard_Journal_Vol._32_No._10_1981-10_Hewlett-Packard) - Multiple articles about the development of the HP Model 7580A plotter.",
      "content_html": "<h3><p>Inspiration, Instruction, and Research / Fonts</p>\n</h3><ul>\n<li><a href=\"https://www.youtube.com/watch?v=h-oj4HrTH14\" rel=\"noopener noreferrer\">CuriousMarc: Refilling or Replacing Vintage HP Plotter Pens</a> - Video showing how to open, clean, and refill vintage HP plotter pens.</li>\n</ul>\n<h3><p>Manuals, Ephemera, Papers, and Patents / Ephemera</p>\n</h3><ul>\n<li><a href=\"https://archive.org/details/Hewlett-Packard_Journal_Vol._32_No._10_1981-10_Hewlett-Packard\" rel=\"noopener noreferrer\">Hewlett-Packard Journal Volume 32 Number 10</a> - Multiple articles about the development of the HP Model 7580A plotter.</li>\n</ul>\n",
      "date_published": "2023-04-19T01:01:43.000Z",
      "date_modified": "2023-04-21T19:39:41.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/iipc/awesome-web-archiving/week/",
      "title": "Awesome Web Archiving",
      "_slug": "iipc/awesome-web-archiving/week/",
      "_filepath": "/content/iipc/awesome-web-archiving/week/README.md",
      "url": "https://www.trackawesomelist.com/iipc/awesome-web-archiving/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Tools & Software / Utilities\n\n*   [warcdedupe](https://gitlab.com/taricorp/warcdedupe) - WARC deduplication tool (and WARC library) written in Rust. (In Development)",
      "content_html": "<h3><p>Tools &amp; Software / Utilities</p>\n</h3><ul>\n<li><a href=\"https://gitlab.com/taricorp/warcdedupe\" rel=\"noopener noreferrer\">warcdedupe</a> - WARC deduplication tool (and WARC library) written in Rust. (In Development)</li>\n</ul>\n",
      "date_published": "2023-04-19T00:28:39.000Z",
      "date_modified": "2023-04-19T00:28:39.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/analysis-tools-dev/static-analysis/week/",
      "title": "Static Analysis",
      "_slug": "analysis-tools-dev/static-analysis/week/",
      "_filepath": "/content/analysis-tools-dev/static-analysis/week/README.md",
      "url": "https://www.trackawesomelist.com/analysis-tools-dev/static-analysis/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Programming Languages / [Other](#other-1)\n\n*   [ruff](https://astral.sh/ruff) ‚Äî Fast Python linter, written in Rust. 10-100x faster than existing linters. Compatible with Python 3.10. Supports file watcher.\n\n### Multiple languages / [Other](#other-1)\n\n*   [Goodcheck](https://sider.github.io/goodcheck) ‚Äî Regexp based customizable linter.",
      "content_html": "<h3><p>Programming Languages / <a href=\"#other-1\">Other</a></p>\n</h3><ul>\n<li><a href=\"https://astral.sh/ruff\" rel=\"noopener noreferrer\">ruff</a> ‚Äî Fast Python linter, written in Rust. 10-100x faster than existing linters. Compatible with Python 3.10. Supports file watcher.</li>\n</ul>\n<h3><p>Multiple languages / <a href=\"#other-1\">Other</a></p>\n</h3><ul>\n<li><a href=\"https://sider.github.io/goodcheck\" rel=\"noopener noreferrer\">Goodcheck</a> ‚Äî Regexp based customizable linter.</li>\n</ul>\n",
      "date_published": "2023-04-18T22:21:55.000Z",
      "date_modified": "2023-04-18T22:28:35.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/catdevnull/awesome-zig/week/",
      "title": "Awesome Zig",
      "_slug": "catdevnull/awesome-zig/week/",
      "_filepath": "/content/catdevnull/awesome-zig/week/README.md",
      "url": "https://www.trackawesomelist.com/catdevnull/awesome-zig/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Audio\n\n*   [orhun/linuxwave (‚≠ê589)](https://github.com/orhun/linuxwave) - Generate music from the entropy of Linux.",
      "content_html": "<h3><p>Audio</p>\n</h3><ul>\n<li><a href=\"https://github.com/orhun/linuxwave\" rel=\"noopener noreferrer\">orhun/linuxwave (‚≠ê589)</a> - Generate music from the entropy of Linux.</li>\n</ul>\n",
      "date_published": "2023-04-18T14:00:39.000Z",
      "date_modified": "2023-04-18T14:00:39.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/angrykoala/awesome-esolangs/week/",
      "title": "Awesome Esolangs",
      "_slug": "angrykoala/awesome-esolangs/week/",
      "_filepath": "/content/angrykoala/awesome-esolangs/week/README.md",
      "url": "https://www.trackawesomelist.com/angrykoala/awesome-esolangs/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Languages\n\n*   [Electra (‚≠ê97)](https://github.com/DolphyWind/Electra-Lang) - Code like an electrician.",
      "content_html": "<h3><p>Languages</p>\n</h3><ul>\n<li><a href=\"https://github.com/DolphyWind/Electra-Lang\" rel=\"noopener noreferrer\">Electra (‚≠ê97)</a> - Code like an electrician.</li>\n</ul>\n",
      "date_published": "2023-04-18T13:19:16.000Z",
      "date_modified": "2023-04-18T13:19:16.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/enaqx/awesome-react/week/",
      "title": "Awesome React",
      "_slug": "enaqx/awesome-react/week/",
      "_filepath": "/content/enaqx/awesome-react/week/README.md",
      "url": "https://www.trackawesomelist.com/enaqx/awesome-react/week/",
      "summary": "17 awesome projects updated",
      "content_text": "\n\n### React General Resources\n\n*   [React Community](https://react.dev/community)\n\n### React Tutorials\n\n*   [React Official Tutorial](https://react.dev/learn)\n*   [React Interview Questions & Answers (‚≠ê42k)](https://github.com/sudheerj/reactjs-interview-questions)\n*   [Design patterns and Component patterns for building powerful Web Apps](https://www.patterns.dev/)\n*   [A simple, scalable, and powerful architecture for building production ready React applications (‚≠ê32k)](https://github.com/alan2207/bulletproof-react)\n*   [The Fullstack Tutorial for GraphQL (‚≠ê8.7k)](https://github.com/howtographql/howtographql)\n\n### React Frameworks\n\n*   [next (‚≠ê133k)](https://github.com/vercel/next.js) - The React Framework\n*   [gatsby (‚≠ê56k)](https://github.com/gatsbyjs/gatsby) - Build modern websites with React\n*   [react-admin (‚≠ê26k)](https://github.com/marmelab/react-admin) - A frontend Framework for building B2B applications\n*   [refine (‚≠ê32k)](https://github.com/refinedev/refine) - Build your React-based CRUD applications, without constraints\n\n### React Component Libraries\n\n*   [ant-design (‚≠ê95k)](https://github.com/ant-design/ant-design) - An enterprise-class UI design language and React UI library\n*   [framework7 (‚≠ê18k)](https://github.com/framework7io/framework7) - Full featured HTML framework for building iOS & Android apps\n*   [ariakit (‚≠ê8.3k)](https://github.com/ariakit/ariakit) - Toolkit for building accessible web apps with React\n\n### React Styling\n\n*   [styled-components (‚≠ê41k)](https://github.com/styled-components/styled-components) - Visual primitives for the component age\n*   [emotion (‚≠ê18k)](https://github.com/emotion-js/emotion) - CSS-in-JS library designed for high performance style composition\n*   [vanilla-extract (‚≠ê10k)](https://github.com/seek-oss/vanilla-extract) - Zero-runtime Stylesheets-in-TypeScript\n\n### React Routing\n\n*   [react-router (‚≠ê55k)](https://github.com/remix-run/react-router) - Declarative routing for React\n*   [wouter (‚≠ê7.3k)](https://github.com/molefrog/wouter) - A minimalist-friendly routing\n*   [tanstack-router (‚≠ê11k)](https://github.com/TanStack/router) - Type-safe router with built-in caching & URL state management\n\n### React Libraries\n\n*   [preact (‚≠ê38k)](https://github.com/preactjs/preact) - Fast React alternative with the same modern API\n*   [floating-ui (‚≠ê31k)](https://github.com/floating-ui/floating-ui) - Toolkit to create floating elements\n*   [loadable-components (‚≠ê7.8k)](https://github.com/gregberge/loadable-components) - The recommended Code Splitting library for React\n*   [react-uploady (‚≠ê1.2k)](https://github.com/rpldy/react-uploady) - Modern file-upload components & hooks for React\n*   [downshift (‚≠ê12k)](https://github.com/downshift-js/downshift) - React autocomplete, combobox or select dropdown components\n\n### React Testing\n\n*   [jest (‚≠ê45k)](https://github.com/facebook/jest) - Delightful JavaScript Testing\n*   [react-testing-library (‚≠ê19k)](https://github.com/testing-library/react-testing-library) - Simple and complete React DOM testing utilities\n*   [cypress (‚≠ê49k)](https://github.com/cypress-io/cypress) - Fast, easy and reliable testing for anything that runs in a browser\n\n### React Awesome Components\n\n*   [Awesome React Components (‚≠ê45k)](https://github.com/brillout/awesome-react-components)\n*   [react-big-calendar (‚≠ê8.4k)](https://github.com/jquense/react-big-calendar) - Calendar component\n*   [react-datepicker (‚≠ê8.3k)](https://github.com/Hacker0x01/react-datepicker/) - A simple and reusable datepicker component for React\n*   [react-qrcode (‚≠ê4.1k)](https://github.com/zpao/qrcode.react) - QR component for use with React\n*   [react-icons (‚≠ê12k)](https://github.com/react-icons/react-icons) - SVG React icons of popular icon packs\n*   [react-complex-tree (‚≠ê1.2k)](https://github.com/lukasbach/react-complex-tree) - Unopinionated Accessible Tree\n*   [react-insta-stories (‚≠ê1.4k)](https://github.com/mohitk05/react-insta-stories) - A React component for Instagram like stories\n*   [swiper (‚≠ê41k)](https://github.com/nolimits4web/swiper) - Most modern mobile touch slider\n*   [keen-slider (‚≠ê4.9k)](https://github.com/rcbyr/keen-slider) - The Touch slider carousel\n*   [cookie-consent-banner (‚≠ê167)](https://github.com/porscheofficial/cookie-consent-banner) ‚Äì The lightweight and flexible Cookie Consent Banner\n*   [heart-switch (‚≠ê449)](https://github.com/anatoliygatt/heart-switch) - A heart-shaped toggle switch component for React\n*   [kbar (‚≠ê5.1k)](https://github.com/timc1/kbar) - Fast, portable, and extensible cmd+k interface for your site\n*   [tagify (‚≠ê3.8k)](https://github.com/yairEO/tagify) - Lightweight, efficient Tags input component\n\n### React Components Sandboxes\n\n*   [storybook (‚≠ê87k)](https://github.com/storybookjs/storybook) - Storybook is a frontend workshop for building UI components and pages in isolation\n*   [react-styleguidist (‚≠ê11k)](https://github.com/styleguidist/react-styleguidist) - Isolated React component development environment with a living style guide\n*   [react-cosmos (‚≠ê8.5k)](https://github.com/react-cosmos/react-cosmos) - Dev tool for creating reusable React components\n\n### React Forms\n\n*   [react-hook-form (‚≠ê43k)](https://github.com/react-hook-form/react-hook-form) - React Hooks for form state management and validation\n*   [vest (‚≠ê2.6k)](https://github.com/ealush/vest) - Declarative validations framework\n\n### React Tables and Grids\n\n*   [react-grid-layout (‚≠ê21k)](https://github.com/react-grid-layout/react-grid-layout) - A draggable and resizable grid layout with responsive breakpoints\n*   [tanstack-table (‚≠ê27k)](https://github.com/TanStack/table) - Headless UI for building powerful tables & datagrids\n*   [react-data-grid (‚≠ê7.3k)](https://github.com/adazzle/react-data-grid) - Feature-rich and customizable data grid React component\n\n### React Internationalization\n\n*   [formatjs (‚≠ê15k)](https://github.com/formatjs/formatjs) - Internationalize your web apps\n*   [react-i18next (‚≠ê9.6k)](https://github.com/i18next/react-i18next) - Internationalization for React done right\n\n### React Graphics and Animations\n\n*   [react-spring (‚≠ê29k)](https://github.com/pmndrs/react-spring) - A spring physics based React animation library\n*   [framer-motion (‚≠ê29k)](https://github.com/framer/motion) - Open source, production-ready animation and gesture library for React\n*   [auto-animate (‚≠ê13k)](https://github.com/formkit/auto-animate) - A zero-config, drop-in animation utility that adds smooth transitions\n*   [react-tsparticles (‚≠ê8.3k)](https://github.com/matteobruni/tsparticles) - Easily create highly customizable particles effects\n*   [react-parallax-tilt (‚≠ê1k)](https://github.com/mkosir/react-parallax-tilt) - Easily apply tilt hover effect on React components\n\n### React Integration\n\n*   [rescript-compiler (‚≠ê7.1k)](https://github.com/rescript-lang/rescript-compiler) - A robustly typed language that compiles to efficient and human-readable JavaScript\n*   [react-rails (‚≠ê6.8k)](https://github.com/reactjs/react-rails) - Integrate React with Rails\n*   [fulcro (‚≠ê1.6k)](https://github.com/fulcrologic/fulcro) - A library for development of web applications in clj/cljs\n\n### React Real Apps\n\n*   [mattermost-server (‚≠ê33k)](https://github.com/mattermost/mattermost-server) - An open source platform for secure collaboration\n*   [kibana (‚≠ê21k)](https://github.com/elastic/kibana) - Your window into the Elastic Stack\n*   [webamp (‚≠ê11k)](https://github.com/captbaritone/webamp) - Winamp 2 reimplemented for the browser\n*   [overreacted (‚≠ê7.2k)](https://github.com/gaearon/overreacted.io) - Personal blog by Dan Abramov\n\n### React Native General Resources\n\n*   [React Native Official Website](https://reactnative.dev/)\n*   [React Native Community](https://reactnative.dev/community/overview)\n*   [Expo](https://expo.dev/)",
      "content_html": "<h3><p>React General Resources</p>\n</h3><ul>\n<li><a href=\"https://react.dev/community\" rel=\"noopener noreferrer\">React Community</a></li>\n</ul>\n<h3><p>React Tutorials</p>\n</h3><ul>\n<li><a href=\"https://react.dev/learn\" rel=\"noopener noreferrer\">React Official Tutorial</a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/sudheerj/reactjs-interview-questions\" rel=\"noopener noreferrer\">React Interview Questions &amp; Answers (‚≠ê42k)</a></li>\n</ul>\n<ul>\n<li><a href=\"https://www.patterns.dev/\" rel=\"noopener noreferrer\">Design patterns and Component patterns for building powerful Web Apps</a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/alan2207/bulletproof-react\" rel=\"noopener noreferrer\">A simple, scalable, and powerful architecture for building production ready React applications (‚≠ê32k)</a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/howtographql/howtographql\" rel=\"noopener noreferrer\">The Fullstack Tutorial for GraphQL (‚≠ê8.7k)</a></li>\n</ul>\n<h3><p>React Frameworks</p>\n</h3><ul>\n<li><a href=\"https://github.com/vercel/next.js\" rel=\"noopener noreferrer\">next (‚≠ê133k)</a> - The React Framework</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/gatsbyjs/gatsby\" rel=\"noopener noreferrer\">gatsby (‚≠ê56k)</a> - Build modern websites with React</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/marmelab/react-admin\" rel=\"noopener noreferrer\">react-admin (‚≠ê26k)</a> - A frontend Framework for building B2B applications</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/refinedev/refine\" rel=\"noopener noreferrer\">refine (‚≠ê32k)</a> - Build your React-based CRUD applications, without constraints</li>\n</ul>\n<h3><p>React Component Libraries</p>\n</h3><ul>\n<li><a href=\"https://github.com/ant-design/ant-design\" rel=\"noopener noreferrer\">ant-design (‚≠ê95k)</a> - An enterprise-class UI design language and React UI library</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/framework7io/framework7\" rel=\"noopener noreferrer\">framework7 (‚≠ê18k)</a> - Full featured HTML framework for building iOS &amp; Android apps</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ariakit/ariakit\" rel=\"noopener noreferrer\">ariakit (‚≠ê8.3k)</a> - Toolkit for building accessible web apps with React</li>\n</ul>\n<h3><p>React Styling</p>\n</h3><ul>\n<li><a href=\"https://github.com/styled-components/styled-components\" rel=\"noopener noreferrer\">styled-components (‚≠ê41k)</a> - Visual primitives for the component age</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/emotion-js/emotion\" rel=\"noopener noreferrer\">emotion (‚≠ê18k)</a> - CSS-in-JS library designed for high performance style composition</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/seek-oss/vanilla-extract\" rel=\"noopener noreferrer\">vanilla-extract (‚≠ê10k)</a> - Zero-runtime Stylesheets-in-TypeScript</li>\n</ul>\n<h3><p>React Routing</p>\n</h3><ul>\n<li><a href=\"https://github.com/remix-run/react-router\" rel=\"noopener noreferrer\">react-router (‚≠ê55k)</a> - Declarative routing for React</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/molefrog/wouter\" rel=\"noopener noreferrer\">wouter (‚≠ê7.3k)</a> - A minimalist-friendly routing</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/TanStack/router\" rel=\"noopener noreferrer\">tanstack-router (‚≠ê11k)</a> - Type-safe router with built-in caching &amp; URL state management</li>\n</ul>\n<h3><p>React Libraries</p>\n</h3><ul>\n<li><a href=\"https://github.com/preactjs/preact\" rel=\"noopener noreferrer\">preact (‚≠ê38k)</a> - Fast React alternative with the same modern API</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/floating-ui/floating-ui\" rel=\"noopener noreferrer\">floating-ui (‚≠ê31k)</a> - Toolkit to create floating elements</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/gregberge/loadable-components\" rel=\"noopener noreferrer\">loadable-components (‚≠ê7.8k)</a> - The recommended Code Splitting library for React</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/rpldy/react-uploady\" rel=\"noopener noreferrer\">react-uploady (‚≠ê1.2k)</a> - Modern file-upload components &amp; hooks for React</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/downshift-js/downshift\" rel=\"noopener noreferrer\">downshift (‚≠ê12k)</a> - React autocomplete, combobox or select dropdown components</li>\n</ul>\n<h3><p>React Testing</p>\n</h3><ul>\n<li><a href=\"https://github.com/facebook/jest\" rel=\"noopener noreferrer\">jest (‚≠ê45k)</a> - Delightful JavaScript Testing</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/testing-library/react-testing-library\" rel=\"noopener noreferrer\">react-testing-library (‚≠ê19k)</a> - Simple and complete React DOM testing utilities</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/cypress-io/cypress\" rel=\"noopener noreferrer\">cypress (‚≠ê49k)</a> - Fast, easy and reliable testing for anything that runs in a browser</li>\n</ul>\n<h3><p>React Awesome Components</p>\n</h3><ul>\n<li><a href=\"https://github.com/brillout/awesome-react-components\" rel=\"noopener noreferrer\">Awesome React Components (‚≠ê45k)</a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/jquense/react-big-calendar\" rel=\"noopener noreferrer\">react-big-calendar (‚≠ê8.4k)</a> - Calendar component</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Hacker0x01/react-datepicker/\" rel=\"noopener noreferrer\">react-datepicker (‚≠ê8.3k)</a> - A simple and reusable datepicker component for React</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/zpao/qrcode.react\" rel=\"noopener noreferrer\">react-qrcode (‚≠ê4.1k)</a> - QR component for use with React</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/react-icons/react-icons\" rel=\"noopener noreferrer\">react-icons (‚≠ê12k)</a> - SVG React icons of popular icon packs</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/lukasbach/react-complex-tree\" rel=\"noopener noreferrer\">react-complex-tree (‚≠ê1.2k)</a> - Unopinionated Accessible Tree</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mohitk05/react-insta-stories\" rel=\"noopener noreferrer\">react-insta-stories (‚≠ê1.4k)</a> - A React component for Instagram like stories</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/nolimits4web/swiper\" rel=\"noopener noreferrer\">swiper (‚≠ê41k)</a> - Most modern mobile touch slider</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/rcbyr/keen-slider\" rel=\"noopener noreferrer\">keen-slider (‚≠ê4.9k)</a> - The Touch slider carousel</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/porscheofficial/cookie-consent-banner\" rel=\"noopener noreferrer\">cookie-consent-banner (‚≠ê167)</a> ‚Äì The lightweight and flexible Cookie Consent Banner</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/anatoliygatt/heart-switch\" rel=\"noopener noreferrer\">heart-switch (‚≠ê449)</a> - A heart-shaped toggle switch component for React</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/timc1/kbar\" rel=\"noopener noreferrer\">kbar (‚≠ê5.1k)</a> - Fast, portable, and extensible cmd+k interface for your site</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/yairEO/tagify\" rel=\"noopener noreferrer\">tagify (‚≠ê3.8k)</a> - Lightweight, efficient Tags input component</li>\n</ul>\n<h3><p>React Components Sandboxes</p>\n</h3><ul>\n<li><a href=\"https://github.com/storybookjs/storybook\" rel=\"noopener noreferrer\">storybook (‚≠ê87k)</a> - Storybook is a frontend workshop for building UI components and pages in isolation</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/styleguidist/react-styleguidist\" rel=\"noopener noreferrer\">react-styleguidist (‚≠ê11k)</a> - Isolated React component development environment with a living style guide</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/react-cosmos/react-cosmos\" rel=\"noopener noreferrer\">react-cosmos (‚≠ê8.5k)</a> - Dev tool for creating reusable React components</li>\n</ul>\n<h3><p>React Forms</p>\n</h3><ul>\n<li><a href=\"https://github.com/react-hook-form/react-hook-form\" rel=\"noopener noreferrer\">react-hook-form (‚≠ê43k)</a> - React Hooks for form state management and validation</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ealush/vest\" rel=\"noopener noreferrer\">vest (‚≠ê2.6k)</a> - Declarative validations framework</li>\n</ul>\n<h3><p>React Tables and Grids</p>\n</h3><ul>\n<li><a href=\"https://github.com/react-grid-layout/react-grid-layout\" rel=\"noopener noreferrer\">react-grid-layout (‚≠ê21k)</a> - A draggable and resizable grid layout with responsive breakpoints</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/TanStack/table\" rel=\"noopener noreferrer\">tanstack-table (‚≠ê27k)</a> - Headless UI for building powerful tables &amp; datagrids</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/adazzle/react-data-grid\" rel=\"noopener noreferrer\">react-data-grid (‚≠ê7.3k)</a> - Feature-rich and customizable data grid React component</li>\n</ul>\n<h3><p>React Internationalization</p>\n</h3><ul>\n<li><a href=\"https://github.com/formatjs/formatjs\" rel=\"noopener noreferrer\">formatjs (‚≠ê15k)</a> - Internationalize your web apps</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/i18next/react-i18next\" rel=\"noopener noreferrer\">react-i18next (‚≠ê9.6k)</a> - Internationalization for React done right</li>\n</ul>\n<h3><p>React Graphics and Animations</p>\n</h3><ul>\n<li><a href=\"https://github.com/pmndrs/react-spring\" rel=\"noopener noreferrer\">react-spring (‚≠ê29k)</a> - A spring physics based React animation library</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/framer/motion\" rel=\"noopener noreferrer\">framer-motion (‚≠ê29k)</a> - Open source, production-ready animation and gesture library for React</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/formkit/auto-animate\" rel=\"noopener noreferrer\">auto-animate (‚≠ê13k)</a> - A zero-config, drop-in animation utility that adds smooth transitions</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/matteobruni/tsparticles\" rel=\"noopener noreferrer\">react-tsparticles (‚≠ê8.3k)</a> - Easily create highly customizable particles effects</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mkosir/react-parallax-tilt\" rel=\"noopener noreferrer\">react-parallax-tilt (‚≠ê1k)</a> - Easily apply tilt hover effect on React components</li>\n</ul>\n<h3><p>React Integration</p>\n</h3><ul>\n<li><a href=\"https://github.com/rescript-lang/rescript-compiler\" rel=\"noopener noreferrer\">rescript-compiler (‚≠ê7.1k)</a> - A robustly typed language that compiles to efficient and human-readable JavaScript</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/reactjs/react-rails\" rel=\"noopener noreferrer\">react-rails (‚≠ê6.8k)</a> - Integrate React with Rails</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/fulcrologic/fulcro\" rel=\"noopener noreferrer\">fulcro (‚≠ê1.6k)</a> - A library for development of web applications in clj/cljs</li>\n</ul>\n<h3><p>React Real Apps</p>\n</h3><ul>\n<li><a href=\"https://github.com/mattermost/mattermost-server\" rel=\"noopener noreferrer\">mattermost-server (‚≠ê33k)</a> - An open source platform for secure collaboration</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/elastic/kibana\" rel=\"noopener noreferrer\">kibana (‚≠ê21k)</a> - Your window into the Elastic Stack</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/captbaritone/webamp\" rel=\"noopener noreferrer\">webamp (‚≠ê11k)</a> - Winamp 2 reimplemented for the browser</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/gaearon/overreacted.io\" rel=\"noopener noreferrer\">overreacted (‚≠ê7.2k)</a> - Personal blog by Dan Abramov</li>\n</ul>\n<h3><p>React Native General Resources</p>\n</h3><ul>\n<li><a href=\"https://reactnative.dev/\" rel=\"noopener noreferrer\">React Native Official Website</a></li>\n</ul>\n<ul>\n<li><a href=\"https://reactnative.dev/community/overview\" rel=\"noopener noreferrer\">React Native Community</a></li>\n</ul>\n<ul>\n<li><a href=\"https://expo.dev/\" rel=\"noopener noreferrer\">Expo</a></li>\n</ul>\n",
      "date_published": "2023-04-18T12:29:40.000Z",
      "date_modified": "2023-04-21T20:48:31.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/vlang/awesome-v/week/",
      "title": "Awesome V",
      "_slug": "vlang/awesome-v/week/",
      "_filepath": "/content/vlang/awesome-v/week/README.md",
      "url": "https://www.trackawesomelist.com/vlang/awesome-v/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Command-line\n\n*   [vzcc (‚≠ê28)](https://github.com/malisipi/vzcc) - A CLI cross-compiling tool based on Zig CC for V.\n\n### Tutorials / Vim\n\n*   [VOSCA Blog Tutorials](https://blog.vosca.dev/categories/tutorials/) - Tutorial category on VOSCA blog.",
      "content_html": "<h3><p>Command-line</p>\n</h3><ul>\n<li><a href=\"https://github.com/malisipi/vzcc\" rel=\"noopener noreferrer\">vzcc (‚≠ê28)</a> - A CLI cross-compiling tool based on Zig CC for V.</li>\n</ul>\n<h3><p>Tutorials / Vim</p>\n</h3><ul>\n<li><a href=\"https://blog.vosca.dev/categories/tutorials/\" rel=\"noopener noreferrer\">VOSCA Blog Tutorials</a> - Tutorial category on VOSCA blog.</li>\n</ul>\n",
      "date_published": "2023-04-18T10:59:21.000Z",
      "date_modified": "2023-04-21T06:53:40.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/heynickc/awesome-ddd/week/",
      "title": "Awesome Ddd",
      "_slug": "heynickc/awesome-ddd/week/",
      "_filepath": "/content/heynickc/awesome-ddd/week/README.md",
      "url": "https://www.trackawesomelist.com/heynickc/awesome-ddd/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Sample Projects / JavaScript / TypeScript\n\n*   [Over-engineered ToDo app (‚≠ê1.3k)](https://github.com/bitloops/ddd-hexagonal-cqrs-es-eda) - Complete working example of using Domain Driven Design (DDD), Hexagonal Architecture, CQRS, Event Sourcing (ES), Event Driven Architecture (EDA), Behaviour Driven Development (BDD) using TypeScript and NestJS generated using the [Bitloops Language (BL) (‚≠ê353)](https://github.com/bitloops/bitloops-language).\n\n### Libraries and Frameworks / JavaScript / TypeScript\n\n*   [Bitloops Language (BL) (‚≠ê353)](https://github.com/bitloops/bitloops-language) - Open-source, 4th-generation, transpiled programming language that helps you write clean code, well-designed systems, and build high-quality software that is testable, auditable and maintainable using DDD and Hexagonal Architecture.\n*   [Node API Boilerplate (‚≠ê3.3k)](https://github.com/talyssonoc/node-api-boilerplate) - NodeJS web API boilerplate for DDD and Clean Architecture applications.",
      "content_html": "<h3><p>Sample Projects / JavaScript / TypeScript</p>\n</h3><ul>\n<li><a href=\"https://github.com/bitloops/ddd-hexagonal-cqrs-es-eda\" rel=\"noopener noreferrer\">Over-engineered ToDo app (‚≠ê1.3k)</a> - Complete working example of using Domain Driven Design (DDD), Hexagonal Architecture, CQRS, Event Sourcing (ES), Event Driven Architecture (EDA), Behaviour Driven Development (BDD) using TypeScript and NestJS generated using the <a href=\"https://github.com/bitloops/bitloops-language\" rel=\"noopener noreferrer\">Bitloops Language (BL) (‚≠ê353)</a>.</li>\n</ul>\n<h3><p>Libraries and Frameworks / JavaScript / TypeScript</p>\n</h3><ul>\n<li><a href=\"https://github.com/bitloops/bitloops-language\" rel=\"noopener noreferrer\">Bitloops Language (BL) (‚≠ê353)</a> - Open-source, 4th-generation, transpiled programming language that helps you write clean code, well-designed systems, and build high-quality software that is testable, auditable and maintainable using DDD and Hexagonal Architecture.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/talyssonoc/node-api-boilerplate\" rel=\"noopener noreferrer\">Node API Boilerplate (‚≠ê3.3k)</a> - NodeJS web API boilerplate for DDD and Clean Architecture applications.</li>\n</ul>\n",
      "date_published": "2023-04-18T10:01:57.000Z",
      "date_modified": "2023-04-18T10:01:57.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/agamm/awesome-developer-first/week/",
      "title": "Awesome Developer First",
      "_slug": "agamm/awesome-developer-first/week/",
      "_filepath": "/content/agamm/awesome-developer-first/week/README.md",
      "url": "https://www.trackawesomelist.com/agamm/awesome-developer-first/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Authentication & Identity\n\n*   [Clerk](https://clerk.com/) - Authentication and user management platform for React, React Native, and Next.js.",
      "content_html": "<h3><p>Authentication &amp; Identity</p>\n</h3><ul>\n<li><a href=\"https://clerk.com/\" rel=\"noopener noreferrer\">Clerk</a> - Authentication and user management platform for React, React Native, and Next.js.</li>\n</ul>\n",
      "date_published": "2023-04-18T07:22:09.000Z",
      "date_modified": "2023-04-18T07:22:09.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/jaywcjlove/awesome-mac/week/",
      "title": "Awesome Mac",
      "_slug": "jaywcjlove/awesome-mac/week/",
      "_filepath": "/content/jaywcjlove/awesome-mac/week/README.md",
      "url": "https://www.trackawesomelist.com/jaywcjlove/awesome-mac/week/",
      "summary": "3 awesome projects updated",
      "content_text": "\n\n### Developer Tools / Version Control\n\n*   [GitFinder](https://gitfinder.com/) - Fast and lightweight Git client for Mac with Finder integration.\n\n### Utilities / General Tools\n\n*   [lo-rain](https://lo.cafe/lo-rain) - Create a customizable rain over your desktop and apps, with splash over the dock.\n\n### Utilities / Window Management\n\n*   [Sidebar](http://sidebarapp.net/) - The modern Dock replacement for your Mac.",
      "content_html": "<h3><p>Developer Tools / Version Control</p>\n</h3><ul>\n<li><a href=\"https://gitfinder.com/\" rel=\"noopener noreferrer\">GitFinder</a> - Fast and lightweight Git client for Mac with Finder integration.</li>\n</ul>\n<h3><p>Utilities / General Tools</p>\n</h3><ul>\n<li><a href=\"https://lo.cafe/lo-rain\" rel=\"noopener noreferrer\">lo-rain</a> - Create a customizable rain over your desktop and apps, with splash over the dock.</li>\n</ul>\n<h3><p>Utilities / Window Management</p>\n</h3><ul>\n<li><a href=\"http://sidebarapp.net/\" rel=\"noopener noreferrer\">Sidebar</a> - The modern Dock replacement for your Mac.</li>\n</ul>\n",
      "date_published": "2023-04-18T06:26:12.000Z",
      "date_modified": "2023-04-18T06:43:34.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/awesome-spark/awesome-spark/week/",
      "title": "Awesome Spark",
      "_slug": "awesome-spark/awesome-spark/week/",
      "_filepath": "/content/awesome-spark/awesome-spark/week/README.md",
      "url": "https://www.trackawesomelist.com/awesome-spark/awesome-spark/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Packages / Middleware\n\n*   [Apache Kyuubi (‚≠ê2.2k)](https://github.com/apache/kyuubi) <img src=\"https://img.shields.io/github/last-commit/apache/kyuubi.svg\"> - A distributed multi-tenant JDBC server for large-scale data processing and analytics, built on top of Apache Spark.\n\n### Resources / Docker Images\n\n*   [apache/spark](https://hub.docker.com/r/apache/spark) - Apache Spark Official Docker images.",
      "content_html": "<h3><p>Packages / Middleware</p>\n</h3><ul>\n<li><a href=\"https://github.com/apache/kyuubi\" rel=\"noopener noreferrer\">Apache Kyuubi (‚≠ê2.2k)</a> <img src=\"https://img.shields.io/github/last-commit/apache/kyuubi.svg\" /> - A distributed multi-tenant JDBC server for large-scale data processing and analytics, built on top of Apache Spark.</li>\n</ul>\n<h3><p>Resources / Docker Images</p>\n</h3><ul>\n<li><a href=\"https://hub.docker.com/r/apache/spark\" rel=\"noopener noreferrer\">apache/spark</a> - Apache Spark Official Docker images.</li>\n</ul>\n",
      "date_published": "2023-04-18T03:53:14.000Z",
      "date_modified": "2023-04-18T03:53:30.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/Solido/awesome-flutter/week/",
      "title": "Awesome Flutter",
      "_slug": "Solido/awesome-flutter/week/",
      "_filepath": "/content/Solido/awesome-flutter/week/README.md",
      "url": "https://www.trackawesomelist.com/Solido/awesome-flutter/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Navigation / Image Picker\n\n*   [auto\\_route (‚≠ê1.7k)](https://github.com/Milad-Akarie/auto_route_library) <!--stargazers:Milad-Akarie/auto_route_library--> - AutoRoute is a declarative routing solution, where everything needed for navigation is automatically generated for you. [Milad\\_Akarie](https://github.com/Milad-Akarie).",
      "content_html": "<h3><p>Navigation / Image Picker</p>\n</h3><ul>\n<li><a href=\"https://github.com/Milad-Akarie/auto_route_library\" rel=\"noopener noreferrer\">auto_route (‚≠ê1.7k)</a>  - AutoRoute is a declarative routing solution, where everything needed for navigation is automatically generated for you. <a href=\"https://github.com/Milad-Akarie\" rel=\"noopener noreferrer\">Milad_Akarie</a>.</li>\n</ul>\n",
      "date_published": "2023-04-17T22:50:02.000Z",
      "date_modified": "2023-04-17T22:50:02.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/flame-engine/awesome-flame/week/",
      "title": "Awesome Flame",
      "_slug": "flame-engine/awesome-flame/week/",
      "_filepath": "/content/flame-engine/awesome-flame/week/README.md",
      "url": "https://www.trackawesomelist.com/flame-engine/awesome-flame/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### App Releases / Casual\n\n*   BBB - Birds, Beasts, Baddies - [Android](https://play.google.com/store/apps/details?id=com.coconutisland.balloons) - Four furry and feathery friends jump for joy. Avoid enemies, collect mushrooms, jump as high as you can. By [Coconut Island Apps](https://coconutisland.xyz/)",
      "content_html": "<h3><p>App Releases / Casual</p>\n</h3><ul>\n<li>BBB - Birds, Beasts, Baddies - <a href=\"https://play.google.com/store/apps/details?id=com.coconutisland.balloons\" rel=\"noopener noreferrer\">Android</a> - Four furry and feathery friends jump for joy. Avoid enemies, collect mushrooms, jump as high as you can. By <a href=\"https://coconutisland.xyz/\" rel=\"noopener noreferrer\">Coconut Island Apps</a></li>\n</ul>\n",
      "date_published": "2023-04-17T20:40:12.000Z",
      "date_modified": "2023-04-17T20:40:12.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/beansource/awesome-orgs/week/",
      "title": "Awesome Orgs",
      "_slug": "beansource/awesome-orgs/week/",
      "_filepath": "/content/beansource/awesome-orgs/week/README.md",
      "url": "https://www.trackawesomelist.com/beansource/awesome-orgs/week/",
      "summary": "5 awesome projects updated",
      "content_text": "\n\n### Cloud\n\n*   [Kong](https://github.com/Kong) - The cloud connectivity company. Community-driven & enterprise-adopted.\n\n### Web\n\n*   [UnJS](https://github.com/unjs) - Unified JavaScript tools.\n\n### Database\n\n*   [Supabase](https://github.com/supabase) - The open source Firebase alternative.\n\n### Analytics\n\n*   [PostHog](https://github.com/PostHog) - Open source product analytics platform.\n\n### Other\n\n*   [Axo](https://github.com/axodotdev) - Collection of open source Rust libraries and tools.\n*   [TheAlgorithms](https://github.com/thealgorithms) - Open source resource for learning data structures & algorithms and their implementation in any programming language.\n*   [Z-Shell](https://github.com/z-shell) - Open source society passionate about Zsh.",
      "content_html": "<h3><p>Cloud</p>\n</h3><ul>\n<li><a href=\"https://github.com/Kong\" rel=\"noopener noreferrer\">Kong</a> - The cloud connectivity company. Community-driven &amp; enterprise-adopted.</li>\n</ul>\n<h3><p>Web</p>\n</h3><ul>\n<li><a href=\"https://github.com/unjs\" rel=\"noopener noreferrer\">UnJS</a> - Unified JavaScript tools.</li>\n</ul>\n<h3><p>Database</p>\n</h3><ul>\n<li><a href=\"https://github.com/supabase\" rel=\"noopener noreferrer\">Supabase</a> - The open source Firebase alternative.</li>\n</ul>\n<h3><p>Analytics</p>\n</h3><ul>\n<li><a href=\"https://github.com/PostHog\" rel=\"noopener noreferrer\">PostHog</a> - Open source product analytics platform.</li>\n</ul>\n<h3><p>Other</p>\n</h3><ul>\n<li><a href=\"https://github.com/axodotdev\" rel=\"noopener noreferrer\">Axo</a> - Collection of open source Rust libraries and tools.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/thealgorithms\" rel=\"noopener noreferrer\">TheAlgorithms</a> - Open source resource for learning data structures &amp; algorithms and their implementation in any programming language.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/z-shell\" rel=\"noopener noreferrer\">Z-Shell</a> - Open source society passionate about Zsh.</li>\n</ul>\n",
      "date_published": "2023-04-17T16:57:42.000Z",
      "date_modified": "2023-04-17T16:59:33.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/veelenga/awesome-crystal/week/",
      "title": "Awesome Crystal",
      "_slug": "veelenga/awesome-crystal/week/",
      "_filepath": "/content/veelenga/awesome-crystal/week/README.md",
      "url": "https://www.trackawesomelist.com/veelenga/awesome-crystal/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### HTML Builders\n\n*   [blueprint (‚≠ê63)](https://github.com/gunbolt/blueprint) - Write reusable and testable HTML templates in plain Crystal\n*   [Water (‚≠ê29)](https://github.com/shootingfly/water) - A library for writing HTML in plain Crystal",
      "content_html": "<h3><p>HTML Builders</p>\n</h3><ul>\n<li><a href=\"https://github.com/gunbolt/blueprint\" rel=\"noopener noreferrer\">blueprint (‚≠ê63)</a> - Write reusable and testable HTML templates in plain Crystal</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/shootingfly/water\" rel=\"noopener noreferrer\">Water (‚≠ê29)</a> - A library for writing HTML in plain Crystal</li>\n</ul>\n",
      "date_published": "2023-04-17T14:53:43.000Z",
      "date_modified": "2023-04-18T07:02:06.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/awesome-foss/awesome-sysadmin/week/",
      "title": "Awesome Sysadmin",
      "_slug": "awesome-foss/awesome-sysadmin/week/",
      "_filepath": "/content/awesome-foss/awesome-sysadmin/week/README.md",
      "url": "https://www.trackawesomelist.com/awesome-foss/awesome-sysadmin/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Software / Automation\n\n*   [Apache Ant](https://ant.apache.org/) - Automation build tool, similar to make, a library and command-line tool whose mission is to drive processes described in build files as targets and extension points dependent upon each other. ([Source Code (‚≠ê440)](https://github.com/apache/ant)) `Apache-2.0` `Java`\n*   [Rake](https://ruby.github.io/rake/) - Build automation tool similar to Make, written in and extensible in Ruby. ([Source Code (‚≠ê2.4k)](https://github.com/ruby/rake)) `MIT` `Ruby`\n\n### Software / DNS - Servers\n\n*   [Bind](https://www.isc.org/bind/) - Versatile, classic, complete name server software. ([Source Code](https://gitlab.isc.org/isc-projects/bind9)) `MPL-2.0` `C`\n*   [CoreDNS](https://coredns.io/) - Flexible DNS server. ([Source Code (‚≠ê13k)](https://github.com/coredns/coredns)) `Apache-2.0` `Go`\n*   [dnsmasq](https://www.thekelleys.org.uk/dnsmasq/doc.html) - Provides network infrastructure for small networks: DNS, DHCP, router advertisement and network boot. ([Source Code](https://thekelleys.org.uk/gitweb/?p=dnsmasq.git;a=tree)) `GPL-2.0` `C`\n*   [Knot](https://www.knot-dns.cz/) - High performance authoritative-only DNS server. ([Source Code](https://gitlab.nic.cz/knot/knot-dns)) `GPL-3.0` `C`\n*   [NSD](https://www.nlnetlabs.nl/projects/nsd/about/) - Authoritative DNS name server developed speed, reliability, stability and security. ([Source Code (‚≠ê497)](https://github.com/NLnetLabs/nsd)) `BSD-3-Clause` `C`\n*   [Unbound](https://nlnetlabs.nl/projects/unbound/about/) - Validating, recursive, and caching DNS resolver. ([Source Code (‚≠ê3.6k)](https://github.com/NLnetLabs/unbound)) `BSD-3-Clause` `C`\n*   [Yadifa](https://www.yadifa.eu/) - Clean, small, light and RFC-compliant name server implementation developed from scratch by .eu. ([Source Code (‚≠ê72)](https://github.com/yadifa/yadifa)) `BSD-3-Clause` `C`",
      "content_html": "<h3><p>Software / Automation</p>\n</h3><ul>\n<li><a href=\"https://ant.apache.org/\" rel=\"noopener noreferrer\">Apache Ant</a> - Automation build tool, similar to make, a library and command-line tool whose mission is to drive processes described in build files as targets and extension points dependent upon each other. (<a href=\"https://github.com/apache/ant\" rel=\"noopener noreferrer\">Source Code (‚≠ê440)</a>) <code>Apache-2.0</code> <code>Java</code></li>\n</ul>\n<ul>\n<li><a href=\"https://ruby.github.io/rake/\" rel=\"noopener noreferrer\">Rake</a> - Build automation tool similar to Make, written in and extensible in Ruby. (<a href=\"https://github.com/ruby/rake\" rel=\"noopener noreferrer\">Source Code (‚≠ê2.4k)</a>) <code>MIT</code> <code>Ruby</code></li>\n</ul>\n<h3><p>Software / DNS - Servers</p>\n</h3><ul>\n<li><a href=\"https://www.isc.org/bind/\" rel=\"noopener noreferrer\">Bind</a> - Versatile, classic, complete name server software. (<a href=\"https://gitlab.isc.org/isc-projects/bind9\" rel=\"noopener noreferrer\">Source Code</a>) <code>MPL-2.0</code> <code>C</code></li>\n</ul>\n<ul>\n<li><a href=\"https://coredns.io/\" rel=\"noopener noreferrer\">CoreDNS</a> - Flexible DNS server. (<a href=\"https://github.com/coredns/coredns\" rel=\"noopener noreferrer\">Source Code (‚≠ê13k)</a>) <code>Apache-2.0</code> <code>Go</code></li>\n</ul>\n<ul>\n<li><a href=\"https://www.thekelleys.org.uk/dnsmasq/doc.html\" rel=\"noopener noreferrer\">dnsmasq</a> - Provides network infrastructure for small networks: DNS, DHCP, router advertisement and network boot. (<a href=\"https://thekelleys.org.uk/gitweb/?p=dnsmasq.git;a=tree\" rel=\"noopener noreferrer\">Source Code</a>) <code>GPL-2.0</code> <code>C</code></li>\n</ul>\n<ul>\n<li><a href=\"https://www.knot-dns.cz/\" rel=\"noopener noreferrer\">Knot</a> - High performance authoritative-only DNS server. (<a href=\"https://gitlab.nic.cz/knot/knot-dns\" rel=\"noopener noreferrer\">Source Code</a>) <code>GPL-3.0</code> <code>C</code></li>\n</ul>\n<ul>\n<li><a href=\"https://www.nlnetlabs.nl/projects/nsd/about/\" rel=\"noopener noreferrer\">NSD</a> - Authoritative DNS name server developed speed, reliability, stability and security. (<a href=\"https://github.com/NLnetLabs/nsd\" rel=\"noopener noreferrer\">Source Code (‚≠ê497)</a>) <code>BSD-3-Clause</code> <code>C</code></li>\n</ul>\n<ul>\n<li><a href=\"https://nlnetlabs.nl/projects/unbound/about/\" rel=\"noopener noreferrer\">Unbound</a> - Validating, recursive, and caching DNS resolver. (<a href=\"https://github.com/NLnetLabs/unbound\" rel=\"noopener noreferrer\">Source Code (‚≠ê3.6k)</a>) <code>BSD-3-Clause</code> <code>C</code></li>\n</ul>\n<ul>\n<li><a href=\"https://www.yadifa.eu/\" rel=\"noopener noreferrer\">Yadifa</a> - Clean, small, light and RFC-compliant name server implementation developed from scratch by .eu. (<a href=\"https://github.com/yadifa/yadifa\" rel=\"noopener noreferrer\">Source Code (‚≠ê72)</a>) <code>BSD-3-Clause</code> <code>C</code></li>\n</ul>\n",
      "date_published": "2023-04-17T11:41:42.000Z",
      "date_modified": "2023-04-19T15:07:17.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/rockerBOO/awesome-neovim/week/",
      "title": "Awesome Neovim",
      "_slug": "rockerBOO/awesome-neovim/week/",
      "_filepath": "/content/rockerBOO/awesome-neovim/week/README.md",
      "url": "https://www.trackawesomelist.com/rockerBOO/awesome-neovim/week/",
      "summary": "5 awesome projects updated",
      "content_text": "\n\n### Color / Diagnostics\n\n*   [Mr-LLLLL/interestingwords.nvim (‚≠ê47)](https://github.com/Mr-LLLLL/interestingwords.nvim) - Highlight multiple word same time and navigate word under cursor with scrolling smoothly, display search count in virualtext.\n\n### Colorscheme Creation / Diagnostics\n\n*   [echasnovski/mini.nvim#mini.colors (‚≠ê7.5k)](https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-colors.md) - Module of `mini.nvim` to tweak and save any color scheme. Also can animate transition and convert between some color spaces.\n\n### Bars and Lines / Diagnostics\n\n*   [luukvbaal/statuscol.nvim (‚≠ê581)](https://github.com/luukvbaal/statuscol.nvim) - Configurable 'statuscolumn' with builtin segments and click handlers.\n\n### Utility / Diagnostics\n\n*   [sQVe/bufignore.nvim (‚≠ê16)](https://github.com/sQVe/bufignore.nvim) - Unlist hidden buffers matching specified ignore sources.\n*   [hbac.nvim (‚≠ê215)](https://github.com/axkirillov/hbac.nvim) - Automatically close buffers you are not working on.\n*   [ecthelionvi/NeoComposer.nvim (‚≠ê416)](https://github.com/ecthelionvi/NeoComposer.nvim) - Simplify macro management, enhance productivity, and create harmonious workflows.\n\n### Formatting / Diagnostics\n\n*   [tenxsoydev/tabs-vs-spaces.nvim (‚≠ê24)](https://github.com/tenxsoydev/tabs-vs-spaces.nvim) - Hint and fix deviating indentation.",
      "content_html": "<h3><p>Color / Diagnostics</p>\n</h3><ul>\n<li><a href=\"https://github.com/Mr-LLLLL/interestingwords.nvim\" rel=\"noopener noreferrer\">Mr-LLLLL/interestingwords.nvim (‚≠ê47)</a> - Highlight multiple word same time and navigate word under cursor with scrolling smoothly, display search count in virualtext.</li>\n</ul>\n<h3><p>Colorscheme Creation / Diagnostics</p>\n</h3><ul>\n<li><a href=\"https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-colors.md\" rel=\"noopener noreferrer\">echasnovski/mini.nvim#mini.colors (‚≠ê7.5k)</a> - Module of <code>mini.nvim</code> to tweak and save any color scheme. Also can animate transition and convert between some color spaces.</li>\n</ul>\n<h3><p>Bars and Lines / Diagnostics</p>\n</h3><ul>\n<li><a href=\"https://github.com/luukvbaal/statuscol.nvim\" rel=\"noopener noreferrer\">luukvbaal/statuscol.nvim (‚≠ê581)</a> - Configurable 'statuscolumn' with builtin segments and click handlers.</li>\n</ul>\n<h3><p>Utility / Diagnostics</p>\n</h3><ul>\n<li><a href=\"https://github.com/sQVe/bufignore.nvim\" rel=\"noopener noreferrer\">sQVe/bufignore.nvim (‚≠ê16)</a> - Unlist hidden buffers matching specified ignore sources.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/axkirillov/hbac.nvim\" rel=\"noopener noreferrer\">hbac.nvim (‚≠ê215)</a> - Automatically close buffers you are not working on.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ecthelionvi/NeoComposer.nvim\" rel=\"noopener noreferrer\">ecthelionvi/NeoComposer.nvim (‚≠ê416)</a> - Simplify macro management, enhance productivity, and create harmonious workflows.</li>\n</ul>\n<h3><p>Formatting / Diagnostics</p>\n</h3><ul>\n<li><a href=\"https://github.com/tenxsoydev/tabs-vs-spaces.nvim\" rel=\"noopener noreferrer\">tenxsoydev/tabs-vs-spaces.nvim (‚≠ê24)</a> - Hint and fix deviating indentation.</li>\n</ul>\n",
      "date_published": "2023-04-17T11:27:01.000Z",
      "date_modified": "2023-04-23T06:03:17.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/stn1slv/awesome-integration/week/",
      "title": "Awesome Integration",
      "_slug": "stn1slv/awesome-integration/week/",
      "_filepath": "/content/stn1slv/awesome-integration/week/README.md",
      "url": "https://www.trackawesomelist.com/stn1slv/awesome-integration/week/",
      "summary": "4 awesome projects updated",
      "content_text": "\n\n### Integration Patterns / Enterprise Integration Patterns\n\n*   [Aggregator](https://www.enterpriseintegrationpatterns.com/patterns/messaging/Aggregator.html) - How do we combine the results of individual, but related messages so that they can be processed as a whole?\n*   [Canonical Data Model](https://www.enterpriseintegrationpatterns.com/patterns/messaging/CanonicalDataModel.html) - How can you minimize dependencies when integrating applications that use different data formats?\n*   [Channel Adapter](https://www.enterpriseintegrationpatterns.com/patterns/messaging/ChannelAdapter.html) - How can you connect an application to the messaging system so that it can send and receive messages?\n*   [Channel Purger](https://www.enterpriseintegrationpatterns.com/patterns/messaging/ChannelPurger.html) - How can you keep 'left-over' messages on a channel from disturbing tests or running systems?\n*   [Claim Check](https://www.enterpriseintegrationpatterns.com/patterns/messaging/StoreInLibrary.html) - How can we reduce the data volume of message sent across the system without sacrificing information content?\n*   [Command Message](https://www.enterpriseintegrationpatterns.com/patterns/messaging/CommandMessage.html) - How can messaging be used to invoke a procedure in another application?\n*   [Competing Consumers](https://www.enterpriseintegrationpatterns.com/patterns/messaging/CompetingConsumers.html) - How can a messaging client process multiple messages concurrently?\n*   [Composed Message Processor](https://www.enterpriseintegrationpatterns.com/patterns/messaging/DistributionAggregate.html) - How can you maintain the overall message flow when processing a message consisting of multiple elements, each of which may require different processing?\n*   [Content Enricher](https://www.enterpriseintegrationpatterns.com/patterns/messaging/DataEnricher.html) - How do we communicate with another system if the message originator does not have all the required data items available?\n*   [Content Filter](https://www.enterpriseintegrationpatterns.com/patterns/messaging/ContentFilter.html) - How do you simplify dealing with a large message, when you are interested only in a few data items?\n*   [Content-Based Router](https://www.enterpriseintegrationpatterns.com/patterns/messaging/ContentBasedRouter.html) - How do we handle a situation where the implementation of a single logical function (e.g., inventory check) is spread across multiple physical systems?\n*   [Control Bus](https://www.enterpriseintegrationpatterns.com/patterns/messaging/ControlBus.html) - How can we effectively administer a messaging system that is distributed across multiple platforms and a wide geographic area?\n*   [Correlation Identifier](https://www.enterpriseintegrationpatterns.com/patterns/messaging/CorrelationIdentifier.html) - How does a requestor that has received a reply know which request this is the reply for?\n*   [Datatype Channel](https://www.enterpriseintegrationpatterns.com/patterns/messaging/DatatypeChannel.html) - How can the application send a data item such that the receiver will know how to process it?\n*   [Dead Letter Channel](https://www.enterpriseintegrationpatterns.com/patterns/messaging/DeadLetterChannel.html) - What will the messaging system do with a message it cannot deliver?\n*   [Detour](https://www.enterpriseintegrationpatterns.com/patterns/messaging/Detour.html) - How can you route a message through intermediate steps to perform validation, testing or debugging functions?\n*   [Document Message](https://www.enterpriseintegrationpatterns.com/patterns/messaging/DocumentMessage.html) - How can messaging be used to transfer data between applications?\n*   [Durable Subscriber](https://www.enterpriseintegrationpatterns.com/patterns/messaging/DurableSubscription.html) - How can a subscriber avoid missing messages while it is not listening for them?\n*   [Dynamic Router](https://www.enterpriseintegrationpatterns.com/patterns/messaging/DynamicRouter.html) - How can you avoid the dependency of the router on all possible destinations while maintaining its efficiency?\n*   [Envelope Wrapper](https://www.enterpriseintegrationpatterns.com/patterns/messaging/EnvelopeWrapper.html) - How can existing systems participate in a messaging exchange that places specific requirements on the message format, such as message header fields or encryption?\n*   [Event Message](https://www.enterpriseintegrationpatterns.com/patterns/messaging/EventMessage.html) - How can messaging be used to transmit events from one application to another?\n*   [Event-Driven Consumer](https://www.enterpriseintegrationpatterns.com/patterns/messaging/EventDrivenConsumer.html) - How can an application automatically consume messages as they become available?\n*   [Format Indicator](https://www.enterpriseintegrationpatterns.com/patterns/messaging/FormatIndicator.html) - How can a message\\`s data format be designed to allow for possible future changes?\n*   [Guaranteed Delivery](https://www.enterpriseintegrationpatterns.com/patterns/messaging/GuaranteedMessaging.html) - How can the sender make sure that a message will be delivered, even if the messaging system fails?\n*   [Idempotent Receiver](https://www.enterpriseintegrationpatterns.com/patterns/messaging/IdempotentReceiver.html) - How can a message receiver deal with duplicate messages?\n*   [Invalid Message Channel](https://www.enterpriseintegrationpatterns.com/patterns/messaging/InvalidMessageChannel.html) - How can a messaging receiver gracefully handle receiving a message that makes no sense?\n*   [Message](https://www.enterpriseintegrationpatterns.com/patterns/messaging/Message.html) - How can two applications connected by a message channel exchange a piece of information?\n*   [Message Dispatcher](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageDispatcher.html) - How can multiple consumers on a single channel coordinate their message processing?\n*   [Message Expiration](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageExpiration.html) - How can a sender indicate when a message should be considered stale and thus shouldn\\`t be processed?\n*   [Message Translator](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageTranslator.html) - How can systems using different data formats communicate with each other using messaging?\n*   [Message Broker](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageBroker.html) - How can you decouple the destination of a message from the sender and maintain central control over the flow of messages?\n*   [Message Bus](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageBus.html) - What is an architecture that enables separate applications to work together, but in a decoupled fashion such that applications can be easily added or removed without affecting the others?\n*   [Message Channel](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageChannel.html) - How does one application communicate with another using messaging?\n*   [Message Endpoint](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageEndpoint.html) - How does an application connect to a messaging channel to send and receive messages?\n*   [Message Filter](https://www.enterpriseintegrationpatterns.com/patterns/messaging/Filter.html) - How can a component avoid receiving uninteresting messages?\n*   [Message History](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageHistory.html) - How can we effectively analyze and debug the flow of messages in a loosely coupled system?\n*   [Message Router](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageRouter.html) - How can you decouple individual processing steps so that messages can be passed to different filters depending on a set of conditions?\n*   [Message Sequence](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageSequence.html) - How can messaging transmit an arbitrarily large amount of data?\n*   [Message Store](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageStore.html) - How can we report against message information without disturbing the loosely coupled and transient nature of a messaging system?\n*   [Messaging Bridge](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessagingBridge.html) - How can multiple messaging systems be connected so that messages available on one are also available on the others?\n*   [Messaging Gateway](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessagingGateway.html) - How do you encapsulate access to the messaging system from the rest of the application?\n*   [Messaging Mapper](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessagingMapper.html) - How do you move data between domain objects and the messaging infrastructure while keeping the two independent of each other?\n*   [Normalizer](https://www.enterpriseintegrationpatterns.com/patterns/messaging/Normalizer.html) - How do you process messages that are semantically equivalent, but arrive in a different format?\n*   [Pipes and Filters](https://www.enterpriseintegrationpatterns.com/patterns/messaging/PipesAndFilters.html) - How can we perform complex processing on a message while maintaining independence and flexibility?\n*   [Point-to-Point Channel](https://www.enterpriseintegrationpatterns.com/patterns/messaging/PointToPointChannel.html) - How can the caller be sure that exactly one receiver will receive the document or perform the call?\n*   [Polling Consumer](https://www.enterpriseintegrationpatterns.com/patterns/messaging/PollingConsumer.html) - How can an application consume a message when the application is ready?\n*   [Process Manager](https://www.enterpriseintegrationpatterns.com/patterns/messaging/ProcessManager.html) - How do we route a message through multiple processing steps when the required steps may not be known at design-time and may not be sequential?\n*   [Publish-Subscribe Channel](https://www.enterpriseintegrationpatterns.com/patterns/messaging/PublishSubscribeChannel.html) - How can the sender broadcast an event to all interested receivers?\n*   [Recipient List](https://www.enterpriseintegrationpatterns.com/patterns/messaging/RecipientList.html) - How do we route a message to a list of dynamically specified recipients?\n*   [Request-Reply](https://www.enterpriseintegrationpatterns.com/patterns/messaging/RequestReply.html) - When an application sends a message, how can it get a response from the receiver?\n*   [Resequencer](https://www.enterpriseintegrationpatterns.com/patterns/messaging/Resequencer.html) - How can we get a stream of related but out-of-sequence messages back into the correct order?\n*   [Return Address](https://www.enterpriseintegrationpatterns.com/patterns/messaging/ReturnAddress.html) - How does a replier know where to send the reply?\n*   [Routing Slip](https://www.enterpriseintegrationpatterns.com/patterns/messaging/RoutingTable.html) - How do we route a message consecutively through a series of processing steps when the sequence of steps is not known at design-time and may vary for each message?\n*   [Scatter-Gather](https://www.enterpriseintegrationpatterns.com/patterns/messaging/BroadcastAggregate.html) - How do you maintain the overall message flow when a message needs to be sent to multiple recipients, each of which may send a reply?\n*   [Selective Consumer](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageSelector.html) - How can a message consumer select which messages it wishes to receive?\n*   [Service Activator](https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessagingAdapter.html) - How can an application design a service to be invoked both via various messaging technologies and via non-messaging techniques?\n*   [Smart Proxy](https://www.enterpriseintegrationpatterns.com/patterns/messaging/SmartProxy.html) - How can you track messages on a service that publishes reply messages to the Return Address specified by the requestor?\n*   [Splitter](https://www.enterpriseintegrationpatterns.com/patterns/messaging/Sequencer.html) - How can we process a message if it contains multiple elements, each of which may have to be processed in a different way?\n*   [Test Message](https://www.enterpriseintegrationpatterns.com/patterns/messaging/TestMessage.html) - What happens, though, if a component is actively processing messages, but garbles outgoing messages due to an internal fault?\n*   [Transactional Client](https://www.enterpriseintegrationpatterns.com/patterns/messaging/TransactionalClient.html) - How can a client control its transactions with the messaging system?\n*   [Wire Tap](https://www.enterpriseintegrationpatterns.com/patterns/messaging/WireTap.html) - How do you inspect messages that travel on a point-to-point channel?\n\n### Integration Patterns / Integration Architecture Patterns\n\n*   [API-led Connectivity pattern (‚≠ê3.4k)](https://github.com/chanakaudaya/solution-architecture-patterns/blob/master/vendor-neutral/API-led-Connectivity-Pattern.md) - Use APIs to connect different systems and applications.\n*   [Anti Corruption Layer Pattern (‚≠ê3.4k)](https://github.com/chanakaudaya/solution-architecture-patterns/blob/master/vendor-neutral/Anti-Corruption-Layer-Pattern.md) - Add a layer to isolate and transform data between systems.\n*   [Change Data Capture Pattern (‚≠ê3.4k)](https://github.com/chanakaudaya/solution-architecture-patterns/blob/master/vendor-neutral/Introduction-to-Change-Data-Capture.md) - Capture and propagate changes made to a database or data source in real-time.\n*   [Hybrid API Management pattern (‚≠ê3.4k)](https://github.com/chanakaudaya/solution-architecture-patterns/blob/master/vendor-neutral/Hybrid-API-Management-Pattern.md) - Manage APIs that span both cloud and on-premises environments using a central control plane.\n*   [Hybrid Integration pattern (‚≠ê3.4k)](https://github.com/chanakaudaya/solution-architecture-patterns/blob/master/vendor-neutral/Hybrid-Integration-Pattern.md) - Integrate systems and applications that are deployed both on-premises and in the cloud using a combination of integration technologies.\n\n### Integration Patterns / Microservice API Patterns\n\n*   Foundation\n    *   [Frontend Integration](https://microservice-api-patterns.org/patterns/foundation/FrontendIntegration) - How can client-side end-user interfaces that are physically separated from server-side business logic and data storage be populated and updated with computing results, result sets from searches in data sources, and detailed information about data entities? How can application frontends invoke activities in a backend or upload data to it?\n    *   [Backend Integration](https://microservice-api-patterns.org/patterns/foundation/BackendIntegration) - How can distributed applications and their parts, which have been built independently and are deployed separately, exchange data and trigger mutual activity while preserving system-internal conceptual integrity without introducing undesired coupling?\n    *   [Public API](https://microservice-api-patterns.org/patterns/foundation/PublicAPI) - How can an API be made available to an unlimited and/or unknown number of API clients outside the organization that are globally, nationally, and/or regionally distributed?\n    *   [Community API](https://microservice-api-patterns.org/patterns/foundation/CommunityAPI) - How can the visibility of and the access to an API be restricted to a closed user group that does not work for a single organizational unit but for multiple legal entities (such as companies, nonprofit/nongovernment organizations, and governments)?\n    *   [Solution-Internal API](https://microservice-api-patterns.org/patterns/foundation/SolutionInternalAPI) - How can access to and usage of an API be limited to an application, for instance, components in the same or another logical layer and/or physical tier?\n    *   [API Description](https://microservice-api-patterns.org/patterns/foundation/APIDescription) - Which knowledge should be shared between an API provider and its clients? How should this knowledge be documented?\n*   Responsibility\n    *   Endpoint Roles\n        *   [Processing Resource](https://microservice-api-patterns.org/patterns/responsibility/endpointRoles/ProcessingResource) - How can an API provider allow its clients to trigger an action in it?\n        *   [Information Holder Resource](https://microservice-api-patterns.org/patterns/responsibility/endpointRoles/InformationHolderResource) - How can domain data be exposed in an API, but its implementation still be hidden? How can an API expose data entities so that API clients can access and/or modify these entities concurrently without compromising data integrity and quality?\n    *   Operation Responsibilities\n        *   [State Creation Operation](https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/StateCreationOperation) - How can an API provider allow its clients to report that something has happened that the provider needs to know about, for instance, to trigger instant or later processing?\n        *   [Retrieval Operation](https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/RetrievalOperation) - How can information available from a remote party (the API provider, that is) be retrieved to satisfy an information need of an end user or to allow further client-side processing?\n        *   [State Transition Operation](https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/StateTransitionOperation) - How can a client initiate a processing action that causes the provider-side application state to change? How can API clients and API providers share the responsibilities required to execute and control business processes and their activities?\n        *   [Computation Function](https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/ComputationFunction) - How can a client invoke side-effect-free remote processing on the provider side to have a result calculated from its input?\n    *   Information Holder Types\n        *   [Operational Data Holder](https://microservice-api-patterns.org/patterns/responsibility/informationHolderEndpointTypes/OperationalDataHolder) - How can an API support clients that want to create, read, update, and/or delete instances of domain entities that represent operational data: data that is rather short-lived, changes often during daily business operations, and has many outgoing relations?\n        *   [Master Data Holder](https://microservice-api-patterns.org/patterns/responsibility/informationHolderEndpointTypes/MasterDataHolder) - How can I design an API that provides access to master data that lives for a long time, does not change frequently, and will be referenced from many clients?\n        *   [Reference Data Holder](https://microservice-api-patterns.org/patterns/responsibility/informationHolderEndpointTypes/ReferenceDataHolder) - How should data that is referenced in many places, lives long, and is immutable for clients be treated in API endpoints? How can such reference data be used in requests to and responses from Processing Resources or Information Holder Resources?\n        *   [Link Lookup Resource](https://microservice-api-patterns.org/patterns/responsibility/informationHolderEndpointTypes/LinkLookupResource) - How can message representations refer to other, possibly many and frequently changing, API endpoints and operations without binding the message recipient to the actual addresses of these endpoints?\n        *   [Data Transfer Resource](https://microservice-api-patterns.org/patterns/responsibility/informationHolderEndpointTypes/DataTransferResource) - How can two or more communication participants exchange data without knowing each other, without being available at the same time, and even if the data has already been sent before its recipients became known?\n*   Structure\n    *   Representation Elements\n        *   [Atomic Parameter](https://microservice-api-patterns.org/patterns/structure/representationElements/AtomicParameter) - How can simple, unstructured data (such as a number, a string, a Boolean value, or a block of binary data) be exchanged between API client and API provider?\n        *   [Atomic Parameter List](https://microservice-api-patterns.org/patterns/structure/representationElements/AtomicParameterList) - How can multiple related Atomic Parameters be combined in a representation element so that each of them stays simple, but their relatedness becomes explicit in the API Description and the runtime message exchanges?\n        *   [Parameter Tree](https://microservice-api-patterns.org/patterns/structure/representationElements/ParameterTree) - How can containment relationships be expressed when defining complex representation elements and exchanging such related elements at runtime?\n        *   [Parameter Forest](https://microservice-api-patterns.org/patterns/structure/representationElements/ParameterForest) - How can multiple Parameter Trees be exposed as request or response payload of an API operation?\n    *   Element Stereotypes\n        *   [Data Element](https://microservice-api-patterns.org/patterns/structure/elementStereotypes/DataElement) - How can domain/application-level information be exchanged between API clients and API providers without exposing provider-internal data definitions in the API? How can API client and API provider be decoupled from a data management point of view?\n        *   [Metadata Element](https://microservice-api-patterns.org/patterns/structure/elementStereotypes/MetadataElement) - How can messages be enriched with additional information so that receivers can interpret the message content correctly, without having to hardcode assumptions about the data semantics?\n        *   [Id Element](https://microservice-api-patterns.org/patterns/structure/elementStereotypes/IdElement) - How can API elements be distinguished from each other at design time and at runtime? When applying domain-driven design, how can elements of the Published Language be identified?\n        *   [Link Element](https://microservice-api-patterns.org/patterns/structure/elementStereotypes/LinkElement) - How can API endpoints and operations be referenced in request and response message payloads so that they can be called remotely?\n    *   Special Purpose Representations\n        *   [API Key](https://microservice-api-patterns.org/patterns/structure/specialPurposeRepresentations/APIKey) - How can an API provider identify and authenticate clients and their requests?\n        *   [Error Report](https://microservice-api-patterns.org/patterns/structure/specialPurposeRepresentations/ErrorReport) - How can an API provider inform its clients about communication and processing faults? How can this information be made independent of the underlying communication technologies and platforms (for example, protocol-level headers representing status codes)?\n        *   [Context Representation](https://microservice-api-patterns.org/patterns/structure/specialPurposeRepresentations/ContextRepresentation) - How can API consumers and providers exchange context information without relying on any particular remoting protocols? How can identity information and quality properties in a request be made visible to related subsequent ones in conversations?\n*   Quality\n    *   Reference Management\n        *   [Embedded Entity](https://microservice-api-patterns.org/patterns/quality/referenceManagement/EmbeddedEntity) - How can one avoid sending multiple messages when their receivers require insights about multiple related information elements?\n        *   [Linked Information Holder](https://microservice-api-patterns.org/patterns/quality/referenceManagement/LinkedInformationHolder) - How can messages be kept small even when an API deals with multiple information elements that reference each other?\n\n    *   Data Transfer Parsimony\n        *   [Pagination](https://microservice-api-patterns.org/patterns/quality/dataTransferParsimony/Pagination) - How can messages be kept small even when an API deals with multiple information elements that reference each other?\n        *   [Wish List](https://microservice-api-patterns.org/patterns/quality/dataTransferParsimony/WishList) - How can an API client inform the API provider at runtime about the data it is interested in?\n        *   [Wish Template](https://microservice-api-patterns.org/patterns/quality/dataTransferParsimony/WishTemplate) - How can an API client inform the API provider about nested data that it is interested in? How can such preferences be expressed flexibly and dynamically?\n        *   [Conditional Request](https://microservice-api-patterns.org/patterns/quality/dataTransferParsimony/ConditionalRequest) - How can unnecessary server-side processing and bandwidth usage be avoided when frequently invoking API operations that return rarely changing data?\n        *   [Request Bundle](https://microservice-api-patterns.org/patterns/quality/dataTransferParsimony/RequestBundle) - How can the number of requests and responses be reduced to increase communication efficiency?\n\n    *   Quality Management and Governance\n        *   [Pricing Plan](https://microservice-api-patterns.org/patterns/quality/qualityManagementAndGovernance/PricingPlan) - How can the API provider meter API service consumption and charge for it?\n        *   [Rate Limit](https://microservice-api-patterns.org/patterns/quality/qualityManagementAndGovernance/RateLimit) - How can the API provider prevent API clients from excessive API usage?\n        *   [Service Level Agreement](https://microservice-api-patterns.org/patterns/quality/qualityManagementAndGovernance/ServiceLevelAgreement) - How can an API client learn about the specific quality-of-service characteristics of an API and its endpoint operations? How can these characteristics, and the consequences of not meeting them, be defined and communicated in a measurable way?\n*   Evolution\n    *   [Version Identifier](https://microservice-api-patterns.org/patterns/evolution/VersionIdentifier) - How can an API provider indicate its current capabilities as well as the existence of possibly incompatible changes to clients in order to prevent malfunctioning of clients due to undiscovered interpretation errors?\n    *   [Semantic Versioning](https://microservice-api-patterns.org/patterns/evolution/SemanticVersioning) - How can stakeholders compare API versions to detect immediately whether they are compatible?\n    *   [Two In Production](https://microservice-api-patterns.org/patterns/evolution/TwoInProduction) - How can a provider gradually update an API without breaking existing clients but also without having to maintain a large number of API versions in production?\n    *   [Aggressive Obsolescence](https://microservice-api-patterns.org/patterns/evolution/AggressiveObsolescence) - How can API providers reduce the effort for maintaining an entire API or its parts (such as endpoints, operations, or message representations) with guaranteed service quality levels?\n    *   [Experimental Preview](https://microservice-api-patterns.org/patterns/evolution/ExperimentalPreview) - How can providers make the introduction of a new API, or new API version, less risky for their clients and obtain early adopter feedback without having to freeze the API design prematurely?\n    *   [Limited Lifetime Guarantee](https://microservice-api-patterns.org/patterns/evolution/LimitedLifetimeGuarantee) - How can a provider let clients know for how long they can rely on the published version of an API?\n    *   [Eternal Lifetime Guarantee](https://microservice-api-patterns.org/patterns/evolution/EternalLifetimeGuarantee) - How can a provider support clients that are unable or unwilling to migrate to newer API versions at all?\n\n### Integration Patterns / SOA Patterns\n\n*   Foundational Inventory Patterns\n    *   [Canonical Protocol](https://patterns.arcitura.com/soa-patterns/design_patterns/canonical_protocol) - Defines a common communication protocol between services to enable interoperability and decoupling.\n    *   [Canonical Schema](https://patterns.arcitura.com/soa-patterns/design_patterns/canonical_schema) - Defines a standard data model and format for exchanging data between services.\n    *   [Domain Inventory](https://patterns.arcitura.com/soa-patterns/design_patterns/domain_inventory) - Identifies and categorizes the types of services within a particular domain.\n    *   [Enterprise Inventory](https://patterns.arcitura.com/soa-patterns/design_patterns/enterprise_inventory) - Identifies and categorizes the types of services within a particular domain.\n    *   [Logic Centralization](https://patterns.arcitura.com/soa-patterns/design_patterns/logic_centralization) - Centralizes business logic within a service layer to reduce redundancy and promote consistency.\n    *   [Service Layers](https://patterns.arcitura.com/soa-patterns/design_patterns/service_layers) - Centralizes business logic within a service layer to reduce redundancy and promote consistency.\n    *   [Service Normalization](https://patterns.arcitura.com/soa-patterns/design_patterns/service_normalization) - Centralizes business logic within a service layer to reduce redundancy and promote consistency.\n*   Logical Inventory Layer Patterns\n    *   [Entity Abstraction](https://patterns.arcitura.com/soa-patterns/design_patterns/entity_abstraction) - Abstracts data entities to simplify data access and reduce coupling.\n    *   [Process Abstraction](https://patterns.arcitura.com/soa-patterns/design_patterns/process_abstraction) - Abstracts processes to improve reusability and maintainability.\n    *   [Utility Abstraction](https://patterns.arcitura.com/soa-patterns/design_patterns/utility_abstraction) - Abstracts common utilities to reduce duplication and promote consistency.\n    *   [Micro Task Abstraction](https://patterns.arcitura.com/soa-patterns/design_patterns/micro_task_abstraction) - Breaks down tasks into smaller, more granular tasks for easier management.\n*   Inventory Centralization Patterns\n    *   [Policy Centralization](https://patterns.arcitura.com/soa-patterns/design_patterns/policy_centralization) - Centralizes policies to reduce duplication and improve consistency.\n    *   [Process Centralization](https://patterns.arcitura.com/soa-patterns/design_patterns/process_centralization) - Centralizes processes to improve reusability and maintainability.\n    *   [Rules Centralization](https://patterns.arcitura.com/soa-patterns/design_patterns/rules_centralization) - Centralizes business rules to reduce duplication and promote consistency.\n    *   [Schema Centralization](https://patterns.arcitura.com/soa-patterns/design_patterns/schema_centralization) - Centralizes data schemas to reduce duplication and improve consistency.\n*   Inventory Implementation Patterns\n    *   [Canonical Resources](https://patterns.arcitura.com/soa-patterns/design_patterns/canonical_resources) - Defines a standard set of resources for common functionality across services.\n    *   [Cross-Domain Utility Layer](https://patterns.arcitura.com/soa-patterns/design_patterns/cross_domain_utility_layer) - Uses multiple protocols for improved performance and flexibility.\n    *   [Dual Protocols](https://patterns.arcitura.com/soa-patterns/design_patterns/dual_protocols) - Defines a common utility layer across multiple domains.\n    *   [Inventory Endpoint](https://patterns.arcitura.com/soa-patterns/design_patterns/inventory_endpoint) - Defines a standard endpoint for accessing inventory resources.\n    *   [Service Grid](https://patterns.arcitura.com/soa-patterns/design_patterns/service_grid) - Provides a framework for managing and scaling services.\n    *   [State Repository](https://patterns.arcitura.com/soa-patterns/design_patterns/state_repository) - Stores and manages service state information.\n    *   [Stateful Services](https://patterns.arcitura.com/soa-patterns/design_patterns/stateful_services) - Maintains state information across service invocations.\n    *   [Augmented Protocols](https://patterns.arcitura.com/soa-patterns/design_patterns/augmented_protocols) - Enhances protocols with additional features.\n*   Inventory Governance Patterns\n    *   [Canonical Expression](https://patterns.arcitura.com/soa-patterns/design_patterns/canonical_expression) - Defines a standard expression language for inventory data.\n    *   [Canonical Versioning](https://patterns.arcitura.com/soa-patterns/design_patterns/canonical_versioning) - Defines a standard versioning scheme for inventory resources.\n    *   [Metadata Centralization](https://patterns.arcitura.com/soa-patterns/design_patterns/metadata_centralization) - Centralizes metadata to reduce duplication and improve consistency.\n*   Foundational Service Patterns\n    *   [Agnostic Capability](https://patterns.arcitura.com/soa-patterns/design_patterns/agnostic_capability) - Abstracts service capabilities for improved flexibility.\n    *   [Agnostic Context](https://patterns.arcitura.com/soa-patterns/design_patterns/agnostic_context) - Abstracts service context for improved flexibility.\n    *   [Functional Decomposition](https://patterns.arcitura.com/soa-patterns/design_patterns/functional_decomposition) - Breaks down services into smaller, more manageable components.\n    *   [Non-Agnostic Context](https://patterns.arcitura.com/soa-patterns/design_patterns/non_agnostic_context) - Breaks down services into smaller, more manageable components.\n    *   [Service Encapsulation](https://patterns.arcitura.com/soa-patterns/design_patterns/service_encapsulation) - Encapsulates service functionality for improved maintainability.\n*   Service Implementation Patterns\n    *   [Partial State Deferral](https://patterns.arcitura.com/soa-patterns/design_patterns/partial_state_deferral) - Encapsulates service functionality for improved maintainability.\n    *   [Partial Validation](https://patterns.arcitura.com/soa-patterns/design_patterns/partial_validation) - Validates only relevant data for improved performance.\n    *   [Redundant Implementation](https://patterns.arcitura.com/soa-patterns/design_patterns/redundant_implementation) - Implements multiple versions of a service for improved flexibility.\n    *   [Service Data Replication](https://patterns.arcitura.com/soa-patterns/design_patterns/service_data_replication) - Replicates data across multiple services for improved performance.\n    *   [Service Fa√ßade](https://patterns.arcitura.com/soa-patterns/design_patterns/service_facade) - Provides a simplified interface to a complex service for improved usability.\n    *   [UI Mediator](https://patterns.arcitura.com/soa-patterns/design_patterns/ui_mediator) - Mediates between the user interface and underlying services for improved usability.\n    *   [Reference Data Centralization](https://patterns.arcitura.com/soa-patterns/design_patterns/reference_data_centralization) - Centralizes reference data to reduce duplication and improve consistency.\n    *   [Microservice Deployment](https://patterns.arcitura.com/soa-patterns/design_patterns/microservice_deployment) - Deploys services as independent, autonomous units for improved scalability and resilience.\n    *   [Containerization](https://patterns.arcitura.com/soa-patterns/design_patterns/containerization) - How can an environment be provided with maximum support for services with high-performance recovery and scalability requirements?\n*   Service Security Patterns\n    *   [Exception Shielding](https://patterns.arcitura.com/soa-patterns/design_patterns/exception_shielding) - Protects against security vulnerabilities through proper handling of exceptions.\n    *   [Message Screening](https://patterns.arcitura.com/soa-patterns/design_patterns/message_screening) - Screens messages for malicious content.\n    *   [Service Perimeter Guard](https://patterns.arcitura.com/soa-patterns/design_patterns/service_perimeter_guard) - Guards the service perimeter to prevent unauthorized access.\n    *   [Trusted Subsystem](https://patterns.arcitura.com/soa-patterns/design_patterns/trusted_subsystem) - Establishes trust between subsystems for improved security.\n*   Service Contract Design Patterns\n    *   [Concurrent Contracts](https://patterns.arcitura.com/soa-patterns/design_patterns/concurrent_contracts) - Allows multiple versions of a service contract to coexist simultaneously.\n    *   [Contract Centralization](https://patterns.arcitura.com/soa-patterns/design_patterns/contract_centralization) - Centralizes service contracts to improve consistency and reduce duplication.\n    *   [Contract Denormalization](https://patterns.arcitura.com/soa-patterns/design_patterns/contract_denormalization) - Centralizes service contracts to improve consistency and reduce duplication.\n    *   [Decoupled Contract](https://patterns.arcitura.com/soa-patterns/design_patterns/decoupled_contract) - Decouples service contracts from their implementation for improved flexibility.\n    *   [Validation Abstraction](https://patterns.arcitura.com/soa-patterns/design_patterns/validation_abstraction) - Abstracts validation logic to improve reusability and maintainability.\n*   Legacy Encapsulation Patterns\n    *   [File Gateway](https://patterns.arcitura.com/soa-patterns/design_patterns/file_gateway) - Provides a gateway to access legacy file-based systems.\n    *   [Legacy Wrapper](https://patterns.arcitura.com/soa-patterns/design_patterns/legacy_wrapper) - Wraps legacy systems to expose them as services.\n    *   [Multi-Channel Endpoint](https://patterns.arcitura.com/soa-patterns/design_patterns/multi_channel_endpoint) - Provides multiple communication channels to access legacy systems.\n*   Service Governance Patterns\n    *   [Compatible Change](https://patterns.arcitura.com/soa-patterns/design_patterns/compatible_change) - Enables changes to a service without breaking existing clients.\n    *   [Decomposed Capability](https://patterns.arcitura.com/soa-patterns/design_patterns/decomposed_capability) - Breaks down a service capability into smaller, more manageable pieces.\n    *   [Distributed Capability](https://patterns.arcitura.com/soa-patterns/design_patterns/distributed_capability) - Breaks down a service capability into smaller, more manageable pieces.\n    *   [Proxy Capability](https://patterns.arcitura.com/soa-patterns/design_patterns/proxy_capability) - Provides a proxy to a remote service capability to improve performance and reduce network overhead.\n    *   [Service Decomposition](https://patterns.arcitura.com/soa-patterns/design_patterns/service_decomposition) - Breaks down a monolithic service into smaller, more manageable pieces.\n    *   [Service Refactoring](https://patterns.arcitura.com/soa-patterns/design_patterns/service_refactoring) - Refactors a service to improve its design and performance.\n    *   [Termination Notification](https://patterns.arcitura.com/soa-patterns/design_patterns/termination_notification) - Notifies clients of a service's termination.\n    *   [Version Identification](https://patterns.arcitura.com/soa-patterns/design_patterns/version_identification) - Identifies the version of a service.\n*   Capability Composition Patterns\n    *   [Capability Composition](https://patterns.arcitura.com/soa-patterns/design_patterns/capability_composition) - Combines multiple service capabilities to create a new capability.\n    *   [Capability Recomposition](https://patterns.arcitura.com/soa-patterns/design_patterns/capability_recomposition) - Recombines existing service capabilities to create a new capability.\n*   Service Messaging Patterns\n    *   [Asynchronous Queuing](https://patterns.arcitura.com/soa-patterns/design_patterns/asynchronous_queuing) - Uses a message queue to decouple services and improve scalability and reliability.\n    *   [Event-Driven Messaging](https://patterns.arcitura.com/soa-patterns/design_patterns/event_driven_messaging) - Uses events to trigger service invocations and reduce coupling.\n    *   [Intermediate Routing](https://patterns.arcitura.com/soa-patterns/design_patterns/intermediate_routing) - Uses intermediate routing nodes to improve performance and flexibility.\n    *   [Messaging Metadata](https://patterns.arcitura.com/soa-patterns/design_patterns/messaging_metadata) - Uses metadata to describe and manage service messages.\n    *   [Reliable Messaging](https://patterns.arcitura.com/soa-patterns/design_patterns/reliable_messaging) - Ensures message delivery and reliability in a distributed environment.\n    *   [Service Agent](https://patterns.arcitura.com/soa-patterns/design_patterns/service_agent) - Acts as a proxy for a remote service to improve performance and reduce network overhead.\n    *   [Service Callback](https://patterns.arcitura.com/soa-patterns/design_patterns/service_callback) - Uses callbacks to communicate between services.\n    *   [Service Instance Routing](https://patterns.arcitura.com/soa-patterns/design_patterns/service_instance_routing) - Routes messages based on the service instance to improve performance and scalability.\n    *   [Service Messaging](https://patterns.arcitura.com/soa-patterns/design_patterns/service_messaging) - Describes the communication between services.\n    *   [State Messaging](https://patterns.arcitura.com/soa-patterns/design_patterns/state_messaging) - Uses messages to manage state information in a distributed environment.\n*   Composition Implementation Patterns\n    *   [Agnostic Sub-Controller](https://patterns.arcitura.com/soa-patterns/design_patterns/agnostic_sub_controller) - Separates sub-controllers from the main controller to improve reusability and maintainability.\n    *   [Atomic Service Transaction](https://patterns.arcitura.com/soa-patterns/design_patterns/atomic_service_transaction) - Uses transactions to ensure atomicity and consistency across multiple service invocations.\n    *   [Compensating Service Transaction](https://patterns.arcitura.com/soa-patterns/design_patterns/compensating_service_transaction) - Reverses the effects of a failed transaction.\n    *   [Composition Autonomy](https://patterns.arcitura.com/soa-patterns/design_patterns/composition_autonomy) - Enables services to act autonomously within a composition.\n*   Service Interaction Security Patterns\n    *   [Brokered Authentication](https://patterns.arcitura.com/soa-patterns/design_patterns/brokered_authentication) - Authenticates clients through a broker.\n    *   [Data Confidentiality](https://patterns.arcitura.com/soa-patterns/design_patterns/data_confidentiality) - Ensures data confidentiality in a distributed environment.\n    *   [Data Origin Authentication](https://patterns.arcitura.com/soa-patterns/design_patterns/data_origin_authentication) - Authenticates the origin of a message.\n    *   [Direct Authentication](https://patterns.arcitura.com/soa-patterns/design_patterns/direct_authentication) - Authenticates clients directly.\n*   Transformation Patterns\n    *   [Data Format Transformation](https://patterns.arcitura.com/soa-patterns/design_patterns/data_format_transformation) - Transforms data formats to enable interoperability.\n    *   [Data Model Transformation](https://patterns.arcitura.com/soa-patterns/design_patterns/data_model_transformation) - Transforms data models to enable interoperability.\n    *   [Protocol Bridging](https://patterns.arcitura.com/soa-patterns/design_patterns/protocol_bridging) - Bridges between different protocols to enable interoperability.\n*   REST-inspired Patterns\n    *   [Entity Linking](https://patterns.arcitura.com/soa-patterns/design_patterns/entity_linking) - Links related resources to enable navigation and discovery.\n    *   [Lightweight Endpoint](https://patterns.arcitura.com/soa-patterns/design_patterns/lightweight_endpoint) - Provides a lightweight endpoint for resource access.\n    *   [Reusable Contract](https://patterns.arcitura.com/soa-patterns/design_patterns/reusable_contract) - Reuses common contracts to improve consistency and reduce duplication.\n    *   [Content Negotiation](https://patterns.arcitura.com/soa-patterns/design_patterns/content_negotiation) - Negotiates the content format between clients and servers.\n    *   [Endpoint Redirection](https://patterns.arcitura.com/soa-patterns/design_patterns/endpoint_redirection) - Redirects clients to alternative endpoints.\n    *   [Idempotent Capability](https://patterns.arcitura.com/soa-patterns/design_patterns/idempotent_capability) - Ensures that the same action can be performed multiple times without changing the system state.",
      "content_html": "<h3><p>Integration Patterns / Enterprise Integration Patterns</p>\n</h3><ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/Aggregator.html\" rel=\"noopener noreferrer\">Aggregator</a> - How do we combine the results of individual, but related messages so that they can be processed as a whole?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/CanonicalDataModel.html\" rel=\"noopener noreferrer\">Canonical Data Model</a> - How can you minimize dependencies when integrating applications that use different data formats?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/ChannelAdapter.html\" rel=\"noopener noreferrer\">Channel Adapter</a> - How can you connect an application to the messaging system so that it can send and receive messages?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/ChannelPurger.html\" rel=\"noopener noreferrer\">Channel Purger</a> - How can you keep 'left-over' messages on a channel from disturbing tests or running systems?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/StoreInLibrary.html\" rel=\"noopener noreferrer\">Claim Check</a> - How can we reduce the data volume of message sent across the system without sacrificing information content?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/CommandMessage.html\" rel=\"noopener noreferrer\">Command Message</a> - How can messaging be used to invoke a procedure in another application?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/CompetingConsumers.html\" rel=\"noopener noreferrer\">Competing Consumers</a> - How can a messaging client process multiple messages concurrently?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/DistributionAggregate.html\" rel=\"noopener noreferrer\">Composed Message Processor</a> - How can you maintain the overall message flow when processing a message consisting of multiple elements, each of which may require different processing?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/DataEnricher.html\" rel=\"noopener noreferrer\">Content Enricher</a> - How do we communicate with another system if the message originator does not have all the required data items available?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/ContentFilter.html\" rel=\"noopener noreferrer\">Content Filter</a> - How do you simplify dealing with a large message, when you are interested only in a few data items?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/ContentBasedRouter.html\" rel=\"noopener noreferrer\">Content-Based Router</a> - How do we handle a situation where the implementation of a single logical function (e.g., inventory check) is spread across multiple physical systems?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/ControlBus.html\" rel=\"noopener noreferrer\">Control Bus</a> - How can we effectively administer a messaging system that is distributed across multiple platforms and a wide geographic area?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/CorrelationIdentifier.html\" rel=\"noopener noreferrer\">Correlation Identifier</a> - How does a requestor that has received a reply know which request this is the reply for?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/DatatypeChannel.html\" rel=\"noopener noreferrer\">Datatype Channel</a> - How can the application send a data item such that the receiver will know how to process it?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/DeadLetterChannel.html\" rel=\"noopener noreferrer\">Dead Letter Channel</a> - What will the messaging system do with a message it cannot deliver?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/Detour.html\" rel=\"noopener noreferrer\">Detour</a> - How can you route a message through intermediate steps to perform validation, testing or debugging functions?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/DocumentMessage.html\" rel=\"noopener noreferrer\">Document Message</a> - How can messaging be used to transfer data between applications?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/DurableSubscription.html\" rel=\"noopener noreferrer\">Durable Subscriber</a> - How can a subscriber avoid missing messages while it is not listening for them?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/DynamicRouter.html\" rel=\"noopener noreferrer\">Dynamic Router</a> - How can you avoid the dependency of the router on all possible destinations while maintaining its efficiency?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/EnvelopeWrapper.html\" rel=\"noopener noreferrer\">Envelope Wrapper</a> - How can existing systems participate in a messaging exchange that places specific requirements on the message format, such as message header fields or encryption?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/EventMessage.html\" rel=\"noopener noreferrer\">Event Message</a> - How can messaging be used to transmit events from one application to another?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/EventDrivenConsumer.html\" rel=\"noopener noreferrer\">Event-Driven Consumer</a> - How can an application automatically consume messages as they become available?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/FormatIndicator.html\" rel=\"noopener noreferrer\">Format Indicator</a> - How can a message`s data format be designed to allow for possible future changes?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/GuaranteedMessaging.html\" rel=\"noopener noreferrer\">Guaranteed Delivery</a> - How can the sender make sure that a message will be delivered, even if the messaging system fails?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/IdempotentReceiver.html\" rel=\"noopener noreferrer\">Idempotent Receiver</a> - How can a message receiver deal with duplicate messages?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/InvalidMessageChannel.html\" rel=\"noopener noreferrer\">Invalid Message Channel</a> - How can a messaging receiver gracefully handle receiving a message that makes no sense?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/Message.html\" rel=\"noopener noreferrer\">Message</a> - How can two applications connected by a message channel exchange a piece of information?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageDispatcher.html\" rel=\"noopener noreferrer\">Message Dispatcher</a> - How can multiple consumers on a single channel coordinate their message processing?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageExpiration.html\" rel=\"noopener noreferrer\">Message Expiration</a> - How can a sender indicate when a message should be considered stale and thus shouldn`t be processed?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageTranslator.html\" rel=\"noopener noreferrer\">Message Translator</a> - How can systems using different data formats communicate with each other using messaging?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageBroker.html\" rel=\"noopener noreferrer\">Message Broker</a> - How can you decouple the destination of a message from the sender and maintain central control over the flow of messages?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageBus.html\" rel=\"noopener noreferrer\">Message Bus</a> - What is an architecture that enables separate applications to work together, but in a decoupled fashion such that applications can be easily added or removed without affecting the others?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageChannel.html\" rel=\"noopener noreferrer\">Message Channel</a> - How does one application communicate with another using messaging?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageEndpoint.html\" rel=\"noopener noreferrer\">Message Endpoint</a> - How does an application connect to a messaging channel to send and receive messages?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/Filter.html\" rel=\"noopener noreferrer\">Message Filter</a> - How can a component avoid receiving uninteresting messages?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageHistory.html\" rel=\"noopener noreferrer\">Message History</a> - How can we effectively analyze and debug the flow of messages in a loosely coupled system?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageRouter.html\" rel=\"noopener noreferrer\">Message Router</a> - How can you decouple individual processing steps so that messages can be passed to different filters depending on a set of conditions?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageSequence.html\" rel=\"noopener noreferrer\">Message Sequence</a> - How can messaging transmit an arbitrarily large amount of data?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageStore.html\" rel=\"noopener noreferrer\">Message Store</a> - How can we report against message information without disturbing the loosely coupled and transient nature of a messaging system?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessagingBridge.html\" rel=\"noopener noreferrer\">Messaging Bridge</a> - How can multiple messaging systems be connected so that messages available on one are also available on the others?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessagingGateway.html\" rel=\"noopener noreferrer\">Messaging Gateway</a> - How do you encapsulate access to the messaging system from the rest of the application?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessagingMapper.html\" rel=\"noopener noreferrer\">Messaging Mapper</a> - How do you move data between domain objects and the messaging infrastructure while keeping the two independent of each other?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/Normalizer.html\" rel=\"noopener noreferrer\">Normalizer</a> - How do you process messages that are semantically equivalent, but arrive in a different format?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/PipesAndFilters.html\" rel=\"noopener noreferrer\">Pipes and Filters</a> - How can we perform complex processing on a message while maintaining independence and flexibility?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/PointToPointChannel.html\" rel=\"noopener noreferrer\">Point-to-Point Channel</a> - How can the caller be sure that exactly one receiver will receive the document or perform the call?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/PollingConsumer.html\" rel=\"noopener noreferrer\">Polling Consumer</a> - How can an application consume a message when the application is ready?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/ProcessManager.html\" rel=\"noopener noreferrer\">Process Manager</a> - How do we route a message through multiple processing steps when the required steps may not be known at design-time and may not be sequential?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/PublishSubscribeChannel.html\" rel=\"noopener noreferrer\">Publish-Subscribe Channel</a> - How can the sender broadcast an event to all interested receivers?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/RecipientList.html\" rel=\"noopener noreferrer\">Recipient List</a> - How do we route a message to a list of dynamically specified recipients?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/RequestReply.html\" rel=\"noopener noreferrer\">Request-Reply</a> - When an application sends a message, how can it get a response from the receiver?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/Resequencer.html\" rel=\"noopener noreferrer\">Resequencer</a> - How can we get a stream of related but out-of-sequence messages back into the correct order?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/ReturnAddress.html\" rel=\"noopener noreferrer\">Return Address</a> - How does a replier know where to send the reply?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/RoutingTable.html\" rel=\"noopener noreferrer\">Routing Slip</a> - How do we route a message consecutively through a series of processing steps when the sequence of steps is not known at design-time and may vary for each message?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/BroadcastAggregate.html\" rel=\"noopener noreferrer\">Scatter-Gather</a> - How do you maintain the overall message flow when a message needs to be sent to multiple recipients, each of which may send a reply?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessageSelector.html\" rel=\"noopener noreferrer\">Selective Consumer</a> - How can a message consumer select which messages it wishes to receive?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/MessagingAdapter.html\" rel=\"noopener noreferrer\">Service Activator</a> - How can an application design a service to be invoked both via various messaging technologies and via non-messaging techniques?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/SmartProxy.html\" rel=\"noopener noreferrer\">Smart Proxy</a> - How can you track messages on a service that publishes reply messages to the Return Address specified by the requestor?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/Sequencer.html\" rel=\"noopener noreferrer\">Splitter</a> - How can we process a message if it contains multiple elements, each of which may have to be processed in a different way?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/TestMessage.html\" rel=\"noopener noreferrer\">Test Message</a> - What happens, though, if a component is actively processing messages, but garbles outgoing messages due to an internal fault?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/TransactionalClient.html\" rel=\"noopener noreferrer\">Transactional Client</a> - How can a client control its transactions with the messaging system?</li>\n</ul>\n<ul>\n<li><a href=\"https://www.enterpriseintegrationpatterns.com/patterns/messaging/WireTap.html\" rel=\"noopener noreferrer\">Wire Tap</a> - How do you inspect messages that travel on a point-to-point channel?</li>\n</ul>\n<h3><p>Integration Patterns / Integration Architecture Patterns</p>\n</h3><ul>\n<li><a href=\"https://github.com/chanakaudaya/solution-architecture-patterns/blob/master/vendor-neutral/API-led-Connectivity-Pattern.md\" rel=\"noopener noreferrer\">API-led Connectivity pattern (‚≠ê3.4k)</a> - Use APIs to connect different systems and applications.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/chanakaudaya/solution-architecture-patterns/blob/master/vendor-neutral/Anti-Corruption-Layer-Pattern.md\" rel=\"noopener noreferrer\">Anti Corruption Layer Pattern (‚≠ê3.4k)</a> - Add a layer to isolate and transform data between systems.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/chanakaudaya/solution-architecture-patterns/blob/master/vendor-neutral/Introduction-to-Change-Data-Capture.md\" rel=\"noopener noreferrer\">Change Data Capture Pattern (‚≠ê3.4k)</a> - Capture and propagate changes made to a database or data source in real-time.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/chanakaudaya/solution-architecture-patterns/blob/master/vendor-neutral/Hybrid-API-Management-Pattern.md\" rel=\"noopener noreferrer\">Hybrid API Management pattern (‚≠ê3.4k)</a> - Manage APIs that span both cloud and on-premises environments using a central control plane.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/chanakaudaya/solution-architecture-patterns/blob/master/vendor-neutral/Hybrid-Integration-Pattern.md\" rel=\"noopener noreferrer\">Hybrid Integration pattern (‚≠ê3.4k)</a> - Integrate systems and applications that are deployed both on-premises and in the cloud using a combination of integration technologies.</li>\n</ul>\n<h3><p>Integration Patterns / Microservice API Patterns</p>\n</h3><ul>\n<li>Foundation<ul>\n<li><a href=\"https://microservice-api-patterns.org/patterns/foundation/FrontendIntegration\" rel=\"noopener noreferrer\">Frontend Integration</a> - How can client-side end-user interfaces that are physically separated from server-side business logic and data storage be populated and updated with computing results, result sets from searches in data sources, and detailed information about data entities? How can application frontends invoke activities in a backend or upload data to it?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/foundation/BackendIntegration\" rel=\"noopener noreferrer\">Backend Integration</a> - How can distributed applications and their parts, which have been built independently and are deployed separately, exchange data and trigger mutual activity while preserving system-internal conceptual integrity without introducing undesired coupling?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/foundation/PublicAPI\" rel=\"noopener noreferrer\">Public API</a> - How can an API be made available to an unlimited and/or unknown number of API clients outside the organization that are globally, nationally, and/or regionally distributed?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/foundation/CommunityAPI\" rel=\"noopener noreferrer\">Community API</a> - How can the visibility of and the access to an API be restricted to a closed user group that does not work for a single organizational unit but for multiple legal entities (such as companies, nonprofit/nongovernment organizations, and governments)?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/foundation/SolutionInternalAPI\" rel=\"noopener noreferrer\">Solution-Internal API</a> - How can access to and usage of an API be limited to an application, for instance, components in the same or another logical layer and/or physical tier?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/foundation/APIDescription\" rel=\"noopener noreferrer\">API Description</a> - Which knowledge should be shared between an API provider and its clients? How should this knowledge be documented?</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Responsibility<ul>\n<li>Endpoint Roles<ul>\n<li><a href=\"https://microservice-api-patterns.org/patterns/responsibility/endpointRoles/ProcessingResource\" rel=\"noopener noreferrer\">Processing Resource</a> - How can an API provider allow its clients to trigger an action in it?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/responsibility/endpointRoles/InformationHolderResource\" rel=\"noopener noreferrer\">Information Holder Resource</a> - How can domain data be exposed in an API, but its implementation still be hidden? How can an API expose data entities so that API clients can access and/or modify these entities concurrently without compromising data integrity and quality?</li>\n</ul>\n</li>\n<li>Operation Responsibilities<ul>\n<li><a href=\"https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/StateCreationOperation\" rel=\"noopener noreferrer\">State Creation Operation</a> - How can an API provider allow its clients to report that something has happened that the provider needs to know about, for instance, to trigger instant or later processing?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/RetrievalOperation\" rel=\"noopener noreferrer\">Retrieval Operation</a> - How can information available from a remote party (the API provider, that is) be retrieved to satisfy an information need of an end user or to allow further client-side processing?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/StateTransitionOperation\" rel=\"noopener noreferrer\">State Transition Operation</a> - How can a client initiate a processing action that causes the provider-side application state to change? How can API clients and API providers share the responsibilities required to execute and control business processes and their activities?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/ComputationFunction\" rel=\"noopener noreferrer\">Computation Function</a> - How can a client invoke side-effect-free remote processing on the provider side to have a result calculated from its input?</li>\n</ul>\n</li>\n<li>Information Holder Types<ul>\n<li><a href=\"https://microservice-api-patterns.org/patterns/responsibility/informationHolderEndpointTypes/OperationalDataHolder\" rel=\"noopener noreferrer\">Operational Data Holder</a> - How can an API support clients that want to create, read, update, and/or delete instances of domain entities that represent operational data: data that is rather short-lived, changes often during daily business operations, and has many outgoing relations?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/responsibility/informationHolderEndpointTypes/MasterDataHolder\" rel=\"noopener noreferrer\">Master Data Holder</a> - How can I design an API that provides access to master data that lives for a long time, does not change frequently, and will be referenced from many clients?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/responsibility/informationHolderEndpointTypes/ReferenceDataHolder\" rel=\"noopener noreferrer\">Reference Data Holder</a> - How should data that is referenced in many places, lives long, and is immutable for clients be treated in API endpoints? How can such reference data be used in requests to and responses from Processing Resources or Information Holder Resources?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/responsibility/informationHolderEndpointTypes/LinkLookupResource\" rel=\"noopener noreferrer\">Link Lookup Resource</a> - How can message representations refer to other, possibly many and frequently changing, API endpoints and operations without binding the message recipient to the actual addresses of these endpoints?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/responsibility/informationHolderEndpointTypes/DataTransferResource\" rel=\"noopener noreferrer\">Data Transfer Resource</a> - How can two or more communication participants exchange data without knowing each other, without being available at the same time, and even if the data has already been sent before its recipients became known?</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Structure<ul>\n<li>Representation Elements<ul>\n<li><a href=\"https://microservice-api-patterns.org/patterns/structure/representationElements/AtomicParameter\" rel=\"noopener noreferrer\">Atomic Parameter</a> - How can simple, unstructured data (such as a number, a string, a Boolean value, or a block of binary data) be exchanged between API client and API provider?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/structure/representationElements/AtomicParameterList\" rel=\"noopener noreferrer\">Atomic Parameter List</a> - How can multiple related Atomic Parameters be combined in a representation element so that each of them stays simple, but their relatedness becomes explicit in the API Description and the runtime message exchanges?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/structure/representationElements/ParameterTree\" rel=\"noopener noreferrer\">Parameter Tree</a> - How can containment relationships be expressed when defining complex representation elements and exchanging such related elements at runtime?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/structure/representationElements/ParameterForest\" rel=\"noopener noreferrer\">Parameter Forest</a> - How can multiple Parameter Trees be exposed as request or response payload of an API operation?</li>\n</ul>\n</li>\n<li>Element Stereotypes<ul>\n<li><a href=\"https://microservice-api-patterns.org/patterns/structure/elementStereotypes/DataElement\" rel=\"noopener noreferrer\">Data Element</a> - How can domain/application-level information be exchanged between API clients and API providers without exposing provider-internal data definitions in the API? How can API client and API provider be decoupled from a data management point of view?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/structure/elementStereotypes/MetadataElement\" rel=\"noopener noreferrer\">Metadata Element</a> - How can messages be enriched with additional information so that receivers can interpret the message content correctly, without having to hardcode assumptions about the data semantics?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/structure/elementStereotypes/IdElement\" rel=\"noopener noreferrer\">Id Element</a> - How can API elements be distinguished from each other at design time and at runtime? When applying domain-driven design, how can elements of the Published Language be identified?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/structure/elementStereotypes/LinkElement\" rel=\"noopener noreferrer\">Link Element</a> - How can API endpoints and operations be referenced in request and response message payloads so that they can be called remotely?</li>\n</ul>\n</li>\n<li>Special Purpose Representations<ul>\n<li><a href=\"https://microservice-api-patterns.org/patterns/structure/specialPurposeRepresentations/APIKey\" rel=\"noopener noreferrer\">API Key</a> - How can an API provider identify and authenticate clients and their requests?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/structure/specialPurposeRepresentations/ErrorReport\" rel=\"noopener noreferrer\">Error Report</a> - How can an API provider inform its clients about communication and processing faults? How can this information be made independent of the underlying communication technologies and platforms (for example, protocol-level headers representing status codes)?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/structure/specialPurposeRepresentations/ContextRepresentation\" rel=\"noopener noreferrer\">Context Representation</a> - How can API consumers and providers exchange context information without relying on any particular remoting protocols? How can identity information and quality properties in a request be made visible to related subsequent ones in conversations?</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Quality<ul>\n<li><p>Reference Management</p>\n<ul>\n<li><a href=\"https://microservice-api-patterns.org/patterns/quality/referenceManagement/EmbeddedEntity\" rel=\"noopener noreferrer\">Embedded Entity</a> - How can one avoid sending multiple messages when their receivers require insights about multiple related information elements?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/quality/referenceManagement/LinkedInformationHolder\" rel=\"noopener noreferrer\">Linked Information Holder</a> - How can messages be kept small even when an API deals with multiple information elements that reference each other?</li>\n</ul>\n</li>\n<li><p>Data Transfer Parsimony</p>\n<ul>\n<li><a href=\"https://microservice-api-patterns.org/patterns/quality/dataTransferParsimony/Pagination\" rel=\"noopener noreferrer\">Pagination</a> - How can messages be kept small even when an API deals with multiple information elements that reference each other?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/quality/dataTransferParsimony/WishList\" rel=\"noopener noreferrer\">Wish List</a> - How can an API client inform the API provider at runtime about the data it is interested in?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/quality/dataTransferParsimony/WishTemplate\" rel=\"noopener noreferrer\">Wish Template</a> - How can an API client inform the API provider about nested data that it is interested in? How can such preferences be expressed flexibly and dynamically?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/quality/dataTransferParsimony/ConditionalRequest\" rel=\"noopener noreferrer\">Conditional Request</a> - How can unnecessary server-side processing and bandwidth usage be avoided when frequently invoking API operations that return rarely changing data?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/quality/dataTransferParsimony/RequestBundle\" rel=\"noopener noreferrer\">Request Bundle</a> - How can the number of requests and responses be reduced to increase communication efficiency?</li>\n</ul>\n</li>\n<li><p>Quality Management and Governance</p>\n<ul>\n<li><a href=\"https://microservice-api-patterns.org/patterns/quality/qualityManagementAndGovernance/PricingPlan\" rel=\"noopener noreferrer\">Pricing Plan</a> - How can the API provider meter API service consumption and charge for it?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/quality/qualityManagementAndGovernance/RateLimit\" rel=\"noopener noreferrer\">Rate Limit</a> - How can the API provider prevent API clients from excessive API usage?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/quality/qualityManagementAndGovernance/ServiceLevelAgreement\" rel=\"noopener noreferrer\">Service Level Agreement</a> - How can an API client learn about the specific quality-of-service characteristics of an API and its endpoint operations? How can these characteristics, and the consequences of not meeting them, be defined and communicated in a measurable way?</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Evolution<ul>\n<li><a href=\"https://microservice-api-patterns.org/patterns/evolution/VersionIdentifier\" rel=\"noopener noreferrer\">Version Identifier</a> - How can an API provider indicate its current capabilities as well as the existence of possibly incompatible changes to clients in order to prevent malfunctioning of clients due to undiscovered interpretation errors?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/evolution/SemanticVersioning\" rel=\"noopener noreferrer\">Semantic Versioning</a> - How can stakeholders compare API versions to detect immediately whether they are compatible?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/evolution/TwoInProduction\" rel=\"noopener noreferrer\">Two In Production</a> - How can a provider gradually update an API without breaking existing clients but also without having to maintain a large number of API versions in production?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/evolution/AggressiveObsolescence\" rel=\"noopener noreferrer\">Aggressive Obsolescence</a> - How can API providers reduce the effort for maintaining an entire API or its parts (such as endpoints, operations, or message representations) with guaranteed service quality levels?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/evolution/ExperimentalPreview\" rel=\"noopener noreferrer\">Experimental Preview</a> - How can providers make the introduction of a new API, or new API version, less risky for their clients and obtain early adopter feedback without having to freeze the API design prematurely?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/evolution/LimitedLifetimeGuarantee\" rel=\"noopener noreferrer\">Limited Lifetime Guarantee</a> - How can a provider let clients know for how long they can rely on the published version of an API?</li>\n<li><a href=\"https://microservice-api-patterns.org/patterns/evolution/EternalLifetimeGuarantee\" rel=\"noopener noreferrer\">Eternal Lifetime Guarantee</a> - How can a provider support clients that are unable or unwilling to migrate to newer API versions at all?</li>\n</ul>\n</li>\n</ul>\n<h3><p>Integration Patterns / SOA Patterns</p>\n</h3><ul>\n<li>Foundational Inventory Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/canonical_protocol\" rel=\"noopener noreferrer\">Canonical Protocol</a> - Defines a common communication protocol between services to enable interoperability and decoupling.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/canonical_schema\" rel=\"noopener noreferrer\">Canonical Schema</a> - Defines a standard data model and format for exchanging data between services.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/domain_inventory\" rel=\"noopener noreferrer\">Domain Inventory</a> - Identifies and categorizes the types of services within a particular domain.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/enterprise_inventory\" rel=\"noopener noreferrer\">Enterprise Inventory</a> - Identifies and categorizes the types of services within a particular domain.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/logic_centralization\" rel=\"noopener noreferrer\">Logic Centralization</a> - Centralizes business logic within a service layer to reduce redundancy and promote consistency.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_layers\" rel=\"noopener noreferrer\">Service Layers</a> - Centralizes business logic within a service layer to reduce redundancy and promote consistency.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_normalization\" rel=\"noopener noreferrer\">Service Normalization</a> - Centralizes business logic within a service layer to reduce redundancy and promote consistency.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Logical Inventory Layer Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/entity_abstraction\" rel=\"noopener noreferrer\">Entity Abstraction</a> - Abstracts data entities to simplify data access and reduce coupling.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/process_abstraction\" rel=\"noopener noreferrer\">Process Abstraction</a> - Abstracts processes to improve reusability and maintainability.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/utility_abstraction\" rel=\"noopener noreferrer\">Utility Abstraction</a> - Abstracts common utilities to reduce duplication and promote consistency.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/micro_task_abstraction\" rel=\"noopener noreferrer\">Micro Task Abstraction</a> - Breaks down tasks into smaller, more granular tasks for easier management.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Inventory Centralization Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/policy_centralization\" rel=\"noopener noreferrer\">Policy Centralization</a> - Centralizes policies to reduce duplication and improve consistency.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/process_centralization\" rel=\"noopener noreferrer\">Process Centralization</a> - Centralizes processes to improve reusability and maintainability.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/rules_centralization\" rel=\"noopener noreferrer\">Rules Centralization</a> - Centralizes business rules to reduce duplication and promote consistency.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/schema_centralization\" rel=\"noopener noreferrer\">Schema Centralization</a> - Centralizes data schemas to reduce duplication and improve consistency.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Inventory Implementation Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/canonical_resources\" rel=\"noopener noreferrer\">Canonical Resources</a> - Defines a standard set of resources for common functionality across services.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/cross_domain_utility_layer\" rel=\"noopener noreferrer\">Cross-Domain Utility Layer</a> - Uses multiple protocols for improved performance and flexibility.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/dual_protocols\" rel=\"noopener noreferrer\">Dual Protocols</a> - Defines a common utility layer across multiple domains.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/inventory_endpoint\" rel=\"noopener noreferrer\">Inventory Endpoint</a> - Defines a standard endpoint for accessing inventory resources.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_grid\" rel=\"noopener noreferrer\">Service Grid</a> - Provides a framework for managing and scaling services.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/state_repository\" rel=\"noopener noreferrer\">State Repository</a> - Stores and manages service state information.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/stateful_services\" rel=\"noopener noreferrer\">Stateful Services</a> - Maintains state information across service invocations.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/augmented_protocols\" rel=\"noopener noreferrer\">Augmented Protocols</a> - Enhances protocols with additional features.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Inventory Governance Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/canonical_expression\" rel=\"noopener noreferrer\">Canonical Expression</a> - Defines a standard expression language for inventory data.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/canonical_versioning\" rel=\"noopener noreferrer\">Canonical Versioning</a> - Defines a standard versioning scheme for inventory resources.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/metadata_centralization\" rel=\"noopener noreferrer\">Metadata Centralization</a> - Centralizes metadata to reduce duplication and improve consistency.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Foundational Service Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/agnostic_capability\" rel=\"noopener noreferrer\">Agnostic Capability</a> - Abstracts service capabilities for improved flexibility.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/agnostic_context\" rel=\"noopener noreferrer\">Agnostic Context</a> - Abstracts service context for improved flexibility.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/functional_decomposition\" rel=\"noopener noreferrer\">Functional Decomposition</a> - Breaks down services into smaller, more manageable components.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/non_agnostic_context\" rel=\"noopener noreferrer\">Non-Agnostic Context</a> - Breaks down services into smaller, more manageable components.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_encapsulation\" rel=\"noopener noreferrer\">Service Encapsulation</a> - Encapsulates service functionality for improved maintainability.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Service Implementation Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/partial_state_deferral\" rel=\"noopener noreferrer\">Partial State Deferral</a> - Encapsulates service functionality for improved maintainability.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/partial_validation\" rel=\"noopener noreferrer\">Partial Validation</a> - Validates only relevant data for improved performance.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/redundant_implementation\" rel=\"noopener noreferrer\">Redundant Implementation</a> - Implements multiple versions of a service for improved flexibility.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_data_replication\" rel=\"noopener noreferrer\">Service Data Replication</a> - Replicates data across multiple services for improved performance.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_facade\" rel=\"noopener noreferrer\">Service Fa√ßade</a> - Provides a simplified interface to a complex service for improved usability.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/ui_mediator\" rel=\"noopener noreferrer\">UI Mediator</a> - Mediates between the user interface and underlying services for improved usability.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/reference_data_centralization\" rel=\"noopener noreferrer\">Reference Data Centralization</a> - Centralizes reference data to reduce duplication and improve consistency.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/microservice_deployment\" rel=\"noopener noreferrer\">Microservice Deployment</a> - Deploys services as independent, autonomous units for improved scalability and resilience.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/containerization\" rel=\"noopener noreferrer\">Containerization</a> - How can an environment be provided with maximum support for services with high-performance recovery and scalability requirements?</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Service Security Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/exception_shielding\" rel=\"noopener noreferrer\">Exception Shielding</a> - Protects against security vulnerabilities through proper handling of exceptions.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/message_screening\" rel=\"noopener noreferrer\">Message Screening</a> - Screens messages for malicious content.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_perimeter_guard\" rel=\"noopener noreferrer\">Service Perimeter Guard</a> - Guards the service perimeter to prevent unauthorized access.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/trusted_subsystem\" rel=\"noopener noreferrer\">Trusted Subsystem</a> - Establishes trust between subsystems for improved security.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Service Contract Design Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/concurrent_contracts\" rel=\"noopener noreferrer\">Concurrent Contracts</a> - Allows multiple versions of a service contract to coexist simultaneously.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/contract_centralization\" rel=\"noopener noreferrer\">Contract Centralization</a> - Centralizes service contracts to improve consistency and reduce duplication.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/contract_denormalization\" rel=\"noopener noreferrer\">Contract Denormalization</a> - Centralizes service contracts to improve consistency and reduce duplication.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/decoupled_contract\" rel=\"noopener noreferrer\">Decoupled Contract</a> - Decouples service contracts from their implementation for improved flexibility.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/validation_abstraction\" rel=\"noopener noreferrer\">Validation Abstraction</a> - Abstracts validation logic to improve reusability and maintainability.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Legacy Encapsulation Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/file_gateway\" rel=\"noopener noreferrer\">File Gateway</a> - Provides a gateway to access legacy file-based systems.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/legacy_wrapper\" rel=\"noopener noreferrer\">Legacy Wrapper</a> - Wraps legacy systems to expose them as services.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/multi_channel_endpoint\" rel=\"noopener noreferrer\">Multi-Channel Endpoint</a> - Provides multiple communication channels to access legacy systems.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Service Governance Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/compatible_change\" rel=\"noopener noreferrer\">Compatible Change</a> - Enables changes to a service without breaking existing clients.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/decomposed_capability\" rel=\"noopener noreferrer\">Decomposed Capability</a> - Breaks down a service capability into smaller, more manageable pieces.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/distributed_capability\" rel=\"noopener noreferrer\">Distributed Capability</a> - Breaks down a service capability into smaller, more manageable pieces.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/proxy_capability\" rel=\"noopener noreferrer\">Proxy Capability</a> - Provides a proxy to a remote service capability to improve performance and reduce network overhead.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_decomposition\" rel=\"noopener noreferrer\">Service Decomposition</a> - Breaks down a monolithic service into smaller, more manageable pieces.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_refactoring\" rel=\"noopener noreferrer\">Service Refactoring</a> - Refactors a service to improve its design and performance.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/termination_notification\" rel=\"noopener noreferrer\">Termination Notification</a> - Notifies clients of a service's termination.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/version_identification\" rel=\"noopener noreferrer\">Version Identification</a> - Identifies the version of a service.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Capability Composition Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/capability_composition\" rel=\"noopener noreferrer\">Capability Composition</a> - Combines multiple service capabilities to create a new capability.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/capability_recomposition\" rel=\"noopener noreferrer\">Capability Recomposition</a> - Recombines existing service capabilities to create a new capability.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Service Messaging Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/asynchronous_queuing\" rel=\"noopener noreferrer\">Asynchronous Queuing</a> - Uses a message queue to decouple services and improve scalability and reliability.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/event_driven_messaging\" rel=\"noopener noreferrer\">Event-Driven Messaging</a> - Uses events to trigger service invocations and reduce coupling.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/intermediate_routing\" rel=\"noopener noreferrer\">Intermediate Routing</a> - Uses intermediate routing nodes to improve performance and flexibility.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/messaging_metadata\" rel=\"noopener noreferrer\">Messaging Metadata</a> - Uses metadata to describe and manage service messages.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/reliable_messaging\" rel=\"noopener noreferrer\">Reliable Messaging</a> - Ensures message delivery and reliability in a distributed environment.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_agent\" rel=\"noopener noreferrer\">Service Agent</a> - Acts as a proxy for a remote service to improve performance and reduce network overhead.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_callback\" rel=\"noopener noreferrer\">Service Callback</a> - Uses callbacks to communicate between services.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_instance_routing\" rel=\"noopener noreferrer\">Service Instance Routing</a> - Routes messages based on the service instance to improve performance and scalability.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/service_messaging\" rel=\"noopener noreferrer\">Service Messaging</a> - Describes the communication between services.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/state_messaging\" rel=\"noopener noreferrer\">State Messaging</a> - Uses messages to manage state information in a distributed environment.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Composition Implementation Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/agnostic_sub_controller\" rel=\"noopener noreferrer\">Agnostic Sub-Controller</a> - Separates sub-controllers from the main controller to improve reusability and maintainability.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/atomic_service_transaction\" rel=\"noopener noreferrer\">Atomic Service Transaction</a> - Uses transactions to ensure atomicity and consistency across multiple service invocations.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/compensating_service_transaction\" rel=\"noopener noreferrer\">Compensating Service Transaction</a> - Reverses the effects of a failed transaction.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/composition_autonomy\" rel=\"noopener noreferrer\">Composition Autonomy</a> - Enables services to act autonomously within a composition.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Service Interaction Security Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/brokered_authentication\" rel=\"noopener noreferrer\">Brokered Authentication</a> - Authenticates clients through a broker.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/data_confidentiality\" rel=\"noopener noreferrer\">Data Confidentiality</a> - Ensures data confidentiality in a distributed environment.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/data_origin_authentication\" rel=\"noopener noreferrer\">Data Origin Authentication</a> - Authenticates the origin of a message.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/direct_authentication\" rel=\"noopener noreferrer\">Direct Authentication</a> - Authenticates clients directly.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Transformation Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/data_format_transformation\" rel=\"noopener noreferrer\">Data Format Transformation</a> - Transforms data formats to enable interoperability.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/data_model_transformation\" rel=\"noopener noreferrer\">Data Model Transformation</a> - Transforms data models to enable interoperability.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/protocol_bridging\" rel=\"noopener noreferrer\">Protocol Bridging</a> - Bridges between different protocols to enable interoperability.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>REST-inspired Patterns<ul>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/entity_linking\" rel=\"noopener noreferrer\">Entity Linking</a> - Links related resources to enable navigation and discovery.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/lightweight_endpoint\" rel=\"noopener noreferrer\">Lightweight Endpoint</a> - Provides a lightweight endpoint for resource access.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/reusable_contract\" rel=\"noopener noreferrer\">Reusable Contract</a> - Reuses common contracts to improve consistency and reduce duplication.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/content_negotiation\" rel=\"noopener noreferrer\">Content Negotiation</a> - Negotiates the content format between clients and servers.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/endpoint_redirection\" rel=\"noopener noreferrer\">Endpoint Redirection</a> - Redirects clients to alternative endpoints.</li>\n<li><a href=\"https://patterns.arcitura.com/soa-patterns/design_patterns/idempotent_capability\" rel=\"noopener noreferrer\">Idempotent Capability</a> - Ensures that the same action can be performed multiple times without changing the system state.</li>\n</ul>\n</li>\n</ul>\n",
      "date_published": "2023-04-17T11:16:16.000Z",
      "date_modified": "2023-04-17T13:21:14.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/veggiemonk/awesome-docker/week/",
      "title": "Awesome Docker",
      "_slug": "veggiemonk/awesome-docker/week/",
      "_filepath": "/content/veggiemonk/awesome-docker/week/README.md",
      "url": "https://www.trackawesomelist.com/veggiemonk/awesome-docker/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Monitoring Services / Other\n\n*   [Better Stack](https://betterstack.com/community/guides/scaling-docker/) :heavy\\_dollar\\_sign: - A Docker-compatible observability stack that delivers robust log aggregation and uptime monitoring capabilities for various software application.",
      "content_html": "<h3><p>Monitoring Services / Other</p>\n</h3><ul>\n<li><a href=\"https://betterstack.com/community/guides/scaling-docker/\" rel=\"noopener noreferrer\">Better Stack</a> üí≤ - A Docker-compatible observability stack that delivers robust log aggregation and uptime monitoring capabilities for various software application.</li>\n</ul>\n",
      "date_published": "2023-04-17T10:39:28.000Z",
      "date_modified": "2023-04-17T10:39:28.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/week/",
      "title": "Awesome Agi Cocosci",
      "_slug": "YuzheSHI/awesome-agi-cocosci/week/",
      "_filepath": "/content/YuzheSHI/awesome-agi-cocosci/week/README.md",
      "url": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Commonsense / Intuitive Physics\n\n*   [Intuitive Physics Reading List (‚≠ê15)](https://github.com/lishiqianhugh/Intuitive_Physics_Reading_List) - ***GitHub***. A reading list on intuitive physics, maintained actively by Shiqian Li.",
      "content_html": "<h3><p>Commonsense / Intuitive Physics</p>\n</h3><ul>\n<li><a href=\"https://github.com/lishiqianhugh/Intuitive_Physics_Reading_List\" rel=\"noopener noreferrer\">Intuitive Physics Reading List (‚≠ê15)</a> - <em><strong>GitHub</strong></em>. A reading list on intuitive physics, maintained actively by Shiqian Li.</li>\n</ul>\n",
      "date_published": "2023-04-17T09:21:07.000Z",
      "date_modified": "2023-04-17T09:21:07.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/lukasz-madon/awesome-remote-job/week/",
      "title": "Awesome Remote Job",
      "_slug": "lukasz-madon/awesome-remote-job/week/",
      "_filepath": "/content/lukasz-madon/awesome-remote-job/week/README.md",
      "url": "https://www.trackawesomelist.com/lukasz-madon/awesome-remote-job/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Companies with \"remote DNA\"\n\n*   [Docker](https://www.docker.com/career-openings/) -",
      "content_html": "<h3><p>Companies with \"remote DNA\"</p>\n</h3><ul>\n<li><a href=\"https://www.docker.com/career-openings/\" rel=\"noopener noreferrer\">Docker</a> -</li>\n</ul>\n",
      "date_published": "2023-04-16T21:43:40.000Z",
      "date_modified": "2023-04-16T21:43:40.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/zudochkin/awesome-newsletters/week/",
      "title": "Awesome Newsletters",
      "_slug": "zudochkin/awesome-newsletters/week/",
      "_filepath": "/content/zudochkin/awesome-newsletters/week/README.md",
      "url": "https://www.trackawesomelist.com/zudochkin/awesome-newsletters/week/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Ruby / Svelte\n\n*   [Rails Weekly](https://world.hey.com/this.week.in.rails). Weekly inside scoop of interesting commits, pull requests and more from Rails, delivered to your inbox every Friday.",
      "content_html": "<h3><p>Ruby / Svelte</p>\n</h3><ul>\n<li><a href=\"https://world.hey.com/this.week.in.rails\" rel=\"noopener noreferrer\">Rails Weekly</a>. Weekly inside scoop of interesting commits, pull requests and more from Rails, delivered to your inbox every Friday.</li>\n</ul>\n",
      "date_published": "2023-04-16T21:41:11.000Z",
      "date_modified": "2023-04-16T21:41:11.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/kyrolabs/awesome-langchain/week/",
      "title": "Awesome Langchain",
      "_slug": "kyrolabs/awesome-langchain/week/",
      "_filepath": "/content/kyrolabs/awesome-langchain/week/README.md",
      "url": "https://www.trackawesomelist.com/kyrolabs/awesome-langchain/week/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### LangChain Framework\n\n*   [Langchain Blog](https://blog.langchain.dev/): The Official Langchain blog\n\n### Learn / Videos Playlists\n\n*   [LangChain Series by Sam Witteveen](https://www.youtube.com/watch?v=J_0qvRt4LNk\\&list=PL8motc6AQftk1Bs42EW45kwYbyJ4jOdiZ)",
      "content_html": "<h3><p>LangChain Framework</p>\n</h3><ul>\n<li><a href=\"https://blog.langchain.dev/\" rel=\"noopener noreferrer\">Langchain Blog</a>: The Official Langchain blog</li>\n</ul>\n<h3><p>Learn / Videos Playlists</p>\n</h3><ul>\n<li><a href=\"https://www.youtube.com/watch?v=J_0qvRt4LNk&amp;list=PL8motc6AQftk1Bs42EW45kwYbyJ4jOdiZ\" rel=\"noopener noreferrer\">LangChain Series by Sam Witteveen</a></li>\n</ul>\n",
      "date_published": "2023-04-16T20:20:00.000Z",
      "date_modified": "2023-04-17T07:57:52.000Z"
    }
  ]
}
