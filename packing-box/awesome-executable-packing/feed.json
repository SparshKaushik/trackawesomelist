{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Track Awesome Executable Packing Updates Daily",
  "_seo_title": "Track Awesome Executable Packing (packing-box/awesome-executable-packing) Updates Daily - Track Awesome List",
  "_site_title": "Track Awesome List",
  "description": "A curated list of awesome resources related to executable packing",
  "home_page_url": "https://www.trackawesomelist.com/packing-box/awesome-executable-packing/",
  "feed_url": "https://www.trackawesomelist.com/packing-box/awesome-executable-packing/feed.json",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/2025/06/19/",
      "title": "Awesome Executable Packing Updates on Jun 19, 2025",
      "_short_title": "Jun 19, 2025",
      "_slug": "2025/06/19/",
      "summary": "5 awesome projects updated on Jun 19, 2025",
      "_filepath": "/content/2025/06/19/README.md",
      "url": "https://www.trackawesomelist.com/2025/06/19/",
      "date_published": "2025-06-19T04:18:42.000Z",
      "date_modified": "2025-06-19T04:18:42.000Z",
      "content_text": "\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [Malheur](https://web.archive.org/web/20240928172928/https://www.sec.cs.tu-bs.de/data/malheur) - Contains the recorded behavior of malicious software (malware) and has been used for developing methods for classifying and clustering malware behavior (see the JCS article from 2011).\n*   [Malware Archive (‚≠ê1.6k)](https://github.com/jstrosch/malware-samples) - Malware samples, analysis exercises and other interesting resources.\n*   [ViruSign](https://web.archive.org/web/20200615094642/http://www.virusign.com/) - Another online malware database.\n*   [VirusSamples](https://www.virussamples.com) - Best of the worst kind of files on the Internet.\n*   [VirusSign](https://www.virussign.com) - Giant database dedicated to combating malware in the digital world.",
      "content_html": "<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://web.archive.org/web/20240928172928/https://www.sec.cs.tu-bs.de/data/malheur\" rel=\"noopener noreferrer\">Malheur</a> - Contains the recorded behavior of malicious software (malware) and has been used for developing methods for classifying and clustering malware behavior (see the JCS article from 2011).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/jstrosch/malware-samples\" rel=\"noopener noreferrer\">Malware Archive (‚≠ê1.6k)</a> - Malware samples, analysis exercises and other interesting resources.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20200615094642/http://www.virusign.com/\" rel=\"noopener noreferrer\">ViruSign</a> - Another online malware database.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.virussamples.com\" rel=\"noopener noreferrer\">VirusSamples</a> - Best of the worst kind of files on the Internet.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.virussign.com\" rel=\"noopener noreferrer\">VirusSign</a> - Giant database dedicated to combating malware in the digital world.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/06/13/",
      "title": "Awesome Executable Packing Updates on Jun 13, 2025",
      "_short_title": "Jun 13, 2025",
      "_slug": "2025/06/13/",
      "summary": "1 awesome projects updated on Jun 13, 2025",
      "_filepath": "/content/2025/06/13/README.md",
      "url": "https://www.trackawesomelist.com/2025/06/13/",
      "date_published": "2025-06-13T17:33:27.000Z",
      "date_modified": "2025-06-13T17:33:27.000Z",
      "content_text": "\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [WildList](https://web.archive.org/web/20220927214837/http://www.wildlist.org/CurrentList.txt) - Cooperative listing of malwares reported as being in the wild by security professionals.",
      "content_html": "<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://web.archive.org/web/20220927214837/http://www.wildlist.org/CurrentList.txt\" rel=\"noopener noreferrer\">WildList</a> - Cooperative listing of malwares reported as being in the wild by security professionals.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/06/12/",
      "title": "Awesome Executable Packing Updates on Jun 12, 2025",
      "_short_title": "Jun 12, 2025",
      "_slug": "2025/06/12/",
      "summary": "1 awesome projects updated on Jun 12, 2025",
      "_filepath": "/content/2025/06/12/README.md",
      "url": "https://www.trackawesomelist.com/2025/06/12/",
      "date_published": "2025-06-12T13:56:02.000Z",
      "date_modified": "2025-06-12T13:56:02.000Z",
      "content_text": "\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [Malicia](https://web.archive.org/web/20220615143940/http://malicia-project.com/dataset.html) - Dataset of 11,688 malicous PE files collected from 500 drive-by download servers over a period of 11 months in 2013 (DISCONTINUED).",
      "content_html": "<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://web.archive.org/web/20220615143940/http://malicia-project.com/dataset.html\" rel=\"noopener noreferrer\">Malicia</a> - Dataset of 11,688 malicous PE files collected from 500 drive-by download servers over a period of 11 months in 2013 (DISCONTINUED).</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2025/06/07/",
      "title": "Awesome Executable Packing Updates on Jun 07, 2025",
      "_short_title": "Jun 07, 2025",
      "_slug": "2025/06/07/",
      "summary": "83 awesome projects updated on Jun 07, 2025",
      "_filepath": "/content/2025/06/07/README.md",
      "url": "https://www.trackawesomelist.com/2025/06/07/",
      "date_published": "2025-06-07T22:14:10.000Z",
      "date_modified": "2025-06-07T22:14:10.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :earth\\_americas: [Awesome LLVM security (‚≠ê724)](https://github.com/gmh5225/awesome-llvm-security)\n*   :earth\\_americas: [Defacto2](https://defacto2.net/g/defacto2net)\n*   :pushpin: [Explained: Packer, crypter, and protector](https://www.threatdown.com/blog/explained-packer-crypter-and-protector/)\n*   :scroll: [Implementing your own generic unpacker](https://gsec.hitb.org/sg2015/sessions/session-001)\n*   :earth\\_americas: [MITRE ATT\\&CK | T1027.002 | obfuscated files or information: Software packing - Enterprise](https://attack.mitre.org/techniques/T1027/002)\n*   :earth\\_americas: [MITRE ATT\\&CK | T1406.002 | obfuscated files or information: Software packing - Mobile](https://attack.mitre.org/techniques/T1406/002)\n*   :bar\\_chart: [NotPacked++: Evading static packing detection](https://www.blackhat.com/eu-24/arsenal/schedule/index.html?1#notpacked-evading-static-packing-detection-42187)\n*   :earth\\_americas: [OllyDbg OEP finder scripts (‚≠ê255)](https://github.com/dubuqingfeng/ollydbg-script)\n*   :bar\\_chart: [Packing-box: Improving detection of executable packing](https://www.blackhat.com/eu-24/arsenal/schedule/index.html?2#packing-box-improving-detection-of-executable-packing-41931)\n*   :page\\_facing\\_up: [Unpacking binary 101](https://sam0x90.blog/2020/06/06/unpacking-binary-101/)\n*   :pushpin: [Unpacking the potential of \"Packing box\"](https://medium.com/@elniak/unpacking-the-potential-of-packing-box-dfd765609233)\n*   :pushpin: [Unpacking, reversing, patching](https://www.infosecinstitute.com/resources/reverse-engineering/unpacking-reversing-patching)\n*   :pushpin: [Writing a PE packer](https://wirediver.com/tutorial-writing-a-pe-packer-part-1/)\n\n### :books: Literature / Scientific Research\n\n*   :newspaper: [Adversarial attacks against windows PE malware detection: A survey of the state-of-the-art](https://www.semanticscholar.org/paper/Adversarial-Attacks-against-Windows-PE-Malware-A-of-Ling-Wu/055d0cdce6ad5c766543c8692a9e5bd37d2ed0a4) (December 2021)\n*   :newspaper: [All-in-one framework for detection, unpacking, and verification for malware analysis](https://onlinelibrary.wiley.com/doi/10.1155/2019/5278137) (January 2019)\n*   :newspaper: [Analysis of machine learning approaches to packing detection](https://www.sciencedirect.com/science/article/pii/S0167404823004467) (October 2023)  :star: :star:\n*   :newspaper: [Anti-emulation trends in modern packers: A survey on the evolution of anti-emulation techniques in UPA packers](https://link.springer.com/article/10.1007/s11416-017-0291-9) (May 2018)\n*   :notebook: [Anti-unpacker tricks](https://pferrie.tripod.com/papers/unpackers.pdf) (May 2008)\n*   :closed\\_book: [Assessing static and dynamic features for packing detection](https://link.springer.com/chapter/10.1007/978-3-031-73887-6_12) (October 2024)  :star:\n*   :newspaper: [Binary-code obfuscations in prevalent packer tools](https://dl.acm.org/doi/10.1145/2522968.2522972) (October 2013)\n*   :mortar\\_board: [Building a malware mutation tool](https://dial.uclouvain.be/memoire/ucl/object/thesis:45960) (June 2024)  :star:\n*   :mortar\\_board: [Building a mutation tool for binaries: Expanding a dynamic binary rewriting tool to obfuscate malwares](https://dial.uclouvain.be/memoire/ucl/object/thesis:40611) (June 2023)  :star: :star:\n*   :notebook: [Certified robustness of static deep learning-based malware detectors against patch and append attacks](https://dl.acm.org/doi/10.1145/3605764.3623914) (November 2023)  :star:\n*   :notebook: [Chosen-instruction attack against commercial code virtualization obfuscators](https://ink.library.smu.edu.sg/sis_research/7354) (April 2022)\n*   :bar\\_chart: [Dealing with virtualization packers](https://2008.caro.org/program/dealing-with-virtualization-packers) (May 2008)\n*   :bookmark: [Deceiving end-to-end deep learning malware detectors using adversarial examples](https://arxiv.org/abs/1802.04528) (January 2019)\n*   :notebook: [Deceiving portable executable malware classifiers into targeted misclassification with practical adversarial examples](https://dl.acm.org/doi/10.1145/3374664.3375741) (March 2020)\n*   :notebook: [Detection of packed malware](https://dl.acm.org/doi/10.1145/2490428.2490431) (August 2012)\n*   :newspaper: [An efficient algorithm to extract control flow-based features for ioT malware detection](https://academic.oup.com/comjnl/article-abstract/64/4/599/5940626) (April 2021)\n*   :notebook: [Experimental toolkit for manipulating executable packing](https://link.springer.com/chapter/10.1007/978-3-031-61231-2_17) (June 2024)  :star: :star:\n*   :notebook: [Exploring adversarial examples in malware detection](https://ieeexplore.ieee.org/document/8844597) (May 2019)\n*   :newspaper: [Feature selection for packer classification based on association rule mining](https://www.sciencedirect.com/science/article/pii/S0952197624012417) (August 2024)  :star:\n*   :newspaper: [Functionality-preserving black-box optimization of adversarial windows malware](https://ieeexplore.ieee.org/document/9437194) (May 2021)  :star:\n*   :notebook: [Highlighting the impact of packed executable alterations with unsupervised learning](https://link.springer.com/chapter/10.1007/978-3-031-89350-6_23) (April 2025)\n*   :newspaper: [Mal-xtract: Hidden code extraction using memory analysis](https://iopscience.iop.org/article/10.1088/1742-6596/801/1/012058) (January 2017)\n*   :notebook: [Malware images: Visualization and automatic classification](https://dl.acm.org/doi/10.1145/2016904.2016908) (July 2011)\n*   :notebook: [Malware obfuscation through evolutionary packers](https://dl.acm.org/doi/10.1145/2739482.2764940) (July 2015)\n*   :notebook: [Metadata recovery from obfuscated programs using machine learning](https://dl.acm.org/doi/10.1145/3015135.3015136) (December 2016)\n*   :newspaper: [MSG: Missing-sequence generator for metamorphic malware detection](https://www.sciencedirect.com/science/article/pii/S2214212624002643) (March 2025)\n*   :notebook: [Obfuscation: Where are we in anti-DSE protections? (a first attempt)](https://dl.acm.org/doi/10.1145/3371307.3371309) (December 2019)\n*   :newspaper: [Opcodes as predictor for malware](https://www.inderscienceonline.com/doi/abs/10.1504/IJESDF.2007.016865) (January 2008)\n*   :notebook: [Packed code detection using shannon entropy and homomorphic encrypted executables](https://ieeexplore.ieee.org/document/10793050) (October 2024)\n*   :newspaper: [Packed malware detection using entropy related analysis: A survey](https://www.semanticscholar.org/paper/7bc891420300f6e4c4d97d19a14d5c6a4dd422f0) (November 2015)\n*   :newspaper: [Packed malware variants detection using deep belief networks](https://www.matec-conferences.org/articles/matecconf/abs/2020/05/matecconf_cscns2020_02002/matecconf_cscns2020_02002.html) (March 2020)\n*   :bookmark: [PackHero: A scalable graph-based approach for efficient packer identification](https://re.public.polimi.it/handle/11311/1284225) (July 2025)\n*   :newspaper: [PE file features in detection of packed executables](https://www.ijcte.org/show-42-485-1.html) (January 2012)\n*   :newspaper: [Pitfalls in machine learning for computer security](https://dl.acm.org/doi/10.1145/3643456) (October 2024)\n*   :mortar\\_board: [REFORM: A framework for malware packer analysis using information theory and statistical methods](https://scispace.com/papers/reform-a-framework-for-malware-packer-analysis-using-2muwuyaeox) (April 2010)\n*   :mortar\\_board: [Source-free binary mutation for offense and defense](https://api.semanticscholar.org/CorpusID:113759144) (December 2014)\n*   :newspaper: [A survey on malware analysis techniques: Static, dynamic, hybrid and memory analysis](https://ijaseit.insightsociety.org/index.php/ijaseit/article/view/6827) (September 2018)\n*   :notebook: [Syntia: Synthesizing the semantics of obfuscated code](https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/blazytko) (August 2017)\n*   :closed\\_book: [Unpacking malware in the real world: A step-by step guide](https://link.springer.com/chapter/10.1007/978-3-031-66245-4_13) (July 2024)\n*   :notebook: [VABox: A virtualization-based analysis framework of virtualization-obfuscated packed executables](https://link.springer.com/chapter/10.1007/978-3-030-78621-2_6) (June 2021)\n*   :newspaper: [x64Unpack: Hybrid emulation unpacker for 64-bit Windows Environments and detailed analysis results on VMProtect 3.4](https://ieeexplore.ieee.org/document/9139515) (July 2020)\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [BODMAS (‚≠ê83)](https://github.com/whyisyoung/BODMAS) - Code for our DLS'21 paper - BODMAS: An Open Dataset for Learning based Temporal Analysis of PE Malware.\n*   [MalwareGallery](https://www.malwaregallery.com) - Yet another malware collection in the Internet.\n*   [MalwareTips](https://malwaretips.com) - MalwareTips is a community-driven platform providing the latest information and resources on malware and cyber threats.\n\n### :package: Packers / After 2010\n\n*   [ASM Guard (‚≠ê249)](https://github.com/DosX-dev/ASM-Guard) - Packer utility for compressing and complicating reversing compiled native code (native files), protecting resources, adding DRM, and packing into an optimized loader.\n*   [Astral-PE (‚≠ê313)](https://github.com/DosX-dev/Astral-PE) - Low-level mutator (Headers/EP obfuscator) for native Windows PE files (x32/x64).\n*   [ELF Packer (‚≠ê32)](https://github.com/telepath9000/elf-packer) - Encrypts 64-bit elf files that decrypt at runtime.\n*   NPack - Can compress 32bits and 64bits exe, dll, ocx, scr Windows program.\n*   [Obsidium](https://www.obsidium.de/product/sps/download) - Feature-rich professional software protection and licensing system designed as a cost effective and easy to implement, yet reliable and non-invasive way to protect your 32- and 64-bit Windows software applications and games from reverse engineering.\n*   [OS-X\\_Packer](https://web.archive.org/web/20200929161737/https://github.com/AlysonBee/OSX_Packer) - Binary packer for the Mach-O file format.\n*   [VirtualMachineObfuscationPoC](https://web.archive.org/web/20231226141018/https://github.com/eaglx/VirtualMachineObfuscationPoC) - Obfuscation method using virtual machine.\n*   [Woody Wood Packer (‚≠ê18)](https://github.com/Jibus22/woody_woodpacker) - ELF packer - encrypt and inject self-decryption code into executable ELF binary target.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [NSPack](https://nspack.apponic.com) - 32/64-bits exe, dll, ocx, scr Windows program compressor.\n*   [TTProtect](https://web.archive.org/web/20081218083606/http://www.ttprotect.com/en/index.htm) - Professional protection tool designed for software developers to protect their PE applications against illegal modification or decompilation.\n\n### :package: Packers / Before 2000\n\n*   [CauseWay Compressor](https://gitlab.com/tkchia/causeway) - DOS EXE compressor.\n*   [PEBundle](https://bitsum.com/pebundle.htm) - Physically attaches DLL(s) to an executable, resolving dependencies in memory.\n*   VGCrypt - PE crypter for Win95/98/NT.\n\n### :wrench: Tools / Before 2000\n\n*   [Assiste (Packer)](https://web.archive.org/web/20211017145403/https://assiste.com/Packer.html) - Assiste.com's example list of packers.\n*   [BinUnpack](https://dl.acm.org/doi/10.1145/3243734.3243771?-) - Unpacking approach free from tedious memory access monitoring, therefore introducing very small runtime overhead.\n*   [Cave-Finder (‚≠ê66)](https://github.com/adamhlt/Cave-Finder) - Tool to find code cave in PE image (x86 / x64) - Find empty space to place code in PE files.\n*   [GUnpacker](https://web.archive.org/web/20220121084407/http://qunpack.ahteam.org/?p=327) - Shell tool that performs OEP positioning and dumps decrypted code.\n*   Lissom - Retargetable decompiler consisting of a preprocessing part and a decompilation core.\n*   [NotPacked++ (‚≠ê19)](https://github.com/packing-box/packer-masking-tool) - Attack tool for altering packed samples so that they evade static packing detection.\n*   [PackerBreaker](https://web.archive.org/web/20150504162711/https://www.sysreveal.com/packerbreaker-intro) - Tool for helping unpack, decompress and decrypt most of the programs packed, compressed or encrypted using advanced emulation technology.\n*   [PE Compression Test](https://web.archive.org/web/20250427032942/http://pect.atspace.com) - List of packers tested on a few sample executables for comparing compressed sizes.\n*   [PEiD](https://web.archive.org/web/20070529035022/https://www.secretashell.com/codomain/peid/) - Packed Executable iDentifier.\n*   [Quick Unpack](https://web.archive.org/web/20220119142245/http://qunpack.ahteam.org/?p=458) - Generic unpacker that facilitates the unpacking process.\n*   [RDG Packer Detector](https://web.archive.org/web/20220904151105/http://rdgsoft.net/) - Packer detection tool.\n*   [Renovo](https://dl.acm.org/doi/10.1145/1314389.1314399?tool) - Detection tool built on top of TEMU (dynamic analysis component of BitBlaze) based on the execution of newly-generated code and monitoring memory writes after the program starts.\n*   [VMUnpacker](https://web.archive.org/web/20241106123938/https://www.leechermods.com/2010/01/vmunpacker-16-latest-version.html) - Unpacker based on the technology of virtual machine.",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üåé <a href=\"https://github.com/gmh5225/awesome-llvm-security\" rel=\"noopener noreferrer\">Awesome LLVM security (‚≠ê724)</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://defacto2.net/g/defacto2net\" rel=\"noopener noreferrer\">Defacto2</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://www.threatdown.com/blog/explained-packer-crypter-and-protector/\" rel=\"noopener noreferrer\">Explained: Packer, crypter, and protector</a></li>\n</ul>\n\n<ul>\n<li>üìú <a href=\"https://gsec.hitb.org/sg2015/sessions/session-001\" rel=\"noopener noreferrer\">Implementing your own generic unpacker</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://attack.mitre.org/techniques/T1027/002\" rel=\"noopener noreferrer\">MITRE ATT&amp;CK | T1027.002 | obfuscated files or information: Software packing - Enterprise</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://attack.mitre.org/techniques/T1406/002\" rel=\"noopener noreferrer\">MITRE ATT&amp;CK | T1406.002 | obfuscated files or information: Software packing - Mobile</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.blackhat.com/eu-24/arsenal/schedule/index.html?1#notpacked-evading-static-packing-detection-42187\" rel=\"noopener noreferrer\">NotPacked++: Evading static packing detection</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://github.com/dubuqingfeng/ollydbg-script\" rel=\"noopener noreferrer\">OllyDbg OEP finder scripts (‚≠ê255)</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.blackhat.com/eu-24/arsenal/schedule/index.html?2#packing-box-improving-detection-of-executable-packing-41931\" rel=\"noopener noreferrer\">Packing-box: Improving detection of executable packing</a></li>\n</ul>\n\n<ul>\n<li>üìÑ <a href=\"https://sam0x90.blog/2020/06/06/unpacking-binary-101/\" rel=\"noopener noreferrer\">Unpacking binary 101</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://medium.com/@elniak/unpacking-the-potential-of-packing-box-dfd765609233\" rel=\"noopener noreferrer\">Unpacking the potential of \"Packing box\"</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://www.infosecinstitute.com/resources/reverse-engineering/unpacking-reversing-patching\" rel=\"noopener noreferrer\">Unpacking, reversing, patching</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://wirediver.com/tutorial-writing-a-pe-packer-part-1/\" rel=\"noopener noreferrer\">Writing a PE packer</a></li>\n</ul>\n<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üì∞ <a href=\"https://www.semanticscholar.org/paper/Adversarial-Attacks-against-Windows-PE-Malware-A-of-Ling-Wu/055d0cdce6ad5c766543c8692a9e5bd37d2ed0a4\" rel=\"noopener noreferrer\">Adversarial attacks against windows PE malware detection: A survey of the state-of-the-art</a> (December 2021)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://onlinelibrary.wiley.com/doi/10.1155/2019/5278137\" rel=\"noopener noreferrer\">All-in-one framework for detection, unpacking, and verification for malware analysis</a> (January 2019)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.sciencedirect.com/science/article/pii/S0167404823004467\" rel=\"noopener noreferrer\">Analysis of machine learning approaches to packing detection</a> (October 2023)  ‚≠ê ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://link.springer.com/article/10.1007/s11416-017-0291-9\" rel=\"noopener noreferrer\">Anti-emulation trends in modern packers: A survey on the evolution of anti-emulation techniques in UPA packers</a> (May 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://pferrie.tripod.com/papers/unpackers.pdf\" rel=\"noopener noreferrer\">Anti-unpacker tricks</a> (May 2008)</li>\n</ul>\n\n<ul>\n<li>üìï <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-73887-6_12\" rel=\"noopener noreferrer\">Assessing static and dynamic features for packing detection</a> (October 2024)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://dl.acm.org/doi/10.1145/2522968.2522972\" rel=\"noopener noreferrer\">Binary-code obfuscations in prevalent packer tools</a> (October 2013)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://dial.uclouvain.be/memoire/ucl/object/thesis:45960\" rel=\"noopener noreferrer\">Building a malware mutation tool</a> (June 2024)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://dial.uclouvain.be/memoire/ucl/object/thesis:40611\" rel=\"noopener noreferrer\">Building a mutation tool for binaries: Expanding a dynamic binary rewriting tool to obfuscate malwares</a> (June 2023)  ‚≠ê ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3605764.3623914\" rel=\"noopener noreferrer\">Certified robustness of static deep learning-based malware detectors against patch and append attacks</a> (November 2023)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ink.library.smu.edu.sg/sis_research/7354\" rel=\"noopener noreferrer\">Chosen-instruction attack against commercial code virtualization obfuscators</a> (April 2022)</li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://2008.caro.org/program/dealing-with-virtualization-packers\" rel=\"noopener noreferrer\">Dealing with virtualization packers</a> (May 2008)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/1802.04528\" rel=\"noopener noreferrer\">Deceiving end-to-end deep learning malware detectors using adversarial examples</a> (January 2019)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3374664.3375741\" rel=\"noopener noreferrer\">Deceiving portable executable malware classifiers into targeted misclassification with practical adversarial examples</a> (March 2020)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/2490428.2490431\" rel=\"noopener noreferrer\">Detection of packed malware</a> (August 2012)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://academic.oup.com/comjnl/article-abstract/64/4/599/5940626\" rel=\"noopener noreferrer\">An efficient algorithm to extract control flow-based features for ioT malware detection</a> (April 2021)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-61231-2_17\" rel=\"noopener noreferrer\">Experimental toolkit for manipulating executable packing</a> (June 2024)  ‚≠ê ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/8844597\" rel=\"noopener noreferrer\">Exploring adversarial examples in malware detection</a> (May 2019)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.sciencedirect.com/science/article/pii/S0952197624012417\" rel=\"noopener noreferrer\">Feature selection for packer classification based on association rule mining</a> (August 2024)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/9437194\" rel=\"noopener noreferrer\">Functionality-preserving black-box optimization of adversarial windows malware</a> (May 2021)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-89350-6_23\" rel=\"noopener noreferrer\">Highlighting the impact of packed executable alterations with unsupervised learning</a> (April 2025)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://iopscience.iop.org/article/10.1088/1742-6596/801/1/012058\" rel=\"noopener noreferrer\">Mal-xtract: Hidden code extraction using memory analysis</a> (January 2017)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/2016904.2016908\" rel=\"noopener noreferrer\">Malware images: Visualization and automatic classification</a> (July 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/2739482.2764940\" rel=\"noopener noreferrer\">Malware obfuscation through evolutionary packers</a> (July 2015)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3015135.3015136\" rel=\"noopener noreferrer\">Metadata recovery from obfuscated programs using machine learning</a> (December 2016)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.sciencedirect.com/science/article/pii/S2214212624002643\" rel=\"noopener noreferrer\">MSG: Missing-sequence generator for metamorphic malware detection</a> (March 2025)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3371307.3371309\" rel=\"noopener noreferrer\">Obfuscation: Where are we in anti-DSE protections? (a first attempt)</a> (December 2019)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.inderscienceonline.com/doi/abs/10.1504/IJESDF.2007.016865\" rel=\"noopener noreferrer\">Opcodes as predictor for malware</a> (January 2008)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/10793050\" rel=\"noopener noreferrer\">Packed code detection using shannon entropy and homomorphic encrypted executables</a> (October 2024)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.semanticscholar.org/paper/7bc891420300f6e4c4d97d19a14d5c6a4dd422f0\" rel=\"noopener noreferrer\">Packed malware detection using entropy related analysis: A survey</a> (November 2015)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.matec-conferences.org/articles/matecconf/abs/2020/05/matecconf_cscns2020_02002/matecconf_cscns2020_02002.html\" rel=\"noopener noreferrer\">Packed malware variants detection using deep belief networks</a> (March 2020)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://re.public.polimi.it/handle/11311/1284225\" rel=\"noopener noreferrer\">PackHero: A scalable graph-based approach for efficient packer identification</a> (July 2025)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.ijcte.org/show-42-485-1.html\" rel=\"noopener noreferrer\">PE file features in detection of packed executables</a> (January 2012)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://dl.acm.org/doi/10.1145/3643456\" rel=\"noopener noreferrer\">Pitfalls in machine learning for computer security</a> (October 2024)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://scispace.com/papers/reform-a-framework-for-malware-packer-analysis-using-2muwuyaeox\" rel=\"noopener noreferrer\">REFORM: A framework for malware packer analysis using information theory and statistical methods</a> (April 2010)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://api.semanticscholar.org/CorpusID:113759144\" rel=\"noopener noreferrer\">Source-free binary mutation for offense and defense</a> (December 2014)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ijaseit.insightsociety.org/index.php/ijaseit/article/view/6827\" rel=\"noopener noreferrer\">A survey on malware analysis techniques: Static, dynamic, hybrid and memory analysis</a> (September 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/blazytko\" rel=\"noopener noreferrer\">Syntia: Synthesizing the semantics of obfuscated code</a> (August 2017)</li>\n</ul>\n\n<ul>\n<li>üìï <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-66245-4_13\" rel=\"noopener noreferrer\">Unpacking malware in the real world: A step-by step guide</a> (July 2024)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-030-78621-2_6\" rel=\"noopener noreferrer\">VABox: A virtualization-based analysis framework of virtualization-obfuscated packed executables</a> (June 2021)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/9139515\" rel=\"noopener noreferrer\">x64Unpack: Hybrid emulation unpacker for 64-bit Windows Environments and detailed analysis results on VMProtect 3.4</a> (July 2020)</li>\n</ul>\n<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/whyisyoung/BODMAS\" rel=\"noopener noreferrer\">BODMAS (‚≠ê83)</a> - Code for our DLS'21 paper - BODMAS: An Open Dataset for Learning based Temporal Analysis of PE Malware.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.malwaregallery.com\" rel=\"noopener noreferrer\">MalwareGallery</a> - Yet another malware collection in the Internet.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://malwaretips.com\" rel=\"noopener noreferrer\">MalwareTips</a> - MalwareTips is a community-driven platform providing the latest information and resources on malware and cyber threats.</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/DosX-dev/ASM-Guard\" rel=\"noopener noreferrer\">ASM Guard (‚≠ê249)</a> - Packer utility for compressing and complicating reversing compiled native code (native files), protecting resources, adding DRM, and packing into an optimized loader.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/DosX-dev/Astral-PE\" rel=\"noopener noreferrer\">Astral-PE (‚≠ê313)</a> - Low-level mutator (Headers/EP obfuscator) for native Windows PE files (x32/x64).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/telepath9000/elf-packer\" rel=\"noopener noreferrer\">ELF Packer (‚≠ê32)</a> - Encrypts 64-bit elf files that decrypt at runtime.</li>\n</ul>\n\n<ul>\n<li>NPack - Can compress 32bits and 64bits exe, dll, ocx, scr Windows program.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.obsidium.de/product/sps/download\" rel=\"noopener noreferrer\">Obsidium</a> - Feature-rich professional software protection and licensing system designed as a cost effective and easy to implement, yet reliable and non-invasive way to protect your 32- and 64-bit Windows software applications and games from reverse engineering.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20200929161737/https://github.com/AlysonBee/OSX_Packer\" rel=\"noopener noreferrer\">OS-X_Packer</a> - Binary packer for the Mach-O file format.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20231226141018/https://github.com/eaglx/VirtualMachineObfuscationPoC\" rel=\"noopener noreferrer\">VirtualMachineObfuscationPoC</a> - Obfuscation method using virtual machine.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/Jibus22/woody_woodpacker\" rel=\"noopener noreferrer\">Woody Wood Packer (‚≠ê18)</a> - ELF packer - encrypt and inject self-decryption code into executable ELF binary target.</li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://nspack.apponic.com\" rel=\"noopener noreferrer\">NSPack</a> - 32/64-bits exe, dll, ocx, scr Windows program compressor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20081218083606/http://www.ttprotect.com/en/index.htm\" rel=\"noopener noreferrer\">TTProtect</a> - Professional protection tool designed for software developers to protect their PE applications against illegal modification or decompilation.</li>\n</ul>\n<h3><p>üì¶ Packers / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://gitlab.com/tkchia/causeway\" rel=\"noopener noreferrer\">CauseWay Compressor</a> - DOS EXE compressor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://bitsum.com/pebundle.htm\" rel=\"noopener noreferrer\">PEBundle</a> - Physically attaches DLL(s) to an executable, resolving dependencies in memory.</li>\n</ul>\n\n<ul>\n<li>VGCrypt - PE crypter for Win95/98/NT.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://web.archive.org/web/20211017145403/https://assiste.com/Packer.html\" rel=\"noopener noreferrer\">Assiste (Packer)</a> - Assiste.com's example list of packers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://dl.acm.org/doi/10.1145/3243734.3243771?-\" rel=\"noopener noreferrer\">BinUnpack</a> - Unpacking approach free from tedious memory access monitoring, therefore introducing very small runtime overhead.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/adamhlt/Cave-Finder\" rel=\"noopener noreferrer\">Cave-Finder (‚≠ê66)</a> - Tool to find code cave in PE image (x86 / x64) - Find empty space to place code in PE files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20220121084407/http://qunpack.ahteam.org/?p=327\" rel=\"noopener noreferrer\">GUnpacker</a> - Shell tool that performs OEP positioning and dumps decrypted code.</li>\n</ul>\n\n<ul>\n<li>Lissom - Retargetable decompiler consisting of a preprocessing part and a decompilation core.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/packing-box/packer-masking-tool\" rel=\"noopener noreferrer\">NotPacked++ (‚≠ê19)</a> - Attack tool for altering packed samples so that they evade static packing detection.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20150504162711/https://www.sysreveal.com/packerbreaker-intro\" rel=\"noopener noreferrer\">PackerBreaker</a> - Tool for helping unpack, decompress and decrypt most of the programs packed, compressed or encrypted using advanced emulation technology.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20250427032942/http://pect.atspace.com\" rel=\"noopener noreferrer\">PE Compression Test</a> - List of packers tested on a few sample executables for comparing compressed sizes.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20070529035022/https://www.secretashell.com/codomain/peid/\" rel=\"noopener noreferrer\">PEiD</a> - Packed Executable iDentifier.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20220119142245/http://qunpack.ahteam.org/?p=458\" rel=\"noopener noreferrer\">Quick Unpack</a> - Generic unpacker that facilitates the unpacking process.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20220904151105/http://rdgsoft.net/\" rel=\"noopener noreferrer\">RDG Packer Detector</a> - Packer detection tool.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://dl.acm.org/doi/10.1145/1314389.1314399?tool\" rel=\"noopener noreferrer\">Renovo</a> - Detection tool built on top of TEMU (dynamic analysis component of BitBlaze) based on the execution of newly-generated code and monitoring memory writes after the program starts.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20241106123938/https://www.leechermods.com/2010/01/vmunpacker-16-latest-version.html\" rel=\"noopener noreferrer\">VMUnpacker</a> - Unpacker based on the technology of virtual machine.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/11/11/",
      "title": "Awesome Executable Packing Updates on Nov 11, 2024",
      "_short_title": "Nov 11, 2024",
      "_slug": "2024/11/11/",
      "summary": "107 awesome projects updated on Nov 11, 2024",
      "_filepath": "/content/2024/11/11/README.md",
      "url": "https://www.trackawesomelist.com/2024/11/11/",
      "date_published": "2024-11-11T22:11:57.000Z",
      "date_modified": "2024-11-11T22:11:57.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :green\\_book: [The art of memory forensics: Detecting malware and threats in Windows, Linux, and mac memory](https://www.oreilly.com/library/view/the-art-of/9781118824993)\n*   :book: [Cluster analysis](https://en.wikipedia.org/w/index.php?title=Cluster_analysis\\&oldid=1148034400)\n*   :earth\\_americas: [Clustering algorithms](https://developers.google.com/machine-learning/clustering/clustering-algorithms)\n*   :newspaper: [A complexity measure](https://ieeexplore.ieee.org/document/1702388/)\n*   :newspaper: [Cyclomatic complexity density and software maintenance productivity](https://ieeexplore.ieee.org/document/106988)\n*   :newspaper: [Do we need hundreds of classiÔ¨Åers to solve real world classiÔ¨Åcation problems?](https://jmlr.org/papers/v15/delgado14a.html)\n*   :newspaper: [Feature selection: A data perspective](https://dl.acm.org/doi/10.1145/3136625)\n*   :newspaper: [How to use t-SNE effectively](https://distill.pub/2016/misread-tsne)\n*   :book: [Machine learning](https://en.wikipedia.org/w/index.php?title=Machine_learning\\&oldid=1148293340)\n*   :newspaper: [The matthews correlation coefficient¬†(MCC) should replace the ROC¬†AUC as the standard metric for assessing binary classification](https://doi.org/10.1186/s13040-023-00322-4)\n*   :clipboard: [Microsoft portable executable and common object file format specification](https://www.skyfree.org/linux/references/coff.pdf)\n*   :bookmark: [On the worst-case complexity of timsort](https://arxiv.org/abs/1805.08612)\n*   :page\\_facing\\_up: [Packers](https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/corkami/packers.pdf)\n*   :bar\\_chart: [Packing-box: Breaking detectors & visualizing packing](https://www.blackhat.com/eu-23/arsenal/schedule/index.html#packing-box-breaking-detectors--visualizing-packing-35678)\n*   :bar\\_chart: [Packing-box: Playing with executable packing](https://www.blackhat.com/eu-22/arsenal/schedule/index.html#packing-box-playing-with-executable-packing-29054)\n*   :green\\_book: [Pattern recognition and machine learning (Information science and statistics)](https://dl.acm.org/doi/10.5555/1162264)\n*   :earth\\_americas: [PE format - Win32 apps](https://learn.microsoft.com/en-us/windows/win32/debug/pe-format)\n*   :green\\_book: [Practical malware analysis: The hands-on guide to dissecting malicious software](https://www.oreilly.com/library/view/practical-malware-analysis/9781593272906)\n*   :pushpin: [ProtectMyTooling - Don't detect tools, detect techniques](https://mgeeky.tech/protectmytooling)\n*   :bar\\_chart: [Reverse engineering malware: Binary obfuscation and protection](https://www.cse.tkk.fi/fi/opinnot/T-110.6220/2014_Reverse_Engineering_Malware_AND_Mobile_Platform_Security_AND_Software_Security/luennot-files/Binary%20Obfuscation%20and%20Protection.pdf)\n*   :bookmark: [A survey of dimensionality reduction techniques](https://arxiv.org/abs/1403.2877)\n*   :green\\_book: [The \"Ultimate\" anti-debugging reference](https://pferrie.epizy.com/papers/antidebug.pdf)\n*   :earth\\_americas: [x86 disassembly/Windows executable files](https://en.wikibooks.org/wiki/X86_Disassembly/Windows_Executable_Files)\n\n### :books: Literature / Scientific Research\n\n*   :mortar\\_board: [Advanced feature engineering for static detection of executable packing](https://researchportal.rma.ac.be/en/publications?1) (June 2024)\n*   :newspaper: [Adversarial EXEmples: A survey and experimental evaluation of practical attacks on machine learning for windows malware detection](https://dl.acm.org/doi/10.1145/3473039) (September 2021)  :star:\n*   :mortar\\_board: [Adversarial learning on static detection techniques for executable packing](https://dial.uclouvain.be/memoire/ucl/object/thesis:40178) (June 2023)  :star:\n*   :mortar\\_board: [Adversarial tool for breaking static detection of executable packing](https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A48691) (August 2024)  :star:\n*   :mortar\\_board: [An application of machine learning to analysis of packed mac malware](https://scholar.dsu.edu/theses/381) (May 2022)  :star:\n*   :page\\_facing\\_up: [Assessing the impact of packing on machine learning-based malware detection and classification systems](https://arxiv.org/abs/2410.24017) (October 2024)  :star:\n*   :mortar\\_board: [Automated static analysis of virtual-machine packers](https://core.ac.uk/outputs/16750878) (August 2013)\n*   :notebook: [Automatic static unpacking of malware binaries](https://ieeexplore.ieee.org/document/5328814) (October 2009)\n*   :notebook: [Classifying packed programs as malicious software detected](https://www.semanticscholar.org/paper/Classifying-Packed-Programs-as-Malicious-Software-Osaghae/676f38819a0ed3028acce36f4f11b0c77e4cc0ae) (December 2016)\n*   :notebook: [Collective classification for packed executable identification](https://dl.acm.org/doi/proceedings/10.1145/2030376) (September 2011)\n*   :bookmark: [A compact multi-step framework for packing identification in portable executable files for malware analysis](https://www.researchsquare.com/article/rs-3974855/v1) (February 2024)\n*   :newspaper: [Conceptual and empirical comparison of dimensionality reduction algorithms (PCA, KPCA, LDA, MDS, SVD, LLE, ISOMAP, LE, ICA, t-SNE)](https://linkinghub.elsevier.com/retrieve/pii/S1574013721000186) (May 2021)\n*   :newspaper: [Control flow-based opcode behavior analysis for malware detection](https://www.sciencedirect.com/science/article/pii/S0167404814000558) (July 2014)\n*   :page\\_facing\\_up: [Decoding the secrets of machine learning in malware classification: A deep dive into datasets, feature extraction, and model performance](https://arxiv.org/abs/2307.14657) (July 2023)  :star:\n*   :newspaper: [Detecting packed executables based on raw binary data](https://vision.ece.ucsb.edu/sites/vision.ece.ucsb.edu/files/publications/packed-unpacked-tech-report.pdf) (June 2010)\n*   :newspaper: [Detecting unknown malicious code by applying classification techniques on opcode patterns](https://doi.org/10.1186/2190-8532-1-1) (February 2012)\n*   :notebook: [Detection of metamorphic malware packers using multilayered LSTM networks](https://link.springer.com/10.1007/978-3-030-61078-4_3) (November 2020)  :star:\n*   :newspaper: [DroidPDF: The obfuscation resilient packer detection framework for Android Apps](https://ieeexplore.ieee.org/document/9144572) (July 2020)\n*   :notebook: [Dynamic classification of packing algorithms for inspecting executables using entropy analysis](https://ieeexplore.ieee.org/document/6703681) (October 2013)\n*   :notebook: [A dynamic heuristic method for detecting packed malware using naive bayes](https://ieeexplore.ieee.org/document/8959765) (November 2019)  :star:\n*   :newspaper: [Effective, efficient, and robust packing detection and classification](http://www.sciencedirect.com/science/article/pii/S0167404818311040) (May 2019)  :star: :star: :star:\n*   :bookmark: [EMBER: An open dataset for training static PE malware machine learning models](https://arxiv.org/abs/1804.04637) (April 2018)  :star:\n*   :notebook: [Entropy analysis to classify unknown packing algorithms for malware detection](https://link.springer.com/article/10.1007/s10207-016-0330-4) (May 2016)  :star:\n*   :newspaper: [ERMDS: A obfuscation dataset for evaluating robustness of learning-based malware detection system](https://www.scopus.com/inward/record.uri?eid=2-s2.0-85172316495\\&doi=10.1016%2fj.tbench.2023.100106\\&partnerID=40\\&md5=74252d50feb21959b6563650c1c977c2) (May 2023)\n*   :notebook: [Evading packing detection: Breaking heuristic-based static detectors](https://link.springer.com/chapter/10.1007/978-3-031-64171-8_9) (July 2024)  :star:\n*   :notebook: [Experimental comparison of machine learning models in malware packing detection](https://ieeexplore.ieee.org/document/9237007) (September 2020)  :star:\n*   :newspaper: [Fast and robust fixed-point algorithms for independent component analysis](https://ieeexplore.ieee.org/document/761722) (May 1999)\n*   :notebook: [Fileprints: Identifying file types by n-gram analysis](https://ieeexplore.ieee.org/document/1495935) (June 2005)\n*   :bookmark: [Generating adversarial malware examples for black-box attacks based on GAN](http://arxiv.org/abs/1702.05983) (February 2020)\n*   :newspaper: [Generic packing detection using several complexity analysis for accurate malware detection](https://www.researchgate.net/publication/332594129_Generic_Packing_Detection_using_Several_Complexity_Analysis_for_Accurate_Malware_Detection?channel=doi\\&linkId=5cbf828b299bf120977ac78a\\&showFulltext=true) (January 2014)\n*   :bookmark: [Generic unpacking of self-modifying, aggressive, packed binary programs](https://arxiv.org/abs/0905.4581) (May 2009)\n*   :notebook: [Generic unpacking using entropy analysis](https://ieeexplore.ieee.org/document/5665789) (October 2010)\n*   :newspaper: [A heuristics-based static analysis approach for detecting packed PE binaries](http://article.nadiapub.com/IJSIA/vol7_no5/24.pdf) (October 2013)\n*   :newspaper: [Identifying malware packers through multilayer feature engineering in static analysis](https://www.mdpi.com/2078-2489/15/2/102) (February 2024)  :star:\n*   :newspaper: [Improving malware detection using multi-view ensemble learning](https://onlinelibrary.wiley.com/doi/abs/10.1002/sec.1600) (August 2016)\n*   :scroll: [Incremental clustering of malware packers using features based on transformed CFG](https://hal.science/hal-03940881) (November 2022)\n*   :bookmark: [Intriguing properties of adversarial ML attacks in the problem space](https://arxiv.org/abs/1911.02142) (March 2020)\n*   :bookmark: [Intriguing properties of neural networks](https://arxiv.org/abs/1312.6199) (February 2014)\n*   :bookmark: [Learning to evade static PE machine learning malware models via reinforcement learning](https://arxiv.org/abs/1801.08917) (January 2018)\n*   :bookmark: [MAB-Malware: A reinforcement learning framework for attacking static malware classifiers](https://arxiv.org/abs/2003.03100) (April 2021)\n*   :mortar\\_board: [Malware detection through opcode sequence analysis using machine learning](https://api.semanticscholar.org/CorpusID:70282638) (June 2015)\n*   :notebook: [Malware family classification method based on static feature extraction](https://ieeexplore.ieee.org/document/8322598) (December 2017)\n*   :newspaper: [Malwise - An effective and efficient classification system for packed and polymorphic malware](https://ieeexplore.ieee.org/document/6171162) (June 2013)\n*   :notebook: [MLxPack: Investigating the effects of packers on ML-based malware detection systems using static and dynamic traits](https://dl.acm.org/doi/10.1145/3494108.3522768) (May 2022)  :star:\n*   :bookmark: [Novel feature extraction, selection and fusion for effective malware family classification](https://arxiv.org/abs/1511.04317) (March 2016)\n*   :newspaper: [On deceiving malware classification with section injection](https://arxiv.org/abs/2208.06092) (August 2022)\n*   :bookmark: [On evaluating adversarial robustness](https://arxiv.org/abs/1902.06705) (February 2019)\n*   :newspaper: [Opcode sequences as representation of executables for data-mining-based unknown malware detection](https://linkinghub.elsevier.com/retrieve/pii/S0020025511004336) (May 2013)\n*   :newspaper: [Original entry point detection based on graph similarity](https://link.springer.com/chapter/10.1007/978-3-031-57537-2_22) (April 2024)\n*   :newspaper: [Packer classification based on association rule mining](https://www.sciencedirect.com/science/article/pii/S1568494622005245) (July 2022)  :star:\n*   :notebook: [Packer identification using byte plot and Markov plot](https://link.springer.com/article/10.1007/s11416-015-0249-8) (September 2015)\n*   :notebook: [Pattern recognition techniques for the classification of malware packers](https://link.springer.com/chapter/10.1007/978-3-642-14081-5_23) (July 2010)\n*   :notebook: [PolyUnpack: Automating the hidden-code extraction of unpack-executing malware](https://ieeexplore.ieee.org/document/4041175) (December 2006)  :star2: :star2: :star2:\n*   :newspaper: [Potent and stealthy control flow obfuscation by stack based self-modifying code](http://ieeexplore.ieee.org/document/6473885/) (April 2013)\n*   :newspaper: [Practical attacks on machine learning: A case study on adversarial windows malware](https://arxiv.org/abs/2207.05548) (September 2022)\n*   :notebook: [RAMBO: Run-Time packer analysis with multiple branch observation](https://link.springer.com/chapter/10.1007/978-3-319-40667-1_10) (July 2016)  :star:\n*   :notebook: [Renovo: A hidden code extractor for packed executables](https://dl.acm.org/doi/10.1145/1314389.1314399) (November 2007)  :star: :star:\n*   :newspaper: [Revealing packed malware](https://ieeexplore.ieee.org/document/4639028) (September 2008)\n*   :notebook: [SE-PAC: A self-evolving packer classifier against rapid packers evolution](https://dl.acm.org/doi/10.1145/3422337.3447848) (April 2021)  :star:\n*   :newspaper: [Sequential opcode embedding-based malware detection method](https://www.sciencedirect.com/science/article/pii/S0045790622000210) (March 2022)\n*   :notebook: [SoK: (state of) the art of war: Offensive techniques in binary analysis](https://ieeexplore.ieee.org/document/7546500) (May 2016)\n*   :notebook: [SoK: Deep packer inspection: A longitudinal study of the complexity of run-time packers](https://ieeexplore.ieee.org/document/7163053) (May 2015)  :star: :star:\n*   :notebook: [Static analysis method on portable executable files for REMNUX based malware identification](https://ieeexplore.ieee.org/document/8923331) (October 2019)\n*   :mortar\\_board: [Static features exploration for executable packing with unsupervised learning](https://www.ecam.be?1) (June 2023)\n*   :notebook: [A static, packer-agnostic filter to detect similar malware samples](https://link.springer.com/chapter/10.1007/978-3-642-37300-8_6) (July 2012)\n*   :bookmark: [A survey on adversarial attacks for malware analysis](https://arxiv.org/abs/2111.08223) (January 2022)\n*   :notebook: [Symbolic deobfuscation: From virtualized code back to the original](https://link.springer.com/chapter/10.1007/978-3-319-93411-2_17) (July 2018)\n*   :notebook: [Symbolic execution of obfuscated code](https://dl.acm.org/doi/10.1145/2810103.2813663) (October 2015)  :star:\n*   :bookmark: [Technical report on the cleverhans v2.1.0 adversarial examples library](https://arxiv.org/abs/1610.00768) (June 2018)\n*   :bookmark: [Transcending transcend: Revisiting malware classification in the presence of concept drift](https://arxiv.org/abs/2010.03856) (December 2021)\n*   :notebook: [Understanding linux malware](https://ieeexplore.ieee.org/document/8418602) (May 2018)  :star:\n*   :notebook: [Unknown malcode detection using OPCODE representation](http://link.springer.com/10.1007/978-3-540-89900-6_21) (December 2008)\n*   :mortar\\_board: [Unsupervised clustering machine learning on packed executable](https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A35687) (June 2022)\n*   :newspaper: [Using entropy analysis to find encrypted and packed malware](https://ieeexplore.ieee.org/document/4140989) (March 2007)\n*   :notebook: [When malware is packin' heat; limits of machine learning classifiers based on static analysis features](https://www.ndss-symposium.org/wp-content/uploads/2020/02/24310.pdf) (January 2020)  :star: :star:\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [VX Underground](https://vx-underground.org/Samples) - PL-CERT based open source MWDB python application holding a malware database containing every APT sample from 2010 and over 7.5M maliciousbinaries.\n\n### :package: Packers / After 2010\n\n*   [Hyperion (‚≠ê56)](https://github.com/nullsecuritynet/tools/tree/main/binary/hyperion)\n*   [PEzor (‚≠ê2k)](https://github.com/phra/PEzor) - Open-Source Shellcode & PE Packer.\n*   [ProtectMyTooling (‚≠ê977)](https://github.com/mgeeky/ProtectMyTooling) - Multi-Packer wrapper letting us daisy-chain various packers, obfuscators and other Red Team oriented weaponry.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [x86.Virtualizer](http://rewolf.pl) - x86 Virtualizer.\n\n### :wrench: Tools / Before 2000\n\n*   [Gym-Malware (‚≠ê624)](https://github.com/endgameinc/gym-malware) - This is a malware manipulation environment for OpenAI's gym.\n*   [PEPack (‚≠ê733)](https://github.com/mentebinaria/readpe) - PE file packer detection tool, part of the Unix package \"pev\".\n*   [REMINDer (‚≠ê3)](https://github.com/packing-box/reminder) - Packing detection tool based on the entropy value of the entry point section and the WRITE attribute.\n*   [SecML Malware (‚≠ê229)](https://github.com/pralab/secml_malware) - Create adversarial attacks against machine learning Windows malware detectors.",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üìó <a href=\"https://www.oreilly.com/library/view/the-art-of/9781118824993\" rel=\"noopener noreferrer\">The art of memory forensics: Detecting malware and threats in Windows, Linux, and mac memory</a></li>\n</ul>\n\n<ul>\n<li>üìñ <a href=\"https://en.wikipedia.org/w/index.php?title=Cluster_analysis&amp;oldid=1148034400\" rel=\"noopener noreferrer\">Cluster analysis</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://developers.google.com/machine-learning/clustering/clustering-algorithms\" rel=\"noopener noreferrer\">Clustering algorithms</a></li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/1702388/\" rel=\"noopener noreferrer\">A complexity measure</a></li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/106988\" rel=\"noopener noreferrer\">Cyclomatic complexity density and software maintenance productivity</a></li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://jmlr.org/papers/v15/delgado14a.html\" rel=\"noopener noreferrer\">Do we need hundreds of classiÔ¨Åers to solve real world classiÔ¨Åcation problems?</a></li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://dl.acm.org/doi/10.1145/3136625\" rel=\"noopener noreferrer\">Feature selection: A data perspective</a></li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://distill.pub/2016/misread-tsne\" rel=\"noopener noreferrer\">How to use t-SNE effectively</a></li>\n</ul>\n\n<ul>\n<li>üìñ <a href=\"https://en.wikipedia.org/w/index.php?title=Machine_learning&amp;oldid=1148293340\" rel=\"noopener noreferrer\">Machine learning</a></li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://doi.org/10.1186/s13040-023-00322-4\" rel=\"noopener noreferrer\">The matthews correlation coefficient¬†(MCC) should replace the ROC¬†AUC as the standard metric for assessing binary classification</a></li>\n</ul>\n\n<ul>\n<li>üìã <a href=\"https://www.skyfree.org/linux/references/coff.pdf\" rel=\"noopener noreferrer\">Microsoft portable executable and common object file format specification</a></li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/1805.08612\" rel=\"noopener noreferrer\">On the worst-case complexity of timsort</a></li>\n</ul>\n\n<ul>\n<li>üìÑ <a href=\"https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/corkami/packers.pdf\" rel=\"noopener noreferrer\">Packers</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.blackhat.com/eu-23/arsenal/schedule/index.html#packing-box-breaking-detectors--visualizing-packing-35678\" rel=\"noopener noreferrer\">Packing-box: Breaking detectors &amp; visualizing packing</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.blackhat.com/eu-22/arsenal/schedule/index.html#packing-box-playing-with-executable-packing-29054\" rel=\"noopener noreferrer\">Packing-box: Playing with executable packing</a></li>\n</ul>\n\n<ul>\n<li>üìó <a href=\"https://dl.acm.org/doi/10.5555/1162264\" rel=\"noopener noreferrer\">Pattern recognition and machine learning (Information science and statistics)</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://learn.microsoft.com/en-us/windows/win32/debug/pe-format\" rel=\"noopener noreferrer\">PE format - Win32 apps</a></li>\n</ul>\n\n<ul>\n<li>üìó <a href=\"https://www.oreilly.com/library/view/practical-malware-analysis/9781593272906\" rel=\"noopener noreferrer\">Practical malware analysis: The hands-on guide to dissecting malicious software</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://mgeeky.tech/protectmytooling\" rel=\"noopener noreferrer\">ProtectMyTooling - Don't detect tools, detect techniques</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.cse.tkk.fi/fi/opinnot/T-110.6220/2014_Reverse_Engineering_Malware_AND_Mobile_Platform_Security_AND_Software_Security/luennot-files/Binary%20Obfuscation%20and%20Protection.pdf\" rel=\"noopener noreferrer\">Reverse engineering malware: Binary obfuscation and protection</a></li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/1403.2877\" rel=\"noopener noreferrer\">A survey of dimensionality reduction techniques</a></li>\n</ul>\n\n<ul>\n<li>üìó <a href=\"https://pferrie.epizy.com/papers/antidebug.pdf\" rel=\"noopener noreferrer\">The \"Ultimate\" anti-debugging reference</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://en.wikibooks.org/wiki/X86_Disassembly/Windows_Executable_Files\" rel=\"noopener noreferrer\">x86 disassembly/Windows executable files</a></li>\n</ul>\n<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üéì <a href=\"https://researchportal.rma.ac.be/en/publications?1\" rel=\"noopener noreferrer\">Advanced feature engineering for static detection of executable packing</a> (June 2024)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://dl.acm.org/doi/10.1145/3473039\" rel=\"noopener noreferrer\">Adversarial EXEmples: A survey and experimental evaluation of practical attacks on machine learning for windows malware detection</a> (September 2021)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://dial.uclouvain.be/memoire/ucl/object/thesis:40178\" rel=\"noopener noreferrer\">Adversarial learning on static detection techniques for executable packing</a> (June 2023)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A48691\" rel=\"noopener noreferrer\">Adversarial tool for breaking static detection of executable packing</a> (August 2024)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://scholar.dsu.edu/theses/381\" rel=\"noopener noreferrer\">An application of machine learning to analysis of packed mac malware</a> (May 2022)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìÑ <a href=\"https://arxiv.org/abs/2410.24017\" rel=\"noopener noreferrer\">Assessing the impact of packing on machine learning-based malware detection and classification systems</a> (October 2024)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://core.ac.uk/outputs/16750878\" rel=\"noopener noreferrer\">Automated static analysis of virtual-machine packers</a> (August 2013)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5328814\" rel=\"noopener noreferrer\">Automatic static unpacking of malware binaries</a> (October 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.semanticscholar.org/paper/Classifying-Packed-Programs-as-Malicious-Software-Osaghae/676f38819a0ed3028acce36f4f11b0c77e4cc0ae\" rel=\"noopener noreferrer\">Classifying packed programs as malicious software detected</a> (December 2016)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/proceedings/10.1145/2030376\" rel=\"noopener noreferrer\">Collective classification for packed executable identification</a> (September 2011)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://www.researchsquare.com/article/rs-3974855/v1\" rel=\"noopener noreferrer\">A compact multi-step framework for packing identification in portable executable files for malware analysis</a> (February 2024)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://linkinghub.elsevier.com/retrieve/pii/S1574013721000186\" rel=\"noopener noreferrer\">Conceptual and empirical comparison of dimensionality reduction algorithms (PCA, KPCA, LDA, MDS, SVD, LLE, ISOMAP, LE, ICA, t-SNE)</a> (May 2021)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.sciencedirect.com/science/article/pii/S0167404814000558\" rel=\"noopener noreferrer\">Control flow-based opcode behavior analysis for malware detection</a> (July 2014)</li>\n</ul>\n\n<ul>\n<li>üìÑ <a href=\"https://arxiv.org/abs/2307.14657\" rel=\"noopener noreferrer\">Decoding the secrets of machine learning in malware classification: A deep dive into datasets, feature extraction, and model performance</a> (July 2023)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://vision.ece.ucsb.edu/sites/vision.ece.ucsb.edu/files/publications/packed-unpacked-tech-report.pdf\" rel=\"noopener noreferrer\">Detecting packed executables based on raw binary data</a> (June 2010)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://doi.org/10.1186/2190-8532-1-1\" rel=\"noopener noreferrer\">Detecting unknown malicious code by applying classification techniques on opcode patterns</a> (February 2012)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/10.1007/978-3-030-61078-4_3\" rel=\"noopener noreferrer\">Detection of metamorphic malware packers using multilayered LSTM networks</a> (November 2020)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/9144572\" rel=\"noopener noreferrer\">DroidPDF: The obfuscation resilient packer detection framework for Android Apps</a> (July 2020)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6703681\" rel=\"noopener noreferrer\">Dynamic classification of packing algorithms for inspecting executables using entropy analysis</a> (October 2013)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/8959765\" rel=\"noopener noreferrer\">A dynamic heuristic method for detecting packed malware using naive bayes</a> (November 2019)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"http://www.sciencedirect.com/science/article/pii/S0167404818311040\" rel=\"noopener noreferrer\">Effective, efficient, and robust packing detection and classification</a> (May 2019)  ‚≠ê ‚≠ê ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/1804.04637\" rel=\"noopener noreferrer\">EMBER: An open dataset for training static PE malware machine learning models</a> (April 2018)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/article/10.1007/s10207-016-0330-4\" rel=\"noopener noreferrer\">Entropy analysis to classify unknown packing algorithms for malware detection</a> (May 2016)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85172316495&amp;doi=10.1016%2fj.tbench.2023.100106&amp;partnerID=40&amp;md5=74252d50feb21959b6563650c1c977c2\" rel=\"noopener noreferrer\">ERMDS: A obfuscation dataset for evaluating robustness of learning-based malware detection system</a> (May 2023)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-64171-8_9\" rel=\"noopener noreferrer\">Evading packing detection: Breaking heuristic-based static detectors</a> (July 2024)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/9237007\" rel=\"noopener noreferrer\">Experimental comparison of machine learning models in malware packing detection</a> (September 2020)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/761722\" rel=\"noopener noreferrer\">Fast and robust fixed-point algorithms for independent component analysis</a> (May 1999)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/1495935\" rel=\"noopener noreferrer\">Fileprints: Identifying file types by n-gram analysis</a> (June 2005)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"http://arxiv.org/abs/1702.05983\" rel=\"noopener noreferrer\">Generating adversarial malware examples for black-box attacks based on GAN</a> (February 2020)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.researchgate.net/publication/332594129_Generic_Packing_Detection_using_Several_Complexity_Analysis_for_Accurate_Malware_Detection?channel=doi&amp;linkId=5cbf828b299bf120977ac78a&amp;showFulltext=true\" rel=\"noopener noreferrer\">Generic packing detection using several complexity analysis for accurate malware detection</a> (January 2014)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/0905.4581\" rel=\"noopener noreferrer\">Generic unpacking of self-modifying, aggressive, packed binary programs</a> (May 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5665789\" rel=\"noopener noreferrer\">Generic unpacking using entropy analysis</a> (October 2010)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"http://article.nadiapub.com/IJSIA/vol7_no5/24.pdf\" rel=\"noopener noreferrer\">A heuristics-based static analysis approach for detecting packed PE binaries</a> (October 2013)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.mdpi.com/2078-2489/15/2/102\" rel=\"noopener noreferrer\">Identifying malware packers through multilayer feature engineering in static analysis</a> (February 2024)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://onlinelibrary.wiley.com/doi/abs/10.1002/sec.1600\" rel=\"noopener noreferrer\">Improving malware detection using multi-view ensemble learning</a> (August 2016)</li>\n</ul>\n\n<ul>\n<li>üìú <a href=\"https://hal.science/hal-03940881\" rel=\"noopener noreferrer\">Incremental clustering of malware packers using features based on transformed CFG</a> (November 2022)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/1911.02142\" rel=\"noopener noreferrer\">Intriguing properties of adversarial ML attacks in the problem space</a> (March 2020)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/1312.6199\" rel=\"noopener noreferrer\">Intriguing properties of neural networks</a> (February 2014)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/1801.08917\" rel=\"noopener noreferrer\">Learning to evade static PE machine learning malware models via reinforcement learning</a> (January 2018)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/2003.03100\" rel=\"noopener noreferrer\">MAB-Malware: A reinforcement learning framework for attacking static malware classifiers</a> (April 2021)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://api.semanticscholar.org/CorpusID:70282638\" rel=\"noopener noreferrer\">Malware detection through opcode sequence analysis using machine learning</a> (June 2015)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/8322598\" rel=\"noopener noreferrer\">Malware family classification method based on static feature extraction</a> (December 2017)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/6171162\" rel=\"noopener noreferrer\">Malwise - An effective and efficient classification system for packed and polymorphic malware</a> (June 2013)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3494108.3522768\" rel=\"noopener noreferrer\">MLxPack: Investigating the effects of packers on ML-based malware detection systems using static and dynamic traits</a> (May 2022)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/1511.04317\" rel=\"noopener noreferrer\">Novel feature extraction, selection and fusion for effective malware family classification</a> (March 2016)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://arxiv.org/abs/2208.06092\" rel=\"noopener noreferrer\">On deceiving malware classification with section injection</a> (August 2022)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/1902.06705\" rel=\"noopener noreferrer\">On evaluating adversarial robustness</a> (February 2019)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://linkinghub.elsevier.com/retrieve/pii/S0020025511004336\" rel=\"noopener noreferrer\">Opcode sequences as representation of executables for data-mining-based unknown malware detection</a> (May 2013)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://link.springer.com/chapter/10.1007/978-3-031-57537-2_22\" rel=\"noopener noreferrer\">Original entry point detection based on graph similarity</a> (April 2024)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.sciencedirect.com/science/article/pii/S1568494622005245\" rel=\"noopener noreferrer\">Packer classification based on association rule mining</a> (July 2022)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/article/10.1007/s11416-015-0249-8\" rel=\"noopener noreferrer\">Packer identification using byte plot and Markov plot</a> (September 2015)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-14081-5_23\" rel=\"noopener noreferrer\">Pattern recognition techniques for the classification of malware packers</a> (July 2010)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/4041175\" rel=\"noopener noreferrer\">PolyUnpack: Automating the hidden-code extraction of unpack-executing malware</a> (December 2006)  üåü üåü üåü</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"http://ieeexplore.ieee.org/document/6473885/\" rel=\"noopener noreferrer\">Potent and stealthy control flow obfuscation by stack based self-modifying code</a> (April 2013)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://arxiv.org/abs/2207.05548\" rel=\"noopener noreferrer\">Practical attacks on machine learning: A case study on adversarial windows malware</a> (September 2022)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-319-40667-1_10\" rel=\"noopener noreferrer\">RAMBO: Run-Time packer analysis with multiple branch observation</a> (July 2016)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/1314389.1314399\" rel=\"noopener noreferrer\">Renovo: A hidden code extractor for packed executables</a> (November 2007)  ‚≠ê ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/4639028\" rel=\"noopener noreferrer\">Revealing packed malware</a> (September 2008)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3422337.3447848\" rel=\"noopener noreferrer\">SE-PAC: A self-evolving packer classifier against rapid packers evolution</a> (April 2021)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.sciencedirect.com/science/article/pii/S0045790622000210\" rel=\"noopener noreferrer\">Sequential opcode embedding-based malware detection method</a> (March 2022)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/7546500\" rel=\"noopener noreferrer\">SoK: (state of) the art of war: Offensive techniques in binary analysis</a> (May 2016)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/7163053\" rel=\"noopener noreferrer\">SoK: Deep packer inspection: A longitudinal study of the complexity of run-time packers</a> (May 2015)  ‚≠ê ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/8923331\" rel=\"noopener noreferrer\">Static analysis method on portable executable files for REMNUX based malware identification</a> (October 2019)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://www.ecam.be?1\" rel=\"noopener noreferrer\">Static features exploration for executable packing with unsupervised learning</a> (June 2023)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-37300-8_6\" rel=\"noopener noreferrer\">A static, packer-agnostic filter to detect similar malware samples</a> (July 2012)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/2111.08223\" rel=\"noopener noreferrer\">A survey on adversarial attacks for malware analysis</a> (January 2022)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-319-93411-2_17\" rel=\"noopener noreferrer\">Symbolic deobfuscation: From virtualized code back to the original</a> (July 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/2810103.2813663\" rel=\"noopener noreferrer\">Symbolic execution of obfuscated code</a> (October 2015)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/1610.00768\" rel=\"noopener noreferrer\">Technical report on the cleverhans v2.1.0 adversarial examples library</a> (June 2018)</li>\n</ul>\n\n<ul>\n<li>üîñ <a href=\"https://arxiv.org/abs/2010.03856\" rel=\"noopener noreferrer\">Transcending transcend: Revisiting malware classification in the presence of concept drift</a> (December 2021)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/8418602\" rel=\"noopener noreferrer\">Understanding linux malware</a> (May 2018)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"http://link.springer.com/10.1007/978-3-540-89900-6_21\" rel=\"noopener noreferrer\">Unknown malcode detection using OPCODE representation</a> (December 2008)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A35687\" rel=\"noopener noreferrer\">Unsupervised clustering machine learning on packed executable</a> (June 2022)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/4140989\" rel=\"noopener noreferrer\">Using entropy analysis to find encrypted and packed malware</a> (March 2007)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.ndss-symposium.org/wp-content/uploads/2020/02/24310.pdf\" rel=\"noopener noreferrer\">When malware is packin' heat; limits of machine learning classifiers based on static analysis features</a> (January 2020)  ‚≠ê ‚≠ê</li>\n</ul>\n<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://vx-underground.org/Samples\" rel=\"noopener noreferrer\">VX Underground</a> - PL-CERT based open source MWDB python application holding a malware database containing every APT sample from 2010 and over 7.5M maliciousbinaries.</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/nullsecuritynet/tools/tree/main/binary/hyperion\" rel=\"noopener noreferrer\">Hyperion (‚≠ê56)</a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/phra/PEzor\" rel=\"noopener noreferrer\">PEzor (‚≠ê2k)</a> - Open-Source Shellcode &amp; PE Packer.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mgeeky/ProtectMyTooling\" rel=\"noopener noreferrer\">ProtectMyTooling (‚≠ê977)</a> - Multi-Packer wrapper letting us daisy-chain various packers, obfuscators and other Red Team oriented weaponry.</li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"http://rewolf.pl\" rel=\"noopener noreferrer\">x86.Virtualizer</a> - x86 Virtualizer.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/endgameinc/gym-malware\" rel=\"noopener noreferrer\">Gym-Malware (‚≠ê624)</a> - This is a malware manipulation environment for OpenAI's gym.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mentebinaria/readpe\" rel=\"noopener noreferrer\">PEPack (‚≠ê733)</a> - PE file packer detection tool, part of the Unix package \"pev\".</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/packing-box/reminder\" rel=\"noopener noreferrer\">REMINDer (‚≠ê3)</a> - Packing detection tool based on the entropy value of the entry point section and the WRITE attribute.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/pralab/secml_malware\" rel=\"noopener noreferrer\">SecML Malware (‚≠ê229)</a> - Create adversarial attacks against machine learning Windows malware detectors.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/06/16/",
      "title": "Awesome Executable Packing Updates on Jun 16, 2024",
      "_short_title": "Jun 16, 2024",
      "_slug": "2024/06/16/",
      "summary": "36 awesome projects updated on Jun 16, 2024",
      "_filepath": "/content/2024/06/16/README.md",
      "url": "https://www.trackawesomelist.com/2024/06/16/",
      "date_published": "2024-06-16T22:48:45.000Z",
      "date_modified": "2024-06-16T22:48:45.000Z",
      "content_text": "\n\n### :books: Literature / Scientific Research\n\n*   :newspaper: [2-SPIFF: A 2-stage packer identification method based on function call graph and file attributes](https://link.springer.com/article/10.1007/s10489-021-02347-w) (December 2021)\n*   :notebook: [Adversarial malware binaries: Evading deep learning for malware detection in executables](https://ieeexplore.ieee.org/document/8553214) (September 2018)\n*   :newspaper: [Birds of a feature: Intrafamily clustering for version identification of packed malware](https://ieeexplore.ieee.org/document/8951062) (September 2020)\n*   :newspaper: [Bypassing anti-analysis of commercial protector methods using DBI tools](https://ieeexplore.ieee.org/document/9312198) (January 2021)\n*   :notebook: [Comparing malware samples for unpacking: A feasibility study](https://ieeexplore.ieee.org/document/7782073) (August 2016)\n*   :notebook: [A comprehensive solution for obfuscation detection and removal based on comparative analysis of deobfuscation tools](https://ieeexplore.ieee.org/document/9645824) (October 2021)\n*   :newspaper: [A consistently-executing graph-based approach for malware packer identification](https://ieeexplore.ieee.org/document/8695825) (April 2019)\n*   :mortar\\_board: [Detecting packed PE files: Executable file analysis for the Windows operating system](https://uia.brage.unit.no/uia-xmlui/handle/11250/2823655) (June 2021)\n*   :newspaper: [Efficient SVM based packer identification with binary diffing measures](https://ieeexplore.ieee.org/document/8754440) (July 2019)\n*   :notebook: [Enhancing machine learning based malware detection model by reinforcement learning](https://dl.acm.org/doi/10.1145/3290480.3290494) (November 2018)\n*   :newspaper: [Evading anti-malware engines with deep reinforcement learning](https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=\\&arnumber=8676031) (March 2019)\n*   :newspaper: [Feature selection for malware detection based on reinforcement learning](https://ieeexplore.ieee.org/document/8920059) (December 2019)\n*   :notebook: [A generic approach to automatic deobfuscation of executable code](https://ieeexplore.ieee.org/document/7163054) (May 2015)  :star:\n*   :notebook: [Generic black-box end-to-end attack against state of the art API call based malware classifiers](https://link.springer.com/chapter/10.1007/978-3-030-00470-5_23) (September 2018)\n*   :notebook: [A machine-learning-based framework for supporting malware detection and analysis](https://link.springer.com/chapter/10.1007/978-3-030-86970-0_25) (September 2021)\n*   :notebook: [MetaAware: Identifying metamorphic malware](https://ieeexplore.ieee.org/document/4413007) (December 2007)\n*   :notebook: [Obfuscator-LLVM: Software protection for the masses](https://ieeexplore.ieee.org/document/7174804) (May 2015)\n*   :notebook: [OmniUnpack: Fast, generic, and safe unpacking of malware](https://ieeexplore.ieee.org/document/4413009) (December 2007)  :star:\n*   :newspaper: [Packer detection for multi-layer executables using entropy analysis](https://www.mdpi.com/1099-4300/19/3/125) (March 2017)  :star:\n*   :notebook: [Packer identification method based on byte sequences](https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.5082) (November 2018)\n*   :notebook: [Packer identification method for multi-layer executables with k-Nearest neighbor of entropies](https://ieeexplore.ieee.org/document/9366089) (October 2020)  :star:\n*   :mortar\\_board: [Packing detection and classification relying on machine learning to stop malware propagation](https://theses.hal.science/tel-03781104) (December 2021)\n*   :newspaper: [PEzoNG: Advanced packer for automated evasion on Windows](https://link.springer.com/article/10.1007/s11416-022-00417-2) (December 2022)\n*   :notebook: [RePEF ‚Äî A system for restoring packed executable file for malware analysis](https://ieeexplore.ieee.org/document/6016777) (July 2011)\n*   :notebook: [Research of software information hiding algorithm based on packing technology](https://link.springer.com/chapter/10.1007/978-981-15-8086-4_8) (September 2020)\n*   :notebook: [SATURN - Software deobfuscation framework based on LLVM](https://dl.acm.org/doi/10.1145/3338503.3357721) (November 2019)\n*   :newspaper: [SCORE: Source code optimization & reconstruction](https://ieeexplore.ieee.org/document/9139493) (July 2020)\n*   :newspaper: [Sensitive system calls based packed malware variants detection using principal component initialized multilayers neural networks](https://cybersecurity.springeropen.com/articles/10.1186/s42400-018-0010-y) (September 2018)\n*   :notebook: [SoK: Automatic deobfuscation of virtualization-protected applications](https://dl.acm.org/doi/10.1145/3465481.3465772) (August 2021)\n*   :notebook: [A study of the packer problem and its solutions](https://link.springer.com/chapter/10.1007/978-3-540-87403-4_6) (September 2008)  :star:\n*   :notebook: [A survey on machine learning-based detection and classification technology of malware](https://ieeexplore.ieee.org/document/9718826) (September 2021)\n*   :notebook: [Towards paving the way for large-scale Windows malware analysis: Generic binary unpacking with orders-of-magnitude performance boost](https://dl.acm.org/doi/10.1145/3243734.3243771) (October 2018)  :star:\n*   :notebook: [Towards static analysis of virtualization-obfuscated binaries](https://ieeexplore.ieee.org/document/6385102) (October 2012)\n*   :newspaper: [UnThemida: Commercial obfuscation technique analysis with a fully obfuscated program](https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2622) (July 2018)\n*   :notebook: [VMAttack: Deobfuscating virtualization-based packed binaries](https://dl.acm.org/doi/10.1145/3098954.3098995) (August 2017)\n\n### :package: Packers / After 2010\n\n*   [PEzoNG](https://www.youtube.com/watch?v=RZAWSCesiSs) - Framework for automatically creating stealth binaries that target a very low detection rate in a Windows environment.",
      "content_html": "<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üì∞ <a href=\"https://link.springer.com/article/10.1007/s10489-021-02347-w\" rel=\"noopener noreferrer\">2-SPIFF: A 2-stage packer identification method based on function call graph and file attributes</a> (December 2021)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/8553214\" rel=\"noopener noreferrer\">Adversarial malware binaries: Evading deep learning for malware detection in executables</a> (September 2018)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/8951062\" rel=\"noopener noreferrer\">Birds of a feature: Intrafamily clustering for version identification of packed malware</a> (September 2020)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/9312198\" rel=\"noopener noreferrer\">Bypassing anti-analysis of commercial protector methods using DBI tools</a> (January 2021)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/7782073\" rel=\"noopener noreferrer\">Comparing malware samples for unpacking: A feasibility study</a> (August 2016)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/9645824\" rel=\"noopener noreferrer\">A comprehensive solution for obfuscation detection and removal based on comparative analysis of deobfuscation tools</a> (October 2021)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/8695825\" rel=\"noopener noreferrer\">A consistently-executing graph-based approach for malware packer identification</a> (April 2019)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://uia.brage.unit.no/uia-xmlui/handle/11250/2823655\" rel=\"noopener noreferrer\">Detecting packed PE files: Executable file analysis for the Windows operating system</a> (June 2021)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/8754440\" rel=\"noopener noreferrer\">Efficient SVM based packer identification with binary diffing measures</a> (July 2019)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3290480.3290494\" rel=\"noopener noreferrer\">Enhancing machine learning based malware detection model by reinforcement learning</a> (November 2018)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=8676031\" rel=\"noopener noreferrer\">Evading anti-malware engines with deep reinforcement learning</a> (March 2019)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/8920059\" rel=\"noopener noreferrer\">Feature selection for malware detection based on reinforcement learning</a> (December 2019)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/7163054\" rel=\"noopener noreferrer\">A generic approach to automatic deobfuscation of executable code</a> (May 2015)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-030-00470-5_23\" rel=\"noopener noreferrer\">Generic black-box end-to-end attack against state of the art API call based malware classifiers</a> (September 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-030-86970-0_25\" rel=\"noopener noreferrer\">A machine-learning-based framework for supporting malware detection and analysis</a> (September 2021)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/4413007\" rel=\"noopener noreferrer\">MetaAware: Identifying metamorphic malware</a> (December 2007)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/7174804\" rel=\"noopener noreferrer\">Obfuscator-LLVM: Software protection for the masses</a> (May 2015)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/4413009\" rel=\"noopener noreferrer\">OmniUnpack: Fast, generic, and safe unpacking of malware</a> (December 2007)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.mdpi.com/1099-4300/19/3/125\" rel=\"noopener noreferrer\">Packer detection for multi-layer executables using entropy analysis</a> (March 2017)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.5082\" rel=\"noopener noreferrer\">Packer identification method based on byte sequences</a> (November 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/9366089\" rel=\"noopener noreferrer\">Packer identification method for multi-layer executables with k-Nearest neighbor of entropies</a> (October 2020)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://theses.hal.science/tel-03781104\" rel=\"noopener noreferrer\">Packing detection and classification relying on machine learning to stop malware propagation</a> (December 2021)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://link.springer.com/article/10.1007/s11416-022-00417-2\" rel=\"noopener noreferrer\">PEzoNG: Advanced packer for automated evasion on Windows</a> (December 2022)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6016777\" rel=\"noopener noreferrer\">RePEF ‚Äî A system for restoring packed executable file for malware analysis</a> (July 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-981-15-8086-4_8\" rel=\"noopener noreferrer\">Research of software information hiding algorithm based on packing technology</a> (September 2020)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3338503.3357721\" rel=\"noopener noreferrer\">SATURN - Software deobfuscation framework based on LLVM</a> (November 2019)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/9139493\" rel=\"noopener noreferrer\">SCORE: Source code optimization &amp; reconstruction</a> (July 2020)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://cybersecurity.springeropen.com/articles/10.1186/s42400-018-0010-y\" rel=\"noopener noreferrer\">Sensitive system calls based packed malware variants detection using principal component initialized multilayers neural networks</a> (September 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3465481.3465772\" rel=\"noopener noreferrer\">SoK: Automatic deobfuscation of virtualization-protected applications</a> (August 2021)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-540-87403-4_6\" rel=\"noopener noreferrer\">A study of the packer problem and its solutions</a> (September 2008)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/9718826\" rel=\"noopener noreferrer\">A survey on machine learning-based detection and classification technology of malware</a> (September 2021)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3243734.3243771\" rel=\"noopener noreferrer\">Towards paving the way for large-scale Windows malware analysis: Generic binary unpacking with orders-of-magnitude performance boost</a> (October 2018)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6385102\" rel=\"noopener noreferrer\">Towards static analysis of virtualization-obfuscated binaries</a> (October 2012)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2622\" rel=\"noopener noreferrer\">UnThemida: Commercial obfuscation technique analysis with a fully obfuscated program</a> (July 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3098954.3098995\" rel=\"noopener noreferrer\">VMAttack: Deobfuscating virtualization-based packed binaries</a> (August 2017)</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=RZAWSCesiSs\" rel=\"noopener noreferrer\">PEzoNG</a> - Framework for automatically creating stealth binaries that target a very low detection rate in a Windows environment.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/01/15/",
      "title": "Awesome Executable Packing Updates on Jan 15, 2024",
      "_short_title": "Jan 15, 2024",
      "_slug": "2024/01/15/",
      "summary": "24 awesome projects updated on Jan 15, 2024",
      "_filepath": "/content/2024/01/15/README.md",
      "url": "https://www.trackawesomelist.com/2024/01/15/",
      "date_published": "2024-01-15T23:36:51.000Z",
      "date_modified": "2024-01-15T23:36:51.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :earth\\_americas: [Awesome executable packing (‚≠ê1.4k)](https://github.com/packing-box/awesome-executable-packing)\n\n### :books: Literature / Scientific Research\n\n*   :newspaper: [The arms race: Adversarial search defeats entropy used to detect malware](https://www.sciencedirect.com/science/article/pii/S0957417418306535) (October 2018)\n*   :newspaper: [Automatic generation of adversarial examples for interpreting malware classifiers](https://www.semanticscholar.org/reader/040a0020e054e050e52a829902cfe0defad8c6ac) (March 2020)\n*   :mortar\\_board: [Building a smart and automated tool for packed malware detections using machine learning](https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A25193) (June 2020)\n*   :notebook: [A comparative analysis of classifiers in the recognition of packed executables](https://ieeexplore.ieee.org/abstract/document/8995252) (November 2019)\n*   :mortar\\_board: [Complexity-based packed executable classification with high accuracy](https://caislab.kaist.ac.kr/publication/thesis_files/2009/Thesis_Hanyoung.pdf) (December 2008)\n*   :newspaper: [Detecting obfuscated malware using reduced opcode set and optimised runtime trace](https://security-informatics.springeropen.com/articles/10.1186/s13388-016-0027-2) (May 2016)\n*   :notebook: [Disabling anti-debugging techniques for unpacking system in user-level debugger](https://ieeexplore.ieee.org/document/8939719) (October 2019)\n*   :newspaper: [Efficient automatic original entry point detection](https://jise.iis.sinica.edu.tw/JISESearch/pages/View/PaperView.jsf?keyId=169_2256) (January 2019)\n*   :newspaper: [File packing from the malware perspective: Techniques, analysis approaches, and directions for enhancements](https://dl.acm.org/doi/10.1145/3530810) (December 2022)  :star:\n*   :newspaper: [An improved method for packed malware detection using PE header and section table information](https://www.mecs-press.org/ijcnis/ijcnis-v11-n9/v11n9-2.html) (September 2019)\n*   :newspaper: [Mal-flux: Rendering hidden code of packed binary executable](http://www.sciencedirect.com/science/article/pii/S1742287618303736) (March 2019)\n*   :newspaper: [MaliCage: A packed malware family classification framework based on DNN and GAN](https://www.sciencedirect.com/science/article/pii/S2214212622001296) (August 2022)  :star:\n*   :notebook: [PackGenome: Automatically generating robust YARA rules for accurate malware packer detection](https://dl.acm.org/doi/10.1145/3576915.3616625) (November 2023)  :star:\n*   :newspaper: [Static malware detection & subterfuge: Quantifying the robustness of machine learning and current anti-virus](http://arxiv.org/abs/1806.04773) (June 2018)\n*   :newspaper: [A survey on run-time packers and mitigation techniques](https://link.springer.com/article/10.1007/s10207-023-00759-y) (November 2023)  :star:\n*   :notebook: [VMHunt: A verifiable approach to partially-virtualized binary code simplification](https://dl.acm.org/doi/10.1145/3243734.3243827) (October 2018)\n*   :notebook: [VMRe: A reverse framework of virtual machine protection packed binaries](https://ieeexplore.ieee.org/document/8923473) (June 2019)\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [MalwareSamples](https://github.com/MalwareSamples) - Bringing you the best of the worst files on the Internet.\n*   [VirusTotal](https://www.virustotal.com/gui/) - File analysis Web service for detecting malware.\n\n### :package: Packers / After 2010\n\n*   [Pakr (‚≠ê8)](https://github.com/iangcarroll/pakr) - In-memory packer for macOS Mach-O bundles.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [Laturi](http://laturi.haxor.fi) - Linker and compressor intended to be used for macOS 1k, 4k and perhaps 64K intros.\n\n### :wrench: Tools / Before 2000\n\n*   [VMHunt (‚≠ê181)](https://github.com/s3team/VMHunt) - Set of tools for analyzing virtualized binary code ; now only supports 32 bit traces.\n*   [yarGen (‚≠ê1.7k)](https://github.com/Neo23x0/yarGen) - Generator for YARA rules - The main principle is the creation of yara rules from strings found in malware files while removing all strings that also appear in goodware files.",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üåé <a href=\"https://github.com/packing-box/awesome-executable-packing\" rel=\"noopener noreferrer\">Awesome executable packing (‚≠ê1.4k)</a></li>\n</ul>\n<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üì∞ <a href=\"https://www.sciencedirect.com/science/article/pii/S0957417418306535\" rel=\"noopener noreferrer\">The arms race: Adversarial search defeats entropy used to detect malware</a> (October 2018)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.semanticscholar.org/reader/040a0020e054e050e52a829902cfe0defad8c6ac\" rel=\"noopener noreferrer\">Automatic generation of adversarial examples for interpreting malware classifiers</a> (March 2020)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A25193\" rel=\"noopener noreferrer\">Building a smart and automated tool for packed malware detections using machine learning</a> (June 2020)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/abstract/document/8995252\" rel=\"noopener noreferrer\">A comparative analysis of classifiers in the recognition of packed executables</a> (November 2019)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://caislab.kaist.ac.kr/publication/thesis_files/2009/Thesis_Hanyoung.pdf\" rel=\"noopener noreferrer\">Complexity-based packed executable classification with high accuracy</a> (December 2008)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://security-informatics.springeropen.com/articles/10.1186/s13388-016-0027-2\" rel=\"noopener noreferrer\">Detecting obfuscated malware using reduced opcode set and optimised runtime trace</a> (May 2016)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/8939719\" rel=\"noopener noreferrer\">Disabling anti-debugging techniques for unpacking system in user-level debugger</a> (October 2019)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://jise.iis.sinica.edu.tw/JISESearch/pages/View/PaperView.jsf?keyId=169_2256\" rel=\"noopener noreferrer\">Efficient automatic original entry point detection</a> (January 2019)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://dl.acm.org/doi/10.1145/3530810\" rel=\"noopener noreferrer\">File packing from the malware perspective: Techniques, analysis approaches, and directions for enhancements</a> (December 2022)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.mecs-press.org/ijcnis/ijcnis-v11-n9/v11n9-2.html\" rel=\"noopener noreferrer\">An improved method for packed malware detection using PE header and section table information</a> (September 2019)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"http://www.sciencedirect.com/science/article/pii/S1742287618303736\" rel=\"noopener noreferrer\">Mal-flux: Rendering hidden code of packed binary executable</a> (March 2019)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.sciencedirect.com/science/article/pii/S2214212622001296\" rel=\"noopener noreferrer\">MaliCage: A packed malware family classification framework based on DNN and GAN</a> (August 2022)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3576915.3616625\" rel=\"noopener noreferrer\">PackGenome: Automatically generating robust YARA rules for accurate malware packer detection</a> (November 2023)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"http://arxiv.org/abs/1806.04773\" rel=\"noopener noreferrer\">Static malware detection &amp; subterfuge: Quantifying the robustness of machine learning and current anti-virus</a> (June 2018)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://link.springer.com/article/10.1007/s10207-023-00759-y\" rel=\"noopener noreferrer\">A survey on run-time packers and mitigation techniques</a> (November 2023)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3243734.3243827\" rel=\"noopener noreferrer\">VMHunt: A verifiable approach to partially-virtualized binary code simplification</a> (October 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/8923473\" rel=\"noopener noreferrer\">VMRe: A reverse framework of virtual machine protection packed binaries</a> (June 2019)</li>\n</ul>\n<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/MalwareSamples\" rel=\"noopener noreferrer\">MalwareSamples</a> - Bringing you the best of the worst files on the Internet.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.virustotal.com/gui/\" rel=\"noopener noreferrer\">VirusTotal</a> - File analysis Web service for detecting malware.</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/iangcarroll/pakr\" rel=\"noopener noreferrer\">Pakr (‚≠ê8)</a> - In-memory packer for macOS Mach-O bundles.</li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"http://laturi.haxor.fi\" rel=\"noopener noreferrer\">Laturi</a> - Linker and compressor intended to be used for macOS 1k, 4k and perhaps 64K intros.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/s3team/VMHunt\" rel=\"noopener noreferrer\">VMHunt (‚≠ê181)</a> - Set of tools for analyzing virtualized binary code ; now only supports 32 bit traces.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/Neo23x0/yarGen\" rel=\"noopener noreferrer\">yarGen (‚≠ê1.7k)</a> - Generator for YARA rules - The main principle is the creation of yara rules from strings found in malware files while removing all strings that also appear in goodware files.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/01/05/",
      "title": "Awesome Executable Packing Updates on Jan 05, 2024",
      "_short_title": "Jan 05, 2024",
      "_slug": "2024/01/05/",
      "summary": "1 awesome projects updated on Jan 05, 2024",
      "_filepath": "/content/2024/01/05/README.md",
      "url": "https://www.trackawesomelist.com/2024/01/05/",
      "date_published": "2024-01-05T07:50:47.000Z",
      "date_modified": "2024-01-05T07:50:47.000Z",
      "content_text": "\n\n### :books: Literature / Scientific Research\n\n*   :notebook: [Tutorial: An overview of malware detection and evasion techniques](https://inria.hal.science/hal-01964222) (December 2018)",
      "content_html": "<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üìì <a href=\"https://inria.hal.science/hal-01964222\" rel=\"noopener noreferrer\">Tutorial: An overview of malware detection and evasion techniques</a> (December 2018)</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/11/07/",
      "title": "Awesome Executable Packing Updates on Nov 07, 2023",
      "_short_title": "Nov 07, 2023",
      "_slug": "2023/11/07/",
      "summary": "5 awesome projects updated on Nov 07, 2023",
      "_filepath": "/content/2023/11/07/README.md",
      "url": "https://www.trackawesomelist.com/2023/11/07/",
      "date_published": "2023-11-07T07:20:45.000Z",
      "date_modified": "2023-11-07T07:20:45.000Z",
      "content_text": "\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [The Malware Museum](https://archive.org/details/malwaremuseum) - The Malware Museum is a collection of malware programs, usually viruses, that were distributed in the 1980s and 1990s on home computers.\n\n### :package: Packers / After 2010\n\n*   [Squishy](https://logicoma.io/squishy) - Modern packer developed for 64kb demoscene productions, targets 32bit and 64bit executables.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [CryptExec](http://phrack.org/issues/63/13.html) - Next-generation runtime binary encryption using on-demand function extraction.\n\n### :package: Packers / Before 2000\n\n*   [Fire-Pack](http://files.dhs.nu/files_source/axe.zip?fire-pack)\n*   [Pack-Ice](http://files.dhs.nu/files_source/axe.zip?pack-ice)",
      "content_html": "<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://archive.org/details/malwaremuseum\" rel=\"noopener noreferrer\">The Malware Museum</a> - The Malware Museum is a collection of malware programs, usually viruses, that were distributed in the 1980s and 1990s on home computers.</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://logicoma.io/squishy\" rel=\"noopener noreferrer\">Squishy</a> - Modern packer developed for 64kb demoscene productions, targets 32bit and 64bit executables.</li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"http://phrack.org/issues/63/13.html\" rel=\"noopener noreferrer\">CryptExec</a> - Next-generation runtime binary encryption using on-demand function extraction.</li>\n</ul>\n<h3><p>üì¶ Packers / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"http://files.dhs.nu/files_source/axe.zip?fire-pack\" rel=\"noopener noreferrer\">Fire-Pack</a></li>\n</ul>\n\n<ul>\n<li><a href=\"http://files.dhs.nu/files_source/axe.zip?pack-ice\" rel=\"noopener noreferrer\">Pack-Ice</a></li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/07/04/",
      "title": "Awesome Executable Packing Updates on Jul 04, 2023",
      "_short_title": "Jul 04, 2023",
      "_slug": "2023/07/04/",
      "summary": "3 awesome projects updated on Jul 04, 2023",
      "_filepath": "/content/2023/07/04/README.md",
      "url": "https://www.trackawesomelist.com/2023/07/04/",
      "date_published": "2023-07-04T22:48:31.000Z",
      "date_modified": "2023-07-04T22:48:31.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :pushpin: [Making our own executable packer](https://fasterthanli.me/series/making-our-own-executable-packer)\n\n### :books: Literature / Scientific Research\n\n*   :mortar\\_board: [Maitland: Analysis of packed and encrypted malware via paravirtualization extensions](https://dspace.library.uvic.ca/handle/1828/3866) (June 2012)\n*   :notebook: [Malware makeover: Breaking ML-based static analysis by modifying executable bytes](http://arxiv.org/abs/1912.09064) (May 2021)",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üìå <a href=\"https://fasterthanli.me/series/making-our-own-executable-packer\" rel=\"noopener noreferrer\">Making our own executable packer</a></li>\n</ul>\n<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üéì <a href=\"https://dspace.library.uvic.ca/handle/1828/3866\" rel=\"noopener noreferrer\">Maitland: Analysis of packed and encrypted malware via paravirtualization extensions</a> (June 2012)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"http://arxiv.org/abs/1912.09064\" rel=\"noopener noreferrer\">Malware makeover: Breaking ML-based static analysis by modifying executable bytes</a> (May 2021)</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/04/03/",
      "title": "Awesome Executable Packing Updates on Apr 03, 2023",
      "_short_title": "Apr 03, 2023",
      "_slug": "2023/04/03/",
      "summary": "6 awesome projects updated on Apr 03, 2023",
      "_filepath": "/content/2023/04/03/README.md",
      "url": "https://www.trackawesomelist.com/2023/04/03/",
      "date_published": "2023-04-03T22:41:36.000Z",
      "date_modified": "2023-04-03T22:41:36.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :pushpin: [Writing a packer](https://dr4k0nia.github.io/posts/Writing-a-Packer)\n\n### :books: Literature / Scientific Research\n\n*   :newspaper: [BareUnpack: Generic unpacking on the bare-metal operating system](https://www.jstage.jst.go.jp/article/transinf/E101.D/12/E101.D_2017EDP7424/_article) (December 2018)\n*   :newspaper: [A close look at a daily dataset of malware samples](https://dl.acm.org/doi/10.1145/3291061) (January 2019)\n*   :notebook: [Ether: Malware analysis via hardware virtualization extensions](https://dl.acm.org/doi/10.1145/1455770.1455779) (October 2008)\n*   :mortar\\_board: [Experimental toolkit for studying executable packing - Analysis of the state-of-the-art packing detection techniques](https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A35692) (June 2022)  :star:\n*   :newspaper: [WYSINWYX: What you see is not what you execute](https://dl.acm.org/doi/10.1145/1749608.1749612) (August 2010)",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üìå <a href=\"https://dr4k0nia.github.io/posts/Writing-a-Packer\" rel=\"noopener noreferrer\">Writing a packer</a></li>\n</ul>\n<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üì∞ <a href=\"https://www.jstage.jst.go.jp/article/transinf/E101.D/12/E101.D_2017EDP7424/_article\" rel=\"noopener noreferrer\">BareUnpack: Generic unpacking on the bare-metal operating system</a> (December 2018)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://dl.acm.org/doi/10.1145/3291061\" rel=\"noopener noreferrer\">A close look at a daily dataset of malware samples</a> (January 2019)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/1455770.1455779\" rel=\"noopener noreferrer\">Ether: Malware analysis via hardware virtualization extensions</a> (October 2008)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://dial.uclouvain.be/memoire/ucl/en/object/thesis%3A35692\" rel=\"noopener noreferrer\">Experimental toolkit for studying executable packing - Analysis of the state-of-the-art packing detection techniques</a> (June 2022)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://dl.acm.org/doi/10.1145/1749608.1749612\" rel=\"noopener noreferrer\">WYSINWYX: What you see is not what you execute</a> (August 2010)</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/01/07/",
      "title": "Awesome Executable Packing Updates on Jan 07, 2023",
      "_short_title": "Jan 07, 2023",
      "_slug": "2023/01/07/",
      "summary": "9 awesome projects updated on Jan 07, 2023",
      "_filepath": "/content/2023/01/07/README.md",
      "url": "https://www.trackawesomelist.com/2023/01/07/",
      "date_published": "2023-01-07T00:14:49.000Z",
      "date_modified": "2023-01-07T00:14:49.000Z",
      "content_text": "\n\n### :books: Literature / Scientific Research\n\n*   :notebook: [A fast randomness test that preserves local detail](https://researchrepository.rmit.edu.au/esploro/outputs/conferenceProceeding/A-fast-randomness-test-that-preserves-local-detail/9921861589001341) (October 2008)\n*   :notebook: [Limits of static analysis for malware detection](https://ieeexplore.ieee.org/document/4413008) (December 2007)\n*   :notebook: [On the (Im)possibility of obfuscating programs](https://link.springer.com/chapter/10.1007/3-540-44647-8_1) (August 2001)\n*   :notebook: [PE-Miner: Mining structural information to detect malicious executables in realtime](https://link.springer.com/chapter/10.1007/978-3-642-04342-0_7) (September 2009)\n*   :newspaper: [Standards and policies on packer use](http://pferrie.epizy.com/papers/con2010.htm) (October 2010)\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [Contagio](https://contagiodump.blogspot.com) - Contagio is a collection of the latest malware samples, threats, observations, and analyses.\n*   [Open Malware Project](https://web.archive.org/web/20190116100735/http://www.offensivecomputing.net/) - Online collection of malware samples (formerly Offensive Computing).\n\n### :wrench: Tools / Before 2000\n\n*   [Capa (‚≠ê5.4k)](https://github.com/mandiant/capa) - Open-source tool to identify capabilities in PE, ELF or .NET executable files.\n*   [Oedipus (‚≠ê11)](https://github.com/tum-i4/Oedipus) - A Python framework that uses machine learning algorithms to implement the metadata recovery attack against obfuscated programs.",
      "content_html": "<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üìì <a href=\"https://researchrepository.rmit.edu.au/esploro/outputs/conferenceProceeding/A-fast-randomness-test-that-preserves-local-detail/9921861589001341\" rel=\"noopener noreferrer\">A fast randomness test that preserves local detail</a> (October 2008)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/4413008\" rel=\"noopener noreferrer\">Limits of static analysis for malware detection</a> (December 2007)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/3-540-44647-8_1\" rel=\"noopener noreferrer\">On the (Im)possibility of obfuscating programs</a> (August 2001)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-04342-0_7\" rel=\"noopener noreferrer\">PE-Miner: Mining structural information to detect malicious executables in realtime</a> (September 2009)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"http://pferrie.epizy.com/papers/con2010.htm\" rel=\"noopener noreferrer\">Standards and policies on packer use</a> (October 2010)</li>\n</ul>\n<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://contagiodump.blogspot.com\" rel=\"noopener noreferrer\">Contagio</a> - Contagio is a collection of the latest malware samples, threats, observations, and analyses.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20190116100735/http://www.offensivecomputing.net/\" rel=\"noopener noreferrer\">Open Malware Project</a> - Online collection of malware samples (formerly Offensive Computing).</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/mandiant/capa\" rel=\"noopener noreferrer\">Capa (‚≠ê5.4k)</a> - Open-source tool to identify capabilities in PE, ELF or .NET executable files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/tum-i4/Oedipus\" rel=\"noopener noreferrer\">Oedipus (‚≠ê11)</a> - A Python framework that uses machine learning algorithms to implement the metadata recovery attack against obfuscated programs.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/12/30/",
      "title": "Awesome Executable Packing Updates on Dec 30, 2022",
      "_short_title": "Dec 30, 2022",
      "_slug": "2022/12/30/",
      "summary": "27 awesome projects updated on Dec 30, 2022",
      "_filepath": "/content/2022/12/30/README.md",
      "url": "https://www.trackawesomelist.com/2022/12/30/",
      "date_published": "2022-12-30T21:51:06.000Z",
      "date_modified": "2022-12-30T21:51:06.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :page\\_facing\\_up: [Anti-unpacker tricks - Part 14 (and previous parts)](https://www.virusbulletin.com/virusbulletin/2010/11/anti-unpacker-tricks-part-fourteen/)\n*   :pushpin: [Entropy and the distinctive signs of packer PE files](https://n10info.blogspot.com/2014/06/entropy-and-distinctive-signs-of-packed.html)\n\n### :books: Literature / Scientific Research\n\n*   :newspaper: [The application research of virtual machine in packers](https://www.semanticscholar.org/paper/The-Application-Research-of-Virtual-Machine-in-Wen-yu/fff04e0073ac2018bff5242919cdca47deacad7a) (August 2011)\n*   :notebook: [ByteWise: A case study in neural network obfuscation identification](https://ieeexplore.ieee.org/document/8301720/) (January 2018)\n*   :notebook: [Classifying packed malware represented as control flow graphs using deep graph convolutional neural network](https://ieeexplore.ieee.org/document/9103752) (March 2020)  :star:\n*   :newspaper: [A comparative analysis of software protection schemes](https://www.researchgate.net/publication/281653855_A_Comparative_Analysis_of_Software_Protection_Schemes) (June 2014)\n*   :notebook: [A control flow graph-based signature for packer identification](https://ieeexplore.ieee.org/document/8170793) (October 2017)\n*   :notebook: [Detecting packed executable file: Supervised or anomaly detection method?](https://ieeexplore.ieee.org/abstract/document/7784628) (August 2016)\n*   :notebook: [Detecting traditional packers, decisively](https://link.springer.com/chapter/10.1007/978-3-642-41284-4_10) (October 2013)\n*   :notebook: [Evading machine learning malware detection](https://www.blackhat.com/us-17/briefings.html#bot-vs.-bot-for-evading-machine-learning-malware-detection) (July 2017)\n*   :newspaper: [Hashing-based encryption and anti-debugger support for packing multiple files into single executable](http://ijarcs.info/index.php/Ijarcs/article/view/5526/4622) (February 2018)\n*   :newspaper: [Mal-XT: Higher accuracy hidden-code extraction of packed binary executable](https://iopscience.iop.org/article/10.1088/1757-899X/453/1/012001) (November 2018)\n*   :notebook: [Obfuscation-resilient executable payload extraction from packed malware](https://www.usenix.org/conference/usenixsecurity21/presentation/cheng-binlin) (August 2021)  :star:\n*   :notebook: [Packer identification based on metadata signature](https://dl.acm.org/doi/10.1145/3151137.3160687) (December 2017)\n*   :notebook: [Packer identification using hidden Markov model](https://link.springer.com/chapter/10.1007/978-3-319-69456-6_8) (November 2017)\n*   :mortar\\_board: [Packer-complexity analysis in PANDA](https://webthesis.biblio.polito.it/7519/) (January 2018)\n*   :notebook: [PolyPack: An automated online packing service for optimal antivirus evasion](https://dl.acm.org/doi/10.5555/1855876.1855885) (August 2009)\n*   :notebook: [Prevalence and impact of low-entropy packing schemes in the malware ecosystem](https://www.ndss-symposium.org/wp-content/uploads/2020/02/24297.pdf) (February 2020)  :star:\n*   :notebook: [RePEconstruct: Reconstructing binaries with self-modifying code and import address table destruction](https://ieeexplore.ieee.org/document/7888727) (October 2016)\n*   :newspaper: [Research and implementation of packing technology for PE files](https://www.semanticscholar.org/paper/Research-and-Implementation-of-Packing-Technology-Senlin/c973f26f2ac8c1861cc5d714f0d579135fa1491e) (January 2013)\n*   :notebook: [Things you may not know about Android (Un) packers: A systematic study based on whole-system emulation.](https://www.ndss-symposium.org/wp-content/uploads/2018/02/ndss2018_04A-4_Duan_paper.pdf) (February 2018)\n*   :notebook: [A token strengthened encryption packer to prevent reverse engineering PE files](https://ieeexplore.ieee.org/document/7280213) (January 2015)\n*   :notebook: [A unpacking and reconstruction system-agunpacker](https://ieeexplore.ieee.org/document/5374512) (January 2009)\n\n### :package: Packers / After 2010\n\n*   [SimpleDPack (‚≠ê111)](https://github.com/YuriSizuku/SimpleDpack) - A very simple windows EXE packing tool for learning or investigating PE structure.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [sePACKER](https://sourceforge.net/projects/sepacker/) - Simple Executable Packer is compressing executables' code section inorder to decrease size of binary files.\n\n### :wrench: Tools / Before 2000\n\n*   [DSFF (‚≠ê2)](https://github.com/packing-box/python-dsff) - DataSet File Format for exchanging datasets and converting to ARFF (for use with Weka), CSV or Packing-Box's dataset structure.\n*   [ImpREC](https://www.aldeid.com/wiki/ImpREC) - This can be used to repair the import table for packed programs.",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üìÑ <a href=\"https://www.virusbulletin.com/virusbulletin/2010/11/anti-unpacker-tricks-part-fourteen/\" rel=\"noopener noreferrer\">Anti-unpacker tricks - Part 14 (and previous parts)</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://n10info.blogspot.com/2014/06/entropy-and-distinctive-signs-of-packed.html\" rel=\"noopener noreferrer\">Entropy and the distinctive signs of packer PE files</a></li>\n</ul>\n<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üì∞ <a href=\"https://www.semanticscholar.org/paper/The-Application-Research-of-Virtual-Machine-in-Wen-yu/fff04e0073ac2018bff5242919cdca47deacad7a\" rel=\"noopener noreferrer\">The application research of virtual machine in packers</a> (August 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/8301720/\" rel=\"noopener noreferrer\">ByteWise: A case study in neural network obfuscation identification</a> (January 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/9103752\" rel=\"noopener noreferrer\">Classifying packed malware represented as control flow graphs using deep graph convolutional neural network</a> (March 2020)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.researchgate.net/publication/281653855_A_Comparative_Analysis_of_Software_Protection_Schemes\" rel=\"noopener noreferrer\">A comparative analysis of software protection schemes</a> (June 2014)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/8170793\" rel=\"noopener noreferrer\">A control flow graph-based signature for packer identification</a> (October 2017)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/abstract/document/7784628\" rel=\"noopener noreferrer\">Detecting packed executable file: Supervised or anomaly detection method?</a> (August 2016)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-41284-4_10\" rel=\"noopener noreferrer\">Detecting traditional packers, decisively</a> (October 2013)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.blackhat.com/us-17/briefings.html#bot-vs.-bot-for-evading-machine-learning-malware-detection\" rel=\"noopener noreferrer\">Evading machine learning malware detection</a> (July 2017)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"http://ijarcs.info/index.php/Ijarcs/article/view/5526/4622\" rel=\"noopener noreferrer\">Hashing-based encryption and anti-debugger support for packing multiple files into single executable</a> (February 2018)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://iopscience.iop.org/article/10.1088/1757-899X/453/1/012001\" rel=\"noopener noreferrer\">Mal-XT: Higher accuracy hidden-code extraction of packed binary executable</a> (November 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.usenix.org/conference/usenixsecurity21/presentation/cheng-binlin\" rel=\"noopener noreferrer\">Obfuscation-resilient executable payload extraction from packed malware</a> (August 2021)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/3151137.3160687\" rel=\"noopener noreferrer\">Packer identification based on metadata signature</a> (December 2017)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-319-69456-6_8\" rel=\"noopener noreferrer\">Packer identification using hidden Markov model</a> (November 2017)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://webthesis.biblio.polito.it/7519/\" rel=\"noopener noreferrer\">Packer-complexity analysis in PANDA</a> (January 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.5555/1855876.1855885\" rel=\"noopener noreferrer\">PolyPack: An automated online packing service for optimal antivirus evasion</a> (August 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.ndss-symposium.org/wp-content/uploads/2020/02/24297.pdf\" rel=\"noopener noreferrer\">Prevalence and impact of low-entropy packing schemes in the malware ecosystem</a> (February 2020)  ‚≠ê</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/7888727\" rel=\"noopener noreferrer\">RePEconstruct: Reconstructing binaries with self-modifying code and import address table destruction</a> (October 2016)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.semanticscholar.org/paper/Research-and-Implementation-of-Packing-Technology-Senlin/c973f26f2ac8c1861cc5d714f0d579135fa1491e\" rel=\"noopener noreferrer\">Research and implementation of packing technology for PE files</a> (January 2013)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.ndss-symposium.org/wp-content/uploads/2018/02/ndss2018_04A-4_Duan_paper.pdf\" rel=\"noopener noreferrer\">Things you may not know about Android (Un) packers: A systematic study based on whole-system emulation.</a> (February 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/7280213\" rel=\"noopener noreferrer\">A token strengthened encryption packer to prevent reverse engineering PE files</a> (January 2015)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5374512\" rel=\"noopener noreferrer\">A unpacking and reconstruction system-agunpacker</a> (January 2009)</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/YuriSizuku/SimpleDpack\" rel=\"noopener noreferrer\">SimpleDPack (‚≠ê111)</a> - A very simple windows EXE packing tool for learning or investigating PE structure.</li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://sourceforge.net/projects/sepacker/\" rel=\"noopener noreferrer\">sePACKER</a> - Simple Executable Packer is compressing executables' code section inorder to decrease size of binary files.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/packing-box/python-dsff\" rel=\"noopener noreferrer\">DSFF (‚≠ê2)</a> - DataSet File Format for exchanging datasets and converting to ARFF (for use with Weka), CSV or Packing-Box's dataset structure.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.aldeid.com/wiki/ImpREC\" rel=\"noopener noreferrer\">ImpREC</a> - This can be used to repair the import table for packed programs.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/08/27/",
      "title": "Awesome Executable Packing Updates on Aug 27, 2022",
      "_short_title": "Aug 27, 2022",
      "_slug": "2022/08/27/",
      "summary": "1 awesome projects updated on Aug 27, 2022",
      "_filepath": "/content/2022/08/27/README.md",
      "url": "https://www.trackawesomelist.com/2022/08/27/",
      "date_published": "2022-08-27T22:41:10.000Z",
      "date_modified": "2022-08-27T22:41:10.000Z",
      "content_text": "\n\n### :books: Literature / Scientific Research\n\n*   :newspaper: [Malware analysis using multiple API sequence mining control flow graph](https://arxiv.org/abs/1707.02691) (July 2017)",
      "content_html": "<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üì∞ <a href=\"https://arxiv.org/abs/1707.02691\" rel=\"noopener noreferrer\">Malware analysis using multiple API sequence mining control flow graph</a> (July 2017)</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/07/13/",
      "title": "Awesome Executable Packing Updates on Jul 13, 2022",
      "_short_title": "Jul 13, 2022",
      "_slug": "2022/07/13/",
      "summary": "2 awesome projects updated on Jul 13, 2022",
      "_filepath": "/content/2022/07/13/README.md",
      "url": "https://www.trackawesomelist.com/2022/07/13/",
      "date_published": "2022-07-13T22:42:41.000Z",
      "date_modified": "2022-07-13T22:42:41.000Z",
      "content_text": "\n\n### :wrench: Tools / Before 2000\n\n*   [IDR (‚≠ê1k)](https://github.com/crypto2011/IDR) - Interactive Delphi Reconstructor.\n*   [PEdump](https://pedump.me/) - Dump windows PE files using Ruby.",
      "content_html": "<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/crypto2011/IDR\" rel=\"noopener noreferrer\">IDR (‚≠ê1k)</a> - Interactive Delphi Reconstructor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://pedump.me/\" rel=\"noopener noreferrer\">PEdump</a> - Dump windows PE files using Ruby.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/06/01/",
      "title": "Awesome Executable Packing Updates on Jun 01, 2022",
      "_short_title": "Jun 01, 2022",
      "_slug": "2022/06/01/",
      "summary": "26 awesome projects updated on Jun 01, 2022",
      "_filepath": "/content/2022/06/01/README.md",
      "url": "https://www.trackawesomelist.com/2022/06/01/",
      "date_published": "2022-06-01T13:24:17.000Z",
      "date_modified": "2022-06-01T13:24:17.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :earth\\_americas: [About anti-debug tricks](https://anti-debug.checkpoint.com)\n*   :bar\\_chart: [When malware is packing heat](https://www.eurecom.fr/publication/5372)\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [MalwareBazaar](https://bazaar.abuse.ch/browse) - Project operated by abuse.ch aimed to collect and share malware samples, helping IT-security researchers and threat analysts protecting their constituency and customers from cyber threats.\n*   [SAC](https://www.sac.sk/files.php?d=7\\&l=) - Slovak Antivirus Center, non-commercial project of AVIR and ESET companies ; contains packers, detectors and unpackers.\n*   [VirusShare](https://virusshare.com) - Virus online database with more than 44 millions of samples.\n\n### :package: Packers / After 2010\n\n*   [BoxedApp Packer](https://www.boxedapp.com/boxedapppacker)\n*   [VMProtect](https://vmpsoft.com/products/vmprotect) - VMProtect protects code by executing it on a virtual machine with non-standard architecture that makes it extremely difficult to analyze and crack the software.\n*   [Ward (‚≠ê22)](https://github.com/ex0dus-0x/ward) - Simple implementation of an ELF packer that creates stealthy droppers for loading malicious ELFs in-memory.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [ExeFog](https://www.delphibasics.info/home/delphibasicscounterstrikewireleases/exefog11-executablepackerbybagie) - Simple Win32 PE files packer.\n*   [RDMC](https://www.sac.sk/download/pack/rdm006be.zip) - DMC algorithm based packer.\n*   [UPack](https://www.sac.sk/download/pack/upack399.rar) - Compresses Windows PE file.\n\n### :package: Packers / Before 2000\n\n*   [RERP](https://www.sac.sk/download/pack/rerp.rar) - ROSE's EXE Relocation Packer.\n*   [RJCrush](https://www.sac.sk/download/pack/rjc-beta.zip) - EXE and COM files compressor with the ability to compress overlays.\n*   [Shrinker](https://www.sac.sk/download/pack/shrinker.exe) - Compresses (up to 70%) 16 and 32 bit Windows and real mode DOS programs.\n*   [SPack](https://www.sac.sk/download/pack/spack20.zip)\n*   [TinyProg](https://www.sac.sk/download/pack/tinyp39.zip) - EXE and COM programs compressor.\n*   [WinLite](https://www.sac.sk/download/pack/winlite1.zip) - Compresses Windows executables (such as Pklite, Diet or Wwpack) for executables programs under DOS.\n\n### :wrench: Tools / Before 2000\n\n*   [CFF Explorer](https://ntcore.com/?page_id=388) - PE32/64 and .NET editor, part of the Explorer Suite.\n*   [LordPE](https://www.aldeid.com/wiki/LordPE) - PE header viewer, editor and rebuilder.\n*   [MRC](https://mandiant-red-curtain.apponic.com) - (Mandiant Red Curtain) Free software for Incident Responders that assists with the analysis of malware ; it examines executable files (e.g., .exe, .dll, and so on) to determine how suspicious they are based on a set of criteria.\n*   [RTD](https://www.sac.sk/download/pack/rtd_rp24.zip) - Rose Patch - TinyProt/Rosetiny Unpacker.\n*   [RUPP](https://www.sac.sk/download/pack/rupp037.rar) - ROSE SWE UnPaCKER PaCKaGE (for DOS executables only).\n*   [StudPE](http://www.cgsoftlabs.ro/studpe.html) - PE viewer and editor (32/64 bit).\n*   [UU](https://www.sac.sk/download/pack/uu215e.exe) - Universal Unpacker.\n*   [Uundo](https://www.sac.sk/download/pack/uundo.zip) - Universal Undo - Universal Unpacker.\n*   [UUP](https://www.sac.sk/download/pack/uup14.zip) - Universal exe-file UnPacker.",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üåé <a href=\"https://anti-debug.checkpoint.com\" rel=\"noopener noreferrer\">About anti-debug tricks</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.eurecom.fr/publication/5372\" rel=\"noopener noreferrer\">When malware is packing heat</a></li>\n</ul>\n<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://bazaar.abuse.ch/browse\" rel=\"noopener noreferrer\">MalwareBazaar</a> - Project operated by abuse.ch aimed to collect and share malware samples, helping IT-security researchers and threat analysts protecting their constituency and customers from cyber threats.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/files.php?d=7&amp;l=\" rel=\"noopener noreferrer\">SAC</a> - Slovak Antivirus Center, non-commercial project of AVIR and ESET companies ; contains packers, detectors and unpackers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://virusshare.com\" rel=\"noopener noreferrer\">VirusShare</a> - Virus online database with more than 44 millions of samples.</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://www.boxedapp.com/boxedapppacker\" rel=\"noopener noreferrer\">BoxedApp Packer</a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://vmpsoft.com/products/vmprotect\" rel=\"noopener noreferrer\">VMProtect</a> - VMProtect protects code by executing it on a virtual machine with non-standard architecture that makes it extremely difficult to analyze and crack the software.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ex0dus-0x/ward\" rel=\"noopener noreferrer\">Ward (‚≠ê22)</a> - Simple implementation of an ELF packer that creates stealthy droppers for loading malicious ELFs in-memory.</li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://www.delphibasics.info/home/delphibasicscounterstrikewireleases/exefog11-executablepackerbybagie\" rel=\"noopener noreferrer\">ExeFog</a> - Simple Win32 PE files packer.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/rdm006be.zip\" rel=\"noopener noreferrer\">RDMC</a> - DMC algorithm based packer.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/upack399.rar\" rel=\"noopener noreferrer\">UPack</a> - Compresses Windows PE file.</li>\n</ul>\n<h3><p>üì¶ Packers / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/rerp.rar\" rel=\"noopener noreferrer\">RERP</a> - ROSE's EXE Relocation Packer.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/rjc-beta.zip\" rel=\"noopener noreferrer\">RJCrush</a> - EXE and COM files compressor with the ability to compress overlays.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/shrinker.exe\" rel=\"noopener noreferrer\">Shrinker</a> - Compresses (up to 70%) 16 and 32 bit Windows and real mode DOS programs.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/spack20.zip\" rel=\"noopener noreferrer\">SPack</a></li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/tinyp39.zip\" rel=\"noopener noreferrer\">TinyProg</a> - EXE and COM programs compressor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/winlite1.zip\" rel=\"noopener noreferrer\">WinLite</a> - Compresses Windows executables (such as Pklite, Diet or Wwpack) for executables programs under DOS.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://ntcore.com/?page_id=388\" rel=\"noopener noreferrer\">CFF Explorer</a> - PE32/64 and .NET editor, part of the Explorer Suite.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.aldeid.com/wiki/LordPE\" rel=\"noopener noreferrer\">LordPE</a> - PE header viewer, editor and rebuilder.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://mandiant-red-curtain.apponic.com\" rel=\"noopener noreferrer\">MRC</a> - (Mandiant Red Curtain) Free software for Incident Responders that assists with the analysis of malware ; it examines executable files (e.g., .exe, .dll, and so on) to determine how suspicious they are based on a set of criteria.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/rtd_rp24.zip\" rel=\"noopener noreferrer\">RTD</a> - Rose Patch - TinyProt/Rosetiny Unpacker.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/rupp037.rar\" rel=\"noopener noreferrer\">RUPP</a> - ROSE SWE UnPaCKER PaCKaGE (for DOS executables only).</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.cgsoftlabs.ro/studpe.html\" rel=\"noopener noreferrer\">StudPE</a> - PE viewer and editor (32/64 bit).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/uu215e.exe\" rel=\"noopener noreferrer\">UU</a> - Universal Unpacker.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/uundo.zip\" rel=\"noopener noreferrer\">Uundo</a> - Universal Undo - Universal Unpacker.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/uup14.zip\" rel=\"noopener noreferrer\">UUP</a> - Universal exe-file UnPacker.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/05/22/",
      "title": "Awesome Executable Packing Updates on May 22, 2022",
      "_short_title": "May 22, 2022",
      "_slug": "2022/05/22/",
      "summary": "2 awesome projects updated on May 22, 2022",
      "_filepath": "/content/2022/05/22/README.md",
      "url": "https://www.trackawesomelist.com/2022/05/22/",
      "date_published": "2022-05-22T23:39:09.000Z",
      "date_modified": "2022-05-22T23:39:09.000Z",
      "content_text": "\n\n### :wrench: Tools / Before 2000\n\n*   [DynamoRIO](https://dynamorio.org) - Runtime code manipulation system that supports code transformations on any part of a program, while it executes.\n*   [Pin](https://www.intel.com/content/www/us/en/developer/articles/tool/pin-a-dynamic-binary-instrumentation-tool.html) - Dynamic binary instrumentation framework for the IA-32, x86-64 and MIC instruction-set architectures that enables the creation of dynamic program analysis tools.",
      "content_html": "<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://dynamorio.org\" rel=\"noopener noreferrer\">DynamoRIO</a> - Runtime code manipulation system that supports code transformations on any part of a program, while it executes.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.intel.com/content/www/us/en/developer/articles/tool/pin-a-dynamic-binary-instrumentation-tool.html\" rel=\"noopener noreferrer\">Pin</a> - Dynamic binary instrumentation framework for the IA-32, x86-64 and MIC instruction-set architectures that enables the creation of dynamic program analysis tools.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/05/18/",
      "title": "Awesome Executable Packing Updates on May 18, 2022",
      "_short_title": "May 18, 2022",
      "_slug": "2022/05/18/",
      "summary": "5 awesome projects updated on May 18, 2022",
      "_filepath": "/content/2022/05/18/README.md",
      "url": "https://www.trackawesomelist.com/2022/05/18/",
      "date_published": "2022-05-18T19:31:27.000Z",
      "date_modified": "2022-05-18T19:31:27.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :clipboard: [Hyperion: Implementation of a PE-Crypter](https://www.exploit-db.com/docs/english/18849-hyperion-implementation-of-a-pe-crypter.pdf)\n*   :pushpin: [Packer detection tool evaluation (‚≠ê13)](https://github.com/FFRI/PackerDetectionToolEvaluation)\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [FFRI Dataset Scripts (‚≠ê12)](https://github.com/FFRI/ffridataset-scripts) - Make datasets like FFRI Dataset.\n*   [RCE Lab (‚≠ê42)](https://github.com/apuromafo/RCE_Lab) - Crackme's, keygenme's, serialme's ; the \"tuts4you\" folder contains many packed binaries.\n\n### :package: Packers / Before 2000\n\n*   [Morphine (‚≠ê296)](https://github.com/bowlofstew/rootkit.com/blob/master/hf/Morphine27) - Application for PE files encryption.",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üìã <a href=\"https://www.exploit-db.com/docs/english/18849-hyperion-implementation-of-a-pe-crypter.pdf\" rel=\"noopener noreferrer\">Hyperion: Implementation of a PE-Crypter</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://github.com/FFRI/PackerDetectionToolEvaluation\" rel=\"noopener noreferrer\">Packer detection tool evaluation (‚≠ê13)</a></li>\n</ul>\n<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/FFRI/ffridataset-scripts\" rel=\"noopener noreferrer\">FFRI Dataset Scripts (‚≠ê12)</a> - Make datasets like FFRI Dataset.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/apuromafo/RCE_Lab\" rel=\"noopener noreferrer\">RCE Lab (‚≠ê42)</a> - Crackme's, keygenme's, serialme's ; the \"tuts4you\" folder contains many packed binaries.</li>\n</ul>\n<h3><p>üì¶ Packers / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/bowlofstew/rootkit.com/blob/master/hf/Morphine27\" rel=\"noopener noreferrer\">Morphine (‚≠ê296)</a> - Application for PE files encryption.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/05/10/",
      "title": "Awesome Executable Packing Updates on May 10, 2022",
      "_short_title": "May 10, 2022",
      "_slug": "2022/05/10/",
      "summary": "16 awesome projects updated on May 10, 2022",
      "_filepath": "/content/2022/05/10/README.md",
      "url": "https://www.trackawesomelist.com/2022/05/10/",
      "date_published": "2022-05-10T15:45:20.000Z",
      "date_modified": "2022-05-10T15:45:20.000Z",
      "content_text": "\n\n### :books: Literature / Scientific Research\n\n*   :newspaper: [Advanced preprocessing of binary executable files and its usage in retargetable decompilation](https://www.fit.vut.cz/research/publication/10531) (December 2014)\n*   :notebook: [Preprocessing of binary executable files towards retargetable decompilation](https://www.fit.vut.cz/research/publication/10200) (July 2013)\n\n### :package: Packers / After 2010\n\n*   [ELFCrypt (‚≠ê120)](https://github.com/droberson/ELFcrypt) - Simple ELF crypter using RC4 encryption.\n*   [.netshrink](https://www.pelock.com/products/netshrink) - Executable compressor for your Windows or Linux .NET application executable file using LZMA.\n*   [RapidEXE](https://sourceforge.net/projects/rapidexe) - Simple and efficient way to convert a PHP/Python script to a standalone executable.\n\n### :package: Packers / Before 2000\n\n*   [$PIRIT](https://defacto2.net/f/a520164?packer=%24pirit) - COM/EXE executable files polymorphic encryptor.\n\n### :wrench: Tools / Before 2000\n\n*   [Binutils](https://www.gnu.org/software/binutils) - The GNU Binutils are a collection of binary tools for Linux (it namely includes Readelf).\n*   [Eureka](https://web.archive.org/web/20150502154942/http://eureka.cyber-ta.org) - Binary static analysis preparation framework implementing a novel binary unpacking strategy based on statistical bigram analysis and coarse-grained execution tracing.\n*   [.NET Deobfuscator (‚≠ê1.4k)](https://github.com/NotPrab/.NET-Deobfuscator) - List of .NET Deobfuscators and Unpackers.\n*   [PackID (‚≠ê9)](https://github.com/mesaleh/PackiD) - Packer identification multiplatform tool/library using the same database syntax as PEiD.\n*   [PExplorer](http://www.heaventools.com/overview.htm) - Most feature-packed program for inspecting the inner workings of your own software, and more importantly, third party Windows applications and libraries for which you do not have source code.\n*   [PortEx (‚≠ê515)](https://github.com/katjahahn/PortEx) - Java library for static malware analysis of PE files with a focus on PE malformation robustness and anomaly detection.\n*   [PROTECTiON iD](https://web.archive.org/web/20210331144912/https://protectionid.net) - PE file signature-based scanner.\n*   [ProTools](http://protools.narod.ru) - Programmer's Tools, a web site dedicated for all kinds of tools and utilities for the true WinBloze programmer, including packers, crypters, etc.\n*   [ResourceHacker](http://angusj.com/resourcehacker) - Resource editor for 32bit and 64bit Windows applications.\n*   [Winbindex (‚≠ê676)](https://github.com/m417z/winbindex) - An index of Windows binaries, including download links for executables such as EXE, DLL and SYS files.",
      "content_html": "<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üì∞ <a href=\"https://www.fit.vut.cz/research/publication/10531\" rel=\"noopener noreferrer\">Advanced preprocessing of binary executable files and its usage in retargetable decompilation</a> (December 2014)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.fit.vut.cz/research/publication/10200\" rel=\"noopener noreferrer\">Preprocessing of binary executable files towards retargetable decompilation</a> (July 2013)</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/droberson/ELFcrypt\" rel=\"noopener noreferrer\">ELFCrypt (‚≠ê120)</a> - Simple ELF crypter using RC4 encryption.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.pelock.com/products/netshrink\" rel=\"noopener noreferrer\">.netshrink</a> - Executable compressor for your Windows or Linux .NET application executable file using LZMA.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://sourceforge.net/projects/rapidexe\" rel=\"noopener noreferrer\">RapidEXE</a> - Simple and efficient way to convert a PHP/Python script to a standalone executable.</li>\n</ul>\n<h3><p>üì¶ Packers / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=%24pirit\" rel=\"noopener noreferrer\">$PIRIT</a> - COM/EXE executable files polymorphic encryptor.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://www.gnu.org/software/binutils\" rel=\"noopener noreferrer\">Binutils</a> - The GNU Binutils are a collection of binary tools for Linux (it namely includes Readelf).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20150502154942/http://eureka.cyber-ta.org\" rel=\"noopener noreferrer\">Eureka</a> - Binary static analysis preparation framework implementing a novel binary unpacking strategy based on statistical bigram analysis and coarse-grained execution tracing.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/NotPrab/.NET-Deobfuscator\" rel=\"noopener noreferrer\">.NET Deobfuscator (‚≠ê1.4k)</a> - List of .NET Deobfuscators and Unpackers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mesaleh/PackiD\" rel=\"noopener noreferrer\">PackID (‚≠ê9)</a> - Packer identification multiplatform tool/library using the same database syntax as PEiD.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.heaventools.com/overview.htm\" rel=\"noopener noreferrer\">PExplorer</a> - Most feature-packed program for inspecting the inner workings of your own software, and more importantly, third party Windows applications and libraries for which you do not have source code.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/katjahahn/PortEx\" rel=\"noopener noreferrer\">PortEx (‚≠ê515)</a> - Java library for static malware analysis of PE files with a focus on PE malformation robustness and anomaly detection.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20210331144912/https://protectionid.net\" rel=\"noopener noreferrer\">PROTECTiON iD</a> - PE file signature-based scanner.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://protools.narod.ru\" rel=\"noopener noreferrer\">ProTools</a> - Programmer's Tools, a web site dedicated for all kinds of tools and utilities for the true WinBloze programmer, including packers, crypters, etc.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://angusj.com/resourcehacker\" rel=\"noopener noreferrer\">ResourceHacker</a> - Resource editor for 32bit and 64bit Windows applications.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/m417z/winbindex\" rel=\"noopener noreferrer\">Winbindex (‚≠ê676)</a> - An index of Windows binaries, including download links for executables such as EXE, DLL and SYS files.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/04/22/",
      "title": "Awesome Executable Packing Updates on Apr 22, 2022",
      "_short_title": "Apr 22, 2022",
      "_slug": "2022/04/22/",
      "summary": "5 awesome projects updated on Apr 22, 2022",
      "_filepath": "/content/2022/04/22/README.md",
      "url": "https://www.trackawesomelist.com/2022/04/22/",
      "date_published": "2022-04-22T23:45:49.000Z",
      "date_modified": "2022-04-22T23:45:49.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :pushpin: [Anti debugging protection techniques with examples](https://www.apriorit.com/dev-blog/367-anti-reverse-engineering-protection-techniques-to-use-before-releasing-software)\n\n### :package: Packers / After 2010\n\n*   [PESpin](http://downloads.fyxm.net/PESpin-95477.html)\n\n### :wrench: Tools / Before 2000\n\n*   [Capstone](https://www.capstone-engine.org) - Lightweight multi-platform, multi-architecture disassembly framework.\n*   [PANDA (‚≠ê2.6k)](https://github.com/panda-re/panda) - Platform for Architecture-Neutral Dynamic Analysis.\n*   [ShowStopper (‚≠ê211)](https://github.com/CheckPointSW/showstopper) - Tool to help malware researchers explore and test anti-debug techniques or verify debugger plugins or other solutions that clash with standard anti-debug methods.",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üìå <a href=\"https://www.apriorit.com/dev-blog/367-anti-reverse-engineering-protection-techniques-to-use-before-releasing-software\" rel=\"noopener noreferrer\">Anti debugging protection techniques with examples</a></li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"http://downloads.fyxm.net/PESpin-95477.html\" rel=\"noopener noreferrer\">PESpin</a></li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://www.capstone-engine.org\" rel=\"noopener noreferrer\">Capstone</a> - Lightweight multi-platform, multi-architecture disassembly framework.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/panda-re/panda\" rel=\"noopener noreferrer\">PANDA (‚≠ê2.6k)</a> - Platform for Architecture-Neutral Dynamic Analysis.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/CheckPointSW/showstopper\" rel=\"noopener noreferrer\">ShowStopper (‚≠ê211)</a> - Tool to help malware researchers explore and test anti-debug techniques or verify debugger plugins or other solutions that clash with standard anti-debug methods.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/04/15/",
      "title": "Awesome Executable Packing Updates on Apr 15, 2022",
      "_short_title": "Apr 15, 2022",
      "_slug": "2022/04/15/",
      "summary": "15 awesome projects updated on Apr 15, 2022",
      "_filepath": "/content/2022/04/15/README.md",
      "url": "https://www.trackawesomelist.com/2022/04/15/",
      "date_published": "2022-04-15T10:53:26.000Z",
      "date_modified": "2022-04-15T22:26:58.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :earth\\_americas: [a.out (FreeBSD manual pages)](https://www.freebsd.org/cgi/man.cgi?a.out\\(5\\))\n*   :earth\\_americas: [elf (FreeBSD manual pages)](https://www.freebsd.org/cgi/man.cgi?elf\\(5\\))\n*   :earth\\_americas: [FatELF: Universal binaries for Linux (HALTED)](https://icculus.org/fatelf)\n*   :pushpin: [Mach-O - A look at apple executable files](https://redmaple.tech/blogs/macho-files)\n*   :earth\\_americas: [Mach-O file format reference (‚≠ê840)](https://github.com/aidansteele/osx-abi-macho-file-format-reference)\n*   :pushpin: [Parsing mach-O files](https://lowlevelbits.org/parsing-mach-o-files)\n\n### :books: Literature / Scientific Research\n\n*   :notebook: [DexHunter: Toward extracting hidden code from packed Android applications](https://link.springer.com/chapter/10.1007/978-3-319-24177-7_15) (September 2015)\n*   :mortar\\_board: [Robust static analysis of portable executable malware](https://repo.zenk-security.com/Virus-Infections-Detections-Preventions/Robust%20Static%20Analysis%20ofPortable%20ExecutableMalware.pdf) (December 2014)\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [MaleX (‚≠ê46)](https://github.com/Mayachitra-Inc/MaleX) - Curated dataset of malware and benign Windows executable samples for malware researchers containing 1,044,394 Windows executable binaries and corresponding image representations with 864,669 labelled as malware and 179,725 as benign.\n\n### :package: Packers / Before 2000\n\n*   [AINEXE](https://defacto2.net/f/a520164?packer=ainexe) - DOS executable packer (part of the AIN Archiver suite).\n*   [Crunch](https://defacto2.net/f/a520164?packer=crunch) - File encryptor for COM and EXE files.\n\n### :wrench: Tools / Before 2000\n\n*   [ChkEXE](https://defacto2.net/f/a91dea6?dosmachine=svga\\&dosspeed=max) - Identifies almost any EXE/COM packer, crypter or protector.\n*   [PEview](http://wjradburn.com/software) - Provides a quick and easy way to view the structure and content of 32-bit Portable Executable (PE) and Component Object File Format (COFF) files.\n*   [REMnux](https://remnux.org) - Linux toolkit for reverse-engineering and analyzing malicious software.\n*   [TrID](https://mark0.net/soft-trid-e.html) - Utility for identifying file types from their binary signatures.",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üåé <a href=\"https://www.freebsd.org/cgi/man.cgi?a.out(5)\" rel=\"noopener noreferrer\">a.out (FreeBSD manual pages)</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://www.freebsd.org/cgi/man.cgi?elf(5)\" rel=\"noopener noreferrer\">elf (FreeBSD manual pages)</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://icculus.org/fatelf\" rel=\"noopener noreferrer\">FatELF: Universal binaries for Linux (HALTED)</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://redmaple.tech/blogs/macho-files\" rel=\"noopener noreferrer\">Mach-O - A look at apple executable files</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://github.com/aidansteele/osx-abi-macho-file-format-reference\" rel=\"noopener noreferrer\">Mach-O file format reference (‚≠ê840)</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://lowlevelbits.org/parsing-mach-o-files\" rel=\"noopener noreferrer\">Parsing mach-O files</a></li>\n</ul>\n<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-319-24177-7_15\" rel=\"noopener noreferrer\">DexHunter: Toward extracting hidden code from packed Android applications</a> (September 2015)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://repo.zenk-security.com/Virus-Infections-Detections-Preventions/Robust%20Static%20Analysis%20ofPortable%20ExecutableMalware.pdf\" rel=\"noopener noreferrer\">Robust static analysis of portable executable malware</a> (December 2014)</li>\n</ul>\n<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Mayachitra-Inc/MaleX\" rel=\"noopener noreferrer\">MaleX (‚≠ê46)</a> - Curated dataset of malware and benign Windows executable samples for malware researchers containing 1,044,394 Windows executable binaries and corresponding image representations with 864,669 labelled as malware and 179,725 as benign.</li>\n</ul>\n<h3><p>üì¶ Packers / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=ainexe\" rel=\"noopener noreferrer\">AINEXE</a> - DOS executable packer (part of the AIN Archiver suite).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=crunch\" rel=\"noopener noreferrer\">Crunch</a> - File encryptor for COM and EXE files.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://defacto2.net/f/a91dea6?dosmachine=svga&amp;dosspeed=max\" rel=\"noopener noreferrer\">ChkEXE</a> - Identifies almost any EXE/COM packer, crypter or protector.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://wjradburn.com/software\" rel=\"noopener noreferrer\">PEview</a> - Provides a quick and easy way to view the structure and content of 32-bit Portable Executable (PE) and Component Object File Format (COFF) files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://remnux.org\" rel=\"noopener noreferrer\">REMnux</a> - Linux toolkit for reverse-engineering and analyzing malicious software.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://mark0.net/soft-trid-e.html\" rel=\"noopener noreferrer\">TrID</a> - Utility for identifying file types from their binary signatures.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/04/01/",
      "title": "Awesome Executable Packing Updates on Apr 01, 2022",
      "_short_title": "Apr 01, 2022",
      "_slug": "2022/04/01/",
      "summary": "14 awesome projects updated on Apr 01, 2022",
      "_filepath": "/content/2022/04/01/README.md",
      "url": "https://www.trackawesomelist.com/2022/04/01/",
      "date_published": "2022-04-01T21:49:28.000Z",
      "date_modified": "2022-04-01T21:49:28.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :bar\\_chart: [Virtual machine obfuscation](https://compil2019.minesparis.psl.eu/wp-content/uploads/2019/02/BeatriceCreusillet-Obfuscation-quarkslab.pdf)\n\n### :package: Packers / Between 2000 and 2010\n\n*   [RSCC](https://defacto2.net/f/a520164?packer=rscc) - ROSE Super COM Crypt ; polymorph cryptor for files greater than 300-400B and smaller than 60kB.\n*   [RUCC](https://defacto2.net/f/a520164?packer=rucc) - ROSE Ultra COM Compressor ; COM and EXE compression utility based on 624.\n\n### :package: Packers / Before 2000\n\n*   [COMProtector](https://defacto2.net/f/a520164?packer=comprotector) - Adds a security envelope around DOS .COM files by randomly encrypting it and adding several anti-debugging tricks.\n*   [EXELOCK 666](https://defacto2.net/f/a520164?packer=exelock666) - Utility for protecting .EXE files so no lamers can hack out the copyright.\n*   [LzExe](https://defacto2.net/f/a520164?packer=lzexe) - MS-DOS executable file compressor.\n*   [Mask](https://defacto2.net/f/a520164?packer=mask) - Tool that prevents COM program from being cracked by using encryption and anti-debugging tricks.\n*   [Mess](https://defacto2.net/f/a520164?packer=mess) - This tool does the same as HackStop, with the exception that it is freeware for non-commercial use.\n*   [Neolite](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/win/neolte20.zip) - Compresses Windows 32-bit EXE files and DLLs.\n*   [PKlite](https://defacto2.net/f/a520164?packer=pklite) - Easy-to-use file compression program for compressing DOS and Windows executable files.\n\n### :wrench: Tools / Before 2000\n\n*   [Angr (‚≠ê8k)](https://github.com/angr/angr) - Platform-agnostic binary analysis framework.\n*   [Language 2000](https://farrokhi.net/language) - Ultimate compiler detection utility.\n*   [PEscan](https://tzworks.com/prototype_page.php?proto_id=15) - CLI tool to scan PE files to identify how they were constructed.\n*   [Triton (‚≠ê3.8k)](https://github.com/jonathansalwan/Triton) - Dynamic binary analysis library.",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üìä <a href=\"https://compil2019.minesparis.psl.eu/wp-content/uploads/2019/02/BeatriceCreusillet-Obfuscation-quarkslab.pdf\" rel=\"noopener noreferrer\">Virtual machine obfuscation</a></li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=rscc\" rel=\"noopener noreferrer\">RSCC</a> - ROSE Super COM Crypt ; polymorph cryptor for files greater than 300-400B and smaller than 60kB.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=rucc\" rel=\"noopener noreferrer\">RUCC</a> - ROSE Ultra COM Compressor ; COM and EXE compression utility based on 624.</li>\n</ul>\n<h3><p>üì¶ Packers / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=comprotector\" rel=\"noopener noreferrer\">COMProtector</a> - Adds a security envelope around DOS .COM files by randomly encrypting it and adding several anti-debugging tricks.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=exelock666\" rel=\"noopener noreferrer\">EXELOCK 666</a> - Utility for protecting .EXE files so no lamers can hack out the copyright.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=lzexe\" rel=\"noopener noreferrer\">LzExe</a> - MS-DOS executable file compressor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=mask\" rel=\"noopener noreferrer\">Mask</a> - Tool that prevents COM program from being cracked by using encryption and anti-debugging tricks.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=mess\" rel=\"noopener noreferrer\">Mess</a> - This tool does the same as HackStop, with the exception that it is freeware for non-commercial use.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/win/neolte20.zip\" rel=\"noopener noreferrer\">Neolite</a> - Compresses Windows 32-bit EXE files and DLLs.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=pklite\" rel=\"noopener noreferrer\">PKlite</a> - Easy-to-use file compression program for compressing DOS and Windows executable files.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/angr/angr\" rel=\"noopener noreferrer\">Angr (‚≠ê8k)</a> - Platform-agnostic binary analysis framework.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://farrokhi.net/language\" rel=\"noopener noreferrer\">Language 2000</a> - Ultimate compiler detection utility.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://tzworks.com/prototype_page.php?proto_id=15\" rel=\"noopener noreferrer\">PEscan</a> - CLI tool to scan PE files to identify how they were constructed.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/jonathansalwan/Triton\" rel=\"noopener noreferrer\">Triton (‚≠ê3.8k)</a> - Dynamic binary analysis library.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/03/31/",
      "title": "Awesome Executable Packing Updates on Mar 31, 2022",
      "_short_title": "Mar 31, 2022",
      "_slug": "2022/03/31/",
      "summary": "48 awesome projects updated on Mar 31, 2022",
      "_filepath": "/content/2022/03/31/README.md",
      "url": "https://www.trackawesomelist.com/2022/03/31/",
      "date_published": "2022-03-31T21:32:31.000Z",
      "date_modified": "2022-03-31T21:32:31.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :bar\\_chart: [Android packers: Separating from the pack](https://www.fortiguard.com/events/759/2014-06-12-android-packers-separating-from-the-pack)\n*   :bar\\_chart: [API deobfuscator: Resolving obfuscated API functions in modern packers](https://www.blackhat.com/docs/us-15/materials/us-15-Choi-API-Deobfuscator-Resolving-Obfuscated-API-Functions-In-Modern-Packers.pdf)\n*   :bar\\_chart: [The art of unpacking](https://www.blackhat.com/presentations/bh-usa-07/Yason/Whitepaper/bh-usa-07-yason-WP.pdf)\n*   :earth\\_americas: [COM binary format](https://wiki.osdev.org/COM)\n*   :bar\\_chart: [Dynamic binary analysis and obfuscated codes](https://triton.quarkslab.com/files/sthack2016-rthomas-jsalwan.pdf)\n*   :bar\\_chart: [Mach-O internals](https://yossarian.net/res/pub/macho-internals/macho-internals.pdf)\n*   :bar\\_chart: [One packer to rule them all: Empirical identification, comparison and circumvention of current antivirus detection techniques](https://www.blackhat.com/docs/us-14/materials/us-14-Mesbahi-One-Packer-To-Rule-Them-All-WP.pdf)\n*   :bar\\_chart: [Runtime packers: The hidden problem?](https://www.blackhat.com/presentations/bh-usa-06/BH-US-06-Morgenstern.pdf)\n*   :bar\\_chart: [TitanMist: Your first step to reversing nirvana](https://www.reversinglabs.com/blackhat/TitanMist_BlackHat-USA-10-Slides.pdf)\n*   :pushpin: [Tuts 4 you - UnPackMe (.NET)](https://forum.tuts4you.com/forum/155-unpackme-net)\n*   :pushpin: [Tuts 4 you | unpackme](https://forum.tuts4you.com/forum/147-unpackme)\n*   :bar\\_chart: [We can still crack you! General unpacking method for Android Packer (NO ROOT)](https://www.blackhat.com/asia-15/briefings.html#we-can-still-crack-you-general-unpacking-method-for-android-packer-no-root)\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [Dataset of Packed ELF (‚≠ê19)](https://github.com/dhondta/dataset-packed-elf) - Dataset of packed ELF samples.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [HackStop](https://defacto2.net/f/a520164?packer=hs) - EXE and COM programs encrypter and protector.\n*   [UPX-Scrambler](https://defacto2.net/f/a520164?packer=upxs) - Scrambler for files packed with UPX (up to 1.06) so that they cannot be unpacked with the '-d' option.\n\n### :package: Packers / Before 2000\n\n*   [ABK Scrambler](https://defacto2.net/f/a520164?packer=abk-scrambler) - COM file scrambler and protector recoded from ABKprot.\n*   [AEP](https://defacto2.net/f/a520164?packer=aep) - Addition Encode-Protective for COM and EXE file.\n*   [BIN-Lock](https://defacto2.net/f/a520164?packer=bin-lock) - COM file scrambler for preventing reverse engineering.\n*   [BitLok](https://defacto2.net/f/a520164?packer=bitlok) - COM and EXE file protector.\n*   [C0NtRiVER](https://defacto2.net/f/a520164?packer=c0ntriver) - COM file encryptor.\n*   [CC Pro](https://defacto2.net/f/a520164?packer=ccpro) - COM and EXE executable file compression utility.\n*   [CrackStop](https://defacto2.net/f/a520164?packer=crackstop) - Tool that creates a security  envelope around a DOS EXE file to protect it against crackers.\n*   [ExeGuard](https://defacto2.net/f/a520164?packer=exeguard) - DOS EXE files free protector using anti-debugging ticks to prevent hacking, analysis and unpacking.\n*   [FSE](https://defacto2.net/f/a520164?packer=fse) - Final Fantasy Security Envelope freeware for protecting COM and EXE progams.\n*   [Gardian Angel](https://defacto2.net/f/a520164?packer=gardian-angel) - COM and EXE encrypter and protector using a variety of anti-debugging tricks.\n*   [JMCryptExe](https://defacto2.net/f/a520164?packer=jmce) - DOS EXE encrypter.\n*   [PE-Protector](https://web.archive.org/web/20030324043555/https://www.exetools.com/files/protectors/win/pe-protector10.zip) - Encrypter/protector for Windows 9x/ME to protect executable files PEagainst reverse engineering or cracking with a very strong protection.\n*   [Scorpion](https://defacto2.net/f/a520164?packer=scorpion) - EXE and COM file encrypter and protector.\n*   [TRAP](https://defacto2.net/f/a520164?packer=trap) - EXE and COM files encrypter and protector.\n*   [WWPack](https://defacto2.net/f/a520164?packer=wwpack) - Squeezes EXE files, compresses relocation tables, optimizes headers, protects EXE files from hacking.\n*   [XE](https://defacto2.net/f/a520164?packer=xe) - PE32 image file packer and rebuilder.\n*   [XorCopy](https://defacto2.net/f/a520164?packer=xorcopy) - COM file XOR-based encrypter.\n*   [XORER](https://defacto2.net/f/a520164?packer=xorer) - COM file XOR-based encrypter.\n*   [XPack](https://defacto2.net/f/a520164?packer=xpack) - EXE/COM/SYS executable file compressor.\n\n### :wrench: Tools / Before 2000\n\n*   [COM2EXE](https://defacto2.net/f/a520164?tool=com2exe) - Free tool for converting COM files to EXE format.\n*   [Defacto2 Analyzers Archive](https://defacto2.net/f/aa2e6ec) - Collection of 60 binary files analysers for MS-DOS and Windows32 from the 1990s and the 2000s.\n*   [Defacto2 Packers Archive](https://defacto2.net/f/a520164) - Collection of 460 binary and data file packers for MS-DOS and Windows32 from the 1990s and 2000s.\n*   [Defacto2 Unpackers Archive](https://defacto2.net/f/a218ab4) - Collection of 152 binary files unpackers for MS-DOS and Windows 32 from the 1990s and 2000s.\n*   [ExeScan](https://defacto2.net/f/ae2c42e) - Executable file analyzer which detects the most famous  EXE/COM Protectors, Packers, Converters and compilers.\n*   [GetTyp](https://www.helger.com/gt/gt.htm) - File format detection program for DOS based on special strings and byte code.\n*   [LIEF (‚≠ê4.9k)](https://github.com/lief-project/LIEF) - Library to Instrument Executable Formats ; Python package for parsing PE, ELF, Mach-O and DEX formats, modifying and rebuilding executables.\n*   [PCjs](https://www.pcjs.org) - PCjs uses JavaScript to recreate the IBM PC experience, using original ROMs, CPUs running at their original speeds, and early IBM video cards and monitors.\n*   [PETools (‚≠ê1.1k)](https://github.com/petoolse/petools) - Old-school reverse engineering tool (with a long history since 2002) for manipulating PE files.\n*   [Reko (‚≠ê2.3k)](https://github.com/uxmal/reko) - Free decompiler for machine code binaries.\n*   [RetDec (‚≠ê8.3k)](https://github.com/avast/retdec) - Retargetable machine-code decompiler based on LLVM.\n*   [SAFE](https://github.com/packing-box/awesome-executable-packing/blob/main/README.md/mailto:mihai@cs.wisc.edu) - Static Analyzer For Executables (available on demand).\n*   [Tuts 4 You](https://tuts4you.com) - Non-commercial, independent community dedicated to the sharing of knowledge and information on reverse code engineering.\n*   [UnpacMe](https://www.unpac.me) - Automated malware unpacking service.",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üìä <a href=\"https://www.fortiguard.com/events/759/2014-06-12-android-packers-separating-from-the-pack\" rel=\"noopener noreferrer\">Android packers: Separating from the pack</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.blackhat.com/docs/us-15/materials/us-15-Choi-API-Deobfuscator-Resolving-Obfuscated-API-Functions-In-Modern-Packers.pdf\" rel=\"noopener noreferrer\">API deobfuscator: Resolving obfuscated API functions in modern packers</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.blackhat.com/presentations/bh-usa-07/Yason/Whitepaper/bh-usa-07-yason-WP.pdf\" rel=\"noopener noreferrer\">The art of unpacking</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://wiki.osdev.org/COM\" rel=\"noopener noreferrer\">COM binary format</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://triton.quarkslab.com/files/sthack2016-rthomas-jsalwan.pdf\" rel=\"noopener noreferrer\">Dynamic binary analysis and obfuscated codes</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://yossarian.net/res/pub/macho-internals/macho-internals.pdf\" rel=\"noopener noreferrer\">Mach-O internals</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.blackhat.com/docs/us-14/materials/us-14-Mesbahi-One-Packer-To-Rule-Them-All-WP.pdf\" rel=\"noopener noreferrer\">One packer to rule them all: Empirical identification, comparison and circumvention of current antivirus detection techniques</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.blackhat.com/presentations/bh-usa-06/BH-US-06-Morgenstern.pdf\" rel=\"noopener noreferrer\">Runtime packers: The hidden problem?</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.reversinglabs.com/blackhat/TitanMist_BlackHat-USA-10-Slides.pdf\" rel=\"noopener noreferrer\">TitanMist: Your first step to reversing nirvana</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://forum.tuts4you.com/forum/155-unpackme-net\" rel=\"noopener noreferrer\">Tuts 4 you - UnPackMe (.NET)</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://forum.tuts4you.com/forum/147-unpackme\" rel=\"noopener noreferrer\">Tuts 4 you | unpackme</a></li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.blackhat.com/asia-15/briefings.html#we-can-still-crack-you-general-unpacking-method-for-android-packer-no-root\" rel=\"noopener noreferrer\">We can still crack you! General unpacking method for Android Packer (NO ROOT)</a></li>\n</ul>\n<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/dhondta/dataset-packed-elf\" rel=\"noopener noreferrer\">Dataset of Packed ELF (‚≠ê19)</a> - Dataset of packed ELF samples.</li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=hs\" rel=\"noopener noreferrer\">HackStop</a> - EXE and COM programs encrypter and protector.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=upxs\" rel=\"noopener noreferrer\">UPX-Scrambler</a> - Scrambler for files packed with UPX (up to 1.06) so that they cannot be unpacked with the '-d' option.</li>\n</ul>\n<h3><p>üì¶ Packers / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=abk-scrambler\" rel=\"noopener noreferrer\">ABK Scrambler</a> - COM file scrambler and protector recoded from ABKprot.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=aep\" rel=\"noopener noreferrer\">AEP</a> - Addition Encode-Protective for COM and EXE file.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=bin-lock\" rel=\"noopener noreferrer\">BIN-Lock</a> - COM file scrambler for preventing reverse engineering.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=bitlok\" rel=\"noopener noreferrer\">BitLok</a> - COM and EXE file protector.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=c0ntriver\" rel=\"noopener noreferrer\">C0NtRiVER</a> - COM file encryptor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=ccpro\" rel=\"noopener noreferrer\">CC Pro</a> - COM and EXE executable file compression utility.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=crackstop\" rel=\"noopener noreferrer\">CrackStop</a> - Tool that creates a security  envelope around a DOS EXE file to protect it against crackers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=exeguard\" rel=\"noopener noreferrer\">ExeGuard</a> - DOS EXE files free protector using anti-debugging ticks to prevent hacking, analysis and unpacking.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=fse\" rel=\"noopener noreferrer\">FSE</a> - Final Fantasy Security Envelope freeware for protecting COM and EXE progams.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=gardian-angel\" rel=\"noopener noreferrer\">Gardian Angel</a> - COM and EXE encrypter and protector using a variety of anti-debugging tricks.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=jmce\" rel=\"noopener noreferrer\">JMCryptExe</a> - DOS EXE encrypter.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20030324043555/https://www.exetools.com/files/protectors/win/pe-protector10.zip\" rel=\"noopener noreferrer\">PE-Protector</a> - Encrypter/protector for Windows 9x/ME to protect executable files PEagainst reverse engineering or cracking with a very strong protection.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=scorpion\" rel=\"noopener noreferrer\">Scorpion</a> - EXE and COM file encrypter and protector.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=trap\" rel=\"noopener noreferrer\">TRAP</a> - EXE and COM files encrypter and protector.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=wwpack\" rel=\"noopener noreferrer\">WWPack</a> - Squeezes EXE files, compresses relocation tables, optimizes headers, protects EXE files from hacking.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=xe\" rel=\"noopener noreferrer\">XE</a> - PE32 image file packer and rebuilder.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=xorcopy\" rel=\"noopener noreferrer\">XorCopy</a> - COM file XOR-based encrypter.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=xorer\" rel=\"noopener noreferrer\">XORER</a> - COM file XOR-based encrypter.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?packer=xpack\" rel=\"noopener noreferrer\">XPack</a> - EXE/COM/SYS executable file compressor.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164?tool=com2exe\" rel=\"noopener noreferrer\">COM2EXE</a> - Free tool for converting COM files to EXE format.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/aa2e6ec\" rel=\"noopener noreferrer\">Defacto2 Analyzers Archive</a> - Collection of 60 binary files analysers for MS-DOS and Windows32 from the 1990s and the 2000s.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a520164\" rel=\"noopener noreferrer\">Defacto2 Packers Archive</a> - Collection of 460 binary and data file packers for MS-DOS and Windows32 from the 1990s and 2000s.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/a218ab4\" rel=\"noopener noreferrer\">Defacto2 Unpackers Archive</a> - Collection of 152 binary files unpackers for MS-DOS and Windows 32 from the 1990s and 2000s.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://defacto2.net/f/ae2c42e\" rel=\"noopener noreferrer\">ExeScan</a> - Executable file analyzer which detects the most famous  EXE/COM Protectors, Packers, Converters and compilers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.helger.com/gt/gt.htm\" rel=\"noopener noreferrer\">GetTyp</a> - File format detection program for DOS based on special strings and byte code.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/lief-project/LIEF\" rel=\"noopener noreferrer\">LIEF (‚≠ê4.9k)</a> - Library to Instrument Executable Formats ; Python package for parsing PE, ELF, Mach-O and DEX formats, modifying and rebuilding executables.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.pcjs.org\" rel=\"noopener noreferrer\">PCjs</a> - PCjs uses JavaScript to recreate the IBM PC experience, using original ROMs, CPUs running at their original speeds, and early IBM video cards and monitors.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/petoolse/petools\" rel=\"noopener noreferrer\">PETools (‚≠ê1.1k)</a> - Old-school reverse engineering tool (with a long history since 2002) for manipulating PE files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/uxmal/reko\" rel=\"noopener noreferrer\">Reko (‚≠ê2.3k)</a> - Free decompiler for machine code binaries.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/avast/retdec\" rel=\"noopener noreferrer\">RetDec (‚≠ê8.3k)</a> - Retargetable machine-code decompiler based on LLVM.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/packing-box/awesome-executable-packing/blob/main/README.md/mailto:mihai@cs.wisc.edu\" rel=\"noopener noreferrer\">SAFE</a> - Static Analyzer For Executables (available on demand).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://tuts4you.com\" rel=\"noopener noreferrer\">Tuts 4 You</a> - Non-commercial, independent community dedicated to the sharing of knowledge and information on reverse code engineering.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.unpac.me\" rel=\"noopener noreferrer\">UnpacMe</a> - Automated malware unpacking service.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/03/20/",
      "title": "Awesome Executable Packing Updates on Mar 20, 2022",
      "_short_title": "Mar 20, 2022",
      "_slug": "2022/03/20/",
      "summary": "29 awesome projects updated on Mar 20, 2022",
      "_filepath": "/content/2022/03/20/README.md",
      "url": "https://www.trackawesomelist.com/2022/03/20/",
      "date_published": "2022-03-20T09:16:23.000Z",
      "date_modified": "2022-03-20T09:16:23.000Z",
      "content_text": "\n\n### :books: Literature / Documentation\n\n*   :earth\\_americas: [A.out binary format](https://wiki.osdev.org/A.out)\n*   :pushpin: [Cloak and dagger: Unpacking hidden malware attacks](https://symantec-enterprise-blogs.security.com/blogs/expert-perspectives/unpacking-hidden-malware-attacks)\n*   :earth\\_americas: [Common object file format (COFF)](https://wiki.osdev.org/COFF)\n*   :earth\\_americas: [Comparison of executable file formats](https://en.wikipedia.org/wiki/Comparison_of_executable_file_formats)\n*   :earth\\_americas: [Executable and linkable format (ELF)](https://wiki.osdev.org/ELF)\n*   :clipboard: [Executable and linking format (ELF) specification](https://refspecs.linuxfoundation.org/elf/elf.pdf)\n*   :earth\\_americas: [Executable file formats](https://docs.fileformat.com/executable)\n*   :earth\\_americas: [MZ disk operating system (DOS)](https://wiki.osdev.org/MZ)\n*   :scroll: [One packer to rule them all: Empirical identification, comparison and circumvention of current antivirus detection techniques](https://www.blackhat.com/docs/us-14/materials/us-14-Mesbahi-One-Packer-To-Rule-Them-All.pdf)\n*   :scroll: [PinDemonium: A DBI-based generic unpacker for Windows executables](https://www.blackhat.com/docs/us-16/materials/us-16-Mariani-Pindemonium-A-Dbi-Based-Generic-Unpacker-For-Windows-Executables-wp.pdf)\n*   :earth\\_americas: [Portable executable (PE)](https://wiki.osdev.org/PE)\n*   :clipboard: [Win32 portable executable packing uncovered](https://securitylabs.websense.com/content/Assets/HistoryofPackingTechnology.pdf)\n*   :pushpin: [Writing a simple PE packer in detail (‚≠ê15)](https://github.com/levanvn/Packer_Simple-1)\n\n### :books: Literature / Scientific Research\n\n*   :newspaper: [Absent extreme learning machine algorithm with application to packed executable identification](https://link.springer.com/article/10.1007%2Fs00521-014-1558-4) (January 2016)\n*   :newspaper: [An accurate packer identification method using support vector machine](https://www.jstage.jst.go.jp/article/transfun/E97.A/1/E97.A_253/_article) (January 2014)\n*   :newspaper: [Automatic analysis of malware behavior using machine learning](https://dl.acm.org/doi/10.5555/2011216.2011217) (December 2011)\n*   :newspaper: [BinStat tool for recognition of packed executables](http://www.ijofcs.org/abstract-v06n1-pp03.html) (September 2010)\n*   :newspaper: [Classification of packed executables for accurate computer virus detection](http://www.sciencedirect.com/science/article/pii/S0167865508002110) (October 2008)\n*   :newspaper: [An efficient block-discriminant identification of packed malware](https://link.springer.com/article/10.1007%2Fs12046-015-0399-x) (August 2015)\n*   :newspaper: [ELF-Miner: Using structural knowledge and data mining methods to detect new (Linux) malicious executables](https://dl.acm.org/doi/10.5555/2150963.2150968) (March 2012)\n*   :newspaper: [A learning model to detect maliciousness of portable executable using integrated feature set](https://www.sciencedirect.com/science/article/pii/S1319157817300149) (January 2017)\n*   :newspaper: [Malware analysis using visualized images and entropy graphs](https://link.springer.com/article/10.1007%2Fs10207-014-0242-0) (February 2015)\n*   :newspaper: [Obfuscation: The hidden malware](https://ieeexplore.ieee.org/document/5975134) (August 2011)\n*   :newspaper: [On the adoption of anomaly detection for packed executable filtering](https://www.sciencedirect.com/science/article/pii/S0167404814000522?via%3Dihub) (June 2014)\n*   :newspaper: [An original entry point detection method with candidate-sorting for more effective generic unpacking](https://www.jstage.jst.go.jp/article/transinf/E98.D/4/E98.D_2014EDP7268/_article) (January 2015)\n*   :newspaper: [Packer analysis report debugging and unpacking the NsPack 3.4 and 3.7 packer](https://www.sans.org/reading-room/whitepapers/malicious/packer-analysis-report-debugging-unpacking-nspack-34-37-packer-33428) (June 2010)\n*   :newspaper: [Secure and advanced unpacking using computer emulation](https://link.springer.com/article/10.1007%2Fs11416-007-0046-0) (August 2007)\n*   :newspaper: [Two techniques for detecting packed portable executable files](https://ieeexplore.ieee.org/document/6636333) (June 2013)\n*   :newspaper: [Unpacking techniques and tools in malware analysis](https://www.scientific.net/AMM.198-199.343) (September 2012)",
      "content_html": "<h3><p>üìö Literature / Documentation</p>\n</h3>\n<ul>\n<li>üåé <a href=\"https://wiki.osdev.org/A.out\" rel=\"noopener noreferrer\">A.out binary format</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://symantec-enterprise-blogs.security.com/blogs/expert-perspectives/unpacking-hidden-malware-attacks\" rel=\"noopener noreferrer\">Cloak and dagger: Unpacking hidden malware attacks</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://wiki.osdev.org/COFF\" rel=\"noopener noreferrer\">Common object file format (COFF)</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://en.wikipedia.org/wiki/Comparison_of_executable_file_formats\" rel=\"noopener noreferrer\">Comparison of executable file formats</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://wiki.osdev.org/ELF\" rel=\"noopener noreferrer\">Executable and linkable format (ELF)</a></li>\n</ul>\n\n<ul>\n<li>üìã <a href=\"https://refspecs.linuxfoundation.org/elf/elf.pdf\" rel=\"noopener noreferrer\">Executable and linking format (ELF) specification</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://docs.fileformat.com/executable\" rel=\"noopener noreferrer\">Executable file formats</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://wiki.osdev.org/MZ\" rel=\"noopener noreferrer\">MZ disk operating system (DOS)</a></li>\n</ul>\n\n<ul>\n<li>üìú <a href=\"https://www.blackhat.com/docs/us-14/materials/us-14-Mesbahi-One-Packer-To-Rule-Them-All.pdf\" rel=\"noopener noreferrer\">One packer to rule them all: Empirical identification, comparison and circumvention of current antivirus detection techniques</a></li>\n</ul>\n\n<ul>\n<li>üìú <a href=\"https://www.blackhat.com/docs/us-16/materials/us-16-Mariani-Pindemonium-A-Dbi-Based-Generic-Unpacker-For-Windows-Executables-wp.pdf\" rel=\"noopener noreferrer\">PinDemonium: A DBI-based generic unpacker for Windows executables</a></li>\n</ul>\n\n<ul>\n<li>üåé <a href=\"https://wiki.osdev.org/PE\" rel=\"noopener noreferrer\">Portable executable (PE)</a></li>\n</ul>\n\n<ul>\n<li>üìã <a href=\"https://securitylabs.websense.com/content/Assets/HistoryofPackingTechnology.pdf\" rel=\"noopener noreferrer\">Win32 portable executable packing uncovered</a></li>\n</ul>\n\n<ul>\n<li>üìå <a href=\"https://github.com/levanvn/Packer_Simple-1\" rel=\"noopener noreferrer\">Writing a simple PE packer in detail (‚≠ê15)</a></li>\n</ul>\n<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üì∞ <a href=\"https://link.springer.com/article/10.1007%2Fs00521-014-1558-4\" rel=\"noopener noreferrer\">Absent extreme learning machine algorithm with application to packed executable identification</a> (January 2016)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.jstage.jst.go.jp/article/transfun/E97.A/1/E97.A_253/_article\" rel=\"noopener noreferrer\">An accurate packer identification method using support vector machine</a> (January 2014)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://dl.acm.org/doi/10.5555/2011216.2011217\" rel=\"noopener noreferrer\">Automatic analysis of malware behavior using machine learning</a> (December 2011)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"http://www.ijofcs.org/abstract-v06n1-pp03.html\" rel=\"noopener noreferrer\">BinStat tool for recognition of packed executables</a> (September 2010)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"http://www.sciencedirect.com/science/article/pii/S0167865508002110\" rel=\"noopener noreferrer\">Classification of packed executables for accurate computer virus detection</a> (October 2008)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://link.springer.com/article/10.1007%2Fs12046-015-0399-x\" rel=\"noopener noreferrer\">An efficient block-discriminant identification of packed malware</a> (August 2015)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://dl.acm.org/doi/10.5555/2150963.2150968\" rel=\"noopener noreferrer\">ELF-Miner: Using structural knowledge and data mining methods to detect new (Linux) malicious executables</a> (March 2012)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.sciencedirect.com/science/article/pii/S1319157817300149\" rel=\"noopener noreferrer\">A learning model to detect maliciousness of portable executable using integrated feature set</a> (January 2017)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://link.springer.com/article/10.1007%2Fs10207-014-0242-0\" rel=\"noopener noreferrer\">Malware analysis using visualized images and entropy graphs</a> (February 2015)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/5975134\" rel=\"noopener noreferrer\">Obfuscation: The hidden malware</a> (August 2011)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.sciencedirect.com/science/article/pii/S0167404814000522?via%3Dihub\" rel=\"noopener noreferrer\">On the adoption of anomaly detection for packed executable filtering</a> (June 2014)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.jstage.jst.go.jp/article/transinf/E98.D/4/E98.D_2014EDP7268/_article\" rel=\"noopener noreferrer\">An original entry point detection method with candidate-sorting for more effective generic unpacking</a> (January 2015)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.sans.org/reading-room/whitepapers/malicious/packer-analysis-report-debugging-unpacking-nspack-34-37-packer-33428\" rel=\"noopener noreferrer\">Packer analysis report debugging and unpacking the NsPack 3.4 and 3.7 packer</a> (June 2010)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://link.springer.com/article/10.1007%2Fs11416-007-0046-0\" rel=\"noopener noreferrer\">Secure and advanced unpacking using computer emulation</a> (August 2007)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://ieeexplore.ieee.org/document/6636333\" rel=\"noopener noreferrer\">Two techniques for detecting packed portable executable files</a> (June 2013)</li>\n</ul>\n\n<ul>\n<li>üì∞ <a href=\"https://www.scientific.net/AMM.198-199.343\" rel=\"noopener noreferrer\">Unpacking techniques and tools in malware analysis</a> (September 2012)</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/03/18/",
      "title": "Awesome Executable Packing Updates on Mar 18, 2022",
      "_short_title": "Mar 18, 2022",
      "_slug": "2022/03/18/",
      "summary": "6 awesome projects updated on Mar 18, 2022",
      "_filepath": "/content/2022/03/18/README.md",
      "url": "https://www.trackawesomelist.com/2022/03/18/",
      "date_published": "2022-03-18T19:55:53.000Z",
      "date_modified": "2022-03-18T19:55:53.000Z",
      "content_text": "\n\n### :books: Literature / Scientific Research\n\n*   :mortar\\_board: [Computational-intelligence techniques for malware generation](https://raw.githubusercontent.com/jimmy-sonny/ConferencesAndTalks/master/Ms.C%20Thesis/Thesis_Marcelli.pdf) (October 2015)\n*   :bar\\_chart: [Qualitative and quantitative evaluation of software packers](http://webdiis.unizar.es/~ricardo/files/slides/industrial/slides_NcN-15.pdf) (December 2015)\n*   :bar\\_chart: [Runtime packers testing experiences](https://docs.google.com/a/caro.org/viewer?a=v\\&pid=sites\\&srcid=Y2Fyby5vcmd8Y2Fyby13b3Jrc2hvcC0yMDA4fGd4OjZkNzk3MmI2YjZlMWMxZGI) (May 2008)\n*   :notebook: [Static analysis of executables to detect malicious patterns](https://dl.acm.org/doi/10.5555/1251353.1251365) (August 2003)\n*   :bar\\_chart: [WaveAtlas: Surfing through the landscape of current malware packers](https://www.virusbulletin.com/virusbulletin/2016/12/vb2015-paper-waveatlas-surfing-through-landscape-current-malware-packers/) (September 2015)\n\n### :wrench: Tools / Before 2000\n\n*   [PEiD (CLI) (‚≠ê139)](https://github.com/dhondta/peid) - Python implementation of PEiD featuring an additional tool for making new signatures.",
      "content_html": "<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üéì <a href=\"https://raw.githubusercontent.com/jimmy-sonny/ConferencesAndTalks/master/Ms.C%20Thesis/Thesis_Marcelli.pdf\" rel=\"noopener noreferrer\">Computational-intelligence techniques for malware generation</a> (October 2015)</li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"http://webdiis.unizar.es/~ricardo/files/slides/industrial/slides_NcN-15.pdf\" rel=\"noopener noreferrer\">Qualitative and quantitative evaluation of software packers</a> (December 2015)</li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://docs.google.com/a/caro.org/viewer?a=v&amp;pid=sites&amp;srcid=Y2Fyby5vcmd8Y2Fyby13b3Jrc2hvcC0yMDA4fGd4OjZkNzk3MmI2YjZlMWMxZGI\" rel=\"noopener noreferrer\">Runtime packers testing experiences</a> (May 2008)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.5555/1251353.1251365\" rel=\"noopener noreferrer\">Static analysis of executables to detect malicious patterns</a> (August 2003)</li>\n</ul>\n\n<ul>\n<li>üìä <a href=\"https://www.virusbulletin.com/virusbulletin/2016/12/vb2015-paper-waveatlas-surfing-through-landscape-current-malware-packers/\" rel=\"noopener noreferrer\">WaveAtlas: Surfing through the landscape of current malware packers</a> (September 2015)</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/dhondta/peid\" rel=\"noopener noreferrer\">PEiD (CLI) (‚≠ê139)</a> - Python implementation of PEiD featuring an additional tool for making new signatures.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/03/04/",
      "title": "Awesome Executable Packing Updates on Mar 04, 2022",
      "_short_title": "Mar 04, 2022",
      "_slug": "2022/03/04/",
      "summary": "11 awesome projects updated on Mar 04, 2022",
      "_filepath": "/content/2022/03/04/README.md",
      "url": "https://www.trackawesomelist.com/2022/03/04/",
      "date_published": "2022-03-04T09:54:11.000Z",
      "date_modified": "2022-03-04T09:54:11.000Z",
      "content_text": "\n\n### :books: Literature / Scientific Research\n\n*   :notebook: [Eureka: A framework for enabling static malware analysis](https://link.springer.com/chapter/10.1007%2F978-3-540-88313-5_31) (October 2008)\n*   :notebook: [PE-Probe: Leveraging packer detection and structural information to detect malicious portable executables](https://www.semanticscholar.org/paper/PE-Probe%3A-Leveraging-Packer-Detection-and-to-Detect-Shafiq-Tabish/9811ec751f2b5bb41ee46c0ee2a3b6eccc39bb9a) (June 2009)\n*   :notebook: [Reverse engineering self-modifying code: Unpacker extraction](https://ieeexplore.ieee.org/document/5645447) (October 2010)\n*   :notebook: [Unpacking virtualization obfuscators](https://dl.acm.org/doi/10.5555/1855876.1855877) (August 2009)\n\n### :package: Packers / After 2010\n\n*   [ElecKey](https://www.sciensoft.com) - Suite of software and tools that offer a complete solution for software protection, copy protection, and license management.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [EXE Wrapper](https://web.archive.org/web/20160331144211/http://533soft.com/exewrapper) - Protects any EXE file with a password from non-authorized execution.\n*   [EXECryptor](https://execryptor.freedownloadscenter.com/windows) - Protects EXE programs from reverse engineering, analysis, modifications and cracking.\n*   [Sentinel HASP Envelope](https://cpl.thalesgroup.com/en-gb/software-monetization/all-products/sentinel-hasp) - Wrapping application that protects the target application with a secure shield, providing a means to counteract reverse engineering and other anti-debugging measures.\n\n### :package: Packers / Before 2000\n\n*   [PE Diminisher](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/win/ped.zip) - Simple PE packer relying on the aPLib compression library.\n*   [SecuPack](https://web.archive.org/web/20210119235522/https://www.exetools.com/files/compressors/win/secupack15.zip) - Win32 executable compressor.\n\n### :wrench: Tools / Before 2000\n\n*   [FUU (‚≠ê55)](https://github.com/crackinglandia/fuu) - Fast Universal Unpacker.",
      "content_html": "<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007%2F978-3-540-88313-5_31\" rel=\"noopener noreferrer\">Eureka: A framework for enabling static malware analysis</a> (October 2008)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.semanticscholar.org/paper/PE-Probe%3A-Leveraging-Packer-Detection-and-to-Detect-Shafiq-Tabish/9811ec751f2b5bb41ee46c0ee2a3b6eccc39bb9a\" rel=\"noopener noreferrer\">PE-Probe: Leveraging packer detection and structural information to detect malicious portable executables</a> (June 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5645447\" rel=\"noopener noreferrer\">Reverse engineering self-modifying code: Unpacker extraction</a> (October 2010)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.5555/1855876.1855877\" rel=\"noopener noreferrer\">Unpacking virtualization obfuscators</a> (August 2009)</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://www.sciensoft.com\" rel=\"noopener noreferrer\">ElecKey</a> - Suite of software and tools that offer a complete solution for software protection, copy protection, and license management.</li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://web.archive.org/web/20160331144211/http://533soft.com/exewrapper\" rel=\"noopener noreferrer\">EXE Wrapper</a> - Protects any EXE file with a password from non-authorized execution.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://execryptor.freedownloadscenter.com/windows\" rel=\"noopener noreferrer\">EXECryptor</a> - Protects EXE programs from reverse engineering, analysis, modifications and cracking.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://cpl.thalesgroup.com/en-gb/software-monetization/all-products/sentinel-hasp\" rel=\"noopener noreferrer\">Sentinel HASP Envelope</a> - Wrapping application that protects the target application with a secure shield, providing a means to counteract reverse engineering and other anti-debugging measures.</li>\n</ul>\n<h3><p>üì¶ Packers / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/win/ped.zip\" rel=\"noopener noreferrer\">PE Diminisher</a> - Simple PE packer relying on the aPLib compression library.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20210119235522/https://www.exetools.com/files/compressors/win/secupack15.zip\" rel=\"noopener noreferrer\">SecuPack</a> - Win32 executable compressor.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/crackinglandia/fuu\" rel=\"noopener noreferrer\">FUU (‚≠ê55)</a> - Fast Universal Unpacker.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/02/13/",
      "title": "Awesome Executable Packing Updates on Feb 13, 2022",
      "_short_title": "Feb 13, 2022",
      "_slug": "2022/02/13/",
      "summary": "27 awesome projects updated on Feb 13, 2022",
      "_filepath": "/content/2022/02/13/README.md",
      "url": "https://www.trackawesomelist.com/2022/02/13/",
      "date_published": "2022-02-13T00:12:40.000Z",
      "date_modified": "2022-02-13T00:12:40.000Z",
      "content_text": "\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [VX Heaven](https://web.archive.org/web/20170817143838/http://vxheaven.org/) - Site dedicated to providing information about computer viruses.\n\n### :package: Packers / After 2010\n\n*   [APKProtect](https://sourceforge.net/projects/apkprotect) - APK encryption and shell protection supporting Java and C++.\n*   [Armadillo](https://web.archive.org/web/20030324043555/https://www.exetools.com/files/protectors/win/armd252b2.zip) - Incorporates both a license manager and wrapper system for protecting PE files.\n*   [DotBundle](https://web.archive.org/web/20160508074421/http://www.dotbundle.com:80/download.html) - GUI tool to compress, encrypt ad password-protect a .NET application or embed .NET libraries.\n*   [Enigma Protector](https://www.enigmaprotector.com) - Professional system for executable files licensing and protection.\n*   [Enigma Virtual Box](https://www.enigmaprotector.com/en/aboutvb.html) - Application virtualization system for Windows.\n*   [EXE Bundle](https://www.webtoolmaster.com/exebundle.htm) - Bundles application files into a single PE32 file.\n*   [EXE Stealth](http://www.webtoolmaster.com/packer.htm) - Anti-cracking protection and licensing tool for PE files featuring compression and encryption polymorphic technology.\n*   [hXOR-Packer (‚≠ê61)](https://github.com/rurararura/hXOR-Packer) - PE packer with Huffman compression and XOR encryption.\n*   [LIAPP](https://liapp.lockincomp.com) - Easiest and most powerful mobile app security solution.\n*   [MPRESS](https://www.autohotkey.com/mpress/mpress_web.htm) - Compresses (using LZMA) and protects PE, .NET or Mach-O programs against reverse engineering.\n*   [Papaw (‚≠ê47)](https://github.com/dimkr/papaw) - Permissively-licensed packer for ELF executables using LZMA Zstandard or Deflate compression.\n*   [ZProtect](http://www.jiami.net) - Renames metadata entities and supports advanced obfuscation methods that harden protection scheme and foil reverse engineering altogether.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [EXE Guarder](http://www.exeicon.com/exeguarder) - Licensing tool for PE files allowing to compress and specify a password notice.\n*   [PECompact](http://www.bitsum.com/pec2.asp) - Windows executable compressor featuring third-party plug-ins offering protection against reverse engineering.\n*   [WinUpack](https://www.sac.sk/download/pack/wupck039.zip) - Graphical interface for Upack, a command-line program used to create self-extracting archives from Windows PE files.\n\n### :package: Packers / Before 2000\n\n*   [aPack](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/apack099.zip) - 16-bit real-mode DOS executable ( .EXE and .COM ) compressor.\n*   [EPack](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/epack16.zip) - EXE and COM file compressor ; works with DOS/Windows95 files.\n*   [LGLZ](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/lglz104b.zip) - DOS EXE and COM file compressor using modified LZ77.\n*   [Megalite](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/megal120.zip) - MS-DOS executable file compressor.\n*   [PACK](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/pack201.zip) - Executable files compressor.\n*   [PCShrink](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/win/pcsnk071.zip) - Windows 9x/NT executable file compressor relying on the aPLib compression library.\n*   [PEPack](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/win/pepack10.zip) - PE compression tool based on the code of a newer version of PE-SHiELD.\n*   [Pro-Pack](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/pp219.zip) - DOS executable file compressor.\n*   [T-Pack](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/tpack05.zip) - Executable COM-FILE  compressor (LZ77) optimized for small files like BBS-Addys or similar files.\n*   [Vacuum](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/vacuum.zip) - Runtime Compressor for DOS32 executables.\n\n### :wrench: Tools / Before 2000\n\n*   [APKiD (‚≠ê2.3k)](https://github.com/rednaga/APKiD) - Android application Identifier for packers, protectors, obfuscators and oddities - PEiD for Android.",
      "content_html": "<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://web.archive.org/web/20170817143838/http://vxheaven.org/\" rel=\"noopener noreferrer\">VX Heaven</a> - Site dedicated to providing information about computer viruses.</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://sourceforge.net/projects/apkprotect\" rel=\"noopener noreferrer\">APKProtect</a> - APK encryption and shell protection supporting Java and C++.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20030324043555/https://www.exetools.com/files/protectors/win/armd252b2.zip\" rel=\"noopener noreferrer\">Armadillo</a> - Incorporates both a license manager and wrapper system for protecting PE files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20160508074421/http://www.dotbundle.com:80/download.html\" rel=\"noopener noreferrer\">DotBundle</a> - GUI tool to compress, encrypt ad password-protect a .NET application or embed .NET libraries.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.enigmaprotector.com\" rel=\"noopener noreferrer\">Enigma Protector</a> - Professional system for executable files licensing and protection.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.enigmaprotector.com/en/aboutvb.html\" rel=\"noopener noreferrer\">Enigma Virtual Box</a> - Application virtualization system for Windows.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.webtoolmaster.com/exebundle.htm\" rel=\"noopener noreferrer\">EXE Bundle</a> - Bundles application files into a single PE32 file.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.webtoolmaster.com/packer.htm\" rel=\"noopener noreferrer\">EXE Stealth</a> - Anti-cracking protection and licensing tool for PE files featuring compression and encryption polymorphic technology.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rurararura/hXOR-Packer\" rel=\"noopener noreferrer\">hXOR-Packer (‚≠ê61)</a> - PE packer with Huffman compression and XOR encryption.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://liapp.lockincomp.com\" rel=\"noopener noreferrer\">LIAPP</a> - Easiest and most powerful mobile app security solution.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.autohotkey.com/mpress/mpress_web.htm\" rel=\"noopener noreferrer\">MPRESS</a> - Compresses (using LZMA) and protects PE, .NET or Mach-O programs against reverse engineering.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dimkr/papaw\" rel=\"noopener noreferrer\">Papaw (‚≠ê47)</a> - Permissively-licensed packer for ELF executables using LZMA Zstandard or Deflate compression.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.jiami.net\" rel=\"noopener noreferrer\">ZProtect</a> - Renames metadata entities and supports advanced obfuscation methods that harden protection scheme and foil reverse engineering altogether.</li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"http://www.exeicon.com/exeguarder\" rel=\"noopener noreferrer\">EXE Guarder</a> - Licensing tool for PE files allowing to compress and specify a password notice.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.bitsum.com/pec2.asp\" rel=\"noopener noreferrer\">PECompact</a> - Windows executable compressor featuring third-party plug-ins offering protection against reverse engineering.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.sac.sk/download/pack/wupck039.zip\" rel=\"noopener noreferrer\">WinUpack</a> - Graphical interface for Upack, a command-line program used to create self-extracting archives from Windows PE files.</li>\n</ul>\n<h3><p>üì¶ Packers / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/apack099.zip\" rel=\"noopener noreferrer\">aPack</a> - 16-bit real-mode DOS executable ( .EXE and .COM ) compressor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/epack16.zip\" rel=\"noopener noreferrer\">EPack</a> - EXE and COM file compressor ; works with DOS/Windows95 files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/lglz104b.zip\" rel=\"noopener noreferrer\">LGLZ</a> - DOS EXE and COM file compressor using modified LZ77.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/megal120.zip\" rel=\"noopener noreferrer\">Megalite</a> - MS-DOS executable file compressor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/pack201.zip\" rel=\"noopener noreferrer\">PACK</a> - Executable files compressor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/win/pcsnk071.zip\" rel=\"noopener noreferrer\">PCShrink</a> - Windows 9x/NT executable file compressor relying on the aPLib compression library.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/win/pepack10.zip\" rel=\"noopener noreferrer\">PEPack</a> - PE compression tool based on the code of a newer version of PE-SHiELD.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/pp219.zip\" rel=\"noopener noreferrer\">Pro-Pack</a> - DOS executable file compressor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/tpack05.zip\" rel=\"noopener noreferrer\">T-Pack</a> - Executable COM-FILE  compressor (LZ77) optimized for small files like BBS-Addys or similar files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/vacuum.zip\" rel=\"noopener noreferrer\">Vacuum</a> - Runtime Compressor for DOS32 executables.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/rednaga/APKiD\" rel=\"noopener noreferrer\">APKiD (‚≠ê2.3k)</a> - Android application Identifier for packers, protectors, obfuscators and oddities - PEiD for Android.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/02/02/",
      "title": "Awesome Executable Packing Updates on Feb 02, 2022",
      "_short_title": "Feb 02, 2022",
      "_slug": "2022/02/02/",
      "summary": "140 awesome projects updated on Feb 02, 2022",
      "_filepath": "/content/2022/02/02/README.md",
      "url": "https://www.trackawesomelist.com/2022/02/02/",
      "date_published": "2022-02-02T12:04:01.000Z",
      "date_modified": "2022-02-02T12:04:01.000Z",
      "content_text": "\n\n### :books: Literature / Scientific Research\n\n*   :notebook: [Adaptive unpacking of Android Apps](https://ieeexplore.ieee.org/document/7985676) (May 2017)\n*   :notebook: [Application of string kernel based support vector machine for malware packer identification](https://ieeexplore.ieee.org/document/6707043) (August 2013)\n*   :notebook: [AppSpear: Bytecode decrypting and DEX reassembling for packed Android malware](https://link.springer.com/chapter/10.1007/978-3-319-26362-5_17) (November 2015)\n*   :notebook: [BitBlaze: A new approach to computer security via binary analysis](https://link.springer.com/chapter/10.1007/978-3-540-89862-7_1) (December 2008)\n*   :notebook: [Boosting scalability in anomaly-based packed executable filtering](https://link.springer.com/chapter/10.1007%2F978-3-642-34704-7_3) (November 2011)\n*   :notebook: [Challenging anti-virus through evolutionary malware obfuscation](https://link.springer.com/chapter/10.1007%2F978-3-319-31153-1_11) (April 2016)\n*   :notebook: [A comparative assessment of malware classification using binary texture analysis and dynamic analysis](https://dl.acm.org/doi/10.1145/2046684.2046689) (September 2011)\n*   :notebook: [Countering entropy measure attacks on packed software detection](https://ieeexplore.ieee.org/document/6181079) (January 2012)\n*   :notebook: [Denial-of-service attacks on host-based generic unpackers](https://link.springer.com/chapter/10.1007/978-3-642-11145-7_19) (December 2009)\n*   :mortar\\_board: [Deobfuscation of packed and virtualization-obfuscation protected binaries](https://repository.arizona.edu/handle/10150/202716) (June 2011)\n*   :notebook: [Design and development of a new scanning core engine for malware detection](https://ieeexplore.ieee.org/document/6388212) (October 2012)\n*   :notebook: [Design and performance evaluation of binary code packing for protecting embedded software against reverse engineering](https://ieeexplore.ieee.org/document/5479571) (May 2010)\n*   :notebook: [Detecting packed executables using steganalysis](https://ieeexplore.ieee.org/document/7018361) (December 2014)\n*   :notebook: [Detection of packed executables using support vector machines](https://ieeexplore.ieee.org/document/6016774) (July 2011)\n*   :notebook: [Dynamic binary instrumentation for deobfuscation and unpacking](https://hal.inria.fr/inria-00431666) (November 2009)\n*   :notebook: [Efficient and automatic instrumentation for packed binaries](https://link.springer.com/chapter/10.1007/978-3-642-02617-1_32) (June 2009)\n*   :notebook: [Efficient malware packer identification using support vector machines with spectrum kernel](https://ieeexplore.ieee.org/document/6621654) (July 2013)\n*   :notebook: [An empirical evaluation of an unpacking method implemented with dynamic binary instrumentation](https://www.jstage.jst.go.jp/article/transinf/E94.D/9/E94.D_9_1778/_article) (September 2011)\n*   :notebook: [Encoded executable file detection technique via executable file header analysis](https://www.earticle.net/Article/A105986) (April 2009)\n*   :notebook: [ESCAPE: Entropy score analysis of packed executable](https://dl.acm.org/doi/10.1145/2388576.2388607) (October 2012)\n*   :notebook: [An experimental study on identifying obfuscation techniques in packer](https://docplayer.net/63501103-An-experimental-study-on-identifying-obfuscation-techniques-in-packer.html) (June 2016)\n*   :notebook: [A fast flowgraph based classification system for packed and polymorphic malware on the endhost](https://ieeexplore.ieee.org/document/5474800/) (April 2010)\n*   :notebook: [Feature set reduction for the detection of packed executables](https://ieeexplore.ieee.org/document/6912767) (June 2014)\n*   :notebook: [A fine-grained classification approach for the packed malicious code](https://link.springer.com/chapter/10.1007/978-3-642-34129-8_49) (October 2012)\n*   :notebook: [Generic unpacker of executable files](https://www.semanticscholar.org/paper/Generic-Unpacker-of-Executable-Files-Milkovi/413321c5a473d59c18e861c1478cd44f88142275) (April 2015)\n*   :notebook: [Generic unpacking method based on detecting original entry point](https://link.springer.com/chapter/10.1007/978-3-642-42054-2_74) (November 2013)\n*   :notebook: [Generic unpacking techniques](https://ieeexplore.ieee.org/document/4909168) (February 2009)\n*   :notebook: [Gunpack: Un outil g√©n√©rique d'unpacking de malwares](https://www.sstic.org/2016/presentation/gunpack/) (June 2016)\n*   :notebook: [A heuristic approach for detection of obfuscated malware](https://ieeexplore.ieee.org/document/5137328) (June 2009)\n*   :notebook: [An implementation of a generic unpacking method on Bochs Emulator](https://www.semanticscholar.org/paper/An-Implementation-of-a-Generic-Unpacking-Method-on-HyungChanKim-Daisuke/d5c947520815105231673f1b87af57ed6abd379c) (September 2009)\n*   :notebook: [Information theoretic method for classification of packed and encoded files](https://dl.acm.org/doi/10.1145/2799979.2800015) (September 2015)\n*   :notebook: [Instructions-based detection of sophisticated obfuscation and packing](https://ieeexplore.ieee.org/document/6956729) (October 2014)\n*   :notebook: [Mal-EVE: Static detection model for evasive malware](https://ieeexplore.ieee.org/document/7497952) (August 2015)\n*   :notebook: [Malware obfuscation techniques: A brief survey](https://ieeexplore.ieee.org/document/5633410) (November 2010)\n*   :notebook: [McBoost: Boosting scalability in malware collection and analysis using statistical classification of executables](https://ieeexplore.ieee.org/document/4721567) (December 2008)\n*   :notebook: [Memory behavior-based automatic malware unpacking in stealth debugging environment](https://ieeexplore.ieee.org/document/5665794) (October 2010)\n*   :notebook: [Modern linux malware exposed](https://www.eurecom.fr/fr/publication/5584) (June 2018)\n*   :notebook: [MutantX-S: Scalable malware clustering based on static features](https://www.usenix.org/conference/atc13/technical-sessions/presentation/hu) (June 2013)\n*   :notebook: [The new signature generation method based on an unpacking algorithm and procedure for a packer detection](https://www.earticle.net/Article/A147420) (February 2011)\n*   :notebook: [OPEM: A static-dynamic approach for machine-learning-based malware detection](https://link.springer.com/chapter/10.1007/978-3-642-33018-6_28) (September 2012)\n*   :notebook: [Packed PE file detection for malware forensics](https://ieeexplore.ieee.org/document/5404211) (December 2009)\n*   :notebook: [Packer classifier based on PE header information](https://dl.acm.org/doi/10.1145/2746194.2746213) (April 2015)\n*   :mortar\\_board: [Pandora's Bochs: Automatic unpacking of malware](https://www.researchgate.net/publication/268355151_Pandora%27s_Bochs_Automatic_Unpacking_of_Malware) (January 2008)\n*   :notebook: [PE file header analysis-based packed PE file detection technique (PHAD)](https://ieeexplore.ieee.org/document/4654055) (October 2008)\n*   :notebook: [PEAL - Packed executable analysis](https://link.springer.com/chapter/10.1007/978-3-642-29280-4_28) (January 2012)\n*   :notebook: [Research and implementation of compression shell unpacking technology for PE file](https://ieeexplore.ieee.org/document/5231651) (May 2009)\n*   :notebook: [Semi-supervised learning for packed executable detection](https://ieeexplore.ieee.org/document/6060027) (September 2011)\n*   :notebook: [Semi-supervised learning for unknown malware detection](https://link.springer.com/chapter/10.1007/978-3-642-19934-9_53) (April 2011)\n*   :notebook: [SPADE: Signature based packer detection](https://dl.acm.org/doi/10.1145/2490428.2490442) (August 2012)\n*   :notebook: [Structural feature based anomaly detection for packed executable identification](https://link.springer.com/chapter/10.1007%2F978-3-642-21323-6_29) (June 2011)\n*   :notebook: [The study of evasion of packed PE from static detection](https://ieeexplore.ieee.org/document/6280206) (June 2012)\n*   :notebook: [Survey on malware evasion techniques: State of the art and challenges](https://ieeexplore.ieee.org/abstract/document/6174775) (February 2012)\n*   :notebook: [Thwarting real-time dynamic unpacking](https://dl.acm.org/doi/10.1145/1972551.1972556) (January 2011)\n*   :notebook: [Toward generic unpacking techniques for malware analysis with quantification of code revelation](https://www.researchgate.net/publication/255608911_Toward_Generic_Unpacking_Techniques_for_Malware_Analysis_with_Quantification_of_Code_Revelation) (August 2009)\n*   :notebook: [Unconditional self-modifying code elimination with dynamic compiler optimizations](https://ieeexplore.ieee.org/document/5665795) (October 2010)\n*   :mortar\\_board: [Unpacking framework for packed malicious executables](https://repositorio-aberto.up.pt/bitstream/10216/68815/2/25935.pdf) (July 2013)\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [CyberCrime](https://cybercrime-tracker.net/vx.php) - C¬≤ tracking and malware database.\n*   [Dataset of Packed PE (‚≠ê35)](https://github.com/dhondta/dataset-packed-pe) - Sanitized version of the original dataset, PackingData, removing packed samples from the Notpacked folder but also samples in packer folders that failed to be packed (having a same hash as the original unpacked executable).\n*   [Malfease](https://web.archive.org/web/20141221153307/http://malfease.oarci.net) - Dataset of about 5,000 packed malware samples.\n*   [OARC Malware Dataset](https://www.dns-oarc.net) - Semi-public dataset of 3,467 samples captured in the wild from Sep 2005 to Jan 2006 by mail traps, user submissions, honeypots and other sources aggregated by the OARC, available to qualified academic and industry researchers upon request.\n*   [Packware (‚≠ê86)](https://github.com/ucsb-seclab/packware) - Datasets and codes that are needed to reproduce the experiments in the paper \"When Malware is Packing Heat\".\n*   [Runtime Packers Testset](https://www.researchgate.net/publication/268030543_Runtime_Packers_The_Hidden_Problem) - Dataset of 10 common Malware files, packed with about 40 different runtime packers in over 500 versions and options, with a total of about 5,000 samples.\n*   [VXvault](http://vxvault.net/ViriList.php) - Online malware database.\n\n### :package: Packers / After 2010\n\n*   [Alienyze](https://alienyze.com) - Advanced software protection and security for Windows 32-bit executables.\n*   [Alternate EXE Packer](https://www.alternate-tools.com/pages/c_exepacker.php) - Compression tool for executable files (type EXE) or DLL's relying on UPX 3.96.\n*   [Amber (‚≠ê1.3k)](https://github.com/EgeBalci/amber/releases) - Position-independent(reflective) PE loader that enables in-memory execution of native PE files(EXE, DLL, SYS).\n*   [ASPack](http://www.aspack.com/aspack.html) - Advanced solution created to provide Win32 EXE file packing and to protect them against non-professional reverse engineering.\n*   [ASProtect 32](http://www.aspack.com/asprotect32.html) - Multifunctional EXE packing tool designed for software developers to protect 32-bit applications with in-built application copy protection system.\n*   [ASProtect 64](http://www.aspack.com/asprotect64.html) - Tool for protecting 64-bit applications and .NET applications for Windows against unauthorized use, industrial and home copying, professional hacking and analysis of software products distributed over the Internet and on any physical media.\n*   [AutoIT](https://www.autoitscript.com/site) - Legitimate executable encryption service.\n*   [AxProtector](https://www.wibu.com/us/products/protection-suite/axprotector.html) - Encrypts the complete software you aim to protect, and shields it with a security shell, AxEngine, best-of-breed anti-debugging and anti-disassembly methods are then injected into your software.\n*   [BangCle (‚≠ê401)](https://github.com/woxihuannisja/Bangcle) - Protection tool using the second generation Android Hardening Protection, loading the encrypted DEX file from memory dynamically.\n*   [Bero](https://blog.rosseaux.net/page/875fbe6549aa072b5ee0ac9cefff4827/BeRoEXEPacker) - Bero EXE Packer (BEP) for 32-bit windows executables.\n*   [Code Virtualizer](https://www.oreans.com/CodeVirtualizer.php) - Code Virtualizer is a powerful code obfuscation system for Windows, Linux and macOS applications that helps developers to protect their sensitive code areas against Reverse Engineering with very strong obfuscation code, based on code virtualization.\n*   [ConfuserEx (‚≠ê2.6k)](https://github.com/mkaring/ConfuserEx) - An open-source, free protector for .NET applications.\n*   [Crinkler (‚≠ê1.1k)](https://github.com/runestubbe/Crinkler) - Compressing linker for Windows, specifically targeted towards executables with a size of just a few kilobytes.\n*   [DarkCrypt](https://totalcmd.net/plugring/darkcrypttc.html) - Simply and powerful plugin for Total Commander used for file encryption using 100 algorithms and 5 modes.\n*   [DexGuard](https://www.guardsquare.com/en/products/dexguard) - Android app obfuscation & security protocols for mobile app protection.\n*   [DexProtector](https://dexprotector.com/) - Multi-layered RASP solution that secures your Android and iOS apps against static and dynamic analysis, illegal use and tampering.\n*   [DotNetZ](https://www.softpedia.com/get/Programming/Packers-Crypters-Protectors/NETZ.shtml) - Straightforward and lightweight, command-line piece of software written in C that allows you to compress and pack Microsoft .NET Framework executable files.\n*   [Eronona-Packer (‚≠ê49)](https://github.com/Eronana/packer) - This is a packer for exe under win32.\n*   [Ezuri (‚≠ê257)](https://github.com/guitmz/ezuri/blob/master/ezuri.go) - A Simple Linux ELF Runtime Crypter.\n*   [GzExe](https://git.savannah.gnu.org/cgit/gzip.git) - Utility that allows to compress executables as a shell script.\n*   [NetCrypt (‚≠ê63)](https://github.com/friedkiwi/netcrypt) - A proof-of-concept packer for .NET executables, designed to provide a starting point to explain the basic principles of runtime packing.\n*   [Origami (‚≠ê173)](https://github.com/dr4k0nia/Origami) - Packer compressing .net assemblies, (ab)using the PE format for data storage.\n*   [Pakkero (‚≠ê264)](https://github.com/89luca89/pakkero) - Pakkero is a binary packer written in Go made for fun and educational purpose.\n*   [PELock](https://www.pelock.com) - Software protection system for Windows executable files ; protects your applications from tampering and reverse engineering, and provides extensive support for software license key management, including support for time trial periods.\n*   [PePacker (‚≠ê51)](https://github.com/SamLarenN/PePacker) - Simple PE Packer Which Encrypts .text Section I release a simple PE file packer which encrypts the .text section and adds a decryption stub to the end of the last section.\n*   [PEShield](https://webscene.ir/tools/show/PE-SHIELD-0.25) - PE-SHiELD is a program, which encrypts 32-bit Windows EXE files, leaving them still executable.\n*   [PEtite](https://www.un4seen.com/petite/) - Free Win32 (Windows 95/98/2000/NT/XP/Vista/7/etc) executable (EXE/DLL/etc) compressor.\n*   [Smart Packer](https://www.smartpacker.nl) - Packs 32 & 64bit applications with DLLs, data files, 3rd party run-time into one single executable that runs instantly, with no installs or hassles.\n*   [Themida](https://www.oreans.com/themida.php) - From Renovo paper: Themida converts the original x86 instructions into virtual instructions in its own randomized instruction set, and then interpret these virtual instructions at run-time.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [20to4](http://20to4.net) - Executable compressor that is able to stuff about 20k of finest code and data into less than 4k.\n*   [ACProtect](https://www.yaldex.com/Bestsoft/Utilities/acprotect.htm) - Application that allows to protect Windows executable files against piracy, using RSA to create and verify the registration keys and unlock code.\n*   [AHPack](https://www.delphibasics.info/home/delphibasicscounterstrikewireleases/ahpacker01byfeuerraderahteam) - PE and PE+ file packer.\n*   [Application Protector](https://sourceforge.net/projects/balaji/) - Tool for protecting Windows applications.\n*   [AT4RE Protector](https://en.52yma.com/thread-5444-1-1.html) - Very simple PE files protector programmed in ASM.\n*   [AverCryptor](https://web.archive.org/web/20071012084924/http://secnull.org) - Small and very handy utility designed to encrypt notes in which you can store any private information - it helps to hide your infection from antiviruses.\n*   [BurnEye](https://packetstormsecurity.com/files/29691/burneye-1.0-linux-static.tar.gz.html) - Burneye ELF encryption program, x86-linux binary.\n*   [ByteBoozer](https://csdb.dk/release/?id=33093) - Commodore 64 executable packer.\n*   [Exe32Pack](https://exe32pack.apponic.com/) - Compresses Win32 EXEs, DLLs, etc and dynamically expands them upon execution.\n*   [eXPressor](https://www.cgsoftlabs.ro/express.html) - Used as a compressor this tool can compress EXE files to half their normal size.\n*   [FSG](https://web.archive.org/web/20030324043555/https://www.exetools.com/files/compressors/win/fsg.zip) - *Fast Small Good*, perfect compressor for small exes, eg.\n*   [GHF Protector](https://www.delphibasics.info/home/delphibasicscounterstrikewireleases/ghfprotector10) - Executable packer / protector based on open source engines Morphine and AHPack.\n*   [Kkrunchy](http://www.farbrausch.de/~fg/kkrunchy) - Kkrunchy is a small exe packer primarily meant for 64k intros.\n*   [mPack](https://blog.fearcat.in/a?ID=00050-86a031da-e36f-4409-9a08-d3d993dbf8f5) - mPack - mario PACKersimple Win32 PE Executable compressor.\n*   [NTPacker](https://hacking-software-free-download.blogspot.com/2013/02/nt-packer-v21.html) - PE file packer relying on aPlib for compression and/or XOR for encryption.\n*   [RLPack](https://web.archive.org/web/20070527132336/http://rlpack.jezgra.net) - Compresses your executables and dynamic link libraries in a way that keeps them small and has no effect on compressed file functionality.\n*   [Shiva](https://packetstormsecurity.com/files/31087/shiva-0.95.tar.gz.html) - Shiva is a tool to encrypt ELF executables under Linux.\n*   [tElock](https://www.softpedia.com/get/Programming/Packers-Crypters-Protectors/Telock.shtml) - Telock is a practical tool that intends to help developers who want to protect their work and reduce the size of the executable files.\n*   [XComp](http://www.soft-lab.de/JoKo/index_old.htm) - PE32 image file packer and rebuilder.\n*   [Yoda Crypter](https://sourceforge.net/projects/yodap/files/Yoda%20Crypter/1.3/yC1.3.zip/download) - Supports polymorphic encryption, softice detection, anti-debug API's, anti-dumping, etc, encrypts the Import Table and erases PE Header.\n\n### :package: Packers / Before 2000\n\n*   [32Lite](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/32lte02d.zip) - Compression tool for executable files created with Watcom C/C++ compiler.\n*   [624](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/624-11.zip) - COM packer that can compress COM programs shorter than 25000 bytes.\n*   [AVPack](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/avpck122.zip) - Encrypts EXE or COM files so that they'll be able to start on your PC only.\n*   [AXE](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/axe22.zip) - Program compression utility.\n*   [CEXE](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/win/cexe10a.zip) - Compresses an input EXE into a smaller executable (only runs on WinNT, Win2000 and above - won't run on Win95 or Win98).\n*   [SysPack](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/syspack.zip) - Device drivers compressor.\n*   [XPA](https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/xpa.zip) - DOS executable packer.\n\n### :wrench: Tools / Before 2000\n\n*   [AVClass (‚≠ê476)](https://github.com/malicialab/avclass) - Python tools to tag / label malware samples.\n*   [de4dot (‚≠ê7.2k)](https://github.com/0xd4d/de4dot) - .NET deobfuscator and unpacker.\n*   [DIE (‚≠ê2.7k)](https://github.com/horsicq/DIE-engine/releases) - Detect It Easy ; Program for determining types of files.\n*   [Emulator](https://techdocs.broadcom.com/us/en/symantec-security-software/endpoint-security-and-management/endpoint-protection/all/Using-policies-to-manage-security/preventing-and-handling-virus-and-spyware-attacks-v40739565-d49e172/how-does-the-emulator-in-symantec-endpoint-protect-v121004909-d47e230.html) - Symantec Endpoint Protector (from v14) capability to create a virtual machine on the fly to identify, detonate, and eliminate malware hiding inside custom malware packers.\n*   [EtherUnpack](https://ether.gtisc.gatech.edu/web_unpack) - Precision universal automated unpacker (successor of PolyUnpack).\n*   [EXETools](https://forum.exetools.com) - Forum for reverse engineering and executale packing related topics.\n*   [Justin](https://doi.org/10.1007/978-3-540-87403-4_6) - Just-In-Time AV scanning ; generic unpacking solution.\n*   [Malheur (‚≠ê372)](https://github.com/rieck/malheur) - Tool for the automatic analysis of malware behavior (recorded from malicious software in a sandbox environment).\n*   [MalUnpack (‚≠ê739)](https://github.com/hasherezade/mal_unpack) - Dynamic unpacker based on PE-sieve.\n*   [OEPdet](https://ieeexplore.ieee.org/abstract/document/7782073) - Automated original-entry-point detector.\n*   [OllyDbg Scripts (‚≠ê9)](https://github.com/xshows/ollydbg-script) - Collection of OllyDbg scripts for unpacking many different packers.\n*   [OmniUnpack](https://doi.org/10.1109/ACSAC.2007.15) - New technique for fast, generic, and safe unpacking of malware by monitoring the execution in real-time and detecting the removed layers of packing.\n*   [PackerID (‚≠ê43)](https://github.com/sooshie/packerid) - Fork of packerid.py using PEid signatures and featuring additional output types, formats, digital signature extraction, and disassembly support.\n*   [Pandora's Bochs](https://0x0badc0.de/gitweb?p=bochs/.git) - Extension to the Bochs PC eumlator to enable it to monitor execution of the unpacking stubs for extracting the original code.\n*   [PE Detective](https://ntcore.com/?page_id=367) - This GUI tool can scan single PE files or entire directories (also recursevely) and generate complete reports.\n*   [PE-bear (‚≠ê779)](https://github.com/hasherezade/pe-bear-releases) - Freeware reversing tool for PE files aimed to deliver fast and flexible ‚Äúfirst view‚Äù for malware analysts, stable and capable to handle malformed PE files.\n*   [Pefeats (‚≠ê2)](https://github.com/roussieau/masterthesis/tree/master/src/detector/tools/pefeats) - Utility for extracting 119 features from a PE file for use with machine learning algorithms.\n*   [Pefile (‚≠ê2k)](https://github.com/erocarrera/pefile) - Multi-platform Python module to parse and work with Portable Executable files.\n*   [SymPack](https://www.amazon.com/Norton-AntiVirus-2007-Old-Version/dp/B000IAOIXW) - Safe, portable, largely eÔ¨Äective but not generic library for packing detection and unpacking ; part of the Norton Antivirus solution.\n*   [Titanium Platform](https://www.reversinglabs.com/products/malware-analysis-platform) - Machine learning hybrid cloud platform that harvests thousands of file types at scale, speeds threat detection through machine learning binary analysis, and continuously monitors an index of over 10B files for future threats.\n*   [Unpckarc](https://web.archive.org/web/20191218043307/http://www.woodmann.com/crackz/Tools/) - Packed executables detection tool relying on several heuristics.",
      "content_html": "<h3><p>üìö Literature / Scientific Research</p>\n</h3>\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/7985676\" rel=\"noopener noreferrer\">Adaptive unpacking of Android Apps</a> (May 2017)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6707043\" rel=\"noopener noreferrer\">Application of string kernel based support vector machine for malware packer identification</a> (August 2013)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-319-26362-5_17\" rel=\"noopener noreferrer\">AppSpear: Bytecode decrypting and DEX reassembling for packed Android malware</a> (November 2015)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-540-89862-7_1\" rel=\"noopener noreferrer\">BitBlaze: A new approach to computer security via binary analysis</a> (December 2008)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007%2F978-3-642-34704-7_3\" rel=\"noopener noreferrer\">Boosting scalability in anomaly-based packed executable filtering</a> (November 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007%2F978-3-319-31153-1_11\" rel=\"noopener noreferrer\">Challenging anti-virus through evolutionary malware obfuscation</a> (April 2016)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/2046684.2046689\" rel=\"noopener noreferrer\">A comparative assessment of malware classification using binary texture analysis and dynamic analysis</a> (September 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6181079\" rel=\"noopener noreferrer\">Countering entropy measure attacks on packed software detection</a> (January 2012)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-11145-7_19\" rel=\"noopener noreferrer\">Denial-of-service attacks on host-based generic unpackers</a> (December 2009)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://repository.arizona.edu/handle/10150/202716\" rel=\"noopener noreferrer\">Deobfuscation of packed and virtualization-obfuscation protected binaries</a> (June 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6388212\" rel=\"noopener noreferrer\">Design and development of a new scanning core engine for malware detection</a> (October 2012)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5479571\" rel=\"noopener noreferrer\">Design and performance evaluation of binary code packing for protecting embedded software against reverse engineering</a> (May 2010)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/7018361\" rel=\"noopener noreferrer\">Detecting packed executables using steganalysis</a> (December 2014)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6016774\" rel=\"noopener noreferrer\">Detection of packed executables using support vector machines</a> (July 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://hal.inria.fr/inria-00431666\" rel=\"noopener noreferrer\">Dynamic binary instrumentation for deobfuscation and unpacking</a> (November 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-02617-1_32\" rel=\"noopener noreferrer\">Efficient and automatic instrumentation for packed binaries</a> (June 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6621654\" rel=\"noopener noreferrer\">Efficient malware packer identification using support vector machines with spectrum kernel</a> (July 2013)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.jstage.jst.go.jp/article/transinf/E94.D/9/E94.D_9_1778/_article\" rel=\"noopener noreferrer\">An empirical evaluation of an unpacking method implemented with dynamic binary instrumentation</a> (September 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.earticle.net/Article/A105986\" rel=\"noopener noreferrer\">Encoded executable file detection technique via executable file header analysis</a> (April 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/2388576.2388607\" rel=\"noopener noreferrer\">ESCAPE: Entropy score analysis of packed executable</a> (October 2012)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://docplayer.net/63501103-An-experimental-study-on-identifying-obfuscation-techniques-in-packer.html\" rel=\"noopener noreferrer\">An experimental study on identifying obfuscation techniques in packer</a> (June 2016)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5474800/\" rel=\"noopener noreferrer\">A fast flowgraph based classification system for packed and polymorphic malware on the endhost</a> (April 2010)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6912767\" rel=\"noopener noreferrer\">Feature set reduction for the detection of packed executables</a> (June 2014)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-34129-8_49\" rel=\"noopener noreferrer\">A fine-grained classification approach for the packed malicious code</a> (October 2012)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.semanticscholar.org/paper/Generic-Unpacker-of-Executable-Files-Milkovi/413321c5a473d59c18e861c1478cd44f88142275\" rel=\"noopener noreferrer\">Generic unpacker of executable files</a> (April 2015)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-42054-2_74\" rel=\"noopener noreferrer\">Generic unpacking method based on detecting original entry point</a> (November 2013)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/4909168\" rel=\"noopener noreferrer\">Generic unpacking techniques</a> (February 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.sstic.org/2016/presentation/gunpack/\" rel=\"noopener noreferrer\">Gunpack: Un outil g√©n√©rique d'unpacking de malwares</a> (June 2016)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5137328\" rel=\"noopener noreferrer\">A heuristic approach for detection of obfuscated malware</a> (June 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.semanticscholar.org/paper/An-Implementation-of-a-Generic-Unpacking-Method-on-HyungChanKim-Daisuke/d5c947520815105231673f1b87af57ed6abd379c\" rel=\"noopener noreferrer\">An implementation of a generic unpacking method on Bochs Emulator</a> (September 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/2799979.2800015\" rel=\"noopener noreferrer\">Information theoretic method for classification of packed and encoded files</a> (September 2015)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6956729\" rel=\"noopener noreferrer\">Instructions-based detection of sophisticated obfuscation and packing</a> (October 2014)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/7497952\" rel=\"noopener noreferrer\">Mal-EVE: Static detection model for evasive malware</a> (August 2015)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5633410\" rel=\"noopener noreferrer\">Malware obfuscation techniques: A brief survey</a> (November 2010)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/4721567\" rel=\"noopener noreferrer\">McBoost: Boosting scalability in malware collection and analysis using statistical classification of executables</a> (December 2008)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5665794\" rel=\"noopener noreferrer\">Memory behavior-based automatic malware unpacking in stealth debugging environment</a> (October 2010)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.eurecom.fr/fr/publication/5584\" rel=\"noopener noreferrer\">Modern linux malware exposed</a> (June 2018)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.usenix.org/conference/atc13/technical-sessions/presentation/hu\" rel=\"noopener noreferrer\">MutantX-S: Scalable malware clustering based on static features</a> (June 2013)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.earticle.net/Article/A147420\" rel=\"noopener noreferrer\">The new signature generation method based on an unpacking algorithm and procedure for a packer detection</a> (February 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-33018-6_28\" rel=\"noopener noreferrer\">OPEM: A static-dynamic approach for machine-learning-based malware detection</a> (September 2012)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5404211\" rel=\"noopener noreferrer\">Packed PE file detection for malware forensics</a> (December 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/2746194.2746213\" rel=\"noopener noreferrer\">Packer classifier based on PE header information</a> (April 2015)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://www.researchgate.net/publication/268355151_Pandora%27s_Bochs_Automatic_Unpacking_of_Malware\" rel=\"noopener noreferrer\">Pandora's Bochs: Automatic unpacking of malware</a> (January 2008)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/4654055\" rel=\"noopener noreferrer\">PE file header analysis-based packed PE file detection technique (PHAD)</a> (October 2008)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-29280-4_28\" rel=\"noopener noreferrer\">PEAL - Packed executable analysis</a> (January 2012)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5231651\" rel=\"noopener noreferrer\">Research and implementation of compression shell unpacking technology for PE file</a> (May 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6060027\" rel=\"noopener noreferrer\">Semi-supervised learning for packed executable detection</a> (September 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-19934-9_53\" rel=\"noopener noreferrer\">Semi-supervised learning for unknown malware detection</a> (April 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/2490428.2490442\" rel=\"noopener noreferrer\">SPADE: Signature based packer detection</a> (August 2012)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://link.springer.com/chapter/10.1007%2F978-3-642-21323-6_29\" rel=\"noopener noreferrer\">Structural feature based anomaly detection for packed executable identification</a> (June 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/6280206\" rel=\"noopener noreferrer\">The study of evasion of packed PE from static detection</a> (June 2012)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/abstract/document/6174775\" rel=\"noopener noreferrer\">Survey on malware evasion techniques: State of the art and challenges</a> (February 2012)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://dl.acm.org/doi/10.1145/1972551.1972556\" rel=\"noopener noreferrer\">Thwarting real-time dynamic unpacking</a> (January 2011)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://www.researchgate.net/publication/255608911_Toward_Generic_Unpacking_Techniques_for_Malware_Analysis_with_Quantification_of_Code_Revelation\" rel=\"noopener noreferrer\">Toward generic unpacking techniques for malware analysis with quantification of code revelation</a> (August 2009)</li>\n</ul>\n\n<ul>\n<li>üìì <a href=\"https://ieeexplore.ieee.org/document/5665795\" rel=\"noopener noreferrer\">Unconditional self-modifying code elimination with dynamic compiler optimizations</a> (October 2010)</li>\n</ul>\n\n<ul>\n<li>üéì <a href=\"https://repositorio-aberto.up.pt/bitstream/10216/68815/2/25935.pdf\" rel=\"noopener noreferrer\">Unpacking framework for packed malicious executables</a> (July 2013)</li>\n</ul>\n<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://cybercrime-tracker.net/vx.php\" rel=\"noopener noreferrer\">CyberCrime</a> - C¬≤ tracking and malware database.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dhondta/dataset-packed-pe\" rel=\"noopener noreferrer\">Dataset of Packed PE (‚≠ê35)</a> - Sanitized version of the original dataset, PackingData, removing packed samples from the Notpacked folder but also samples in packer folders that failed to be packed (having a same hash as the original unpacked executable).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20141221153307/http://malfease.oarci.net\" rel=\"noopener noreferrer\">Malfease</a> - Dataset of about 5,000 packed malware samples.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.dns-oarc.net\" rel=\"noopener noreferrer\">OARC Malware Dataset</a> - Semi-public dataset of 3,467 samples captured in the wild from Sep 2005 to Jan 2006 by mail traps, user submissions, honeypots and other sources aggregated by the OARC, available to qualified academic and industry researchers upon request.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ucsb-seclab/packware\" rel=\"noopener noreferrer\">Packware (‚≠ê86)</a> - Datasets and codes that are needed to reproduce the experiments in the paper \"When Malware is Packing Heat\".</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.researchgate.net/publication/268030543_Runtime_Packers_The_Hidden_Problem\" rel=\"noopener noreferrer\">Runtime Packers Testset</a> - Dataset of 10 common Malware files, packed with about 40 different runtime packers in over 500 versions and options, with a total of about 5,000 samples.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://vxvault.net/ViriList.php\" rel=\"noopener noreferrer\">VXvault</a> - Online malware database.</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://alienyze.com\" rel=\"noopener noreferrer\">Alienyze</a> - Advanced software protection and security for Windows 32-bit executables.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.alternate-tools.com/pages/c_exepacker.php\" rel=\"noopener noreferrer\">Alternate EXE Packer</a> - Compression tool for executable files (type EXE) or DLL's relying on UPX 3.96.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/EgeBalci/amber/releases\" rel=\"noopener noreferrer\">Amber (‚≠ê1.3k)</a> - Position-independent(reflective) PE loader that enables in-memory execution of native PE files(EXE, DLL, SYS).</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.aspack.com/aspack.html\" rel=\"noopener noreferrer\">ASPack</a> - Advanced solution created to provide Win32 EXE file packing and to protect them against non-professional reverse engineering.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.aspack.com/asprotect32.html\" rel=\"noopener noreferrer\">ASProtect 32</a> - Multifunctional EXE packing tool designed for software developers to protect 32-bit applications with in-built application copy protection system.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.aspack.com/asprotect64.html\" rel=\"noopener noreferrer\">ASProtect 64</a> - Tool for protecting 64-bit applications and .NET applications for Windows against unauthorized use, industrial and home copying, professional hacking and analysis of software products distributed over the Internet and on any physical media.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.autoitscript.com/site\" rel=\"noopener noreferrer\">AutoIT</a> - Legitimate executable encryption service.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.wibu.com/us/products/protection-suite/axprotector.html\" rel=\"noopener noreferrer\">AxProtector</a> - Encrypts the complete software you aim to protect, and shields it with a security shell, AxEngine, best-of-breed anti-debugging and anti-disassembly methods are then injected into your software.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/woxihuannisja/Bangcle\" rel=\"noopener noreferrer\">BangCle (‚≠ê401)</a> - Protection tool using the second generation Android Hardening Protection, loading the encrypted DEX file from memory dynamically.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://blog.rosseaux.net/page/875fbe6549aa072b5ee0ac9cefff4827/BeRoEXEPacker\" rel=\"noopener noreferrer\">Bero</a> - Bero EXE Packer (BEP) for 32-bit windows executables.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.oreans.com/CodeVirtualizer.php\" rel=\"noopener noreferrer\">Code Virtualizer</a> - Code Virtualizer is a powerful code obfuscation system for Windows, Linux and macOS applications that helps developers to protect their sensitive code areas against Reverse Engineering with very strong obfuscation code, based on code virtualization.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mkaring/ConfuserEx\" rel=\"noopener noreferrer\">ConfuserEx (‚≠ê2.6k)</a> - An open-source, free protector for .NET applications.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/runestubbe/Crinkler\" rel=\"noopener noreferrer\">Crinkler (‚≠ê1.1k)</a> - Compressing linker for Windows, specifically targeted towards executables with a size of just a few kilobytes.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://totalcmd.net/plugring/darkcrypttc.html\" rel=\"noopener noreferrer\">DarkCrypt</a> - Simply and powerful plugin for Total Commander used for file encryption using 100 algorithms and 5 modes.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.guardsquare.com/en/products/dexguard\" rel=\"noopener noreferrer\">DexGuard</a> - Android app obfuscation &amp; security protocols for mobile app protection.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://dexprotector.com/\" rel=\"noopener noreferrer\">DexProtector</a> - Multi-layered RASP solution that secures your Android and iOS apps against static and dynamic analysis, illegal use and tampering.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.softpedia.com/get/Programming/Packers-Crypters-Protectors/NETZ.shtml\" rel=\"noopener noreferrer\">DotNetZ</a> - Straightforward and lightweight, command-line piece of software written in C that allows you to compress and pack Microsoft .NET Framework executable files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/Eronana/packer\" rel=\"noopener noreferrer\">Eronona-Packer (‚≠ê49)</a> - This is a packer for exe under win32.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/guitmz/ezuri/blob/master/ezuri.go\" rel=\"noopener noreferrer\">Ezuri (‚≠ê257)</a> - A Simple Linux ELF Runtime Crypter.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://git.savannah.gnu.org/cgit/gzip.git\" rel=\"noopener noreferrer\">GzExe</a> - Utility that allows to compress executables as a shell script.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/friedkiwi/netcrypt\" rel=\"noopener noreferrer\">NetCrypt (‚≠ê63)</a> - A proof-of-concept packer for .NET executables, designed to provide a starting point to explain the basic principles of runtime packing.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dr4k0nia/Origami\" rel=\"noopener noreferrer\">Origami (‚≠ê173)</a> - Packer compressing .net assemblies, (ab)using the PE format for data storage.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/89luca89/pakkero\" rel=\"noopener noreferrer\">Pakkero (‚≠ê264)</a> - Pakkero is a binary packer written in Go made for fun and educational purpose.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.pelock.com\" rel=\"noopener noreferrer\">PELock</a> - Software protection system for Windows executable files ; protects your applications from tampering and reverse engineering, and provides extensive support for software license key management, including support for time trial periods.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/SamLarenN/PePacker\" rel=\"noopener noreferrer\">PePacker (‚≠ê51)</a> - Simple PE Packer Which Encrypts .text Section I release a simple PE file packer which encrypts the .text section and adds a decryption stub to the end of the last section.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://webscene.ir/tools/show/PE-SHIELD-0.25\" rel=\"noopener noreferrer\">PEShield</a> - PE-SHiELD is a program, which encrypts 32-bit Windows EXE files, leaving them still executable.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.un4seen.com/petite/\" rel=\"noopener noreferrer\">PEtite</a> - Free Win32 (Windows 95/98/2000/NT/XP/Vista/7/etc) executable (EXE/DLL/etc) compressor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.smartpacker.nl\" rel=\"noopener noreferrer\">Smart Packer</a> - Packs 32 &amp; 64bit applications with DLLs, data files, 3rd party run-time into one single executable that runs instantly, with no installs or hassles.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.oreans.com/themida.php\" rel=\"noopener noreferrer\">Themida</a> - From Renovo paper: Themida converts the original x86 instructions into virtual instructions in its own randomized instruction set, and then interpret these virtual instructions at run-time.</li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"http://20to4.net\" rel=\"noopener noreferrer\">20to4</a> - Executable compressor that is able to stuff about 20k of finest code and data into less than 4k.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.yaldex.com/Bestsoft/Utilities/acprotect.htm\" rel=\"noopener noreferrer\">ACProtect</a> - Application that allows to protect Windows executable files against piracy, using RSA to create and verify the registration keys and unlock code.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.delphibasics.info/home/delphibasicscounterstrikewireleases/ahpacker01byfeuerraderahteam\" rel=\"noopener noreferrer\">AHPack</a> - PE and PE+ file packer.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://sourceforge.net/projects/balaji/\" rel=\"noopener noreferrer\">Application Protector</a> - Tool for protecting Windows applications.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://en.52yma.com/thread-5444-1-1.html\" rel=\"noopener noreferrer\">AT4RE Protector</a> - Very simple PE files protector programmed in ASM.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20071012084924/http://secnull.org\" rel=\"noopener noreferrer\">AverCryptor</a> - Small and very handy utility designed to encrypt notes in which you can store any private information - it helps to hide your infection from antiviruses.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://packetstormsecurity.com/files/29691/burneye-1.0-linux-static.tar.gz.html\" rel=\"noopener noreferrer\">BurnEye</a> - Burneye ELF encryption program, x86-linux binary.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://csdb.dk/release/?id=33093\" rel=\"noopener noreferrer\">ByteBoozer</a> - Commodore 64 executable packer.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://exe32pack.apponic.com/\" rel=\"noopener noreferrer\">Exe32Pack</a> - Compresses Win32 EXEs, DLLs, etc and dynamically expands them upon execution.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.cgsoftlabs.ro/express.html\" rel=\"noopener noreferrer\">eXPressor</a> - Used as a compressor this tool can compress EXE files to half their normal size.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20030324043555/https://www.exetools.com/files/compressors/win/fsg.zip\" rel=\"noopener noreferrer\">FSG</a> - <em>Fast Small Good</em>, perfect compressor for small exes, eg.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.delphibasics.info/home/delphibasicscounterstrikewireleases/ghfprotector10\" rel=\"noopener noreferrer\">GHF Protector</a> - Executable packer / protector based on open source engines Morphine and AHPack.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.farbrausch.de/~fg/kkrunchy\" rel=\"noopener noreferrer\">Kkrunchy</a> - Kkrunchy is a small exe packer primarily meant for 64k intros.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://blog.fearcat.in/a?ID=00050-86a031da-e36f-4409-9a08-d3d993dbf8f5\" rel=\"noopener noreferrer\">mPack</a> - mPack - mario PACKersimple Win32 PE Executable compressor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://hacking-software-free-download.blogspot.com/2013/02/nt-packer-v21.html\" rel=\"noopener noreferrer\">NTPacker</a> - PE file packer relying on aPlib for compression and/or XOR for encryption.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20070527132336/http://rlpack.jezgra.net\" rel=\"noopener noreferrer\">RLPack</a> - Compresses your executables and dynamic link libraries in a way that keeps them small and has no effect on compressed file functionality.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://packetstormsecurity.com/files/31087/shiva-0.95.tar.gz.html\" rel=\"noopener noreferrer\">Shiva</a> - Shiva is a tool to encrypt ELF executables under Linux.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.softpedia.com/get/Programming/Packers-Crypters-Protectors/Telock.shtml\" rel=\"noopener noreferrer\">tElock</a> - Telock is a practical tool that intends to help developers who want to protect their work and reduce the size of the executable files.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://www.soft-lab.de/JoKo/index_old.htm\" rel=\"noopener noreferrer\">XComp</a> - PE32 image file packer and rebuilder.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://sourceforge.net/projects/yodap/files/Yoda%20Crypter/1.3/yC1.3.zip/download\" rel=\"noopener noreferrer\">Yoda Crypter</a> - Supports polymorphic encryption, softice detection, anti-debug API's, anti-dumping, etc, encrypts the Import Table and erases PE Header.</li>\n</ul>\n<h3><p>üì¶ Packers / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/32lte02d.zip\" rel=\"noopener noreferrer\">32Lite</a> - Compression tool for executable files created with Watcom C/C++ compiler.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/624-11.zip\" rel=\"noopener noreferrer\">624</a> - COM packer that can compress COM programs shorter than 25000 bytes.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/avpck122.zip\" rel=\"noopener noreferrer\">AVPack</a> - Encrypts EXE or COM files so that they'll be able to start on your PC only.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/axe22.zip\" rel=\"noopener noreferrer\">AXE</a> - Program compression utility.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/win/cexe10a.zip\" rel=\"noopener noreferrer\">CEXE</a> - Compresses an input EXE into a smaller executable (only runs on WinNT, Win2000 and above - won't run on Win95 or Win98).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/syspack.zip\" rel=\"noopener noreferrer\">SysPack</a> - Device drivers compressor.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20060111104142/http://www.exetools.com/files/compressors/dos/xpa.zip\" rel=\"noopener noreferrer\">XPA</a> - DOS executable packer.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/malicialab/avclass\" rel=\"noopener noreferrer\">AVClass (‚≠ê476)</a> - Python tools to tag / label malware samples.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/0xd4d/de4dot\" rel=\"noopener noreferrer\">de4dot (‚≠ê7.2k)</a> - .NET deobfuscator and unpacker.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/horsicq/DIE-engine/releases\" rel=\"noopener noreferrer\">DIE (‚≠ê2.7k)</a> - Detect It Easy ; Program for determining types of files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://techdocs.broadcom.com/us/en/symantec-security-software/endpoint-security-and-management/endpoint-protection/all/Using-policies-to-manage-security/preventing-and-handling-virus-and-spyware-attacks-v40739565-d49e172/how-does-the-emulator-in-symantec-endpoint-protect-v121004909-d47e230.html\" rel=\"noopener noreferrer\">Emulator</a> - Symantec Endpoint Protector (from v14) capability to create a virtual machine on the fly to identify, detonate, and eliminate malware hiding inside custom malware packers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://ether.gtisc.gatech.edu/web_unpack\" rel=\"noopener noreferrer\">EtherUnpack</a> - Precision universal automated unpacker (successor of PolyUnpack).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://forum.exetools.com\" rel=\"noopener noreferrer\">EXETools</a> - Forum for reverse engineering and executale packing related topics.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://doi.org/10.1007/978-3-540-87403-4_6\" rel=\"noopener noreferrer\">Justin</a> - Just-In-Time AV scanning ; generic unpacking solution.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rieck/malheur\" rel=\"noopener noreferrer\">Malheur (‚≠ê372)</a> - Tool for the automatic analysis of malware behavior (recorded from malicious software in a sandbox environment).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/hasherezade/mal_unpack\" rel=\"noopener noreferrer\">MalUnpack (‚≠ê739)</a> - Dynamic unpacker based on PE-sieve.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://ieeexplore.ieee.org/abstract/document/7782073\" rel=\"noopener noreferrer\">OEPdet</a> - Automated original-entry-point detector.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/xshows/ollydbg-script\" rel=\"noopener noreferrer\">OllyDbg Scripts (‚≠ê9)</a> - Collection of OllyDbg scripts for unpacking many different packers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://doi.org/10.1109/ACSAC.2007.15\" rel=\"noopener noreferrer\">OmniUnpack</a> - New technique for fast, generic, and safe unpacking of malware by monitoring the execution in real-time and detecting the removed layers of packing.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/sooshie/packerid\" rel=\"noopener noreferrer\">PackerID (‚≠ê43)</a> - Fork of packerid.py using PEid signatures and featuring additional output types, formats, digital signature extraction, and disassembly support.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://0x0badc0.de/gitweb?p=bochs/.git\" rel=\"noopener noreferrer\">Pandora's Bochs</a> - Extension to the Bochs PC eumlator to enable it to monitor execution of the unpacking stubs for extracting the original code.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://ntcore.com/?page_id=367\" rel=\"noopener noreferrer\">PE Detective</a> - This GUI tool can scan single PE files or entire directories (also recursevely) and generate complete reports.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/hasherezade/pe-bear-releases\" rel=\"noopener noreferrer\">PE-bear (‚≠ê779)</a> - Freeware reversing tool for PE files aimed to deliver fast and flexible ‚Äúfirst view‚Äù for malware analysts, stable and capable to handle malformed PE files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/roussieau/masterthesis/tree/master/src/detector/tools/pefeats\" rel=\"noopener noreferrer\">Pefeats (‚≠ê2)</a> - Utility for extracting 119 features from a PE file for use with machine learning algorithms.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/erocarrera/pefile\" rel=\"noopener noreferrer\">Pefile (‚≠ê2k)</a> - Multi-platform Python module to parse and work with Portable Executable files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.amazon.com/Norton-AntiVirus-2007-Old-Version/dp/B000IAOIXW\" rel=\"noopener noreferrer\">SymPack</a> - Safe, portable, largely eÔ¨Äective but not generic library for packing detection and unpacking ; part of the Norton Antivirus solution.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.reversinglabs.com/products/malware-analysis-platform\" rel=\"noopener noreferrer\">Titanium Platform</a> - Machine learning hybrid cloud platform that harvests thousands of file types at scale, speeds threat detection through machine learning binary analysis, and continuously monitors an index of over 10B files for future threats.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://web.archive.org/web/20191218043307/http://www.woodmann.com/crackz/Tools/\" rel=\"noopener noreferrer\">Unpckarc</a> - Packed executables detection tool relying on several heuristics.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/01/13/",
      "title": "Awesome Executable Packing Updates on Jan 13, 2022",
      "_short_title": "Jan 13, 2022",
      "_slug": "2022/01/13/",
      "summary": "41 awesome projects updated on Jan 13, 2022",
      "_filepath": "/content/2022/01/13/README.md",
      "url": "https://www.trackawesomelist.com/2022/01/13/",
      "date_published": "2022-01-13T22:20:42.000Z",
      "date_modified": "2022-01-13T22:20:42.000Z",
      "content_text": "\n\n### :bookmark_tabs: Datasets / Scientific Research\n\n*   [Ember (‚≠ê1k)](https://github.com/elastic/ember) - Collection of features from PE files that serve as a benchmark dataset for researchers.\n*   [MalShare](https://malshare.com) - Free Malware repository providing researchers access to samples, malicious feeds, and Yara results.\n*   [PackingData (‚≠ê14)](https://github.com/chesvectain/PackingData) - Original dataset with sample PE files packed with a large variety of packers, including ASPack, BeRoEXEPacker, exe32pack, eXpressor, FSG, JDPack, MEW, Molebox, MPRESS, Neolite, NSPack, Pckman, PECompact, PEtite, RLPack, UPX, WinUpack, Yoda's Crypter and Yoda's Protector.\n*   [SOREL (‚≠ê669)](https://github.com/sophos-ai/SOREL-20M) - Sophos-ReversingLabs 20 Million dataset.\n*   [theZoo (‚≠ê12k)](https://github.com/ytisf/theZoo) - Project created to make the possibility of malware analysis open and available to the public.\n\n### :package: Packers / After 2010\n\n*   [Andromeda](https://blog.morphisec.com/andromeda-tactics-analyzed) - Custom packer used in malware campaigns using RunPE techniques for evading AV mitigation methods.\n*   [BIN-crypter](https://www.autoitscript.com/forum/topic/129383-bin-crypter/) - EXE protection software against crackers and decompilers.\n*   [ELFuck (‚≠ê32)](https://github.com/timhsutw/elfuck) - ELF packer for i386 original version from sk2 by sd.\n*   [LM-X License Manager](https://www.x-formation.com/lm-x-license-manager) - LM-X License Manager lets you protect your products against piracy by enforcing various levels of security, save time, and reduce business risks.\n*   [m0dern\\_p4cker (‚≠ê42)](https://github.com/n4sm/m0dern_p4cker) - Just a modern packer for elf binaries ( works on linux executables only ).\n*   [MidgetPack (‚≠ê204)](https://github.com/arisada/midgetpack) - Midgetpack is a binary packer for ELF binaries, such as burneye, upx or other tools.\n*   [PE-Packer (‚≠ê345)](https://github.com/czs108/PE-Packer) - Simple packer for Windows 32-bits PE files.\n*   [PE-Toy (‚≠ê9)](https://github.com/r0ngwe1/petoy) - A PE file packer.\n*   [Silent-Packer (‚≠ê93)](https://github.com/SilentVoid13/Silent_Packer) - Silent Packer is an ELF / PE packer written in pure C.\n*   [Simple-PE32-Packer (‚≠ê10)](https://github.com/z3r0d4y5/Simple-PE32-Packer) - Simple PE32 Packer with aPLib compression library.\n*   [theArk (‚≠ê52)](https://github.com/aaaddress1/theArk) - Windows x86 PE Packer In C++.\n*   [UPX](https://upx.github.io/) - Ultimate Packer for eXecutables.\n*   [xorPacker (‚≠ê14)](https://github.com/nqntmqmqmb/xorPacker) - Simple packer working with all PE files which cipher your exe with a XOR implementation.\n\n### :package: Packers / Between 2000 and 2010\n\n*   [Yoda Protector](http://yodap.sourceforge.net) - Free, open source, Windows 32-bit software protector.\n\n### :wrench: Tools / Before 2000\n\n*   [Android Unpacker (‚≠ê1.1k)](https://github.com/strazzere/android-unpacker) - Android Unpacker presented at Defcon 22: Android Hacker Protection Level 0.\n*   [aPLib](https://ibsensoftware.com/products_aPLib.html) - Compression library based on the algorithm used in aPACK.\n*   [AppSpear (‚≠ê44)](https://github.com/UchihaL/AppSpear) - Universal and automated unpacking system suitable for both Dalvik and ART.\n*   [Bintropy (‚≠ê47)](https://github.com/dhondta/bintropy) - Prototype analysis tool that estimates the likelihood that a binary file contains compressed or encrypted bytes.\n*   [BitBlaze](http://bitblaze.cs.berkeley.edu/release/index.html) - Analysis platform that features a novel fusion of static and dynamic analysis techniques, mixed concrete and symbolic execution, and whole-system emulation and binary instrumentation, all to facilitate state-of-the art research on real security problems.\n*   [Clamscan Unpacker](https://clamunpacker.sourceforge.io/) - Unpacker derived from ClamAV.\n*   [de4js (‚≠ê1.5k)](https://github.com/lelinhtinh/de4js) - JavaScript Deobfuscator and Unpacker.\n*   [EXEInfo-PE (‚≠ê918)](https://github.com/ExeinfoASL/ASL) - Fast detector for executable PE files.\n*   [Manalyze (‚≠ê1.1k)](https://github.com/JusticeRage/Manalyze) - Robust parser for PE files with a flexible plugin architecture which allows users to statically analyze files in-depth.\n*   [PackerAttacker (‚≠ê270)](https://github.com/BromiumLabs/PackerAttacker) - Tool that uses memory and code hooks to detect packers.\n*   [PackerGrind (‚≠ê38)](https://github.com/rewhy/adaptiveunpacker) - Adaptive unpacking tool for tracking packing bahaviors and unpacking Android packed apps.\n*   [Packing-Box (‚≠ê60)](https://github.com/dhondta/docker-packing-box) - Docker image gathering many packing-related tools and for making datasets of packed executables for use with machine learning.\n*   [PEFrame (‚≠ê613)](https://github.com/guelfoweb/peframe) - Tool for performing static analysis on PE malware and generic suspicious files.\n*   [PEiD (yara) (‚≠ê17)](https://github.com/K-atc/PEiD) - Yet another implementation of PEiD with yara.\n*   [PeLib (‚≠ê64)](https://github.com/avast/pelib) - PE file manipulation library.\n*   [PINdemonium (‚≠ê235)](https://github.com/Phat3/PINdemonium) - Unpacker for PE files exploiting the capabilities of PIN.\n*   [PolyUnpack (‚≠ê12)](https://github.com/PlatonovIvan/PolyUnpack) - Implemention attempt of the general approach for extracting the original hidden code of PE files without any heuristic assumptions.\n*   [PyPackerDetect (‚≠ê32)](https://github.com/cylance/PyPackerDetect) - Small python script/library to detect whether an executable is packed.\n*   [PyPackerDetect (refactored) (‚≠ê24)](https://github.com/dhondta/PyPackerDetect) - A complete refactoring of the original project to a Python package with a console script to detect whether an executable is packed.\n*   [PyPeid (‚≠ê6)](https://github.com/FFRI/pypeid) - Yet another implementation of PEiD with yara-python.\n*   [Unipacker (‚≠ê708)](https://github.com/unipacker/unipacker) - Automatic and platform-independent unpacker for Windows binaries based on emulation.\n*   [Uunp (IDA Pro plugin)](https://www.hex-rays.com/blog/unpacking-mpressed-pe-dlls-with-the-bochs-plugin/) - IDA Pro debugger plug-in module automating the analysis and unpacking of packed binaries.",
      "content_html": "<h3><p>üìë Datasets / Scientific Research</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/elastic/ember\" rel=\"noopener noreferrer\">Ember (‚≠ê1k)</a> - Collection of features from PE files that serve as a benchmark dataset for researchers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://malshare.com\" rel=\"noopener noreferrer\">MalShare</a> - Free Malware repository providing researchers access to samples, malicious feeds, and Yara results.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/chesvectain/PackingData\" rel=\"noopener noreferrer\">PackingData (‚≠ê14)</a> - Original dataset with sample PE files packed with a large variety of packers, including ASPack, BeRoEXEPacker, exe32pack, eXpressor, FSG, JDPack, MEW, Molebox, MPRESS, Neolite, NSPack, Pckman, PECompact, PEtite, RLPack, UPX, WinUpack, Yoda's Crypter and Yoda's Protector.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/sophos-ai/SOREL-20M\" rel=\"noopener noreferrer\">SOREL (‚≠ê669)</a> - Sophos-ReversingLabs 20 Million dataset.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ytisf/theZoo\" rel=\"noopener noreferrer\">theZoo (‚≠ê12k)</a> - Project created to make the possibility of malware analysis open and available to the public.</li>\n</ul>\n<h3><p>üì¶ Packers / After 2010</p>\n</h3>\n<ul>\n<li><a href=\"https://blog.morphisec.com/andromeda-tactics-analyzed\" rel=\"noopener noreferrer\">Andromeda</a> - Custom packer used in malware campaigns using RunPE techniques for evading AV mitigation methods.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.autoitscript.com/forum/topic/129383-bin-crypter/\" rel=\"noopener noreferrer\">BIN-crypter</a> - EXE protection software against crackers and decompilers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/timhsutw/elfuck\" rel=\"noopener noreferrer\">ELFuck (‚≠ê32)</a> - ELF packer for i386 original version from sk2 by sd.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.x-formation.com/lm-x-license-manager\" rel=\"noopener noreferrer\">LM-X License Manager</a> - LM-X License Manager lets you protect your products against piracy by enforcing various levels of security, save time, and reduce business risks.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/n4sm/m0dern_p4cker\" rel=\"noopener noreferrer\">m0dern_p4cker (‚≠ê42)</a> - Just a modern packer for elf binaries ( works on linux executables only ).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/arisada/midgetpack\" rel=\"noopener noreferrer\">MidgetPack (‚≠ê204)</a> - Midgetpack is a binary packer for ELF binaries, such as burneye, upx or other tools.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/czs108/PE-Packer\" rel=\"noopener noreferrer\">PE-Packer (‚≠ê345)</a> - Simple packer for Windows 32-bits PE files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/r0ngwe1/petoy\" rel=\"noopener noreferrer\">PE-Toy (‚≠ê9)</a> - A PE file packer.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/SilentVoid13/Silent_Packer\" rel=\"noopener noreferrer\">Silent-Packer (‚≠ê93)</a> - Silent Packer is an ELF / PE packer written in pure C.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/z3r0d4y5/Simple-PE32-Packer\" rel=\"noopener noreferrer\">Simple-PE32-Packer (‚≠ê10)</a> - Simple PE32 Packer with aPLib compression library.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/aaaddress1/theArk\" rel=\"noopener noreferrer\">theArk (‚≠ê52)</a> - Windows x86 PE Packer In C++.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://upx.github.io/\" rel=\"noopener noreferrer\">UPX</a> - Ultimate Packer for eXecutables.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/nqntmqmqmb/xorPacker\" rel=\"noopener noreferrer\">xorPacker (‚≠ê14)</a> - Simple packer working with all PE files which cipher your exe with a XOR implementation.</li>\n</ul>\n<h3><p>üì¶ Packers / Between 2000 and 2010</p>\n</h3>\n<ul>\n<li><a href=\"http://yodap.sourceforge.net\" rel=\"noopener noreferrer\">Yoda Protector</a> - Free, open source, Windows 32-bit software protector.</li>\n</ul>\n<h3><p>üîß Tools / Before 2000</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/strazzere/android-unpacker\" rel=\"noopener noreferrer\">Android Unpacker (‚≠ê1.1k)</a> - Android Unpacker presented at Defcon 22: Android Hacker Protection Level 0.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://ibsensoftware.com/products_aPLib.html\" rel=\"noopener noreferrer\">aPLib</a> - Compression library based on the algorithm used in aPACK.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/UchihaL/AppSpear\" rel=\"noopener noreferrer\">AppSpear (‚≠ê44)</a> - Universal and automated unpacking system suitable for both Dalvik and ART.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dhondta/bintropy\" rel=\"noopener noreferrer\">Bintropy (‚≠ê47)</a> - Prototype analysis tool that estimates the likelihood that a binary file contains compressed or encrypted bytes.</li>\n</ul>\n\n<ul>\n<li><a href=\"http://bitblaze.cs.berkeley.edu/release/index.html\" rel=\"noopener noreferrer\">BitBlaze</a> - Analysis platform that features a novel fusion of static and dynamic analysis techniques, mixed concrete and symbolic execution, and whole-system emulation and binary instrumentation, all to facilitate state-of-the art research on real security problems.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://clamunpacker.sourceforge.io/\" rel=\"noopener noreferrer\">Clamscan Unpacker</a> - Unpacker derived from ClamAV.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/lelinhtinh/de4js\" rel=\"noopener noreferrer\">de4js (‚≠ê1.5k)</a> - JavaScript Deobfuscator and Unpacker.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ExeinfoASL/ASL\" rel=\"noopener noreferrer\">EXEInfo-PE (‚≠ê918)</a> - Fast detector for executable PE files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/JusticeRage/Manalyze\" rel=\"noopener noreferrer\">Manalyze (‚≠ê1.1k)</a> - Robust parser for PE files with a flexible plugin architecture which allows users to statically analyze files in-depth.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/BromiumLabs/PackerAttacker\" rel=\"noopener noreferrer\">PackerAttacker (‚≠ê270)</a> - Tool that uses memory and code hooks to detect packers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/rewhy/adaptiveunpacker\" rel=\"noopener noreferrer\">PackerGrind (‚≠ê38)</a> - Adaptive unpacking tool for tracking packing bahaviors and unpacking Android packed apps.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dhondta/docker-packing-box\" rel=\"noopener noreferrer\">Packing-Box (‚≠ê60)</a> - Docker image gathering many packing-related tools and for making datasets of packed executables for use with machine learning.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/guelfoweb/peframe\" rel=\"noopener noreferrer\">PEFrame (‚≠ê613)</a> - Tool for performing static analysis on PE malware and generic suspicious files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/K-atc/PEiD\" rel=\"noopener noreferrer\">PEiD (yara) (‚≠ê17)</a> - Yet another implementation of PEiD with yara.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/avast/pelib\" rel=\"noopener noreferrer\">PeLib (‚≠ê64)</a> - PE file manipulation library.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/Phat3/PINdemonium\" rel=\"noopener noreferrer\">PINdemonium (‚≠ê235)</a> - Unpacker for PE files exploiting the capabilities of PIN.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/PlatonovIvan/PolyUnpack\" rel=\"noopener noreferrer\">PolyUnpack (‚≠ê12)</a> - Implemention attempt of the general approach for extracting the original hidden code of PE files without any heuristic assumptions.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/cylance/PyPackerDetect\" rel=\"noopener noreferrer\">PyPackerDetect (‚≠ê32)</a> - Small python script/library to detect whether an executable is packed.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dhondta/PyPackerDetect\" rel=\"noopener noreferrer\">PyPackerDetect (refactored) (‚≠ê24)</a> - A complete refactoring of the original project to a Python package with a console script to detect whether an executable is packed.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/FFRI/pypeid\" rel=\"noopener noreferrer\">PyPeid (‚≠ê6)</a> - Yet another implementation of PEiD with yara-python.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/unipacker/unipacker\" rel=\"noopener noreferrer\">Unipacker (‚≠ê708)</a> - Automatic and platform-independent unpacker for Windows binaries based on emulation.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.hex-rays.com/blog/unpacking-mpressed-pe-dlls-with-the-bochs-plugin/\" rel=\"noopener noreferrer\">Uunp (IDA Pro plugin)</a> - IDA Pro debugger plug-in module automating the analysis and unpacking of packed binaries.</li>\n</ul>\n"
    }
  ]
}
