{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Mar 14, 2022",
  "_site_title": "Track Awesome List",
  "description": "14 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Mar 14, 2022 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/georgezouq/awesome-ai-in-finance/",
      "title": "Awesome Ai in Finance",
      "_slug": "georgezouq/awesome-ai-in-finance/",
      "_filepath": "/content/georgezouq/awesome-ai-in-finance/README.md",
      "url": "https://www.trackawesomelist.com/georgezouq/awesome-ai-in-finance/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Papers\n\n*   [FinRL: A Deep Reinforcement Learning Library for Automated Stock Trading in Quantitative Finance, 2020](https://arxiv.org/abs/2011.09607) - Introduce a DRL library FinRL that facilitates beginners to expose themselves to quantitative finance and to develop their own stock trading strategies.",
      "content_html": "<h3><p>Papers</p>\n</h3><ul>\n<li><a href=\"https://arxiv.org/abs/2011.09607\" rel=\"noopener noreferrer\">FinRL: A Deep Reinforcement Learning Library for Automated Stock Trading in Quantitative Finance, 2020</a> - Introduce a DRL library FinRL that facilitates beginners to expose themselves to quantitative finance and to develop their own stock trading strategies.</li>\n</ul>\n",
      "date_published": "2022-03-14T23:27:21.000Z",
      "date_modified": "2022-03-14T23:27:21.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/akullpp/awesome-java/",
      "title": "Awesome Java",
      "_slug": "akullpp/awesome-java/",
      "_filepath": "/content/akullpp/awesome-java/README.md",
      "url": "https://www.trackawesomelist.com/akullpp/awesome-java/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Logging / Text-Based User Interfaces\n\n*   [Echopraxia (⭐56)](https://github.com/tersesystems/echopraxia) - API designed around structured logging, rich context, and conditional logging. There are Logback and Log4J2 implementations, but Echopraxia's API is completely dependency-free, meaning it can be implemented with any logging API.",
      "content_html": "<h3><p>Logging / Text-Based User Interfaces</p>\n</h3><ul>\n<li><a href=\"https://github.com/tersesystems/echopraxia\" rel=\"noopener noreferrer\">Echopraxia (⭐56)</a> - API designed around structured logging, rich context, and conditional logging. There are Logback and Log4J2 implementations, but Echopraxia's API is completely dependency-free, meaning it can be implemented with any logging API.</li>\n</ul>\n",
      "date_published": "2022-03-14T17:44:26.000Z",
      "date_modified": "2022-03-14T17:44:26.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/mxschmitt/awesome-playwright/",
      "title": "Awesome Playwright",
      "_slug": "mxschmitt/awesome-playwright/",
      "_filepath": "/content/mxschmitt/awesome-playwright/README.md",
      "url": "https://www.trackawesomelist.com/mxschmitt/awesome-playwright/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Integrations\n\n*   [playwright-pytest (⭐492)](https://github.com/microsoft/playwright-pytest/) - Official Pytest plugin for using Playwright pages with fixtures.",
      "content_html": "<h3><p>Integrations</p>\n</h3><ul>\n<li><a href=\"https://github.com/microsoft/playwright-pytest/\" rel=\"noopener noreferrer\">playwright-pytest (⭐492)</a> - Official Pytest plugin for using Playwright pages with fixtures.</li>\n</ul>\n",
      "date_published": "2022-03-14T17:43:20.000Z",
      "date_modified": "2022-03-14T17:43:20.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/n2cholas/awesome-jax/",
      "title": "Awesome Jax",
      "_slug": "n2cholas/awesome-jax/",
      "_filepath": "/content/n2cholas/awesome-jax/README.md",
      "url": "https://www.trackawesomelist.com/n2cholas/awesome-jax/",
      "summary": "3 awesome projects updated",
      "content_text": "\n\n### Libraries / New Libraries\n\n*   [Einshape (⭐104)](https://github.com/deepmind/einshape) - DSL-based reshaping library for JAX and other frameworks. <img src=\"https://img.shields.io/github/stars/deepmind/einshape?style=social\" align=\"center\">\n*   [ALX (⭐36k)](https://github.com/google-research/google-research/tree/master/alx) - Open-source library for distributed matrix factorization using Alternating Least Squares, more info in [*ALX: Large Scale Matrix Factorization on TPUs*](https://arxiv.org/abs/2112.02194).\n*   [Diffrax (⭐1.7k)](https://github.com/patrick-kidger/diffrax) - Numerical differential equation solvers in JAX. <img src=\"https://img.shields.io/github/stars/patrick-kidger/diffrax?style=social\" align=\"center\">\n\n### Models and Projects / JAX\n\n*   [Symbolic Functionals (⭐36k)](https://github.com/google-research/google-research/tree/master/symbolic_functionals) - Demonstration from [*Evolving symbolic density functionals*](https://arxiv.org/abs/2203.02540).\n*   [TriMap (⭐36k)](https://github.com/google-research/google-research/tree/master/trimap) - Official JAX implementation of [*TriMap: Large-scale Dimensionality Reduction Using Triplets*](https://arxiv.org/abs/1910.00204).\n\n### Models and Projects / Flax\n\n*   [mip-NeRF (⭐931)](https://github.com/google/mipnerf) - Official implementation of [*Mip-NeRF: A Multiscale Representation for Anti-Aliasing Neural Radiance Fields*](https://jonbarron.info/mipnerf).\n*   [RegNeRF (⭐36k)](https://github.com/google-research/google-research/tree/master/regnerf) - Official implementation of [*RegNeRF: Regularizing Neural Radiance Fields for View Synthesis from Sparse Inputs*](https://m-niemeyer.github.io/regnerf/).\n*   [ARDM (⭐36k)](https://github.com/google-research/google-research/tree/master/autoregressive_diffusion) - Official implementation of [*Autoregressive Diffusion Models*](https://arxiv.org/abs/2110.02037).\n*   [D3PM (⭐36k)](https://github.com/google-research/google-research/tree/master/d3pm) - Official implementation of [*Structured Denoising Diffusion Models in Discrete State-Spaces*](https://arxiv.org/abs/2107.03006).\n*   [Gumbel-max Causal Mechanisms (⭐36k)](https://github.com/google-research/google-research/tree/master/gumbel_max_causal_gadgets) - Code for [*Learning Generalized Gumbel-max Causal Mechanisms*](https://arxiv.org/abs/2111.06888), with extra code in [GuyLor/gumbel\\_max\\_causal\\_gadgets\\_part2 (⭐2)](https://github.com/GuyLor/gumbel_max_causal_gadgets_part2).\n*   [Latent Programmer (⭐36k)](https://github.com/google-research/google-research/tree/master/latent_programmer) - Code for the ICML 2021 paper [*Latent Programmer: Discrete Latent Codes for Program Synthesis*](https://arxiv.org/abs/2012.00377).\n*   [SNeRG (⭐36k)](https://github.com/google-research/google-research/tree/master/snerg) - Official implementation of [*Baking Neural Radiance Fields for Real-Time View Synthesis*](https://phog.github.io/snerg).\n*   [Spin-weighted Spherical CNNs (⭐36k)](https://github.com/google-research/google-research/tree/master/spin_spherical_cnns) - Adaptation of [*Spin-Weighted Spherical CNNs*](https://arxiv.org/abs/2006.10731).\n*   [VDVAE (⭐36k)](https://github.com/google-research/google-research/tree/master/vdvae_flax) - Adaptation of [*Very Deep VAEs Generalize Autoregressive Models and Can Outperform Them on Images*](https://arxiv.org/abs/2011.10650), original code at [openai/vdvae (⭐446)](https://github.com/openai/vdvae).\n*   [MUSIQ (⭐36k)](https://github.com/google-research/google-research/tree/master/musiq) - Checkpoints and model inference code for the ICCV 2021 paper [*MUSIQ: Multi-scale Image Quality Transformer*](https://arxiv.org/abs/2108.05997)\n*   [AQuaDem (⭐36k)](https://github.com/google-research/google-research/tree/master/aquadem) - Official implementation of [*Continuous Control with Action Quantization from Demonstrations*](https://arxiv.org/abs/2110.10149).\n*   [Combiner (⭐36k)](https://github.com/google-research/google-research/tree/master/combiner) - Official implementation of [*Combiner: Full Attention Transformer with Sparse Computation Cost*](https://arxiv.org/abs/2107.05768).\n*   [Dreamfields (⭐36k)](https://github.com/google-research/google-research/tree/master/dreamfields) - Official implementation of the ICLR 2022 paper [*Progressive Distillation for Fast Sampling of Diffusion Models*](https://ajayj.com/dreamfields).\n*   [GIFT (⭐36k)](https://github.com/google-research/google-research/tree/master/gift) - Official implementation of [*Gradual Domain Adaptation in the Wild:When Intermediate Distributions are Absent*](https://arxiv.org/abs/2106.06080).\n*   [Light Field Neural Rendering (⭐36k)](https://github.com/google-research/google-research/tree/master/light_field_neural_rendering) - Official implementation of [*Light Field Neural Rendering*](https://arxiv.org/abs/2112.09687).",
      "content_html": "<h3><p>Libraries / New Libraries</p>\n</h3><ul>\n<li><a href=\"https://github.com/deepmind/einshape\" rel=\"noopener noreferrer\">Einshape (⭐104)</a> - DSL-based reshaping library for JAX and other frameworks. <img src=\"https://img.shields.io/github/stars/deepmind/einshape?style=social\" align=\"center\" /></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/alx\" rel=\"noopener noreferrer\">ALX (⭐36k)</a> - Open-source library for distributed matrix factorization using Alternating Least Squares, more info in <a href=\"https://arxiv.org/abs/2112.02194\" rel=\"noopener noreferrer\"><em>ALX: Large Scale Matrix Factorization on TPUs</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/patrick-kidger/diffrax\" rel=\"noopener noreferrer\">Diffrax (⭐1.7k)</a> - Numerical differential equation solvers in JAX. <img src=\"https://img.shields.io/github/stars/patrick-kidger/diffrax?style=social\" align=\"center\" /></li>\n</ul>\n<h3><p>Models and Projects / JAX</p>\n</h3><ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/symbolic_functionals\" rel=\"noopener noreferrer\">Symbolic Functionals (⭐36k)</a> - Demonstration from <a href=\"https://arxiv.org/abs/2203.02540\" rel=\"noopener noreferrer\"><em>Evolving symbolic density functionals</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/trimap\" rel=\"noopener noreferrer\">TriMap (⭐36k)</a> - Official JAX implementation of <a href=\"https://arxiv.org/abs/1910.00204\" rel=\"noopener noreferrer\"><em>TriMap: Large-scale Dimensionality Reduction Using Triplets</em></a>.</li>\n</ul>\n<h3><p>Models and Projects / Flax</p>\n</h3><ul>\n<li><a href=\"https://github.com/google/mipnerf\" rel=\"noopener noreferrer\">mip-NeRF (⭐931)</a> - Official implementation of <a href=\"https://jonbarron.info/mipnerf\" rel=\"noopener noreferrer\"><em>Mip-NeRF: A Multiscale Representation for Anti-Aliasing Neural Radiance Fields</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/regnerf\" rel=\"noopener noreferrer\">RegNeRF (⭐36k)</a> - Official implementation of <a href=\"https://m-niemeyer.github.io/regnerf/\" rel=\"noopener noreferrer\"><em>RegNeRF: Regularizing Neural Radiance Fields for View Synthesis from Sparse Inputs</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/autoregressive_diffusion\" rel=\"noopener noreferrer\">ARDM (⭐36k)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2110.02037\" rel=\"noopener noreferrer\"><em>Autoregressive Diffusion Models</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/d3pm\" rel=\"noopener noreferrer\">D3PM (⭐36k)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2107.03006\" rel=\"noopener noreferrer\"><em>Structured Denoising Diffusion Models in Discrete State-Spaces</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/gumbel_max_causal_gadgets\" rel=\"noopener noreferrer\">Gumbel-max Causal Mechanisms (⭐36k)</a> - Code for <a href=\"https://arxiv.org/abs/2111.06888\" rel=\"noopener noreferrer\"><em>Learning Generalized Gumbel-max Causal Mechanisms</em></a>, with extra code in <a href=\"https://github.com/GuyLor/gumbel_max_causal_gadgets_part2\" rel=\"noopener noreferrer\">GuyLor/gumbel_max_causal_gadgets_part2 (⭐2)</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/latent_programmer\" rel=\"noopener noreferrer\">Latent Programmer (⭐36k)</a> - Code for the ICML 2021 paper <a href=\"https://arxiv.org/abs/2012.00377\" rel=\"noopener noreferrer\"><em>Latent Programmer: Discrete Latent Codes for Program Synthesis</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/snerg\" rel=\"noopener noreferrer\">SNeRG (⭐36k)</a> - Official implementation of <a href=\"https://phog.github.io/snerg\" rel=\"noopener noreferrer\"><em>Baking Neural Radiance Fields for Real-Time View Synthesis</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/spin_spherical_cnns\" rel=\"noopener noreferrer\">Spin-weighted Spherical CNNs (⭐36k)</a> - Adaptation of <a href=\"https://arxiv.org/abs/2006.10731\" rel=\"noopener noreferrer\"><em>Spin-Weighted Spherical CNNs</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/vdvae_flax\" rel=\"noopener noreferrer\">VDVAE (⭐36k)</a> - Adaptation of <a href=\"https://arxiv.org/abs/2011.10650\" rel=\"noopener noreferrer\"><em>Very Deep VAEs Generalize Autoregressive Models and Can Outperform Them on Images</em></a>, original code at <a href=\"https://github.com/openai/vdvae\" rel=\"noopener noreferrer\">openai/vdvae (⭐446)</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/musiq\" rel=\"noopener noreferrer\">MUSIQ (⭐36k)</a> - Checkpoints and model inference code for the ICCV 2021 paper <a href=\"https://arxiv.org/abs/2108.05997\" rel=\"noopener noreferrer\"><em>MUSIQ: Multi-scale Image Quality Transformer</em></a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/aquadem\" rel=\"noopener noreferrer\">AQuaDem (⭐36k)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2110.10149\" rel=\"noopener noreferrer\"><em>Continuous Control with Action Quantization from Demonstrations</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/combiner\" rel=\"noopener noreferrer\">Combiner (⭐36k)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2107.05768\" rel=\"noopener noreferrer\"><em>Combiner: Full Attention Transformer with Sparse Computation Cost</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/dreamfields\" rel=\"noopener noreferrer\">Dreamfields (⭐36k)</a> - Official implementation of the ICLR 2022 paper <a href=\"https://ajayj.com/dreamfields\" rel=\"noopener noreferrer\"><em>Progressive Distillation for Fast Sampling of Diffusion Models</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/gift\" rel=\"noopener noreferrer\">GIFT (⭐36k)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2106.06080\" rel=\"noopener noreferrer\"><em>Gradual Domain Adaptation in the Wild:When Intermediate Distributions are Absent</em></a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google-research/google-research/tree/master/light_field_neural_rendering\" rel=\"noopener noreferrer\">Light Field Neural Rendering (⭐36k)</a> - Official implementation of <a href=\"https://arxiv.org/abs/2112.09687\" rel=\"noopener noreferrer\"><em>Light Field Neural Rendering</em></a>.</li>\n</ul>\n",
      "date_published": "2022-03-14T17:42:47.000Z",
      "date_modified": "2022-03-14T17:42:47.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/timofurrer/awesome-asyncio/",
      "title": "Awesome Asyncio",
      "_slug": "timofurrer/awesome-asyncio/",
      "_filepath": "/content/timofurrer/awesome-asyncio/README.md",
      "url": "https://www.trackawesomelist.com/timofurrer/awesome-asyncio/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Database Drivers\n\n*   [Prisma Client Python (⭐2k)](https://github.com/RobertCraigie/prisma-client-py) - An auto-generated, fully type safe ORM powered by Pydantic and tailored specifically for your schema - supports SQLite, PostgreSQL, MySQL, MongoDB, MariaDB and more.",
      "content_html": "<h3><p>Database Drivers</p>\n</h3><ul>\n<li><a href=\"https://github.com/RobertCraigie/prisma-client-py\" rel=\"noopener noreferrer\">Prisma Client Python (⭐2k)</a> - An auto-generated, fully type safe ORM powered by Pydantic and tailored specifically for your schema - supports SQLite, PostgreSQL, MySQL, MongoDB, MariaDB and more.</li>\n</ul>\n",
      "date_published": "2022-03-14T17:39:22.000Z",
      "date_modified": "2022-03-14T17:39:22.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/avelino/awesome-go/",
      "title": "Awesome Go",
      "_slug": "avelino/awesome-go/",
      "_filepath": "/content/avelino/awesome-go/README.md",
      "url": "https://www.trackawesomelist.com/avelino/awesome-go/",
      "summary": "14 awesome projects updated",
      "content_text": "\n\n### Language Detection\n\n*   [guesslanguage (⭐58)](https://github.com/endeveit/guesslanguage) - Functions to determine the natural language of a unicode text.\n*   [whatlanggo (⭐659)](https://github.com/abadojack/whatlanggo) - Natural language detection package for Go. Supports 84 languages and 24 scripts (writing systems e.g. Latin, Cyrillic, etc).\n\n### Morphological Analyzers\n\n*   [snowball (⭐38)](https://github.com/goodsign/snowball) - Snowball stemmer port (cgo wrapper) for Go. Provides word stem extraction functionality [Snowball native](http://snowball.tartarus.org/).\n*   [spaGO (⭐1.8k)](https://github.com/nlpodyssey/spago) - Self-contained Machine Learning and Natural Language Processing library in Go.\n\n### Slugifiers\n\n*   [go-slugify (⭐95)](https://github.com/mozillazg/go-slugify) - Make pretty slug with multiple languages support.\n*   [slug (⭐1.3k)](https://github.com/gosimple/slug) - URL-friendly slugify with multiple languages support.\n*   [Slugify (⭐34)](https://github.com/avelino/slugify) - Go slugify application that handles string.\n\n### Tokenizers\n\n*   [gojieba (⭐2.5k)](https://github.com/yanyiwu/gojieba) - This is a Go implementation of [jieba (⭐34k)](https://github.com/fxsjy/jieba) which a Chinese word splitting algorithm.\n*   [gotokenizer (⭐21)](https://github.com/xujiajun/gotokenizer) - A tokenizer based on the dictionary and Bigram language models for Golang. (Now only support chinese segmentation)\n*   [gse (⭐2.7k)](https://github.com/go-ego/gse) - Go efficient text segmentation; support english, chinese, japanese and other.\n*   [MMSEGO (⭐62)](https://github.com/awsong/MMSEGO) - This is a GO implementation of [MMSEG](http://technology.chtsai.org/mmseg/) which a Chinese word splitting algorithm.\n*   [prose (⭐3.1k)](https://github.com/jdkato/prose) - Library for text processing that supports tokenization, part-of-speech tagging, named-entity extraction, and more. English only.\n\n### Translation\n\n*   [go-i18n (⭐3.3k)](https://github.com/nicksnyder/go-i18n/) - Package and an accompanying tool to work with localized text.\n*   [go-mystem (⭐34)](https://github.com/dveselov/mystem) - CGo bindings to Yandex.Mystem - russian morphology analyzer.\n*   [go-pinyin (⭐1.7k)](https://github.com/mozillazg/go-pinyin) - CN Hanzi to Hanyu Pinyin converter.\n*   [gotext (⭐473)](https://github.com/leonelquinteros/gotext) - GNU gettext utilities for Go.\n*   [iuliia-go (⭐53)](https://github.com/mehanizm/iuliia-go) - Transliterate Cyrillic → Latin in every possible way.\n*   [t (⭐20)](https://github.com/youthlin/t) - Another i18n pkg for golang, which follows GNU gettext style and supports .po/.mo files: `t.T (gettext)`, `t.N (ngettext)`, etc. And it contains a cmd tool [xtemplate (⭐20)](https://github.com/youthlin/t/blob/main/cmd/xtemplate), which can extract messages as a pot file from text/html template.\n\n### Transliteration\n\n*   [enca (⭐18)](https://github.com/endeveit/enca) - Minimal cgo bindings for [libenca](https://cihar.com/software/enca/), which detects character encodings.\n*   [go-unidecode (⭐141)](https://github.com/mozillazg/go-unidecode) - ASCII transliterations of Unicode text.\n*   [gounidecode (⭐80)](https://github.com/fiam/gounidecode) - Unicode transliterator (also known as unidecode) for Go.\n\n### Formatters\n\n*   [address (⭐77)](https://github.com/bojanz/address) - Handles address representation, validation and formatting.\n*   [align (⭐84)](https://github.com/Guitarbum722/align) - A general purpose application that aligns text.\n*   [bytes (⭐553)](https://github.com/labstack/gommon/tree/master/bytes) - Formats and parses numeric byte values (10K, 2M, 3G, etc.).\n*   [go-fixedwidth (⭐86)](https://github.com/ianlopshire/go-fixedwidth) - Fixed-width text formatting (encoder/decoder with reflection).\n*   [go-humanize (⭐4.6k)](https://github.com/dustin/go-humanize) - Formatters for time, numbers, and memory size to human readable format.\n*   [gotabulate (⭐337)](https://github.com/bndr/gotabulate) - Easily pretty-print your tabular data with Go.\n*   [textwrap (⭐5)](https://github.com/isbm/textwrap) - Wraps text at end of lines. Implementation of `textwrap` module from Python.\n\n### Markup Languages\n\n*   [bafi (⭐107)](https://github.com/mmalcek/bafi) - Universal JSON, BSON, YAML, XML translator to ANY format using templates.\n*   [bbConvert (⭐12)](https://github.com/CalebQ42/bbConvert) - Converts bbCode to HTML that allows you to add support for custom bbCode tags.\n*   [blackfriday (⭐5.6k)](https://github.com/russross/blackfriday) - Markdown processor in Go.\n*   [go-output-format (⭐18)](https://github.com/drewstinnett/go-output-format) - Output go structures into multiple formats (YAML/JSON/etc) in your command line app.\n*   [go-toml (⭐1.8k)](https://github.com/pelletier/go-toml) - Go library for the TOML format with query support and handy cli tools.\n*   [html-to-markdown (⭐2.9k)](https://github.com/JohannesKaufmann/html-to-markdown) - Convert HTML to Markdown. Even works with entire websites and can be extended through rules.\n*   [htmlquery (⭐769)](https://github.com/antchfx/htmlquery) - An XPath query package for HTML, lets you extract data or evaluate from HTML documents by an XPath expression.\n*   [mxj (⭐627)](https://github.com/clbanning/mxj) - Encode / decode XML as JSON or map\\[string]interface{}; extract values with dot-notation paths and wildcards. Replaces x2j and j2x packages.\n*   [toml (⭐4.8k)](https://github.com/BurntSushi/toml) - TOML configuration format (encoder/decoder with reflection).\n\n### Parsers/Encoders/Decoders\n\n*   [allot (⭐59)](https://github.com/sbstjn/allot) - Placeholder and wildcard text parsing for CLI tools and bots.\n*   [codetree (⭐25)](https://github.com/aerogo/codetree) - Parses indented code (python, pixy, scarlet, etc.) and returns a tree structure.\n*   [commonregex (⭐900)](https://github.com/mingrammer/commonregex) - A collection of common regular expressions for Go.\n*   [did (⭐93)](https://github.com/ockam-network/did) - DID (Decentralized Identifiers) Parser and Stringer in Go.\n*   [doi (⭐11)](https://github.com/hscells/doi) - Document object identifier (doi) parser in Go.\n*   [editorconfig-core-go (⭐147)](https://github.com/editorconfig/editorconfig-core-go) - Editorconfig file parser and manipulator for Go.\n*   [go-nmea (⭐244)](https://github.com/adrianmo/go-nmea) - NMEA parser library for the Go language.\n*   [go-vcard (⭐118)](https://github.com/emersion/go-vcard) - Parse and format vCard.\n*   [gofeed (⭐2.7k)](https://github.com/mmcdole/gofeed) - Parse RSS and Atom feeds in Go.\n*   [gographviz (⭐564)](https://github.com/awalterschulze/gographviz) - Parses the Graphviz DOT language.\n*   [gonameparts (⭐43)](https://github.com/polera/gonameparts) - Parses human names into individual name parts.\n*   [ltsv (⭐9)](https://github.com/Wing924/ltsv) - High performance [LTSV (Labeled Tab Separated Value)](http://ltsv.org/) reader for Go.\n*   [normalize (⭐52)](https://github.com/avito-tech/normalize) - Sanitize, normalize and compare fuzzy text.\n*   [parseargs-go (⭐10)](https://github.com/nproc/parseargs-go) - string argument parser that understands quotes and backslashes.\n*   [parth (⭐0)](https://github.com/codemodus/parth) - URL path segmentation parsing.\n*   [sdp (⭐113)](https://github.com/gortc/sdp) - SDP: Session Description Protocol \\[[RFC 4566](https://tools.ietf.org/html/rfc4566)].\n*   [sh (⭐7.8k)](https://github.com/mvdan/sh) - Shell parser and formatter.\n*   [when (⭐1.4k)](https://github.com/olebedev/when) - Natural EN and RU language date/time parser with pluggable rules.\n*   [xj2go (⭐36)](https://github.com/stackerzzq/xj2go) - Convert xml or json to go struct.\n\n### Regular Expressions\n\n*   [genex (⭐76)](https://github.com/alixaxel/genex) - Count and expand Regular Expressions into all matching Strings.\n*   [go-wildcard (⭐87)](https://github.com/IGLOU-EU/go-wildcard) - Simple and lightweight wildcard pattern matching.\n*   [goregen (⭐92)](https://github.com/zach-klippenstein/goregen) - Library for generating random strings from regular expressions.\n*   [regroup (⭐147)](https://github.com/oriser/regroup) - Match regex expression named groups into go struct using struct tags and automatic parsing.\n\n### Sanitation\n\n*   [bluemonday (⭐3.4k)](https://github.com/microcosm-cc/bluemonday) - HTML Sanitizer.\n*   [gofuckyourself (⭐69)](https://github.com/JoshuaDoes/gofuckyourself) - A sanitization-based swear filter for Go.\n\n### Scrapers\n\n*   [colly (⭐24k)](https://github.com/asciimoo/colly) - Fast and Elegant Scraping Framework for Gophers.\n*   [dataflowkit (⭐688)](https://github.com/slotix/dataflowkit) - Web scraping Framework to turn websites into structured data.\n*   [GoQuery (⭐15k)](https://github.com/PuerkitoBio/goquery) - GoQuery brings a syntax and a set of features similar to jQuery to the Go language.\n*   [pagser (⭐108)](https://github.com/foolin/pagser) - Pagser is a simple, extensible, configurable parse and deserialize html page to struct based on goquery and struct tags for golang crawler.\n*   [Tagify (⭐39)](https://github.com/zoomio/tagify) - Produces a set of tags from given source.\n*   [xurls (⭐1.2k)](https://github.com/mvdan/xurls) - Extract urls from text.\n\n### RSS\n\n*   [podcast (⭐136)](https://github.com/eduncan911/podcast) - iTunes Compliant and RSS 2.0 Podcast Generator in Golang\n\n### Utility/Miscellaneous\n\n*   [go-runewidth (⭐643)](https://github.com/mattn/go-runewidth) - Functions to get fixed width of the character or string.\n*   [go-zero-width (⭐110)](https://github.com/trubitsyn/go-zero-width) - Zero-width character detection and removal for Go.\n*   [kace (⭐20)](https://github.com/codemodus/kace) - Common case conversions covering common initialisms.\n*   [petrovich (⭐50)](https://github.com/striker2000/petrovich) - Petrovich is the library which inflects Russian names to given grammatical case.\n*   [radix (⭐193)](https://github.com/yourbasic/radix) - Fast string sorting algorithm.\n*   [TySug (⭐19)](https://github.com/Dynom/TySug) - Alternative suggestions with respect to keyboard layouts.",
      "content_html": "<h3><p>Language Detection</p>\n</h3><ul>\n<li><a href=\"https://github.com/endeveit/guesslanguage\" rel=\"noopener noreferrer\">guesslanguage (⭐58)</a> - Functions to determine the natural language of a unicode text.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/abadojack/whatlanggo\" rel=\"noopener noreferrer\">whatlanggo (⭐659)</a> - Natural language detection package for Go. Supports 84 languages and 24 scripts (writing systems e.g. Latin, Cyrillic, etc).</li>\n</ul>\n<h3><p>Morphological Analyzers</p>\n</h3><ul>\n<li><a href=\"https://github.com/goodsign/snowball\" rel=\"noopener noreferrer\">snowball (⭐38)</a> - Snowball stemmer port (cgo wrapper) for Go. Provides word stem extraction functionality <a href=\"http://snowball.tartarus.org/\" rel=\"noopener noreferrer\">Snowball native</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/nlpodyssey/spago\" rel=\"noopener noreferrer\">spaGO (⭐1.8k)</a> - Self-contained Machine Learning and Natural Language Processing library in Go.</li>\n</ul>\n<h3><p>Slugifiers</p>\n</h3><ul>\n<li><a href=\"https://github.com/mozillazg/go-slugify\" rel=\"noopener noreferrer\">go-slugify (⭐95)</a> - Make pretty slug with multiple languages support.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/gosimple/slug\" rel=\"noopener noreferrer\">slug (⭐1.3k)</a> - URL-friendly slugify with multiple languages support.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/avelino/slugify\" rel=\"noopener noreferrer\">Slugify (⭐34)</a> - Go slugify application that handles string.</li>\n</ul>\n<h3><p>Tokenizers</p>\n</h3><ul>\n<li><a href=\"https://github.com/yanyiwu/gojieba\" rel=\"noopener noreferrer\">gojieba (⭐2.5k)</a> - This is a Go implementation of <a href=\"https://github.com/fxsjy/jieba\" rel=\"noopener noreferrer\">jieba (⭐34k)</a> which a Chinese word splitting algorithm.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/xujiajun/gotokenizer\" rel=\"noopener noreferrer\">gotokenizer (⭐21)</a> - A tokenizer based on the dictionary and Bigram language models for Golang. (Now only support chinese segmentation)</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/go-ego/gse\" rel=\"noopener noreferrer\">gse (⭐2.7k)</a> - Go efficient text segmentation; support english, chinese, japanese and other.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/awsong/MMSEGO\" rel=\"noopener noreferrer\">MMSEGO (⭐62)</a> - This is a GO implementation of <a href=\"http://technology.chtsai.org/mmseg/\" rel=\"noopener noreferrer\">MMSEG</a> which a Chinese word splitting algorithm.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/jdkato/prose\" rel=\"noopener noreferrer\">prose (⭐3.1k)</a> - Library for text processing that supports tokenization, part-of-speech tagging, named-entity extraction, and more. English only.</li>\n</ul>\n<h3><p>Translation</p>\n</h3><ul>\n<li><a href=\"https://github.com/nicksnyder/go-i18n/\" rel=\"noopener noreferrer\">go-i18n (⭐3.3k)</a> - Package and an accompanying tool to work with localized text.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/dveselov/mystem\" rel=\"noopener noreferrer\">go-mystem (⭐34)</a> - CGo bindings to Yandex.Mystem - russian morphology analyzer.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mozillazg/go-pinyin\" rel=\"noopener noreferrer\">go-pinyin (⭐1.7k)</a> - CN Hanzi to Hanyu Pinyin converter.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/leonelquinteros/gotext\" rel=\"noopener noreferrer\">gotext (⭐473)</a> - GNU gettext utilities for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mehanizm/iuliia-go\" rel=\"noopener noreferrer\">iuliia-go (⭐53)</a> - Transliterate Cyrillic → Latin in every possible way.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/youthlin/t\" rel=\"noopener noreferrer\">t (⭐20)</a> - Another i18n pkg for golang, which follows GNU gettext style and supports .po/.mo files: <code>t.T (gettext)</code>, <code>t.N (ngettext)</code>, etc. And it contains a cmd tool <a href=\"https://github.com/youthlin/t/blob/main/cmd/xtemplate\" rel=\"noopener noreferrer\">xtemplate (⭐20)</a>, which can extract messages as a pot file from text/html template.</li>\n</ul>\n<h3><p>Transliteration</p>\n</h3><ul>\n<li><a href=\"https://github.com/endeveit/enca\" rel=\"noopener noreferrer\">enca (⭐18)</a> - Minimal cgo bindings for <a href=\"https://cihar.com/software/enca/\" rel=\"noopener noreferrer\">libenca</a>, which detects character encodings.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mozillazg/go-unidecode\" rel=\"noopener noreferrer\">go-unidecode (⭐141)</a> - ASCII transliterations of Unicode text.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/fiam/gounidecode\" rel=\"noopener noreferrer\">gounidecode (⭐80)</a> - Unicode transliterator (also known as unidecode) for Go.</li>\n</ul>\n<h3><p>Formatters</p>\n</h3><ul>\n<li><a href=\"https://github.com/bojanz/address\" rel=\"noopener noreferrer\">address (⭐77)</a> - Handles address representation, validation and formatting.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Guitarbum722/align\" rel=\"noopener noreferrer\">align (⭐84)</a> - A general purpose application that aligns text.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/labstack/gommon/tree/master/bytes\" rel=\"noopener noreferrer\">bytes (⭐553)</a> - Formats and parses numeric byte values (10K, 2M, 3G, etc.).</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ianlopshire/go-fixedwidth\" rel=\"noopener noreferrer\">go-fixedwidth (⭐86)</a> - Fixed-width text formatting (encoder/decoder with reflection).</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/dustin/go-humanize\" rel=\"noopener noreferrer\">go-humanize (⭐4.6k)</a> - Formatters for time, numbers, and memory size to human readable format.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/bndr/gotabulate\" rel=\"noopener noreferrer\">gotabulate (⭐337)</a> - Easily pretty-print your tabular data with Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/isbm/textwrap\" rel=\"noopener noreferrer\">textwrap (⭐5)</a> - Wraps text at end of lines. Implementation of <code>textwrap</code> module from Python.</li>\n</ul>\n<h3><p>Markup Languages</p>\n</h3><ul>\n<li><a href=\"https://github.com/mmalcek/bafi\" rel=\"noopener noreferrer\">bafi (⭐107)</a> - Universal JSON, BSON, YAML, XML translator to ANY format using templates.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/CalebQ42/bbConvert\" rel=\"noopener noreferrer\">bbConvert (⭐12)</a> - Converts bbCode to HTML that allows you to add support for custom bbCode tags.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/russross/blackfriday\" rel=\"noopener noreferrer\">blackfriday (⭐5.6k)</a> - Markdown processor in Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/drewstinnett/go-output-format\" rel=\"noopener noreferrer\">go-output-format (⭐18)</a> - Output go structures into multiple formats (YAML/JSON/etc) in your command line app.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/pelletier/go-toml\" rel=\"noopener noreferrer\">go-toml (⭐1.8k)</a> - Go library for the TOML format with query support and handy cli tools.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/JohannesKaufmann/html-to-markdown\" rel=\"noopener noreferrer\">html-to-markdown (⭐2.9k)</a> - Convert HTML to Markdown. Even works with entire websites and can be extended through rules.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/antchfx/htmlquery\" rel=\"noopener noreferrer\">htmlquery (⭐769)</a> - An XPath query package for HTML, lets you extract data or evaluate from HTML documents by an XPath expression.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/clbanning/mxj\" rel=\"noopener noreferrer\">mxj (⭐627)</a> - Encode / decode XML as JSON or map[string]interface{}; extract values with dot-notation paths and wildcards. Replaces x2j and j2x packages.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/BurntSushi/toml\" rel=\"noopener noreferrer\">toml (⭐4.8k)</a> - TOML configuration format (encoder/decoder with reflection).</li>\n</ul>\n<h3><p>Parsers/Encoders/Decoders</p>\n</h3><ul>\n<li><a href=\"https://github.com/sbstjn/allot\" rel=\"noopener noreferrer\">allot (⭐59)</a> - Placeholder and wildcard text parsing for CLI tools and bots.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/aerogo/codetree\" rel=\"noopener noreferrer\">codetree (⭐25)</a> - Parses indented code (python, pixy, scarlet, etc.) and returns a tree structure.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mingrammer/commonregex\" rel=\"noopener noreferrer\">commonregex (⭐900)</a> - A collection of common regular expressions for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ockam-network/did\" rel=\"noopener noreferrer\">did (⭐93)</a> - DID (Decentralized Identifiers) Parser and Stringer in Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/hscells/doi\" rel=\"noopener noreferrer\">doi (⭐11)</a> - Document object identifier (doi) parser in Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/editorconfig/editorconfig-core-go\" rel=\"noopener noreferrer\">editorconfig-core-go (⭐147)</a> - Editorconfig file parser and manipulator for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/adrianmo/go-nmea\" rel=\"noopener noreferrer\">go-nmea (⭐244)</a> - NMEA parser library for the Go language.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/emersion/go-vcard\" rel=\"noopener noreferrer\">go-vcard (⭐118)</a> - Parse and format vCard.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mmcdole/gofeed\" rel=\"noopener noreferrer\">gofeed (⭐2.7k)</a> - Parse RSS and Atom feeds in Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/awalterschulze/gographviz\" rel=\"noopener noreferrer\">gographviz (⭐564)</a> - Parses the Graphviz DOT language.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/polera/gonameparts\" rel=\"noopener noreferrer\">gonameparts (⭐43)</a> - Parses human names into individual name parts.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Wing924/ltsv\" rel=\"noopener noreferrer\">ltsv (⭐9)</a> - High performance <a href=\"http://ltsv.org/\" rel=\"noopener noreferrer\">LTSV (Labeled Tab Separated Value)</a> reader for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/avito-tech/normalize\" rel=\"noopener noreferrer\">normalize (⭐52)</a> - Sanitize, normalize and compare fuzzy text.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/nproc/parseargs-go\" rel=\"noopener noreferrer\">parseargs-go (⭐10)</a> - string argument parser that understands quotes and backslashes.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/codemodus/parth\" rel=\"noopener noreferrer\">parth (⭐0)</a> - URL path segmentation parsing.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/gortc/sdp\" rel=\"noopener noreferrer\">sdp (⭐113)</a> - SDP: Session Description Protocol [<a href=\"https://tools.ietf.org/html/rfc4566\" rel=\"noopener noreferrer\">RFC 4566</a>].</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mvdan/sh\" rel=\"noopener noreferrer\">sh (⭐7.8k)</a> - Shell parser and formatter.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/olebedev/when\" rel=\"noopener noreferrer\">when (⭐1.4k)</a> - Natural EN and RU language date/time parser with pluggable rules.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/stackerzzq/xj2go\" rel=\"noopener noreferrer\">xj2go (⭐36)</a> - Convert xml or json to go struct.</li>\n</ul>\n<h3><p>Regular Expressions</p>\n</h3><ul>\n<li><a href=\"https://github.com/alixaxel/genex\" rel=\"noopener noreferrer\">genex (⭐76)</a> - Count and expand Regular Expressions into all matching Strings.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/IGLOU-EU/go-wildcard\" rel=\"noopener noreferrer\">go-wildcard (⭐87)</a> - Simple and lightweight wildcard pattern matching.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/zach-klippenstein/goregen\" rel=\"noopener noreferrer\">goregen (⭐92)</a> - Library for generating random strings from regular expressions.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/oriser/regroup\" rel=\"noopener noreferrer\">regroup (⭐147)</a> - Match regex expression named groups into go struct using struct tags and automatic parsing.</li>\n</ul>\n<h3><p>Sanitation</p>\n</h3><ul>\n<li><a href=\"https://github.com/microcosm-cc/bluemonday\" rel=\"noopener noreferrer\">bluemonday (⭐3.4k)</a> - HTML Sanitizer.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/JoshuaDoes/gofuckyourself\" rel=\"noopener noreferrer\">gofuckyourself (⭐69)</a> - A sanitization-based swear filter for Go.</li>\n</ul>\n<h3><p>Scrapers</p>\n</h3><ul>\n<li><a href=\"https://github.com/asciimoo/colly\" rel=\"noopener noreferrer\">colly (⭐24k)</a> - Fast and Elegant Scraping Framework for Gophers.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/slotix/dataflowkit\" rel=\"noopener noreferrer\">dataflowkit (⭐688)</a> - Web scraping Framework to turn websites into structured data.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/PuerkitoBio/goquery\" rel=\"noopener noreferrer\">GoQuery (⭐15k)</a> - GoQuery brings a syntax and a set of features similar to jQuery to the Go language.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/foolin/pagser\" rel=\"noopener noreferrer\">pagser (⭐108)</a> - Pagser is a simple, extensible, configurable parse and deserialize html page to struct based on goquery and struct tags for golang crawler.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/zoomio/tagify\" rel=\"noopener noreferrer\">Tagify (⭐39)</a> - Produces a set of tags from given source.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mvdan/xurls\" rel=\"noopener noreferrer\">xurls (⭐1.2k)</a> - Extract urls from text.</li>\n</ul>\n<h3><p>RSS</p>\n</h3><ul>\n<li><a href=\"https://github.com/eduncan911/podcast\" rel=\"noopener noreferrer\">podcast (⭐136)</a> - iTunes Compliant and RSS 2.0 Podcast Generator in Golang</li>\n</ul>\n<h3><p>Utility/Miscellaneous</p>\n</h3><ul>\n<li><a href=\"https://github.com/mattn/go-runewidth\" rel=\"noopener noreferrer\">go-runewidth (⭐643)</a> - Functions to get fixed width of the character or string.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/trubitsyn/go-zero-width\" rel=\"noopener noreferrer\">go-zero-width (⭐110)</a> - Zero-width character detection and removal for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/codemodus/kace\" rel=\"noopener noreferrer\">kace (⭐20)</a> - Common case conversions covering common initialisms.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/striker2000/petrovich\" rel=\"noopener noreferrer\">petrovich (⭐50)</a> - Petrovich is the library which inflects Russian names to given grammatical case.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/yourbasic/radix\" rel=\"noopener noreferrer\">radix (⭐193)</a> - Fast string sorting algorithm.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Dynom/TySug\" rel=\"noopener noreferrer\">TySug (⭐19)</a> - Alternative suggestions with respect to keyboard layouts.</li>\n</ul>\n",
      "date_published": "2022-03-14T17:13:10.000Z",
      "date_modified": "2022-03-14T17:13:10.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/nekofar/awesome-slim/",
      "title": "Awesome Slim",
      "_slug": "nekofar/awesome-slim/",
      "_filepath": "/content/nekofar/awesome-slim/README.md",
      "url": "https://www.trackawesomelist.com/nekofar/awesome-slim/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Miscellaneous\n\n*   [IntelliJ Slim](https://plugins.jetbrains.com/plugin/18751-slim) - Provides boilerplate codes for easier new project creation using skeleton.",
      "content_html": "<h3><p>Miscellaneous</p>\n</h3><ul>\n<li><a href=\"https://plugins.jetbrains.com/plugin/18751-slim\" rel=\"noopener noreferrer\">IntelliJ Slim</a> - Provides boilerplate codes for easier new project creation using skeleton.</li>\n</ul>\n",
      "date_published": "2022-03-14T15:29:07.000Z",
      "date_modified": "2022-03-14T15:29:07.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/unixorn/awesome-zsh-plugins/",
      "title": "Awesome Zsh Plugins",
      "_slug": "unixorn/awesome-zsh-plugins/",
      "_filepath": "/content/unixorn/awesome-zsh-plugins/README.md",
      "url": "https://www.trackawesomelist.com/unixorn/awesome-zsh-plugins/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Themes / [superconsole](https://github.com/alexchmykhalo/superconsole) - Windows-only\n\n*   [gerry (⭐0)](https://github.com/GerryLarios/gerry-prompt) - Based on [bureau (⭐180k)](https://github.com/ohmyzsh/ohmyzsh/wiki/themes#bureau), includes decorations for `git` status, current time, username, hostname and current directory.\n*   [temeraf (⭐1)](https://github.com/filiptoma/temeraf-zsh) - Minimalist theme with decorations for `git` status, timestamps and last exit status.",
      "content_html": "<h3><p>Themes / <a href=\"https://github.com/alexchmykhalo/superconsole\" rel=\"noopener noreferrer\">superconsole</a> - Windows-only</p>\n</h3><ul>\n<li><a href=\"https://github.com/GerryLarios/gerry-prompt\" rel=\"noopener noreferrer\">gerry (⭐0)</a> - Based on <a href=\"https://github.com/ohmyzsh/ohmyzsh/wiki/themes#bureau\" rel=\"noopener noreferrer\">bureau (⭐180k)</a>, includes decorations for <code>git</code> status, current time, username, hostname and current directory.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/filiptoma/temeraf-zsh\" rel=\"noopener noreferrer\">temeraf (⭐1)</a> - Minimalist theme with decorations for <code>git</code> status, timestamps and last exit status.</li>\n</ul>\n",
      "date_published": "2022-03-14T15:25:38.000Z",
      "date_modified": "2022-03-14T15:28:22.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/kakoni/awesome-healthcare/",
      "title": "Awesome Healthcare",
      "_slug": "kakoni/awesome-healthcare/",
      "_filepath": "/content/kakoni/awesome-healthcare/README.md",
      "url": "https://www.trackawesomelist.com/kakoni/awesome-healthcare/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Contents / EHR\n\n*   [Ripple](https://www.ripple.foundation) -  NHS-funded, community led initiative working towards an integrated Digital Care Record Platform.\n\n### Contents / Imaging\n\n*   [Dicoogle (⭐483)](https://github.com/bioinformatics-ua/dicoogle) - Dicoogle is an extensible, platform-independent and open-source PACS",
      "content_html": "<h3><p>Contents / EHR</p>\n</h3><ul>\n<li><a href=\"https://www.ripple.foundation\" rel=\"noopener noreferrer\">Ripple</a> -  NHS-funded, community led initiative working towards an integrated Digital Care Record Platform.</li>\n</ul>\n<h3><p>Contents / Imaging</p>\n</h3><ul>\n<li><a href=\"https://github.com/bioinformatics-ua/dicoogle\" rel=\"noopener noreferrer\">Dicoogle (⭐483)</a> - Dicoogle is an extensible, platform-independent and open-source PACS</li>\n</ul>\n",
      "date_published": "2022-03-14T08:30:18.000Z",
      "date_modified": "2022-03-14T08:33:30.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/mostafatouny/awesome-theoretical-computer-science/",
      "title": "Awesome Theoretical Computer Science",
      "_slug": "mostafatouny/awesome-theoretical-computer-science/",
      "_filepath": "/content/mostafatouny/awesome-theoretical-computer-science/README.md",
      "url": "https://www.trackawesomelist.com/mostafatouny/awesome-theoretical-computer-science/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Introductory / Lecture Videos Playlists\n\n*   [O'Donnell. Undergrad Complexity Theory. Fall 2019 (15-455)](https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5vLXpzOyJiLtqLp6dCW2) ([Homework](https://www.cs.cmu.edu/~odonnell/15455-s17/)) - Undergraduate course on computational complexity theory; It follows the same spirit of Sipser's part III.\n\n### Selected Posts and Essays / Lecture Videos Playlist\n\n*   [Lipton & Regan](https://rjlipton.wpcomstaging.com/2022/01/26/a-list-of-most-theory-blogs/) - A list of theory blogs for computer science.",
      "content_html": "<h3><p>Introductory / Lecture Videos Playlists</p>\n</h3><ul>\n<li><a href=\"https://www.youtube.com/playlist?list=PLm3J0oaFux3YL5vLXpzOyJiLtqLp6dCW2\" rel=\"noopener noreferrer\">O'Donnell. Undergrad Complexity Theory. Fall 2019 (15-455)</a> (<a href=\"https://www.cs.cmu.edu/~odonnell/15455-s17/\" rel=\"noopener noreferrer\">Homework</a>) - Undergraduate course on computational complexity theory; It follows the same spirit of Sipser's part III.</li>\n</ul>\n<h3><p>Selected Posts and Essays / Lecture Videos Playlist</p>\n</h3><ul>\n<li><a href=\"https://rjlipton.wpcomstaging.com/2022/01/26/a-list-of-most-theory-blogs/\" rel=\"noopener noreferrer\">Lipton &amp; Regan</a> - A list of theory blogs for computer science.</li>\n</ul>\n",
      "date_published": "2022-03-14T05:27:56.000Z",
      "date_modified": "2022-03-14T05:27:56.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/shuaibiyy/awesome-terraform/",
      "title": "Awesome Terraform",
      "_slug": "shuaibiyy/awesome-terraform/",
      "_filepath": "/content/shuaibiyy/awesome-terraform/README.md",
      "url": "https://www.trackawesomelist.com/shuaibiyy/awesome-terraform/",
      "summary": "3 awesome projects updated",
      "content_text": "\n\n### Official Resources\n\n*   [Hashicorp Terraform Blog](https://www.hashicorp.com/blog/products/terraform)\n\n### Tutorials and Blog Posts / How-To\n\n*   [Deploying Discourse with Terraform](https://web.archive.org/web/20181001135342/http://www.hashicorp.com/blog/deploying-discourse-with-terraform) - Shows how Terraform can create a running instance of Discourse on DigitalOcean in one command.\n*   [Terraform for a Highly Available VPN between AWS and Azure](https://web.archive.org/web/20210616132857/https://deployeveryday.com/2020/04/13/vpn-aws-azure-terraform.html) - Terraform code to deploy a highly available VPN between AWS and Azure.\n\n### Tutorials and Blog Posts / Azure\n\n*   [Learning HashiCorp Terraform](https://web.archive.org/web/20201108000713/https://www.g10s.io/hashicorp-terraform/) - Guide for Azure.",
      "content_html": "<h3><p>Official Resources</p>\n</h3><ul>\n<li><a href=\"https://www.hashicorp.com/blog/products/terraform\" rel=\"noopener noreferrer\">Hashicorp Terraform Blog</a></li>\n</ul>\n<h3><p>Tutorials and Blog Posts / How-To</p>\n</h3><ul>\n<li><a href=\"https://web.archive.org/web/20181001135342/http://www.hashicorp.com/blog/deploying-discourse-with-terraform\" rel=\"noopener noreferrer\">Deploying Discourse with Terraform</a> - Shows how Terraform can create a running instance of Discourse on DigitalOcean in one command.</li>\n</ul>\n<ul>\n<li><a href=\"https://web.archive.org/web/20210616132857/https://deployeveryday.com/2020/04/13/vpn-aws-azure-terraform.html\" rel=\"noopener noreferrer\">Terraform for a Highly Available VPN between AWS and Azure</a> - Terraform code to deploy a highly available VPN between AWS and Azure.</li>\n</ul>\n<h3><p>Tutorials and Blog Posts / Azure</p>\n</h3><ul>\n<li><a href=\"https://web.archive.org/web/20201108000713/https://www.g10s.io/hashicorp-terraform/\" rel=\"noopener noreferrer\">Learning HashiCorp Terraform</a> - Guide for Azure.</li>\n</ul>\n",
      "date_published": "2022-03-14T03:44:27.000Z",
      "date_modified": "2022-03-14T03:48:31.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/dive-into-machine-learning/dive-into-machine-learning/",
      "title": "Dive Into Machine Learning",
      "_slug": "dive-into-machine-learning/dive-into-machine-learning/",
      "_filepath": "/content/dive-into-machine-learning/dive-into-machine-learning/README.md",
      "url": "https://www.trackawesomelist.com/dive-into-machine-learning/dive-into-machine-learning/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### More ways to \"Dive into Machine Learning\" / Aside: Bayesian Statistics and Machine Learning\n\n*   Courses by cloud vendors. These are usually high quality content but steer you heavily to use vendor-specific tools/services. To avoid getting locked into vendor specifics, you can make sure you're learning from other resources as well.\n    *   [`microsoft/ML-For-Beginners`](https://github.com/microsoft/ML-For-Beginners), [`microsoft/Data-Science-For-Beginners`](https://github.com/microsoft/Data-Science-For-Beginners)\n    *   [Machine Learning Crash Course from Google](https://developers.google.com/machine-learning/crash-course/) ([more of their options](https://cloud.google.com/training/machinelearning-ai))\n    *   [Amazon AWS](https://aws.amazon.com/machine-learning/mlu/) ([more of their options](https://aws.amazon.com/machine-learning/learn/))\n*   [`ujjwalkarn/Machine-Learning-Tutorials`](https://github.com/ujjwalkarn/Machine-Learning-Tutorials)\n*   [Machine Learning for Software Engineers, by Nam Vu (⭐29k)](https://github.com/ZuzooVn/machine-learning-for-software-engineers). In their words, it's a \"top-down and results-first approach designed for software engineers.\" Definitely bookmark and use it. It can answer many questions and connect you with great resources.\n*   [`josephmisiti/awesome-machine-learning`](https://github.com/josephmisiti/awesome-machine-learning)",
      "content_html": "<h3><p>More ways to \"Dive into Machine Learning\" / Aside: Bayesian Statistics and Machine Learning</p>\n</h3><ul>\n<li>Courses by cloud vendors. These are usually high quality content but steer you heavily to use vendor-specific tools/services. To avoid getting locked into vendor specifics, you can make sure you're learning from other resources as well.<ul>\n<li><a href=\"https://github.com/microsoft/ML-For-Beginners\" rel=\"noopener noreferrer\"><code>microsoft/ML-For-Beginners</code></a>, <a href=\"https://github.com/microsoft/Data-Science-For-Beginners\" rel=\"noopener noreferrer\"><code>microsoft/Data-Science-For-Beginners</code></a></li>\n<li><a href=\"https://developers.google.com/machine-learning/crash-course/\" rel=\"noopener noreferrer\">Machine Learning Crash Course from Google</a> (<a href=\"https://cloud.google.com/training/machinelearning-ai\" rel=\"noopener noreferrer\">more of their options</a>)</li>\n<li><a href=\"https://aws.amazon.com/machine-learning/mlu/\" rel=\"noopener noreferrer\">Amazon AWS</a> (<a href=\"https://aws.amazon.com/machine-learning/learn/\" rel=\"noopener noreferrer\">more of their options</a>)</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ujjwalkarn/Machine-Learning-Tutorials\" rel=\"noopener noreferrer\"><code>ujjwalkarn/Machine-Learning-Tutorials</code></a></li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ZuzooVn/machine-learning-for-software-engineers\" rel=\"noopener noreferrer\">Machine Learning for Software Engineers, by Nam Vu (⭐29k)</a>. In their words, it's a \"top-down and results-first approach designed for software engineers.\" Definitely bookmark and use it. It can answer many questions and connect you with great resources.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/josephmisiti/awesome-machine-learning\" rel=\"noopener noreferrer\"><code>josephmisiti/awesome-machine-learning</code></a></li>\n</ul>\n",
      "date_published": "2022-03-14T02:28:14.000Z",
      "date_modified": "2022-03-14T02:28:14.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "title": "Awesome Agi Cocosci",
      "_slug": "YuzheSHI/awesome-agi-cocosci/",
      "_filepath": "/content/YuzheSHI/awesome-agi-cocosci/README.md",
      "url": "https://www.trackawesomelist.com/YuzheSHI/awesome-agi-cocosci/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Methodologies for Experiments / Human-Machine Comparison\n\n*   [Shared computational principles for language processing in humans and deep language models](https://www.nature.com/articles/s41593-022-01026-4.pdf) - ***Nature Neuroscience***, 2022. \\[[All Versions](https://scholar.google.com/scholar?cluster=16078004657063602593\\&hl=en\\&as_sdt=0,5)].",
      "content_html": "<h3><p>Methodologies for Experiments / Human-Machine Comparison</p>\n</h3><ul>\n<li><a href=\"https://www.nature.com/articles/s41593-022-01026-4.pdf\" rel=\"noopener noreferrer\">Shared computational principles for language processing in humans and deep language models</a> - <em><strong>Nature Neuroscience</strong></em>, 2022. [<a href=\"https://scholar.google.com/scholar?cluster=16078004657063602593&amp;hl=en&amp;as_sdt=0,5\" rel=\"noopener noreferrer\">All Versions</a>].</li>\n</ul>\n",
      "date_published": "2022-03-14T01:37:26.000Z",
      "date_modified": "2022-03-14T01:37:26.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/jetli/awesome-yew/",
      "title": "Awesome Yew",
      "_slug": "jetli/awesome-yew/",
      "_filepath": "/content/jetli/awesome-yew/README.md",
      "url": "https://www.trackawesomelist.com/jetli/awesome-yew/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Projects\n\n*   [Rquote (⭐3)](https://github.com/Altair-Bueno/rquote) - Rquote is a web application built using Rust and WebAssembly. It fetches Anime quotes from the Animechan API. [Live Demo](https://rquote.vercel.app/).",
      "content_html": "<h3><p>Projects</p>\n</h3><ul>\n<li><a href=\"https://github.com/Altair-Bueno/rquote\" rel=\"noopener noreferrer\">Rquote (⭐3)</a> - Rquote is a web application built using Rust and WebAssembly. It fetches Anime quotes from the Animechan API. <a href=\"https://rquote.vercel.app/\" rel=\"noopener noreferrer\">Live Demo</a>.</li>\n</ul>\n",
      "date_published": "2022-03-14T01:27:06.000Z",
      "date_modified": "2022-03-14T01:27:06.000Z"
    }
  ]
}
