{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Feb 10, 2022",
  "_site_title": "Track Awesome List",
  "description": "9 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Feb 10, 2022 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/fabacab/awesome-cybersecurity-blueteam/",
      "title": "Awesome Cybersecurity Blueteam",
      "_slug": "fabacab/awesome-cybersecurity-blueteam/",
      "_filepath": "/content/fabacab/awesome-cybersecurity-blueteam/README.md",
      "url": "https://www.trackawesomelist.com/fabacab/awesome-cybersecurity-blueteam/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Cloud platform security / Kubernetes\n\n*   [Sealed Secrets (‚≠ê8.4k)](https://github.com/bitnami-labs/sealed-secrets) - Kubernetes controller and tool for one-way encrypted Secrets.",
      "content_html": "<h3><p>Cloud platform security / Kubernetes</p>\n</h3><ul>\n<li><a href=\"https://github.com/bitnami-labs/sealed-secrets\" rel=\"noopener noreferrer\">Sealed Secrets (‚≠ê8.4k)</a> - Kubernetes controller and tool for one-way encrypted Secrets.</li>\n</ul>\n",
      "date_published": "2022-02-10T19:34:10.000Z",
      "date_modified": "2022-02-10T19:34:10.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/catalinmiron/awesome-prisma/",
      "title": "Awesome Prisma",
      "_slug": "catalinmiron/awesome-prisma/",
      "_filepath": "/content/catalinmiron/awesome-prisma/README.md",
      "url": "https://www.trackawesomelist.com/catalinmiron/awesome-prisma/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### :safety_vest: Community Prisma Tools\n\n*   [Prisma Redis Middleware - cache queries in Redis (‚≠ê362)](https://github.com/Asjas/prisma-redis-middleware)",
      "content_html": "<h3><p>ü¶∫ Community Prisma Tools</p>\n</h3><ul>\n<li><a href=\"https://github.com/Asjas/prisma-redis-middleware\" rel=\"noopener noreferrer\">Prisma Redis Middleware - cache queries in Redis (‚≠ê362)</a></li>\n</ul>\n",
      "date_published": "2022-02-10T19:04:50.000Z",
      "date_modified": "2022-02-10T19:04:50.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/dastergon/awesome-sre/",
      "title": "Awesome Sre",
      "_slug": "dastergon/awesome-sre/",
      "_filepath": "/content/dastergon/awesome-sre/README.md",
      "url": "https://www.trackawesomelist.com/dastergon/awesome-sre/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Culture\n\n*   [From Ops to SRE: Evolution of the OpenShift Dedicated Team](https://www.openshift.com/blog/from-ops-to-sre-evolution-of-the-openshift-dedicated-team)\n*   [What SREs have to do with project-based services?](https://www.linkedin.com/pulse/what-sres-have-do-project-based-services-rod-anami/)",
      "content_html": "<h3><p>Culture</p>\n</h3><ul>\n<li><a href=\"https://www.openshift.com/blog/from-ops-to-sre-evolution-of-the-openshift-dedicated-team\" rel=\"noopener noreferrer\">From Ops to SRE: Evolution of the OpenShift Dedicated Team</a></li>\n</ul>\n<ul>\n<li><a href=\"https://www.linkedin.com/pulse/what-sres-have-do-project-based-services-rod-anami/\" rel=\"noopener noreferrer\">What SREs have to do with project-based services?</a></li>\n</ul>\n",
      "date_published": "2022-02-10T17:12:21.000Z",
      "date_modified": "2022-02-10T17:12:21.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/vuejs/awesome-vue/",
      "title": "Awesome Vue",
      "_slug": "vuejs/awesome-vue/",
      "_filepath": "/content/vuejs/awesome-vue/README.md",
      "url": "https://www.trackawesomelist.com/vuejs/awesome-vue/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Components & Libraries / Utilities\n\n*   [vue-next-i18n (‚≠ê17)](https://github.com/Aaronlamz/vue-next-i18n) - A lightweight internationalization plugin for Vue 3.",
      "content_html": "<h3><p>Components &amp; Libraries / Utilities</p>\n</h3><ul>\n<li><a href=\"https://github.com/Aaronlamz/vue-next-i18n\" rel=\"noopener noreferrer\">vue-next-i18n (‚≠ê17)</a> - A lightweight internationalization plugin for Vue 3.</li>\n</ul>\n",
      "date_published": "2022-02-10T14:55:45.000Z",
      "date_modified": "2022-02-10T14:55:45.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/mostafatouny/awesome-theoretical-computer-science/",
      "title": "Awesome Theoretical Computer Science",
      "_slug": "mostafatouny/awesome-theoretical-computer-science/",
      "_filepath": "/content/mostafatouny/awesome-theoretical-computer-science/README.md",
      "url": "https://www.trackawesomelist.com/mostafatouny/awesome-theoretical-computer-science/",
      "summary": "26 awesome projects updated",
      "content_text": "\n\n### Books\n\n*   [Wigderson. Mathematics and Computation: A Theory Revolutionizing Technology and Science](https://www.math.ias.edu/files/Book-online-Aug0619.pdf) - A sweeping survey of complexity theory, emphasizing the field‚Äôs insights and challenges. It explains the ideas and motivations leading to key models, notions, and results.\n*   [Hopcroft, Motwani & Ullman. Introduction to Automata Theory, Languages, and Computation](https://www.pearson.com/us/higher-education/program/Hopcroft-Introduction-to-Automata-Theory-Languages-and-Computation-3rd-Edition/PGM64331.html) - Introductory undergrad textbook for automata, languages and theory of computation topics.\n\n### Handbooks\n\n*   [Atallah & Blanton. Algorithms and Theory of Computation Handbook: General Concepts and Techniques](https://www.routledge.com/Algorithms-and-Theory-of-Computation-Handbook-Volume-1-General-Concepts/Atallah-Blanton/p/book/9781138113930) - A complete comprehensive encyclopediac handbook which surveys all related areas to theoretical computer science.\n*   [Atallah & Blanton. Algorithms and Theory of Computation Handbook: Special Topics and Techniques](https://www.routledge.com/Algorithms-and-Theory-of-Computation-Handbook-Volume-2-Special-Topics/Atallah-Blanton/p/book/9780367384845) - A complete comprehensive encyclopediac handbook which surveys all related areas to theoretical computer science.\n*   [Handbook of Theoretical Computer Science. Volume A: Algorithms and Complexity](https://mitpress.mit.edu/books/handbook-theoretical-computer-science-volume) - A complete comprehensive encyclopediac handbook which surveys all related areas to theoretical computer science.\n*   [Handbook of Theoretical Computer Science. Volume B: Formal Methods and Semantics](https://mitpress.mit.edu/books/handbook-theoretical-computer-science-2-vol-set) - A complete comprehensive encyclopediac handbook which surveys all related areas to theoretical computer science.\n\n### Lecture Notes\n\n*   [Watrous. Introduction to The Theory of Computing](https://cs.uwaterloo.ca/~watrous/ToC-notes/) - undergrad introduction to theory of computation\n\n### MOOC\n\n*   [Intro to Theoretical Computer Science](https://www.udacity.com/course/intro-to-theoretical-computer-science--cs313) - It teaches basic concepts in theoretical computer science, such as NP-completeness, and what they imply for solving tough algorithmic problems.\n*   [Computability, Complexity & Algorithms. Georgia Institute of Technology](https://www.udacity.com/course/computability-complexity-algorithms--ud061) - It focuses on the big fundamental questions of computing, and how understanding the power and limitations of algorithms helps us develop the tools to make real-world computers smarter, faster and safer.\n\n### Puzzles and Problem Sets\n\n*   [Zhu & Ko. Problem Solving in Automata, Languages, and Complexity](https://onlinelibrary.wiley.com/doi/book/10.1002/0471224642) - A problem-set text for automata, languages, and complexity.\n\n### Introductory / Lecture Videos Playlists\n\n*   [O'Donnell. Graduate Complexity Theory](https://www.youtube.com/playlist?list=PLm3J0oaFux3b8Gg1DdaJOzYNsaXYLAOKH) - It covers most of what is believed to be known to get started in complexity theory research.\n\n### Introductory / Lecture Notes\n\n*   [Rudich & Wigderson. Computational Complexity Theory](http://www.ams.org/books/pcms/010/) - Three weeks of lectures from the IAS/Park City Mathematics Institute Summer School on computational complexity. Topics include reductions, lower-bounds, average-case complexity, randomness, interactive proof systems, probabilistically checkable proofs, quantum computing, and proof complexity.\n\n### Introductory / Books\n\n*   [Arora & Barak. Computational Complexity: A Modern Approach](https://theory.cs.princeton.edu/complexity/book.pdf) - A golden standard textbook, Surveying computational complexity theory for graduate students and researchers.\n*   [Goldreich. Computational Complexity: A Conceptual Perspective](http://www.wisdom.weizmann.ac.il/~oded/cc-book.html) - A grad introduction to computation complexity theory, emphasizing the idea behind concepts of complexity theory.\n*   [Goldreich. P, NP, and NP-Completeness: The Basics of Computational Complexity](http://www.wisdom.weizmann.ac.il/~oded/bc-book.html) - A very gentle introduction to some fundamental ideas of computational complexity like NP-completeness and P vs NP.\n*   [Ogihara & Hemaspaandra. The Complexity Theory Companion](https://www.springer.com/gp/book/9783540674191) - An accessible, algorithmically oriented, research-centered, up-to-date guide to some of the most interesting techniques of complexity theory.\n*   [Papadimitriou. Computational Complexity](https://www.pearson.com/us/higher-education/program/Papadimitriou-Computational-Complexity/PGM94583.html) - Body of knowledge for studying the performance and limitations of computer algorithms. Among topics covered are: reductions and NP-completeness, cryptography and protocols, randomized algorithms, and approximability of optimization problems, circuit complexity, the structural aspects of the P=NP question, parallel computation, and the polynomial hierarchy.\n\n### Communication Complexity / Books\n\n*   [Rao & Yehudayoff. Communication Complexity and Applications](https://www.cambridge.org/core/books/communication-complexity/5F44993E3B2597174B71D3F21E748443) - An excellent and very readable introductory textbook to the field of communication complexity.\n\n### Circuit Complexity / Books\n\n*   [Jukna. Boolean Function Complexity: Advances and Frontiers](https://www.springer.com/gp/book/9783642245077) - A modern textbook surveying circuit complexity.\n*   [Clote & Kranakis. Boolean Functions and Computation Models](https://www.springer.com/gp/book/9783540594369) - An introduction to circuit complexity, boolean functions, and computation models.\n\n### Books / Introductory\n\n*   [Cutland. Computability: An Introduction to Recursive Function Theory](https://www.cambridge.org/highereducation/books/computability/E8F085FDBECB8280F7723D71C1D2EE1C) - Intuitively, It explains the idea of a computable function: a function whose values can be calculated in an effective or automatic way.\n*   [Cooper. Computability Theory](https://www.routledge.com/Computability-Theory/Cooper-Cooper/p/book/9781584882374) - A concise, comprehensive, and authoritative introduction to contemporary computability theory, techniques, and results.\n*   [Davis. Computability and Unsolvability](https://www.amazon.com/Computability-Unsolvability-Prof-Martin-Davis/dp/0486614719) - In this classic text, Dr. Davis provides a clear introduction to computability, at an advanced undergraduate level, that serves the needs of specialists and non-specialists alike.\n\n### Books / Advanced\n\n*   [Soare. Recursively Enumerable Sets and Degree](https://www.springer.com/gp/book/9783540666813) - It gives a complete account of the theory of r.e degrees. The definitions, results and proofs are always clearly motivated and explained before the formal presentation; the proofs are described with remarkable clarity and conciseness.\n*   [Odifreddi. Classical Recursion Theory: The Theory of Functions and Sets of Natural Numbers](https://archive.org/details/classicalrecursi0000odif) - An impressive presentation of classical recursion theory. It is highly recommended to everyone interested in recursion theory.\n\n### Books / Monograph\n\n*   [Copeland, Posy & Shagrir (editors). Computability: Turing, G√∂del, Church, and Beyond](https://mitpress.mit.edu/books/computability) - Computer scientists, mathematicians, and philosophers discuss the conceptual foundations of the notion of computability as well as recent theoretical developments.\n*   [Lindell. Tutorials on the Foundations of Cryptography](https://link.springer.com/book/10.1007/978-3-319-57048-8) - Advanced tutorials appropriate for self-study by experienced researchers,\n*   [Goldreich. Modern Cryptography, Probabilistic Proofs and Pseudorandomness](https://www.wisdom.weizmann.ac.il/~oded/book1.html) - An introduction to the interwoven domains of cryptography, proofs and randomness.\n*   [Knuth, Graham & Patashnik. Concrete Mathematics: A Foundation for Computer Science](https://www.pearson.com/us/higher-education/product/Graham-Concrete-Mathematics-A-Foundation-for-Computer-Science-2nd-Edition/9780134389981.html) - An expansion of the Mathematical Preliminaries section in Knuth's classic Art of Computer Programming, but the style of presentation is more leisurely, and individual topics are covered more deeply.\n*   [Aho & Ullman. Foundations of Computer Science](http://i.stanford.edu/~ullman/focs.html) - A classic math-oriented introduction to computer science.\n*   [Tu Delft. Delftse Foundations of Computation](https://textbooks.open.tudelft.nl/textbooks/catalog/book/13) - A textbook for a one quarter introductory course in theoretical computer science.\n*   [Comprehensive Mathematics for Computer Scientists](https://www.springer.com/series/5517) - A series dedicated to math topics and their relevance to computer science.\n*   [Krantz. Handbook of Logic and Proof Techniques for Computer Science](https://www.maa.org/press/maa-reviews/handbook-of-logic-and-proof-techniques-for-computer-science) - A concise offered as an accessible reference on mathematical logic for the professional computer scientist.\n*   [Makinson. Sets, Logic and Maths for Computing](https://www.springer.com/gp/book/9783030422172) - It presents a careful selection of the material most needed by students in their first two years studying computer science.\n*   [Yves Nievergelt. Logic, Mathematics, and Computer Science: Modern Foundations with Practical Applications](https://www.springer.com/gp/book/9781493932221) - For lower undergraduates, It introduces the reader to logic, proofs, sets, and number theory, Focusing on foundations. It provides complete details and derivations of formal proofs.\n*   [Ben-Ari. Mathematical Logic for Computer Science](https://www.springer.com/gp/book/9781447141280) - Semantic tableaux are used because they are theoretically sound and easy to understand.\n*   [Jeremy Kun. A Programmer's Introduction to Mathematics](https://pimbook.org/) - Uses your familiarity with ideas from programming and software to teach mathematics.\n*   [Vince. Foundation Mathematics for Computer Science: A Visual Approach](https://www.springer.com/gp/book/9783030420772) - A range of mathematical topics to provide a solid foundation for an undergraduate course in computer science, starting with a review of number systems and their relevance to digital computers, and finishing with differential and integral calculus.\n*   [Oberguggenberger & Ostermann. Analysis for Computer Scientists: Foundations, Methods, and Algorithms](https://www.springer.com/gp/book/9783319911540) - Presents an algorithmic approach to mathematical analysis, with a focus on modelling and on the applications of analysis.\n\n### Lecture Videos Playlists / Monograph\n\n*   [Demaine. Algorithmic Lower Bounds: Fun with Hardness Proofs](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-890-algorithmic-lower-bounds-fun-with-hardness-proofs-fall-2014/) - A class taking a practical approach to proving problems can't be solved efficient.\n\n### Lecture Videos Playlist / Monograph\n\n*   [Lehman, Leighton & Meyer. Mathematics for Computer Science](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/lecture-slides/) - An introduction to discrete mathematics oriented toward computer science and engineering. - [Companion Textbook](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/readings/MIT6_042JS15_textbook.pdf)\n\n### Lecture Notes / Monograph\n\n*   [Paluszynski. Calculus for Computer Scientists](https://www.math.uni.wroc.pl/~mpal/academic/2013/lecture_notes.pdf) - calculus lecture notes taught for undergrad computer science students\n\n### General / Lecture Notes\n\n*   [Halpern. CS 2802: Discrete Structures - Honors. 2020. Cornell](https://www.cs.cornell.edu/courses/cs2802/2020fa/cs2802-20f-notes.html) - Honors lecture notes on discrete math - [Homework](https://www.cs.cornell.edu/courses/cs2802/2020fa/cs2802-20f-homework.html)\n\n### General / Books\n\n*   [Rosen. Handbook of Discrete and Combinatorial Mathematics](https://www.taylorfrancis.com/books/handbook-discrete-combinatorial-mathematics-kenneth-rosen-douglas-shier-wayne-goddard/e/10.1201/9781315156484) - A complete survey of roughly all topics of discrete math and their relevance to computing and communication engineering.\n*   [Rosenberg & Trystram. Understand Mathematics, Understand Computing: Discrete Mathematics That All Computing Students Should Know](https://www.springer.com/gp/book/9783030583750) - It endows the reader with an operational conceptual and methodological understanding of discrete mathematics for computing\n*   [Gries & Schneider. A Logical Approach to Discrete Math](https://www.springer.com/gp/book/9780387941158) - It attempts to change the way we teach logic to beginning students. Instead of teaching logic as a subject in isolation, we regard it as a basic tool and show how to use it.\n\n### General / MOOC\n\n*   [Introduction to Discrete Mathematics for Computer Science. UC San-Diego](https://www.coursera.org/specializations/discrete-mathematics) - Learn the language of Computer Science. Learn the math that defines computer science, and practice applying it through mathematical proofs and Python code.\n\n### Papers / Lecture Videos Playlist\n\n*   [Fortnow & Homer. A Short History of Computational Complexity](https://www.researchgate.net/profile/Lance-Fortnow/publication/220530495_A_Short_History_of_Computational_Complexity/links/0deec52bd7ab603fef000000/A-Short-History-of-Computational-Complexity.pdf) - A historical overview of computational complexity.\n*   [Goldreich. Providing Sound Foundations for Cryptography: On the Work of Shafi Goldwasser and Silvio Micali](http://www.wisdom.weizmann.ac.il/~oded/sst.html) - It explains the remarkable work of Shafi and Silvio and their works' implications on foundations of cryptography.\n\n### Aggregators / Lecture Videos Playlist\n\n*   [CS Theory Events Aggregator](https://cstheory-events.org/) - An aggregator for CS theory workshops and schools.\n*   [Theory Announcements](https://dmatheorynet.blogspot.com/) - DMANET spreads information on conferences, workshops, seminars etc. relating to discrete mathematics and algorithms.\n\n### Live / Lecture Videos Playlist\n\n*   [TCS+](https://www.youtube.com/user/TCSplusSeminars) - A series of online seminars in theoretical computer science. The goal is to make engaging talks accessible to the widest possible audience.\n\n### Archived / Lecture Videos Playlist\n\n*   [Computational Complexity](https://www.youtube.com/channel/UCzBw287tly0c2lE6a-9XymA) - Collection of workshops.\n\n### Selected Posts and Essays / Lecture Videos Playlist\n\n*   [Omer Reingold. The Practice of Theory Research](https://omereingold.wordpress.com/cs-163-the-practice-of-theory-research/) - A research methods course, concentrating on the how rather than the what. It focuses on research practices common for computer science theory research.\n*   [Omer Reingold. TOC: a Personal Perspective (2021)](https://theorydish.blog/2021/04/15/toc-a-personal-perspective-2021/) - In celebration of 25 years for ‚ÄúTOC: a Scientific Perspective (1996),‚Äù by Oded Goldreich and Avi Wigderson. It spots the light on a criticism directed to TCS, that it is not as deep as Math and not as useful as CS.\n*   [Blum. You and Your Research: An Advice to a Beginning Graduate Student](https://www.cs.cmu.edu/~mblum/research/pdf/grad.html) - Manuel Blum, A very popular figure in TCS, gives research advices for juniors.\n*   [Dijkstra. The Three Golden Rules for Successful Scientific Research](https://link.springer.com/chapter/10.1007%2F978-1-4612-5695-3_58) - A note devoted to three rules that must be followed if you want to be successful in scientific research.\n*   [Goldreich. Essays and Opinions](http://www.wisdom.weizmann.ac.il/~oded/essays.html) - Personal Essays by Oded Goldreich. They are very unique in their conceptual message of TCS and its community.\n*   [Barak. Advice for The Budding Theorist](https://windowsontheory.org/2015/11/03/advice-for-the-budding-theorist/) - Tips for anyone interested in theoretical computer science.\n*   [Barak. Surveys For Students](https://thmatters.wordpress.com/surveys/) - Surveys for high-school, undergraduate, and even researchers.\n*   [Barak. Non-technical or Less-technical Writings and Talks](https://www.boazbarak.org/informal/) - Posts oriented more for a less-technically matured audience.\n*   [Karp. A Personal View of Computer Science at Berkeley](https://www2.eecs.berkeley.edu/bears/CS_Anniversary/karp-talk.html) - Karp addresses: In 1968 computer science at Berkeley was problematic, with two departments working independently to develop programs, and his personal reflections.\n*   [Hamming. You and Your Research](https://www.cs.virginia.edu/~robins/YouAndYourResearch.html) - Why do so few scientists make significant contributions and so many are forgotten in the long run? The talk is about what Hamming has learned.\n*   [Weinberg. Four Golden Lessons](https://www.nature.com/articles/426389a) - Lessons for students and researchers given by Steven Weinberg.\n*   [Terry. Career Advice](https://terrytao.wordpress.com/career-advice/) - A collection of various pieces of advice on academic career issues in mathematics, roughly arranged by the stage of career at which the advice is most pertinent.\n\n### Popular Science / Lecture Videos Playlist\n\n*   [Fortnow. The Golden Ticket: P, NP, and the Search for the Impossible](https://goldenticket.fortnow.com) - A nontechnical introduction to P-NP, its rich history, and its algorithmic implications for everything we do with computers and beyond.\n*   [Deutsch. The Fabric of Reality: The Science of Parallel Universes and Its Implications](http://www.daviddeutsch.org.uk/books/the-fabric-of-reality/) - The Fabric of Reality presents a startlingly integrated, rational and optimistic world view ‚Äì the result of taking seriously the deepest ideas of modern science and the philosophy of science.\n*   [Papadimitriou. Turing: A Novel About Computation](https://mitpress.mit.edu/books/turing-novel-about-computation) - The world of computation according to Turing, an interactive tutoring program, as told to star-crossed lovers: a novel.\n*   [Petzold. The Annotated Turing: A Guided Tour Through Alan Turing's Historic Paper on Computability and the Turing Machine](http://www.charlespetzold.com/AnnotatedTuring/) -  A Guided Tour through Alan Turing's Historic Paper on Computability and the Turing Machine.\n*   [Shasha & Lazere. Out of their Minds: The Lives and Discoveries of 15 Great Computer Scientists](https://www.springer.com/gp/book/9780387982694) - Interviews with era's greatest scientists about their inspirations, discoveries, and personal interests.\n\n### Cheat Sheets / Lecture Videos Playlist\n\n*   [TCS Cheat Sheet](https://www.cosy.sbg.ac.at/~held/teaching/aads/TCS-cheat_sheet.pdf) - A sheet of notes containing essential toolboxes needed by any theoretical computer scientist.",
      "content_html": "<h3><p>Books</p>\n</h3><ul>\n<li><a href=\"https://www.math.ias.edu/files/Book-online-Aug0619.pdf\" rel=\"noopener noreferrer\">Wigderson. Mathematics and Computation: A Theory Revolutionizing Technology and Science</a> - A sweeping survey of complexity theory, emphasizing the field‚Äôs insights and challenges. It explains the ideas and motivations leading to key models, notions, and results.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.pearson.com/us/higher-education/program/Hopcroft-Introduction-to-Automata-Theory-Languages-and-Computation-3rd-Edition/PGM64331.html\" rel=\"noopener noreferrer\">Hopcroft, Motwani &amp; Ullman. Introduction to Automata Theory, Languages, and Computation</a> - Introductory undergrad textbook for automata, languages and theory of computation topics.</li>\n</ul>\n<h3><p>Handbooks</p>\n</h3><ul>\n<li><a href=\"https://www.routledge.com/Algorithms-and-Theory-of-Computation-Handbook-Volume-1-General-Concepts/Atallah-Blanton/p/book/9781138113930\" rel=\"noopener noreferrer\">Atallah &amp; Blanton. Algorithms and Theory of Computation Handbook: General Concepts and Techniques</a> - A complete comprehensive encyclopediac handbook which surveys all related areas to theoretical computer science.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.routledge.com/Algorithms-and-Theory-of-Computation-Handbook-Volume-2-Special-Topics/Atallah-Blanton/p/book/9780367384845\" rel=\"noopener noreferrer\">Atallah &amp; Blanton. Algorithms and Theory of Computation Handbook: Special Topics and Techniques</a> - A complete comprehensive encyclopediac handbook which surveys all related areas to theoretical computer science.</li>\n</ul>\n<ul>\n<li><a href=\"https://mitpress.mit.edu/books/handbook-theoretical-computer-science-volume\" rel=\"noopener noreferrer\">Handbook of Theoretical Computer Science. Volume A: Algorithms and Complexity</a> - A complete comprehensive encyclopediac handbook which surveys all related areas to theoretical computer science.</li>\n</ul>\n<ul>\n<li><a href=\"https://mitpress.mit.edu/books/handbook-theoretical-computer-science-2-vol-set\" rel=\"noopener noreferrer\">Handbook of Theoretical Computer Science. Volume B: Formal Methods and Semantics</a> - A complete comprehensive encyclopediac handbook which surveys all related areas to theoretical computer science.</li>\n</ul>\n<h3><p>Lecture Notes</p>\n</h3><ul>\n<li><a href=\"https://cs.uwaterloo.ca/~watrous/ToC-notes/\" rel=\"noopener noreferrer\">Watrous. Introduction to The Theory of Computing</a> - undergrad introduction to theory of computation</li>\n</ul>\n<h3><p>MOOC</p>\n</h3><ul>\n<li><a href=\"https://www.udacity.com/course/intro-to-theoretical-computer-science--cs313\" rel=\"noopener noreferrer\">Intro to Theoretical Computer Science</a> - It teaches basic concepts in theoretical computer science, such as NP-completeness, and what they imply for solving tough algorithmic problems.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.udacity.com/course/computability-complexity-algorithms--ud061\" rel=\"noopener noreferrer\">Computability, Complexity &amp; Algorithms. Georgia Institute of Technology</a> - It focuses on the big fundamental questions of computing, and how understanding the power and limitations of algorithms helps us develop the tools to make real-world computers smarter, faster and safer.</li>\n</ul>\n<h3><p>Puzzles and Problem Sets</p>\n</h3><ul>\n<li><a href=\"https://onlinelibrary.wiley.com/doi/book/10.1002/0471224642\" rel=\"noopener noreferrer\">Zhu &amp; Ko. Problem Solving in Automata, Languages, and Complexity</a> - A problem-set text for automata, languages, and complexity.</li>\n</ul>\n<h3><p>Introductory / Lecture Videos Playlists</p>\n</h3><ul>\n<li><a href=\"https://www.youtube.com/playlist?list=PLm3J0oaFux3b8Gg1DdaJOzYNsaXYLAOKH\" rel=\"noopener noreferrer\">O'Donnell. Graduate Complexity Theory</a> - It covers most of what is believed to be known to get started in complexity theory research.</li>\n</ul>\n<h3><p>Introductory / Lecture Notes</p>\n</h3><ul>\n<li><a href=\"http://www.ams.org/books/pcms/010/\" rel=\"noopener noreferrer\">Rudich &amp; Wigderson. Computational Complexity Theory</a> - Three weeks of lectures from the IAS/Park City Mathematics Institute Summer School on computational complexity. Topics include reductions, lower-bounds, average-case complexity, randomness, interactive proof systems, probabilistically checkable proofs, quantum computing, and proof complexity.</li>\n</ul>\n<h3><p>Introductory / Books</p>\n</h3><ul>\n<li><a href=\"https://theory.cs.princeton.edu/complexity/book.pdf\" rel=\"noopener noreferrer\">Arora &amp; Barak. Computational Complexity: A Modern Approach</a> - A golden standard textbook, Surveying computational complexity theory for graduate students and researchers.</li>\n</ul>\n<ul>\n<li><a href=\"http://www.wisdom.weizmann.ac.il/~oded/cc-book.html\" rel=\"noopener noreferrer\">Goldreich. Computational Complexity: A Conceptual Perspective</a> - A grad introduction to computation complexity theory, emphasizing the idea behind concepts of complexity theory.</li>\n</ul>\n<ul>\n<li><a href=\"http://www.wisdom.weizmann.ac.il/~oded/bc-book.html\" rel=\"noopener noreferrer\">Goldreich. P, NP, and NP-Completeness: The Basics of Computational Complexity</a> - A very gentle introduction to some fundamental ideas of computational complexity like NP-completeness and P vs NP.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.springer.com/gp/book/9783540674191\" rel=\"noopener noreferrer\">Ogihara &amp; Hemaspaandra. The Complexity Theory Companion</a> - An accessible, algorithmically oriented, research-centered, up-to-date guide to some of the most interesting techniques of complexity theory.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.pearson.com/us/higher-education/program/Papadimitriou-Computational-Complexity/PGM94583.html\" rel=\"noopener noreferrer\">Papadimitriou. Computational Complexity</a> - Body of knowledge for studying the performance and limitations of computer algorithms. Among topics covered are: reductions and NP-completeness, cryptography and protocols, randomized algorithms, and approximability of optimization problems, circuit complexity, the structural aspects of the P=NP question, parallel computation, and the polynomial hierarchy.</li>\n</ul>\n<h3><p>Communication Complexity / Books</p>\n</h3><ul>\n<li><a href=\"https://www.cambridge.org/core/books/communication-complexity/5F44993E3B2597174B71D3F21E748443\" rel=\"noopener noreferrer\">Rao &amp; Yehudayoff. Communication Complexity and Applications</a> - An excellent and very readable introductory textbook to the field of communication complexity.</li>\n</ul>\n<h3><p>Circuit Complexity / Books</p>\n</h3><ul>\n<li><a href=\"https://www.springer.com/gp/book/9783642245077\" rel=\"noopener noreferrer\">Jukna. Boolean Function Complexity: Advances and Frontiers</a> - A modern textbook surveying circuit complexity.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.springer.com/gp/book/9783540594369\" rel=\"noopener noreferrer\">Clote &amp; Kranakis. Boolean Functions and Computation Models</a> - An introduction to circuit complexity, boolean functions, and computation models.</li>\n</ul>\n<h3><p>Books / Introductory</p>\n</h3><ul>\n<li><a href=\"https://www.cambridge.org/highereducation/books/computability/E8F085FDBECB8280F7723D71C1D2EE1C\" rel=\"noopener noreferrer\">Cutland. Computability: An Introduction to Recursive Function Theory</a> - Intuitively, It explains the idea of a computable function: a function whose values can be calculated in an effective or automatic way.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.routledge.com/Computability-Theory/Cooper-Cooper/p/book/9781584882374\" rel=\"noopener noreferrer\">Cooper. Computability Theory</a> - A concise, comprehensive, and authoritative introduction to contemporary computability theory, techniques, and results.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.amazon.com/Computability-Unsolvability-Prof-Martin-Davis/dp/0486614719\" rel=\"noopener noreferrer\">Davis. Computability and Unsolvability</a> - In this classic text, Dr. Davis provides a clear introduction to computability, at an advanced undergraduate level, that serves the needs of specialists and non-specialists alike.</li>\n</ul>\n<h3><p>Books / Advanced</p>\n</h3><ul>\n<li><a href=\"https://www.springer.com/gp/book/9783540666813\" rel=\"noopener noreferrer\">Soare. Recursively Enumerable Sets and Degree</a> - It gives a complete account of the theory of r.e degrees. The definitions, results and proofs are always clearly motivated and explained before the formal presentation; the proofs are described with remarkable clarity and conciseness.</li>\n</ul>\n<ul>\n<li><a href=\"https://archive.org/details/classicalrecursi0000odif\" rel=\"noopener noreferrer\">Odifreddi. Classical Recursion Theory: The Theory of Functions and Sets of Natural Numbers</a> - An impressive presentation of classical recursion theory. It is highly recommended to everyone interested in recursion theory.</li>\n</ul>\n<h3><p>Books / Monograph</p>\n</h3><ul>\n<li><a href=\"https://mitpress.mit.edu/books/computability\" rel=\"noopener noreferrer\">Copeland, Posy &amp; Shagrir (editors). Computability: Turing, G√∂del, Church, and Beyond</a> - Computer scientists, mathematicians, and philosophers discuss the conceptual foundations of the notion of computability as well as recent theoretical developments.</li>\n</ul>\n<ul>\n<li><a href=\"https://link.springer.com/book/10.1007/978-3-319-57048-8\" rel=\"noopener noreferrer\">Lindell. Tutorials on the Foundations of Cryptography</a> - Advanced tutorials appropriate for self-study by experienced researchers,</li>\n</ul>\n<ul>\n<li><a href=\"https://www.wisdom.weizmann.ac.il/~oded/book1.html\" rel=\"noopener noreferrer\">Goldreich. Modern Cryptography, Probabilistic Proofs and Pseudorandomness</a> - An introduction to the interwoven domains of cryptography, proofs and randomness.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.pearson.com/us/higher-education/product/Graham-Concrete-Mathematics-A-Foundation-for-Computer-Science-2nd-Edition/9780134389981.html\" rel=\"noopener noreferrer\">Knuth, Graham &amp; Patashnik. Concrete Mathematics: A Foundation for Computer Science</a> - An expansion of the Mathematical Preliminaries section in Knuth's classic Art of Computer Programming, but the style of presentation is more leisurely, and individual topics are covered more deeply.</li>\n</ul>\n<ul>\n<li><a href=\"http://i.stanford.edu/~ullman/focs.html\" rel=\"noopener noreferrer\">Aho &amp; Ullman. Foundations of Computer Science</a> - A classic math-oriented introduction to computer science.</li>\n</ul>\n<ul>\n<li><a href=\"https://textbooks.open.tudelft.nl/textbooks/catalog/book/13\" rel=\"noopener noreferrer\">Tu Delft. Delftse Foundations of Computation</a> - A textbook for a one quarter introductory course in theoretical computer science.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.springer.com/series/5517\" rel=\"noopener noreferrer\">Comprehensive Mathematics for Computer Scientists</a> - A series dedicated to math topics and their relevance to computer science.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.maa.org/press/maa-reviews/handbook-of-logic-and-proof-techniques-for-computer-science\" rel=\"noopener noreferrer\">Krantz. Handbook of Logic and Proof Techniques for Computer Science</a> - A concise offered as an accessible reference on mathematical logic for the professional computer scientist.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.springer.com/gp/book/9783030422172\" rel=\"noopener noreferrer\">Makinson. Sets, Logic and Maths for Computing</a> - It presents a careful selection of the material most needed by students in their first two years studying computer science.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.springer.com/gp/book/9781493932221\" rel=\"noopener noreferrer\">Yves Nievergelt. Logic, Mathematics, and Computer Science: Modern Foundations with Practical Applications</a> - For lower undergraduates, It introduces the reader to logic, proofs, sets, and number theory, Focusing on foundations. It provides complete details and derivations of formal proofs.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.springer.com/gp/book/9781447141280\" rel=\"noopener noreferrer\">Ben-Ari. Mathematical Logic for Computer Science</a> - Semantic tableaux are used because they are theoretically sound and easy to understand.</li>\n</ul>\n<ul>\n<li><a href=\"https://pimbook.org/\" rel=\"noopener noreferrer\">Jeremy Kun. A Programmer's Introduction to Mathematics</a> - Uses your familiarity with ideas from programming and software to teach mathematics.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.springer.com/gp/book/9783030420772\" rel=\"noopener noreferrer\">Vince. Foundation Mathematics for Computer Science: A Visual Approach</a> - A range of mathematical topics to provide a solid foundation for an undergraduate course in computer science, starting with a review of number systems and their relevance to digital computers, and finishing with differential and integral calculus.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.springer.com/gp/book/9783319911540\" rel=\"noopener noreferrer\">Oberguggenberger &amp; Ostermann. Analysis for Computer Scientists: Foundations, Methods, and Algorithms</a> - Presents an algorithmic approach to mathematical analysis, with a focus on modelling and on the applications of analysis.</li>\n</ul>\n<h3><p>Lecture Videos Playlists / Monograph</p>\n</h3><ul>\n<li><a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-890-algorithmic-lower-bounds-fun-with-hardness-proofs-fall-2014/\" rel=\"noopener noreferrer\">Demaine. Algorithmic Lower Bounds: Fun with Hardness Proofs</a> - A class taking a practical approach to proving problems can't be solved efficient.</li>\n</ul>\n<h3><p>Lecture Videos Playlist / Monograph</p>\n</h3><ul>\n<li><a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/lecture-slides/\" rel=\"noopener noreferrer\">Lehman, Leighton &amp; Meyer. Mathematics for Computer Science</a> - An introduction to discrete mathematics oriented toward computer science and engineering. - <a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/readings/MIT6_042JS15_textbook.pdf\" rel=\"noopener noreferrer\">Companion Textbook</a></li>\n</ul>\n<h3><p>Lecture Notes / Monograph</p>\n</h3><ul>\n<li><a href=\"https://www.math.uni.wroc.pl/~mpal/academic/2013/lecture_notes.pdf\" rel=\"noopener noreferrer\">Paluszynski. Calculus for Computer Scientists</a> - calculus lecture notes taught for undergrad computer science students</li>\n</ul>\n<h3><p>General / Lecture Notes</p>\n</h3><ul>\n<li><a href=\"https://www.cs.cornell.edu/courses/cs2802/2020fa/cs2802-20f-notes.html\" rel=\"noopener noreferrer\">Halpern. CS 2802: Discrete Structures - Honors. 2020. Cornell</a> - Honors lecture notes on discrete math - <a href=\"https://www.cs.cornell.edu/courses/cs2802/2020fa/cs2802-20f-homework.html\" rel=\"noopener noreferrer\">Homework</a></li>\n</ul>\n<h3><p>General / Books</p>\n</h3><ul>\n<li><a href=\"https://www.taylorfrancis.com/books/handbook-discrete-combinatorial-mathematics-kenneth-rosen-douglas-shier-wayne-goddard/e/10.1201/9781315156484\" rel=\"noopener noreferrer\">Rosen. Handbook of Discrete and Combinatorial Mathematics</a> - A complete survey of roughly all topics of discrete math and their relevance to computing and communication engineering.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.springer.com/gp/book/9783030583750\" rel=\"noopener noreferrer\">Rosenberg &amp; Trystram. Understand Mathematics, Understand Computing: Discrete Mathematics That All Computing Students Should Know</a> - It endows the reader with an operational conceptual and methodological understanding of discrete mathematics for computing</li>\n</ul>\n<ul>\n<li><a href=\"https://www.springer.com/gp/book/9780387941158\" rel=\"noopener noreferrer\">Gries &amp; Schneider. A Logical Approach to Discrete Math</a> - It attempts to change the way we teach logic to beginning students. Instead of teaching logic as a subject in isolation, we regard it as a basic tool and show how to use it.</li>\n</ul>\n<h3><p>General / MOOC</p>\n</h3><ul>\n<li><a href=\"https://www.coursera.org/specializations/discrete-mathematics\" rel=\"noopener noreferrer\">Introduction to Discrete Mathematics for Computer Science. UC San-Diego</a> - Learn the language of Computer Science. Learn the math that defines computer science, and practice applying it through mathematical proofs and Python code.</li>\n</ul>\n<h3><p>Papers / Lecture Videos Playlist</p>\n</h3><ul>\n<li><a href=\"https://www.researchgate.net/profile/Lance-Fortnow/publication/220530495_A_Short_History_of_Computational_Complexity/links/0deec52bd7ab603fef000000/A-Short-History-of-Computational-Complexity.pdf\" rel=\"noopener noreferrer\">Fortnow &amp; Homer. A Short History of Computational Complexity</a> - A historical overview of computational complexity.</li>\n</ul>\n<ul>\n<li><a href=\"http://www.wisdom.weizmann.ac.il/~oded/sst.html\" rel=\"noopener noreferrer\">Goldreich. Providing Sound Foundations for Cryptography: On the Work of Shafi Goldwasser and Silvio Micali</a> - It explains the remarkable work of Shafi and Silvio and their works' implications on foundations of cryptography.</li>\n</ul>\n<h3><p>Aggregators / Lecture Videos Playlist</p>\n</h3><ul>\n<li><a href=\"https://cstheory-events.org/\" rel=\"noopener noreferrer\">CS Theory Events Aggregator</a> - An aggregator for CS theory workshops and schools.</li>\n</ul>\n<ul>\n<li><a href=\"https://dmatheorynet.blogspot.com/\" rel=\"noopener noreferrer\">Theory Announcements</a> - DMANET spreads information on conferences, workshops, seminars etc. relating to discrete mathematics and algorithms.</li>\n</ul>\n<h3><p>Live / Lecture Videos Playlist</p>\n</h3><ul>\n<li><a href=\"https://www.youtube.com/user/TCSplusSeminars\" rel=\"noopener noreferrer\">TCS+</a> - A series of online seminars in theoretical computer science. The goal is to make engaging talks accessible to the widest possible audience.</li>\n</ul>\n<h3><p>Archived / Lecture Videos Playlist</p>\n</h3><ul>\n<li><a href=\"https://www.youtube.com/channel/UCzBw287tly0c2lE6a-9XymA\" rel=\"noopener noreferrer\">Computational Complexity</a> - Collection of workshops.</li>\n</ul>\n<h3><p>Selected Posts and Essays / Lecture Videos Playlist</p>\n</h3><ul>\n<li><a href=\"https://omereingold.wordpress.com/cs-163-the-practice-of-theory-research/\" rel=\"noopener noreferrer\">Omer Reingold. The Practice of Theory Research</a> - A research methods course, concentrating on the how rather than the what. It focuses on research practices common for computer science theory research.</li>\n</ul>\n<ul>\n<li><a href=\"https://theorydish.blog/2021/04/15/toc-a-personal-perspective-2021/\" rel=\"noopener noreferrer\">Omer Reingold. TOC: a Personal Perspective (2021)</a> - In celebration of 25 years for ‚ÄúTOC: a Scientific Perspective (1996),‚Äù by Oded Goldreich and Avi Wigderson. It spots the light on a criticism directed to TCS, that it is not as deep as Math and not as useful as CS.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.cs.cmu.edu/~mblum/research/pdf/grad.html\" rel=\"noopener noreferrer\">Blum. You and Your Research: An Advice to a Beginning Graduate Student</a> - Manuel Blum, A very popular figure in TCS, gives research advices for juniors.</li>\n</ul>\n<ul>\n<li><a href=\"https://link.springer.com/chapter/10.1007%2F978-1-4612-5695-3_58\" rel=\"noopener noreferrer\">Dijkstra. The Three Golden Rules for Successful Scientific Research</a> - A note devoted to three rules that must be followed if you want to be successful in scientific research.</li>\n</ul>\n<ul>\n<li><a href=\"http://www.wisdom.weizmann.ac.il/~oded/essays.html\" rel=\"noopener noreferrer\">Goldreich. Essays and Opinions</a> - Personal Essays by Oded Goldreich. They are very unique in their conceptual message of TCS and its community.</li>\n</ul>\n<ul>\n<li><a href=\"https://windowsontheory.org/2015/11/03/advice-for-the-budding-theorist/\" rel=\"noopener noreferrer\">Barak. Advice for The Budding Theorist</a> - Tips for anyone interested in theoretical computer science.</li>\n</ul>\n<ul>\n<li><a href=\"https://thmatters.wordpress.com/surveys/\" rel=\"noopener noreferrer\">Barak. Surveys For Students</a> - Surveys for high-school, undergraduate, and even researchers.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.boazbarak.org/informal/\" rel=\"noopener noreferrer\">Barak. Non-technical or Less-technical Writings and Talks</a> - Posts oriented more for a less-technically matured audience.</li>\n</ul>\n<ul>\n<li><a href=\"https://www2.eecs.berkeley.edu/bears/CS_Anniversary/karp-talk.html\" rel=\"noopener noreferrer\">Karp. A Personal View of Computer Science at Berkeley</a> - Karp addresses: In 1968 computer science at Berkeley was problematic, with two departments working independently to develop programs, and his personal reflections.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.cs.virginia.edu/~robins/YouAndYourResearch.html\" rel=\"noopener noreferrer\">Hamming. You and Your Research</a> - Why do so few scientists make significant contributions and so many are forgotten in the long run? The talk is about what Hamming has learned.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.nature.com/articles/426389a\" rel=\"noopener noreferrer\">Weinberg. Four Golden Lessons</a> - Lessons for students and researchers given by Steven Weinberg.</li>\n</ul>\n<ul>\n<li><a href=\"https://terrytao.wordpress.com/career-advice/\" rel=\"noopener noreferrer\">Terry. Career Advice</a> - A collection of various pieces of advice on academic career issues in mathematics, roughly arranged by the stage of career at which the advice is most pertinent.</li>\n</ul>\n<h3><p>Popular Science / Lecture Videos Playlist</p>\n</h3><ul>\n<li><a href=\"https://goldenticket.fortnow.com\" rel=\"noopener noreferrer\">Fortnow. The Golden Ticket: P, NP, and the Search for the Impossible</a> - A nontechnical introduction to P-NP, its rich history, and its algorithmic implications for everything we do with computers and beyond.</li>\n</ul>\n<ul>\n<li><a href=\"http://www.daviddeutsch.org.uk/books/the-fabric-of-reality/\" rel=\"noopener noreferrer\">Deutsch. The Fabric of Reality: The Science of Parallel Universes and Its Implications</a> - The Fabric of Reality presents a startlingly integrated, rational and optimistic world view ‚Äì the result of taking seriously the deepest ideas of modern science and the philosophy of science.</li>\n</ul>\n<ul>\n<li><a href=\"https://mitpress.mit.edu/books/turing-novel-about-computation\" rel=\"noopener noreferrer\">Papadimitriou. Turing: A Novel About Computation</a> - The world of computation according to Turing, an interactive tutoring program, as told to star-crossed lovers: a novel.</li>\n</ul>\n<ul>\n<li><a href=\"http://www.charlespetzold.com/AnnotatedTuring/\" rel=\"noopener noreferrer\">Petzold. The Annotated Turing: A Guided Tour Through Alan Turing's Historic Paper on Computability and the Turing Machine</a> -  A Guided Tour through Alan Turing's Historic Paper on Computability and the Turing Machine.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.springer.com/gp/book/9780387982694\" rel=\"noopener noreferrer\">Shasha &amp; Lazere. Out of their Minds: The Lives and Discoveries of 15 Great Computer Scientists</a> - Interviews with era's greatest scientists about their inspirations, discoveries, and personal interests.</li>\n</ul>\n<h3><p>Cheat Sheets / Lecture Videos Playlist</p>\n</h3><ul>\n<li><a href=\"https://www.cosy.sbg.ac.at/~held/teaching/aads/TCS-cheat_sheet.pdf\" rel=\"noopener noreferrer\">TCS Cheat Sheet</a> - A sheet of notes containing essential toolboxes needed by any theoretical computer scientist.</li>\n</ul>\n",
      "date_published": "2022-02-10T14:35:05.000Z",
      "date_modified": "2022-02-10T14:42:52.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/sitepoint-editors/awesome-symfony/",
      "title": "Awesome Symfony",
      "_slug": "sitepoint-editors/awesome-symfony/",
      "_filepath": "/content/sitepoint-editors/awesome-symfony/README.md",
      "url": "https://www.trackawesomelist.com/sitepoint-editors/awesome-symfony/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Web Services\n\n*   [LexikJWTAuthenticationBundle (‚≠ê2.6k)](https://github.com/lexik/LexikJWTAuthenticationBundle) - This bundle provides JWT (Json Web Token) authentication for your REST API using the lcobucci/jwt library.",
      "content_html": "<h3><p>Web Services</p>\n</h3><ul>\n<li><a href=\"https://github.com/lexik/LexikJWTAuthenticationBundle\" rel=\"noopener noreferrer\">LexikJWTAuthenticationBundle (‚≠ê2.6k)</a> - This bundle provides JWT (Json Web Token) authentication for your REST API using the lcobucci/jwt library.</li>\n</ul>\n",
      "date_published": "2022-02-10T13:45:46.000Z",
      "date_modified": "2022-02-10T13:45:46.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/protontypes/awesome-robotic-tooling/",
      "title": "Awesome Robotic Tooling",
      "_slug": "protontypes/awesome-robotic-tooling/",
      "_filepath": "/content/protontypes/awesome-robotic-tooling/README.md",
      "url": "https://www.trackawesomelist.com/protontypes/awesome-robotic-tooling/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Sensor Processing / Lidar and Point Cloud Processing\n\n*   [urban\\_road\\_filter (‚≠ê328)](https://github.com/jkk-research/urban_road_filter) - Real-time LIDAR-based Urban Road and Sidewalk detection for Autonomous Vehicles.\n*   [Removert (‚≠ê593)](https://github.com/irapkaist/removert) - Remove then revert. Static map construction in the wild and dynamic points removing tool by constructing a static map.",
      "content_html": "<h3><p>Sensor Processing / Lidar and Point Cloud Processing</p>\n</h3><ul>\n<li><a href=\"https://github.com/jkk-research/urban_road_filter\" rel=\"noopener noreferrer\">urban_road_filter (‚≠ê328)</a> - Real-time LIDAR-based Urban Road and Sidewalk detection for Autonomous Vehicles.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/irapkaist/removert\" rel=\"noopener noreferrer\">Removert (‚≠ê593)</a> - Remove then revert. Static map construction in the wild and dynamic points removing tool by constructing a static map.</li>\n</ul>\n",
      "date_published": "2022-02-10T12:59:21.000Z",
      "date_modified": "2022-02-10T12:59:21.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/vitejs/awesome-vite/",
      "title": "Awesome Vite",
      "_slug": "vitejs/awesome-vite/",
      "_filepath": "/content/vitejs/awesome-vite/README.md",
      "url": "https://www.trackawesomelist.com/vitejs/awesome-vite/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Framework-agnostic Plugins / Transformers\n\n*   [vite-plugin-pug-transformer (‚≠ê39)](https://github.com/TheSeally/vite-plugin-pug-transformer) - Pug template engine support.\n\n### Framework-agnostic Plugins / Helpers\n\n*   [vite-plugin-dynamic-base (‚≠ê74)](https://github.com/chenxch/vite-plugin-dynamic-base) - Resolve all resource files dynamic publicPath.",
      "content_html": "<h3><p>Framework-agnostic Plugins / Transformers</p>\n</h3><ul>\n<li><a href=\"https://github.com/TheSeally/vite-plugin-pug-transformer\" rel=\"noopener noreferrer\">vite-plugin-pug-transformer (‚≠ê39)</a> - Pug template engine support.</li>\n</ul>\n<h3><p>Framework-agnostic Plugins / Helpers</p>\n</h3><ul>\n<li><a href=\"https://github.com/chenxch/vite-plugin-dynamic-base\" rel=\"noopener noreferrer\">vite-plugin-dynamic-base (‚≠ê74)</a> - Resolve all resource files dynamic publicPath.</li>\n</ul>\n",
      "date_published": "2022-02-10T11:24:56.000Z",
      "date_modified": "2022-02-10T21:50:21.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/avelino/awesome-go/",
      "title": "Awesome Go",
      "_slug": "avelino/awesome-go/",
      "_filepath": "/content/avelino/awesome-go/README.md",
      "url": "https://www.trackawesomelist.com/avelino/awesome-go/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Project Layout\n\n*   [pagoda (‚≠ê2.6k)](https://github.com/mikestefanello/pagoda) - Rapid, easy full-stack web development starter kit built in Go.\n\n### Template Engines\n\n*   [got (‚≠ê38)](https://github.com/goradd/got) - A Go code generator inspired by Hero and Fasttemplate. Has include files, custom tag definitions, injected Go code, language translation, and more.",
      "content_html": "<h3><p>Project Layout</p>\n</h3><ul>\n<li><a href=\"https://github.com/mikestefanello/pagoda\" rel=\"noopener noreferrer\">pagoda (‚≠ê2.6k)</a> - Rapid, easy full-stack web development starter kit built in Go.</li>\n</ul>\n<h3><p>Template Engines</p>\n</h3><ul>\n<li><a href=\"https://github.com/goradd/got\" rel=\"noopener noreferrer\">got (‚≠ê38)</a> - A Go code generator inspired by Hero and Fasttemplate. Has include files, custom tag definitions, injected Go code, language translation, and more.</li>\n</ul>\n",
      "date_published": "2022-02-10T10:29:10.000Z",
      "date_modified": "2022-02-10T18:58:54.000Z"
    }
  ]
}
