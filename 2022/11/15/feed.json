{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Nov 15, 2022",
  "_site_title": "Track Awesome List",
  "description": "12 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Nov 15, 2022 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/gbdev/awesome-gbdev/",
      "title": "Awesome Gbdev",
      "_slug": "gbdev/awesome-gbdev/",
      "_filepath": "/content/gbdev/awesome-gbdev/README.md",
      "url": "https://www.trackawesomelist.com/gbdev/awesome-gbdev/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Hardware / Opcodes\n\n*   [dmg-schematics (⭐18)](https://github.com/msinger/dmg-schematics) - Schematics and annotated overlay for the DMG-CPU B chip, extracted from die photos, made with KiCad. Also contains Electric VLSI library with layouts for some of the cells and memories.",
      "content_html": "<h3><p>Hardware / Opcodes</p>\n</h3><ul>\n<li><a href=\"https://github.com/msinger/dmg-schematics\" rel=\"noopener noreferrer\">dmg-schematics (⭐18)</a> - Schematics and annotated overlay for the DMG-CPU B chip, extracted from die photos, made with KiCad. Also contains Electric VLSI library with layouts for some of the cells and memories.</li>\n</ul>\n",
      "date_published": "2022-11-15T20:27:40.000Z",
      "date_modified": "2022-11-15T20:27:40.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/EbookFoundation/free-programming-books/casts/free-podcasts-screencasts-en/",
      "title": "Free Podcasts/Screencasts (English)",
      "_slug": "EbookFoundation/free-programming-books/casts/free-podcasts-screencasts-en/",
      "_filepath": "/content/EbookFoundation/free-programming-books/casts/free-podcasts-screencasts-en/README.md",
      "url": "https://www.trackawesomelist.com/EbookFoundation/free-programming-books/casts/free-podcasts-screencasts-en/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Persuasive Technology / React.js\n\n*   [Persuasive Technology and Behavioural Design](https://anchor.fm/digital-mindfulness/episodes/DM-20-BJ-Fogg---Persuasive-Technology--Behavioural-Design-eu6onh) - BJ Fogg (podcast)\n*   [Your Undivided Attention](https://www.humanetech.com/podcast) - Tristan Harris and Aza Raskin (podcast)",
      "content_html": "<h3><p>Persuasive Technology / React.js</p>\n</h3><ul>\n<li><a href=\"https://anchor.fm/digital-mindfulness/episodes/DM-20-BJ-Fogg---Persuasive-Technology--Behavioural-Design-eu6onh\" rel=\"noopener noreferrer\">Persuasive Technology and Behavioural Design</a> - BJ Fogg (podcast)</li>\n</ul>\n<ul>\n<li><a href=\"https://www.humanetech.com/podcast\" rel=\"noopener noreferrer\">Your Undivided Attention</a> - Tristan Harris and Aza Raskin (podcast)</li>\n</ul>\n",
      "date_published": "2022-11-15T19:52:56.000Z",
      "date_modified": "2022-11-15T19:52:56.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/Fr0sT-Brutal/awesome-pascal/",
      "title": "Awesome Pascal",
      "_slug": "Fr0sT-Brutal/awesome-pascal/",
      "_filepath": "/content/Fr0sT-Brutal/awesome-pascal/README.md",
      "url": "https://www.trackawesomelist.com/Fr0sT-Brutal/awesome-pascal/",
      "summary": "8 awesome projects updated",
      "content_text": "\n\n### Graphic\n\n*   [ImageQuality (⭐18)](https://github.com/GodModeUser/ImageQuality). `[Delphi]` `[FPC]` A library for objectively measuring image/video quality. It implements many popular algorithms, such as MS-SSIM, MS-SSIM\\*, SIMM, MSE, and PSNR. It is designed to be fast, accurate, and reliable. It can be compiled directly and requires no additional libraries.\n*   [DelphiX](http://www.micrel.cz/Dx/) `[Delphi]` `[FPC]` A good wrapper to DirectX. It can be used to create games or any kind of graphical interface.\n\n### Game dev\n\n*   [Ray4Laz (⭐136)](https://github.com/GuvaCode/Ray4Laz). `[FPC]` A complete header translation (binding) of [raylib](https://www.raylib.com/) to Pascal.\n\n### Control packs\n\n*   [liblcl (⭐154)](https://github.com/ying32/liblcl). `[FPC]` A common cross-platform GUI library, the core uses Lazarus LCL.\r\n    // *Pascal-based lib with GUI bindings for use in languages like C++, Go, Rust.*\n\n### Other GUI\n\n*   [GUI AutoSave (⭐12)](https://github.com/GodModeUser/Dephi-LightSaber-GUI_AutoSave) Save the state of all GUI controls on application shutdown and then restore them loaded on application startup: It can load/save: form's position, checkboxes, radiobuttons, etc, etc\n\n### Database\n\n*   [Trysil (⭐120)](https://github.com/davidlastrucci/Trysil) \\[Delphi] ORM (Object-Relational Mapping) for Delphi. Supports for SQLServer, FirebirdSQL and SQLite.\n\n### System\n\n*   [Storage Access Framework SAF (⭐37)](https://github.com/emozgun/delphi-android-SAF) `[Delphi]` Android Scoped Storage : Storage Access Framework SAF API\n\n### Logging\n\n*   [LogLib (⭐7)](https://github.com/GodModeUser/Delphi-LightSaber-LogLib). `[Delphi]` A simple but effective visual log control/library. The programmer can send messages to a log window from anywhere in his code. The Log window can be set to automatically pop up when an error message is sent to it. Depending on the chosen verbosity level of the log (see the Verbosity property) low-level messages (like verbose/debug messages) are shown or not. Contains: Non-visual log (TRamLog) Visual log (TRichLog)\n\n### Other non-visual\n\n*   [Delphi LightSaber-CoreLib (⭐64)](https://github.com/GodModeUser/Delphi-LightSaber-CoreLib). `[Delphi]` Lightweight alternative to Jedi library. Simple, crystal clear, non-obfuscated, fully commented code. No external dependencies. Hundreds of super useful functions for file/folder/disk manipulation, fast (buffered) binary file access, string conversions, OS version detection, etc.\n*   [DCContainers (⭐11)](https://github.com/dsapolska/dccontainers). `[Delphi]` Containers library with maps and sets based on red-black tree\n*   [DOSCommand (⭐129)](https://github.com/TurboPack/DOSCommand). `[Delphi]` Component lets you execute a dos program (exe, com or batch file) and catch the ouput in order to put it in a memo or in a listbox, ... You can also send inputs.",
      "content_html": "<h3><p>Graphic</p>\n</h3><ul>\n<li><a href=\"https://github.com/GodModeUser/ImageQuality\" rel=\"noopener noreferrer\">ImageQuality (⭐18)</a>. <code>[Delphi]</code> <code>[FPC]</code> A library for objectively measuring image/video quality. It implements many popular algorithms, such as MS-SSIM, MS-SSIM*, SIMM, MSE, and PSNR. It is designed to be fast, accurate, and reliable. It can be compiled directly and requires no additional libraries.</li>\n</ul>\n<ul>\n<li><a href=\"http://www.micrel.cz/Dx/\" rel=\"noopener noreferrer\">DelphiX</a> <code>[Delphi]</code> <code>[FPC]</code> A good wrapper to DirectX. It can be used to create games or any kind of graphical interface.</li>\n</ul>\n<h3><p>Game dev</p>\n</h3><ul>\n<li><a href=\"https://github.com/GuvaCode/Ray4Laz\" rel=\"noopener noreferrer\">Ray4Laz (⭐136)</a>. <code>[FPC]</code> A complete header translation (binding) of <a href=\"https://www.raylib.com/\" rel=\"noopener noreferrer\">raylib</a> to Pascal.</li>\n</ul>\n<h3><p>Control packs</p>\n</h3><ul>\n<li><a href=\"https://github.com/ying32/liblcl\" rel=\"noopener noreferrer\">liblcl (⭐154)</a>. <code>[FPC]</code> A common cross-platform GUI library, the core uses Lazarus LCL.\n// <em>Pascal-based lib with GUI bindings for use in languages like C++, Go, Rust.</em></li>\n</ul>\n<h3><p>Other GUI</p>\n</h3><ul>\n<li><a href=\"https://github.com/GodModeUser/Dephi-LightSaber-GUI_AutoSave\" rel=\"noopener noreferrer\">GUI AutoSave (⭐12)</a> Save the state of all GUI controls on application shutdown and then restore them loaded on application startup: It can load/save: form's position, checkboxes, radiobuttons, etc, etc</li>\n</ul>\n<h3><p>Database</p>\n</h3><ul>\n<li><a href=\"https://github.com/davidlastrucci/Trysil\" rel=\"noopener noreferrer\">Trysil (⭐120)</a> [Delphi] ORM (Object-Relational Mapping) for Delphi. Supports for SQLServer, FirebirdSQL and SQLite.</li>\n</ul>\n<h3><p>System</p>\n</h3><ul>\n<li><a href=\"https://github.com/emozgun/delphi-android-SAF\" rel=\"noopener noreferrer\">Storage Access Framework SAF (⭐37)</a> <code>[Delphi]</code> Android Scoped Storage : Storage Access Framework SAF API</li>\n</ul>\n<h3><p>Logging</p>\n</h3><ul>\n<li><a href=\"https://github.com/GodModeUser/Delphi-LightSaber-LogLib\" rel=\"noopener noreferrer\">LogLib (⭐7)</a>. <code>[Delphi]</code> A simple but effective visual log control/library. The programmer can send messages to a log window from anywhere in his code. The Log window can be set to automatically pop up when an error message is sent to it. Depending on the chosen verbosity level of the log (see the Verbosity property) low-level messages (like verbose/debug messages) are shown or not. Contains: Non-visual log (TRamLog) Visual log (TRichLog)</li>\n</ul>\n<h3><p>Other non-visual</p>\n</h3><ul>\n<li><a href=\"https://github.com/GodModeUser/Delphi-LightSaber-CoreLib\" rel=\"noopener noreferrer\">Delphi LightSaber-CoreLib (⭐64)</a>. <code>[Delphi]</code> Lightweight alternative to Jedi library. Simple, crystal clear, non-obfuscated, fully commented code. No external dependencies. Hundreds of super useful functions for file/folder/disk manipulation, fast (buffered) binary file access, string conversions, OS version detection, etc.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/dsapolska/dccontainers\" rel=\"noopener noreferrer\">DCContainers (⭐11)</a>. <code>[Delphi]</code> Containers library with maps and sets based on red-black tree</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/TurboPack/DOSCommand\" rel=\"noopener noreferrer\">DOSCommand (⭐129)</a>. <code>[Delphi]</code> Component lets you execute a dos program (exe, com or batch file) and catch the ouput in order to put it in a memo or in a listbox, ... You can also send inputs.</li>\n</ul>\n",
      "date_published": "2022-11-15T16:06:57.000Z",
      "date_modified": "2022-11-15T16:35:02.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/chentsulin/awesome-graphql/",
      "title": "Awesome Graphql",
      "_slug": "chentsulin/awesome-graphql/",
      "_filepath": "/content/chentsulin/awesome-graphql/README.md",
      "url": "https://www.trackawesomelist.com/chentsulin/awesome-graphql/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Tools - Docs / React\n\n*   [spectaql (⭐1.2k)](https://github.com/anvilco/spectaql) - Autogenerate static GraphQL API documentation.\n*   [graphql-markdown](https://graphql-markdown.github.io/) - Flexible documentation for GraphQL powered with Docusaurus.",
      "content_html": "<h3><p>Tools - Docs / React</p>\n</h3><ul>\n<li><a href=\"https://github.com/anvilco/spectaql\" rel=\"noopener noreferrer\">spectaql (⭐1.2k)</a> - Autogenerate static GraphQL API documentation.</li>\n</ul>\n<ul>\n<li><a href=\"https://graphql-markdown.github.io/\" rel=\"noopener noreferrer\">graphql-markdown</a> - Flexible documentation for GraphQL powered with Docusaurus.</li>\n</ul>\n",
      "date_published": "2022-11-15T15:43:46.000Z",
      "date_modified": "2022-11-15T15:43:46.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/AdrienTorris/awesome-blazor/",
      "title": "Awesome Blazor",
      "_slug": "AdrienTorris/awesome-blazor/",
      "_filepath": "/content/AdrienTorris/awesome-blazor/README.md",
      "url": "https://www.trackawesomelist.com/AdrienTorris/awesome-blazor/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Videos / Others\n\n*   [What's new for Blazor in .NET 7 | .NET Conf 2022](https://www.youtube.com/watch?v=evW4Gj4sHsk) - ![duration](https://img.shields.io/badge/Duration:%20-29%20min-%230094FF?style=flat-square\\&cacheSeconds=maxAge\\&logo=youtube) November 10, 2022 - Blazor in .NET 7 is loaded with many new improvements to make building beautiful interactive web UI easier and more productive. In this session we'll take a look at the new support for custom elements, improved data binding, handling location changing events, showing loading progress, dynamic authentication requests, and more.\n*   [Build an Audio Browser app with Blazor | .NET Conf 2022](https://www.youtube.com/watch?v=2t4VwBeQ9DY) - ![duration](https://img.shields.io/badge/Duration:%20-28%20min-%230094FF?style=flat-square\\&cacheSeconds=maxAge\\&logo=youtube) November 10, 2022 - So you’ve heard about new features in .NET 7, but how does it all fit together when you build an app? Join Steve as he quickly builds an end-to-end audio manager app with Blazor WebAssembly using features old and new. This is a moderately advanced talk (it assumes existing Blazor knowledge) full of hints and tips including: cleaner ways to organize JS interop, directly accessing files on an end user’s filesystem, dynamically generating SVGs, creating an elegant “loading” experience, and the performance impact of AOT compilation. Full source code is provided!\n*   [.NET ❤️’s WebAssembly in .NET 7 | .NET Conf 2022](https://www.youtube.com/watch?v=Ru-kO77d3F8) - ![duration](https://img.shields.io/badge/Duration:%20-27%20min-%230094FF?style=flat-square\\&cacheSeconds=maxAge\\&logo=youtube) November 10, 2022 - .NET 7 introduces powerful new capabilities for running .NET code on WebAssembly. In this session we’ll show how you can run .NET from any JavaScript code using the new and improved JavaScript interop support. We’ll look at debugging and hot reload improvements for .NET on WebAssembly  and show how the .NET WebAssembly build tools in .NET 7 take advantage of the latest WebAssembly features like SIMD and Exception Handling to improve performance. We’ll also check out some upcoming and experimental .NET WebAssembly capabilities like support for multithreading.\n*   [Testing Blazor Applications with Playwright | .NET Conf 2022](https://www.youtube.com/watch?v=gBky9_AskNQ) - ![duration](https://img.shields.io/badge/Duration:%20-24%20min-%230094FF?style=flat-square\\&cacheSeconds=maxAge\\&logo=youtube) November 10, 2022 - Testing is hard, testing takes time to learn and to write, and time is money. As developers we want to test. We know we should but we don't have time. So how can we get more developers to do testing? We can create better tools. Let me introduce you to Playwright - Reliable end-to-end cross browser testing for modern web apps, by Microsoft and fully open source. Playwright's codegen generates tests for you so now you really have no excuses. It's time to play your tests wright.\n*   [Create native desktop & mobile apps using web skills in Blazor Hybrid | .NET Conf 2022](https://www.youtube.com/watch?v=ojcvL8KCOwo) - ![duration](https://img.shields.io/badge/Duration:%20-30%20min-%230094FF?style=flat-square\\&cacheSeconds=maxAge\\&logo=youtube) November 10, 2022 - Are you a web developer and need to target iOS, Android, macOS, and Windows? Ship directly to the store and build world class apps with native API access with .NET MAUI and Blazor Hybrid.\n*   [Modernize your WPF and Windows Forms application with Blazor | .NET Conf 2022](https://www.youtube.com/watch?v=niX1DbFwgq4) - ![duration](https://img.shields.io/badge/Duration:%20-24%20min-%230094FF?style=flat-square\\&cacheSeconds=maxAge\\&logo=youtube) November 10, 2022 - Desktop is not dead and there are a lot of applications written in WPF and Windows Forms that need to be ported to Web, or reuse ready components written by the web team. Blazor can be the answer for both the requirements thanks to Blazor Hybrid. Let’s see how you can use it.\n*   [CSS Techniques for Blazor Developers | .NET Conf 2022](https://www.youtube.com/watch?v=w_x1keHyXAY) - ![duration](https://img.shields.io/badge/Duration:%20-29%20min-%230094FF?style=flat-square\\&cacheSeconds=maxAge\\&logo=youtube) November 10, 2022 - Does your CSS code remind you of an episode of Hoarders? In this session we’ll explore a variety of CSS related architecture decisions that Blazor developers face. Attendees will learn how and when to use plain CSS, Sass or CSS Isolation with Blazor. Modern CSS techniques like custom CSS properties will be discussed. We’ll explore techniques to build modular and intelligent CSS by leveraging CSS principals and incorporating helper libraries. This session aims to break the dependency on CSS systems like Bootstrap and Tailwind.\n*   [Azure Static Web Apps with Blazor and .NET | .NET Conf 2022](https://www.youtube.com/watch?v=FjGjguW1Xa0) - ![duration](https://img.shields.io/badge/Duration:%20-30%20min-%230094FF?style=flat-square\\&cacheSeconds=maxAge\\&logo=youtube) November 10, 2022 - Are you a .NET developer who wants to quickly build and deploy full-stack .NET serverless applications? Then this talk is for you! In this session, we will learn how to use Azure Static Web Apps with Blazor and .NET. First, we will explore Azure Static Web Apps. Then take a look at getting started with Blazor WebAssembly paired with the serverless power of .NET Azure Functions or Azure Container Apps. We will continue on to explore other .NET API options now available. And finally, we will discover how to automatically build and deploy to Azure directly from our code repository.",
      "content_html": "<h3><p>Videos / Others</p>\n</h3><ul>\n<li><a href=\"https://www.youtube.com/watch?v=evW4Gj4sHsk\" rel=\"noopener noreferrer\">What's new for Blazor in .NET 7 | .NET Conf 2022</a> - <img src=\"https://img.shields.io/badge/Duration:%20-29%20min-%230094FF?style=flat-square&amp;cacheSeconds=maxAge&amp;logo=youtube\" alt=\"duration\" /> November 10, 2022 - Blazor in .NET 7 is loaded with many new improvements to make building beautiful interactive web UI easier and more productive. In this session we'll take a look at the new support for custom elements, improved data binding, handling location changing events, showing loading progress, dynamic authentication requests, and more.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=2t4VwBeQ9DY\" rel=\"noopener noreferrer\">Build an Audio Browser app with Blazor | .NET Conf 2022</a> - <img src=\"https://img.shields.io/badge/Duration:%20-28%20min-%230094FF?style=flat-square&amp;cacheSeconds=maxAge&amp;logo=youtube\" alt=\"duration\" /> November 10, 2022 - So you’ve heard about new features in .NET 7, but how does it all fit together when you build an app? Join Steve as he quickly builds an end-to-end audio manager app with Blazor WebAssembly using features old and new. This is a moderately advanced talk (it assumes existing Blazor knowledge) full of hints and tips including: cleaner ways to organize JS interop, directly accessing files on an end user’s filesystem, dynamically generating SVGs, creating an elegant “loading” experience, and the performance impact of AOT compilation. Full source code is provided!</li>\n</ul>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=Ru-kO77d3F8\" rel=\"noopener noreferrer\">.NET ❤️’s WebAssembly in .NET 7 | .NET Conf 2022</a> - <img src=\"https://img.shields.io/badge/Duration:%20-27%20min-%230094FF?style=flat-square&amp;cacheSeconds=maxAge&amp;logo=youtube\" alt=\"duration\" /> November 10, 2022 - .NET 7 introduces powerful new capabilities for running .NET code on WebAssembly. In this session we’ll show how you can run .NET from any JavaScript code using the new and improved JavaScript interop support. We’ll look at debugging and hot reload improvements for .NET on WebAssembly  and show how the .NET WebAssembly build tools in .NET 7 take advantage of the latest WebAssembly features like SIMD and Exception Handling to improve performance. We’ll also check out some upcoming and experimental .NET WebAssembly capabilities like support for multithreading.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=gBky9_AskNQ\" rel=\"noopener noreferrer\">Testing Blazor Applications with Playwright | .NET Conf 2022</a> - <img src=\"https://img.shields.io/badge/Duration:%20-24%20min-%230094FF?style=flat-square&amp;cacheSeconds=maxAge&amp;logo=youtube\" alt=\"duration\" /> November 10, 2022 - Testing is hard, testing takes time to learn and to write, and time is money. As developers we want to test. We know we should but we don't have time. So how can we get more developers to do testing? We can create better tools. Let me introduce you to Playwright - Reliable end-to-end cross browser testing for modern web apps, by Microsoft and fully open source. Playwright's codegen generates tests for you so now you really have no excuses. It's time to play your tests wright.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=ojcvL8KCOwo\" rel=\"noopener noreferrer\">Create native desktop &amp; mobile apps using web skills in Blazor Hybrid | .NET Conf 2022</a> - <img src=\"https://img.shields.io/badge/Duration:%20-30%20min-%230094FF?style=flat-square&amp;cacheSeconds=maxAge&amp;logo=youtube\" alt=\"duration\" /> November 10, 2022 - Are you a web developer and need to target iOS, Android, macOS, and Windows? Ship directly to the store and build world class apps with native API access with .NET MAUI and Blazor Hybrid.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=niX1DbFwgq4\" rel=\"noopener noreferrer\">Modernize your WPF and Windows Forms application with Blazor | .NET Conf 2022</a> - <img src=\"https://img.shields.io/badge/Duration:%20-24%20min-%230094FF?style=flat-square&amp;cacheSeconds=maxAge&amp;logo=youtube\" alt=\"duration\" /> November 10, 2022 - Desktop is not dead and there are a lot of applications written in WPF and Windows Forms that need to be ported to Web, or reuse ready components written by the web team. Blazor can be the answer for both the requirements thanks to Blazor Hybrid. Let’s see how you can use it.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=w_x1keHyXAY\" rel=\"noopener noreferrer\">CSS Techniques for Blazor Developers | .NET Conf 2022</a> - <img src=\"https://img.shields.io/badge/Duration:%20-29%20min-%230094FF?style=flat-square&amp;cacheSeconds=maxAge&amp;logo=youtube\" alt=\"duration\" /> November 10, 2022 - Does your CSS code remind you of an episode of Hoarders? In this session we’ll explore a variety of CSS related architecture decisions that Blazor developers face. Attendees will learn how and when to use plain CSS, Sass or CSS Isolation with Blazor. Modern CSS techniques like custom CSS properties will be discussed. We’ll explore techniques to build modular and intelligent CSS by leveraging CSS principals and incorporating helper libraries. This session aims to break the dependency on CSS systems like Bootstrap and Tailwind.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=FjGjguW1Xa0\" rel=\"noopener noreferrer\">Azure Static Web Apps with Blazor and .NET | .NET Conf 2022</a> - <img src=\"https://img.shields.io/badge/Duration:%20-30%20min-%230094FF?style=flat-square&amp;cacheSeconds=maxAge&amp;logo=youtube\" alt=\"duration\" /> November 10, 2022 - Are you a .NET developer who wants to quickly build and deploy full-stack .NET serverless applications? Then this talk is for you! In this session, we will learn how to use Azure Static Web Apps with Blazor and .NET. First, we will explore Azure Static Web Apps. Then take a look at getting started with Blazor WebAssembly paired with the serverless power of .NET Azure Functions or Azure Container Apps. We will continue on to explore other .NET API options now available. And finally, we will discover how to automatically build and deploy to Azure directly from our code repository.</li>\n</ul>\n",
      "date_published": "2022-11-15T15:32:47.000Z",
      "date_modified": "2022-11-15T15:32:47.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/denolib/awesome-deno/",
      "title": "Awesome Deno",
      "_slug": "denolib/awesome-deno/",
      "_filepath": "/content/denolib/awesome-deno/README.md",
      "url": "https://www.trackawesomelist.com/denolib/awesome-deno/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Modules / Testing\n\n*   [tepi](https://deno.land/x/tepi) - A .http Test Runner",
      "content_html": "<h3><p>Modules / Testing</p>\n</h3><ul>\n<li><a href=\"https://deno.land/x/tepi\" rel=\"noopener noreferrer\">tepi</a> - A .http Test Runner</li>\n</ul>\n",
      "date_published": "2022-11-15T12:54:53.000Z",
      "date_modified": "2022-11-15T12:54:53.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/analysis-tools-dev/static-analysis/",
      "title": "Static Analysis",
      "_slug": "analysis-tools-dev/static-analysis/",
      "_filepath": "/content/analysis-tools-dev/static-analysis/README.md",
      "url": "https://www.trackawesomelist.com/analysis-tools-dev/static-analysis/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Programming Languages / [Other](#other-1)\n\n*   [cargo-show-asm (⭐834)](https://github.com/pacak/cargo-show-asm) — cargo subcommand showing the assembly, LLVM-IR and MIR generated for Rust code",
      "content_html": "<h3><p>Programming Languages / <a href=\"#other-1\">Other</a></p>\n</h3><ul>\n<li><a href=\"https://github.com/pacak/cargo-show-asm\" rel=\"noopener noreferrer\">cargo-show-asm (⭐834)</a> — cargo subcommand showing the assembly, LLVM-IR and MIR generated for Rust code</li>\n</ul>\n",
      "date_published": "2022-11-15T11:43:28.000Z",
      "date_modified": "2022-11-15T11:43:28.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/n2cholas/awesome-jax/",
      "title": "Awesome Jax",
      "_slug": "n2cholas/awesome-jax/",
      "_filepath": "/content/n2cholas/awesome-jax/README.md",
      "url": "https://www.trackawesomelist.com/n2cholas/awesome-jax/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Libraries / New Libraries\n\n*   [econpizza (⭐92)](https://github.com/gboehl/econpizza) - Solve macroeconomic models with hetereogeneous agents using JAX. <img src=\"https://img.shields.io/github/stars/gboehl/econpizza?style=social\" align=\"center\">",
      "content_html": "<h3><p>Libraries / New Libraries</p>\n</h3><ul>\n<li><a href=\"https://github.com/gboehl/econpizza\" rel=\"noopener noreferrer\">econpizza (⭐92)</a> - Solve macroeconomic models with hetereogeneous agents using JAX. <img src=\"https://img.shields.io/github/stars/gboehl/econpizza?style=social\" align=\"center\" /></li>\n</ul>\n",
      "date_published": "2022-11-15T08:47:34.000Z",
      "date_modified": "2022-11-15T08:47:34.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/avelino/awesome-go/",
      "title": "Awesome Go",
      "_slug": "avelino/awesome-go/",
      "_filepath": "/content/avelino/awesome-go/README.md",
      "url": "https://www.trackawesomelist.com/avelino/awesome-go/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Advanced Console UIs\n\n*   [bubbletea (⭐33k)](https://github.com/charmbracelet/bubbletea) - Go framework to build terminal apps, based on The Elm Architecture.\n\n### SQL Query Builders\n\n*   [builq (⭐94)](https://github.com/cristalhq/builq) - Easily build SQL queries in Go.",
      "content_html": "<h3><p>Advanced Console UIs</p>\n</h3><ul>\n<li><a href=\"https://github.com/charmbracelet/bubbletea\" rel=\"noopener noreferrer\">bubbletea (⭐33k)</a> - Go framework to build terminal apps, based on The Elm Architecture.</li>\n</ul>\n<h3><p>SQL Query Builders</p>\n</h3><ul>\n<li><a href=\"https://github.com/cristalhq/builq\" rel=\"noopener noreferrer\">builq (⭐94)</a> - Easily build SQL queries in Go.</li>\n</ul>\n",
      "date_published": "2022-11-15T07:45:46.000Z",
      "date_modified": "2022-11-15T16:34:50.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/fffaraz/awesome-cpp/",
      "title": "Awesome Cpp",
      "_slug": "fffaraz/awesome-cpp/",
      "_filepath": "/content/fffaraz/awesome-cpp/README.md",
      "url": "https://www.trackawesomelist.com/fffaraz/awesome-cpp/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Cryptography\n\n*   [HEhub (⭐94)](https://github.com/primihub/HEhub) - A library for homomorphic encryption and its applications. \\[Apache2]",
      "content_html": "<h3><p>Cryptography</p>\n</h3><ul>\n<li><a href=\"https://github.com/primihub/HEhub\" rel=\"noopener noreferrer\">HEhub (⭐94)</a> - A library for homomorphic encryption and its applications. [Apache2]</li>\n</ul>\n",
      "date_published": "2022-11-15T07:00:54.000Z",
      "date_modified": "2022-11-15T07:00:54.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/APA-Technology-Division/urban-and-regional-planning-resources/",
      "title": "Urban and Regional Planning Resources",
      "_slug": "APA-Technology-Division/urban-and-regional-planning-resources/",
      "_filepath": "/content/APA-Technology-Division/urban-and-regional-planning-resources/README.md",
      "url": "https://www.trackawesomelist.com/APA-Technology-Division/urban-and-regional-planning-resources/",
      "summary": "5 awesome projects updated",
      "content_text": "\n\n### Public Data Resources / Health\n\n*   [CDC Places](https://www.cdc.gov/places/index.html) - A CDC collaboration that allows local health departments and jurisdictions regardless of population size and urban-rural status to better understand the burden and geographic distribution of health-related outcomes in their areas and assist them in planning public health interventions.\n\n### Vendor Data Resources / Urban Observation\n\n*   [Transoft](https://safety.transoftsolutions.com/) - Transoft ITS Safety solutions utilize computer vision to identify 'near-miss' behavior on streets. This technology was featured Planning Magazine in the [Art of Learning by Example](https://www.planning.org/planning/2020/oct/art-of-learning-by-example/).\n\n### Planning Data Specifications / Built Environment\n\n*   [BLDS (⭐40)](https://github.com/open-data-standards/permitdata.org/wiki/Core-Permits-Dataset-Requirements) - The BLDS data standard is a collaborative effort by civic technology companies, governments and other interested parties to create a shared data specification for building and construction permit data.\n\n### Planning Coding Resources / Python\n\n*   [city-seer-api](https://cityseer.benchmarkurbanism.com/) - A package for pedestrian-scale network-based urban analysis: network analysis, urban morphology, land use, accessibility, and statistical aggregations.\n\n### Planning Coding Resources / R\n\n*   [tidytransit](https://cran.r-project.org/web/packages/tidytransit/vignettes/introduction.html) - A tidy approach to accessing and manipulating GTFS data, including transit routes, schedules, and stops.",
      "content_html": "<h3><p>Public Data Resources / Health</p>\n</h3><ul>\n<li><a href=\"https://www.cdc.gov/places/index.html\" rel=\"noopener noreferrer\">CDC Places</a> - A CDC collaboration that allows local health departments and jurisdictions regardless of population size and urban-rural status to better understand the burden and geographic distribution of health-related outcomes in their areas and assist them in planning public health interventions.</li>\n</ul>\n<h3><p>Vendor Data Resources / Urban Observation</p>\n</h3><ul>\n<li><a href=\"https://safety.transoftsolutions.com/\" rel=\"noopener noreferrer\">Transoft</a> - Transoft ITS Safety solutions utilize computer vision to identify 'near-miss' behavior on streets. This technology was featured Planning Magazine in the <a href=\"https://www.planning.org/planning/2020/oct/art-of-learning-by-example/\" rel=\"noopener noreferrer\">Art of Learning by Example</a>.</li>\n</ul>\n<h3><p>Planning Data Specifications / Built Environment</p>\n</h3><ul>\n<li><a href=\"https://github.com/open-data-standards/permitdata.org/wiki/Core-Permits-Dataset-Requirements\" rel=\"noopener noreferrer\">BLDS (⭐40)</a> - The BLDS data standard is a collaborative effort by civic technology companies, governments and other interested parties to create a shared data specification for building and construction permit data.</li>\n</ul>\n<h3><p>Planning Coding Resources / Python</p>\n</h3><ul>\n<li><a href=\"https://cityseer.benchmarkurbanism.com/\" rel=\"noopener noreferrer\">city-seer-api</a> - A package for pedestrian-scale network-based urban analysis: network analysis, urban morphology, land use, accessibility, and statistical aggregations.</li>\n</ul>\n<h3><p>Planning Coding Resources / R</p>\n</h3><ul>\n<li><a href=\"https://cran.r-project.org/web/packages/tidytransit/vignettes/introduction.html\" rel=\"noopener noreferrer\">tidytransit</a> - A tidy approach to accessing and manipulating GTFS data, including transit routes, schedules, and stops.</li>\n</ul>\n",
      "date_published": "2022-11-15T05:09:08.000Z",
      "date_modified": "2022-11-15T05:58:27.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/soruly/awesome-acg/",
      "title": "Awesome Acg",
      "_slug": "soruly/awesome-acg/",
      "_filepath": "/content/soruly/awesome-acg/README.md",
      "url": "https://www.trackawesomelist.com/soruly/awesome-acg/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Image Processing\n\n*   [Anime Segmentation (⭐723)](https://github.com/SkyTNT/anime-segmentation) - High-accuracy segmentation for anime character. \\[English]",
      "content_html": "<h3><p>Image Processing</p>\n</h3><ul>\n<li><a href=\"https://github.com/SkyTNT/anime-segmentation\" rel=\"noopener noreferrer\">Anime Segmentation (⭐723)</a> - High-accuracy segmentation for anime character. [English]</li>\n</ul>\n",
      "date_published": "2022-11-15T03:35:21.000Z",
      "date_modified": "2022-11-15T03:35:21.000Z"
    }
  ]
}
