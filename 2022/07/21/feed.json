{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Jul 21, 2022",
  "_site_title": "Track Awesome List",
  "description": "6 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Jul 21, 2022 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/brillout/awesome-react-components/",
      "title": "Awesome React Components",
      "_slug": "brillout/awesome-react-components/",
      "_filepath": "/content/brillout/awesome-react-components/README.md",
      "url": "https://www.trackawesomelist.com/brillout/awesome-react-components/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Icons\n\n*   [tabler-icons-react](https://tabler-icons-react.vercel.app) - A set of over 450 free MIT-licensed high-quality SVG icons.\n\n### Integrations with Third Party Services / Mouse Events\n\n*   [react-firebase-hooks (⭐3.6k)](https://github.com/csfrequency/react-firebase-hooks) - Hooks to integrate firebase in your application.",
      "content_html": "<h3><p>Icons</p>\n</h3><ul>\n<li><a href=\"https://tabler-icons-react.vercel.app\" rel=\"noopener noreferrer\">tabler-icons-react</a> - A set of over 450 free MIT-licensed high-quality SVG icons.</li>\n</ul>\n<h3><p>Integrations with Third Party Services / Mouse Events</p>\n</h3><ul>\n<li><a href=\"https://github.com/csfrequency/react-firebase-hooks\" rel=\"noopener noreferrer\">react-firebase-hooks (⭐3.6k)</a> - Hooks to integrate firebase in your application.</li>\n</ul>\n",
      "date_published": "2022-07-21T19:37:07.000Z",
      "date_modified": "2022-07-21T19:37:07.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/jivoi/awesome-osint/",
      "title": "Awesome Osint",
      "_slug": "jivoi/awesome-osint/",
      "_filepath": "/content/jivoi/awesome-osint/README.md",
      "url": "https://www.trackawesomelist.com/jivoi/awesome-osint/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Maritime / GitHub\n\n*   [VesselFinder](https://www.vesselfinder.com) - a FREE AIS vessel tracking web site. VesselFinder displays real time ship positions and marine traffic detected by global AIS network.",
      "content_html": "<h3><p>Maritime / GitHub</p>\n</h3><ul>\n<li><a href=\"https://www.vesselfinder.com\" rel=\"noopener noreferrer\">VesselFinder</a> - a FREE AIS vessel tracking web site. VesselFinder displays real time ship positions and marine traffic detected by global AIS network.</li>\n</ul>\n",
      "date_published": "2022-07-21T18:31:27.000Z",
      "date_modified": "2022-07-21T18:31:27.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/avelino/awesome-go/",
      "title": "Awesome Go",
      "_slug": "avelino/awesome-go/",
      "_filepath": "/content/avelino/awesome-go/README.md",
      "url": "https://www.trackawesomelist.com/avelino/awesome-go/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Authentication and OAuth\n\n*   [keto (⭐5.1k)](https://github.com/ory/keto) - Open Source (Go) implementation of \"Zanzibar: Google's Consistent, Global Authorization System\". Ships gRPC, REST APIs, newSQL, and an easy and granular permission language. Supports ACL, RBAC, and other access models.",
      "content_html": "<h3><p>Authentication and OAuth</p>\n</h3><ul>\n<li><a href=\"https://github.com/ory/keto\" rel=\"noopener noreferrer\">keto (⭐5.1k)</a> - Open Source (Go) implementation of \"Zanzibar: Google's Consistent, Global Authorization System\". Ships gRPC, REST APIs, newSQL, and an easy and granular permission language. Supports ACL, RBAC, and other access models.</li>\n</ul>\n",
      "date_published": "2022-07-21T17:05:49.000Z",
      "date_modified": "2022-07-21T17:05:49.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/AdrienTorris/awesome-blazor/",
      "title": "Awesome Blazor",
      "_slug": "AdrienTorris/awesome-blazor/",
      "_filepath": "/content/AdrienTorris/awesome-blazor/README.md",
      "url": "https://www.trackawesomelist.com/AdrienTorris/awesome-blazor/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Videos / Others\n\n*   [Making Blazor work with everything, plus WebAssembly on the server](https://www.youtube.com/watch?v=RevmsFXVJ5Q) - ![duration](https://img.shields.io/badge/Duration:%20-60%20min-%230094FF?style=flat-square\\&cacheSeconds=maxAge\\&logo=youtube) May 13, 2022 - Talk by Steve Sanderson at the NDC London 2022. Real-world software projects often involve combining many technologies. So, is modern Blazor powerful and flexible enough for your team's needs? In this demo-heavy talk, Steve will show how Blazor WebAssembly/Server can seamlessly embed libraries and logic written in other languages such as Rust or C/C++, how Blazor WebAssembly/Server components can be used inside other SPA frameworks such as React or Angular (or vice-versa) and how Blazor components can be used not only for web projects, but also shared with native apps for macOS, iOS, Android, and Windows (including WPF and WinForms) These capabilities should equip your team to take on the most ambitious projects with confidence. We'll then look further into the future and consider how WebAssembly is moving beyond the browser and is pitched to become a foundational element of cloud-native server apps. You'll be among the first to see an experimental new approach to compiling .NET applications into WASI-compliant universal binaries that can run on any OS or processor, robustly sandboxed and with great performance.\n*   [State management in Blazor](https://www.youtube.com/watch?v=L9p-9dGp-98) - ![duration](https://img.shields.io/badge/Duration:%20-63%20min-%230094FF?style=flat-square\\&cacheSeconds=maxAge\\&logo=youtube) April 29, 2022 - State management in Blazor, at the NDC Porto 2022. When developing a Single Page Application, a very important aspect is state management. Since Blazer is a component-based UI framework, how do we manage to update the UI when the state of the application changes.\n*   [Streaming three ways with Blazor: REST, gRPC, and SignalR](https://www.youtube.com/watch?v=cYP8TcokSFI) - ![duration](https://img.shields.io/badge/Duration:%20-45%20min-%230094FF?style=flat-square\\&cacheSeconds=maxAge\\&logo=youtube) April 29, 2022 - Streaming three ways with Blazor: REST, gRPC, and SignalR, by Carl Franklin at the NDC Porto 2022. Learn how to stream data from server to client to improve perceived performance and increase scalability. Carl shows how streaming works in general, and then how to implement using each of these three transports.\n\n### Articles / Others\n\n*   [Share Blazor components using dependency injection](https://engstromjimmy.com/post/2022-07-21-ShareBlazorComponentsUsingDi) - July 19, 2022 - Share Blazor components using dependency injection.\n*   [Using IAsyncEnumerable in a Razor component](https://www.meziantou.net/using-iasyncenumerable-in-a-razor-component.htm) - July 18, 2022 - Using IAsyncEnumerable in a Razor component.",
      "content_html": "<h3><p>Videos / Others</p>\n</h3><ul>\n<li><a href=\"https://www.youtube.com/watch?v=RevmsFXVJ5Q\" rel=\"noopener noreferrer\">Making Blazor work with everything, plus WebAssembly on the server</a> - <img src=\"https://img.shields.io/badge/Duration:%20-60%20min-%230094FF?style=flat-square&amp;cacheSeconds=maxAge&amp;logo=youtube\" alt=\"duration\" /> May 13, 2022 - Talk by Steve Sanderson at the NDC London 2022. Real-world software projects often involve combining many technologies. So, is modern Blazor powerful and flexible enough for your team's needs? In this demo-heavy talk, Steve will show how Blazor WebAssembly/Server can seamlessly embed libraries and logic written in other languages such as Rust or C/C++, how Blazor WebAssembly/Server components can be used inside other SPA frameworks such as React or Angular (or vice-versa) and how Blazor components can be used not only for web projects, but also shared with native apps for macOS, iOS, Android, and Windows (including WPF and WinForms) These capabilities should equip your team to take on the most ambitious projects with confidence. We'll then look further into the future and consider how WebAssembly is moving beyond the browser and is pitched to become a foundational element of cloud-native server apps. You'll be among the first to see an experimental new approach to compiling .NET applications into WASI-compliant universal binaries that can run on any OS or processor, robustly sandboxed and with great performance.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=L9p-9dGp-98\" rel=\"noopener noreferrer\">State management in Blazor</a> - <img src=\"https://img.shields.io/badge/Duration:%20-63%20min-%230094FF?style=flat-square&amp;cacheSeconds=maxAge&amp;logo=youtube\" alt=\"duration\" /> April 29, 2022 - State management in Blazor, at the NDC Porto 2022. When developing a Single Page Application, a very important aspect is state management. Since Blazer is a component-based UI framework, how do we manage to update the UI when the state of the application changes.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=cYP8TcokSFI\" rel=\"noopener noreferrer\">Streaming three ways with Blazor: REST, gRPC, and SignalR</a> - <img src=\"https://img.shields.io/badge/Duration:%20-45%20min-%230094FF?style=flat-square&amp;cacheSeconds=maxAge&amp;logo=youtube\" alt=\"duration\" /> April 29, 2022 - Streaming three ways with Blazor: REST, gRPC, and SignalR, by Carl Franklin at the NDC Porto 2022. Learn how to stream data from server to client to improve perceived performance and increase scalability. Carl shows how streaming works in general, and then how to implement using each of these three transports.</li>\n</ul>\n<h3><p>Articles / Others</p>\n</h3><ul>\n<li><a href=\"https://engstromjimmy.com/post/2022-07-21-ShareBlazorComponentsUsingDi\" rel=\"noopener noreferrer\">Share Blazor components using dependency injection</a> - July 19, 2022 - Share Blazor components using dependency injection.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.meziantou.net/using-iasyncenumerable-in-a-razor-component.htm\" rel=\"noopener noreferrer\">Using IAsyncEnumerable in a Razor component</a> - July 18, 2022 - Using IAsyncEnumerable in a Razor component.</li>\n</ul>\n",
      "date_published": "2022-07-21T10:02:16.000Z",
      "date_modified": "2022-07-21T11:43:15.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/mcauser/awesome-micropython/",
      "title": "Awesome Micropython",
      "_slug": "mcauser/awesome-micropython/",
      "_filepath": "/content/mcauser/awesome-micropython/README.md",
      "url": "https://www.trackawesomelist.com/mcauser/awesome-micropython/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Display / GUI\n\n*   [micropython-nextion (⭐13)](https://github.com/brainelectronics/micropython-nextion) - Control Nextion displays using MicroPython.",
      "content_html": "<h3><p>Display / GUI</p>\n</h3><ul>\n<li><a href=\"https://github.com/brainelectronics/micropython-nextion\" rel=\"noopener noreferrer\">micropython-nextion (⭐13)</a> - Control Nextion displays using MicroPython.</li>\n</ul>\n",
      "date_published": "2022-07-21T10:01:29.000Z",
      "date_modified": "2022-07-21T10:01:29.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/ChromeDevTools/awesome-chrome-devtools/",
      "title": "Awesome Chrome Devtools",
      "_slug": "ChromeDevTools/awesome-chrome-devtools/",
      "_filepath": "/content/ChromeDevTools/awesome-chrome-devtools/README.md",
      "url": "https://www.trackawesomelist.com/ChromeDevTools/awesome-chrome-devtools/",
      "summary": "6 awesome projects updated",
      "content_text": "\n\n### The big two automation libraries\n\n*   [Puppeteer (⭐91k)](https://github.com/GoogleChrome/puppeteer/) - Node.js offering a high-level API to control headless Chrome over the DevTools Protocol. See also [awesome-puppeteer (⭐2.5k)](https://github.com/transitive-bullshit/awesome-puppeteer).\n*   [Playwright (⭐75k)](https://github.com/microsoft/playwright) - Library to automate Chromium, Firefox and WebKit with a single API. Available for Node.js, Python, .Net, Java. See also [awesome-playwright (⭐1.2k)](https://github.com/mxschmitt/awesome-playwright).\n\n### Libraries for driving the protocol (or a layer above)\n\n*   JavaScript/Node.js: [chrome-remote-interface (⭐4.4k)](https://github.com/cyrus-and/chrome-remote-interface)\n*   TypeScript/Node.js: [chrome-debugging-client (⭐134)](https://github.com/TracerBench/chrome-debugging-client)\n*   Typescript/Node.js: [Taiko (⭐3.6k)](https://github.com/getgauge/taiko/)\n*   Rust: [Rust Headless Chrome (⭐17)](https://github.com/atroche/rust-headless-chrome/)\n*   Python: [pyppeteer (⭐3.9k)](https://github.com/pyppeteer/pyppeteer) - puppeteer port\n*   Ruby: [Ferrum (⭐1.9k)](https://github.com/route/ferrum) - high-level API to control Chrome in Ruby\n*   Clojure: [cuic (⭐37)](https://github.com/milankinen/cuic) - Providing a high-level API for UI test automation over the DevTools Protocol.\n*   PHP: [PuPHPeteer (⭐1.3k)](https://github.com/rialto-php/puphpeteer) - php bridge to node puppeteer\n\n### Browser Adapters\n\n*   [Inspect](https://inspect.dev/) - Use devtools against iOS and Android, easily. Browser and Webviews. **(closed source)**\n\n### Using DevTools frontend with other platforms / Ruby\n\n*   [ruby/debug (⭐1.2k)](https://github.com/ruby/debug) - Debugging functionality for Ruby.\n\n### Workflow / Ruby\n\n*   [Web Component DevTools](https://chrome.google.com/webstore/detail/web-component-devtools/gdniinfdlmmmjpnhgnkmfpffipenjljo) - Inspect, modify and observe Web Components on page.\n\n### Alumni / Ruby\n\n*   [Remote Debug Gateway (⭐95)](https://github.com/RemoteDebug/remotedebug-gateway) - Allows you to connect a client to multiple browsers at once.\n    *   Multiuser DevTools: [DevTools Remote (⭐698)](https://github.com/auchenberg/devtools-remote) - Remotely debug someone else's browser.\n*   [DevTools Backend (⭐147)](https://github.com/christian-bromann/devtools-backend) - Standalone implementation of the Chrome DevTools backend to debug arbitrary web environments.\n*   Python CDP driver: [pychrome (⭐637)](https://github.com/fate0/pychrome) - low level CDP transport handler\n*   [ios-webkit-debug-proxy (⭐6.1k)](https://github.com/google/ios-webkit-debug-proxy) - Exposes Mobile Safari & UIWebView instances via the CDP.\n    *   [Remote Debug iOS WebKit adapter (⭐2.7k)](https://github.com/RemoteDebug/remotedebug-ios-webkit-adapter) - Builts upon ios-webkit-debug-proxy and translates WebKit's Remote Debugging Protocol API to the CDP.\n*   [IE Diagnostics Adapter (⭐571)](https://github.com/Microsoft/IEDiagnosticsAdapter) - Protocol adaptor for Microsoft IE 11 to CDP.\n*   [go-debugger-devtools (⭐42)](https://github.com/allada/go-debugger-devtools)",
      "content_html": "<h3><p>The big two automation libraries</p>\n</h3><ul>\n<li><a href=\"https://github.com/GoogleChrome/puppeteer/\" rel=\"noopener noreferrer\">Puppeteer (⭐91k)</a> - Node.js offering a high-level API to control headless Chrome over the DevTools Protocol. See also <a href=\"https://github.com/transitive-bullshit/awesome-puppeteer\" rel=\"noopener noreferrer\">awesome-puppeteer (⭐2.5k)</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/microsoft/playwright\" rel=\"noopener noreferrer\">Playwright (⭐75k)</a> - Library to automate Chromium, Firefox and WebKit with a single API. Available for Node.js, Python, .Net, Java. See also <a href=\"https://github.com/mxschmitt/awesome-playwright\" rel=\"noopener noreferrer\">awesome-playwright (⭐1.2k)</a>.</li>\n</ul>\n<h3><p>Libraries for driving the protocol (or a layer above)</p>\n</h3><ul>\n<li>JavaScript/Node.js: <a href=\"https://github.com/cyrus-and/chrome-remote-interface\" rel=\"noopener noreferrer\">chrome-remote-interface (⭐4.4k)</a></li>\n</ul>\n<ul>\n<li>TypeScript/Node.js: <a href=\"https://github.com/TracerBench/chrome-debugging-client\" rel=\"noopener noreferrer\">chrome-debugging-client (⭐134)</a></li>\n</ul>\n<ul>\n<li>Typescript/Node.js: <a href=\"https://github.com/getgauge/taiko/\" rel=\"noopener noreferrer\">Taiko (⭐3.6k)</a></li>\n</ul>\n<ul>\n<li>Rust: <a href=\"https://github.com/atroche/rust-headless-chrome/\" rel=\"noopener noreferrer\">Rust Headless Chrome (⭐17)</a></li>\n</ul>\n<ul>\n<li>Python: <a href=\"https://github.com/pyppeteer/pyppeteer\" rel=\"noopener noreferrer\">pyppeteer (⭐3.9k)</a> - puppeteer port</li>\n</ul>\n<ul>\n<li>Ruby: <a href=\"https://github.com/route/ferrum\" rel=\"noopener noreferrer\">Ferrum (⭐1.9k)</a> - high-level API to control Chrome in Ruby</li>\n</ul>\n<ul>\n<li>Clojure: <a href=\"https://github.com/milankinen/cuic\" rel=\"noopener noreferrer\">cuic (⭐37)</a> - Providing a high-level API for UI test automation over the DevTools Protocol.</li>\n</ul>\n<ul>\n<li>PHP: <a href=\"https://github.com/rialto-php/puphpeteer\" rel=\"noopener noreferrer\">PuPHPeteer (⭐1.3k)</a> - php bridge to node puppeteer</li>\n</ul>\n<h3><p>Browser Adapters</p>\n</h3><ul>\n<li><a href=\"https://inspect.dev/\" rel=\"noopener noreferrer\">Inspect</a> - Use devtools against iOS and Android, easily. Browser and Webviews. <strong>(closed source)</strong></li>\n</ul>\n<h3><p>Using DevTools frontend with other platforms / Ruby</p>\n</h3><ul>\n<li><a href=\"https://github.com/ruby/debug\" rel=\"noopener noreferrer\">ruby/debug (⭐1.2k)</a> - Debugging functionality for Ruby.</li>\n</ul>\n<h3><p>Workflow / Ruby</p>\n</h3><ul>\n<li><a href=\"https://chrome.google.com/webstore/detail/web-component-devtools/gdniinfdlmmmjpnhgnkmfpffipenjljo\" rel=\"noopener noreferrer\">Web Component DevTools</a> - Inspect, modify and observe Web Components on page.</li>\n</ul>\n<h3><p>Alumni / Ruby</p>\n</h3><ul>\n<li><a href=\"https://github.com/RemoteDebug/remotedebug-gateway\" rel=\"noopener noreferrer\">Remote Debug Gateway (⭐95)</a> - Allows you to connect a client to multiple browsers at once.<ul>\n<li>Multiuser DevTools: <a href=\"https://github.com/auchenberg/devtools-remote\" rel=\"noopener noreferrer\">DevTools Remote (⭐698)</a> - Remotely debug someone else's browser.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/christian-bromann/devtools-backend\" rel=\"noopener noreferrer\">DevTools Backend (⭐147)</a> - Standalone implementation of the Chrome DevTools backend to debug arbitrary web environments.</li>\n</ul>\n<ul>\n<li>Python CDP driver: <a href=\"https://github.com/fate0/pychrome\" rel=\"noopener noreferrer\">pychrome (⭐637)</a> - low level CDP transport handler</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google/ios-webkit-debug-proxy\" rel=\"noopener noreferrer\">ios-webkit-debug-proxy (⭐6.1k)</a> - Exposes Mobile Safari &amp; UIWebView instances via the CDP.<ul>\n<li><a href=\"https://github.com/RemoteDebug/remotedebug-ios-webkit-adapter\" rel=\"noopener noreferrer\">Remote Debug iOS WebKit adapter (⭐2.7k)</a> - Builts upon ios-webkit-debug-proxy and translates WebKit's Remote Debugging Protocol API to the CDP.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Microsoft/IEDiagnosticsAdapter\" rel=\"noopener noreferrer\">IE Diagnostics Adapter (⭐571)</a> - Protocol adaptor for Microsoft IE 11 to CDP.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/allada/go-debugger-devtools\" rel=\"noopener noreferrer\">go-debugger-devtools (⭐42)</a></li>\n</ul>\n",
      "date_published": "2022-07-21T00:02:19.000Z",
      "date_modified": "2022-07-21T00:02:19.000Z"
    }
  ]
}
