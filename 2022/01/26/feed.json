{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Jan 26, 2022",
  "_site_title": "Track Awesome List",
  "description": "7 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Jan 26, 2022 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/tramcar/awesome-job-boards/",
      "title": "Awesome Job Boards",
      "_slug": "tramcar/awesome-job-boards/",
      "_filepath": "/content/tramcar/awesome-job-boards/README.md",
      "url": "https://www.trackawesomelist.com/tramcar/awesome-job-boards/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Programming / Clojure\n\n*   [ClojureJobboard.com](https://ClojureJobboard.com/)- Clojure jobs, also got a remote section\n\n### Programming / Go\n\n*   [Golangprojects](https://www.golangprojects.com/)- Golang jobs since 2014, also got a remote section",
      "content_html": "<h3><p>Programming / Clojure</p>\n</h3><ul>\n<li><a href=\"https://ClojureJobboard.com/\" rel=\"noopener noreferrer\">ClojureJobboard.com</a>- Clojure jobs, also got a remote section</li>\n</ul>\n<h3><p>Programming / Go</p>\n</h3><ul>\n<li><a href=\"https://www.golangprojects.com/\" rel=\"noopener noreferrer\">Golangprojects</a>- Golang jobs since 2014, also got a remote section</li>\n</ul>\n",
      "date_published": "2022-01-26T19:05:16.000Z",
      "date_modified": "2022-01-26T19:05:16.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/matteocrippa/awesome-swift/",
      "title": "Awesome Swift",
      "_slug": "matteocrippa/awesome-swift/",
      "_filepath": "/content/matteocrippa/awesome-swift/README.md",
      "url": "https://www.trackawesomelist.com/matteocrippa/awesome-swift/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Command Line\n\n*   [Ashen (‚≠ê106)](https://github.com/colinta/Ashen) - A framework for writing terminal applications in Swift. Based on The Elm Architecture.\n\n### Game Engine\n\n*   [Raylib for Swift (‚≠ê121)](https://github.com/STREGAsGate/Raylib) :penguin: - A Cross-Platform Swift package for Raylib. Builds Raylib from source so no need to fiddle with libraries. Just add as a dependency in you game package and go!",
      "content_html": "<h3><p>Command Line</p>\n</h3><ul>\n<li><a href=\"https://github.com/colinta/Ashen\" rel=\"noopener noreferrer\">Ashen (‚≠ê106)</a> - A framework for writing terminal applications in Swift. Based on The Elm Architecture.</li>\n</ul>\n<h3><p>Game Engine</p>\n</h3><ul>\n<li><a href=\"https://github.com/STREGAsGate/Raylib\" rel=\"noopener noreferrer\">Raylib for Swift (‚≠ê121)</a> üêß - A Cross-Platform Swift package for Raylib. Builds Raylib from source so no need to fiddle with libraries. Just add as a dependency in you game package and go!</li>\n</ul>\n",
      "date_published": "2022-01-26T18:13:18.000Z",
      "date_modified": "2022-01-26T18:26:04.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/APA-Technology-Division/urban-and-regional-planning-resources/",
      "title": "Urban and Regional Planning Resources",
      "_slug": "APA-Technology-Division/urban-and-regional-planning-resources/",
      "_filepath": "/content/APA-Technology-Division/urban-and-regional-planning-resources/README.md",
      "url": "https://www.trackawesomelist.com/APA-Technology-Division/urban-and-regional-planning-resources/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Planning Data Specifications / Transportation\n\n*   [CDS (‚≠ê55)](https://github.com/openmobilityfoundation/curb-data-specification) - The Curb Data Specification provides data specifications for curb regulations alongside a connected event and metrics API intended to help cities manage their curb zone programs and surrounding areas, and measure the utilization and impact.",
      "content_html": "<h3><p>Planning Data Specifications / Transportation</p>\n</h3><ul>\n<li><a href=\"https://github.com/openmobilityfoundation/curb-data-specification\" rel=\"noopener noreferrer\">CDS (‚≠ê55)</a> - The Curb Data Specification provides data specifications for curb regulations alongside a connected event and metrics API intended to help cities manage their curb zone programs and surrounding areas, and measure the utilization and impact.</li>\n</ul>\n",
      "date_published": "2022-01-26T17:57:28.000Z",
      "date_modified": "2022-01-26T17:57:28.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/denolib/awesome-deno/",
      "title": "Awesome Deno",
      "_slug": "denolib/awesome-deno/",
      "_filepath": "/content/denolib/awesome-deno/README.md",
      "url": "https://www.trackawesomelist.com/denolib/awesome-deno/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Tools / XML\n\n*   [denoflow (‚≠ê282)](https://github.com/denoflow/denoflow) - Configuration as code, use YAML to write automated workflows that run on Deno, with any Deno modules, Typescript/Javascript codes",
      "content_html": "<h3><p>Tools / XML</p>\n</h3><ul>\n<li><a href=\"https://github.com/denoflow/denoflow\" rel=\"noopener noreferrer\">denoflow (‚≠ê282)</a> - Configuration as code, use YAML to write automated workflows that run on Deno, with any Deno modules, Typescript/Javascript codes</li>\n</ul>\n",
      "date_published": "2022-01-26T16:39:16.000Z",
      "date_modified": "2022-01-26T16:39:16.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/public-apis/public-apis/",
      "title": "Public Apis",
      "_slug": "public-apis/public-apis/",
      "_filepath": "/content/public-apis/public-apis/README.md",
      "url": "https://www.trackawesomelist.com/public-apis/public-apis/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Security\n\n- API: [Hashable](https://hashable.space/pages/api/)\n\n  Description: A REST API to access high level cryptographic functions and methods\n\n  Auth: No\n\n  HTTPS: Yes\n\n  CORS: Yes\n\n",
      "content_html": "<h3><p>Security</p>\n</h3><ul>\n<li><p>API: <a href=\"https://hashable.space/pages/api/\" rel=\"noopener noreferrer\">Hashable</a></p>\n<p>Description: A REST API to access high level cryptographic functions and methods</p>\n<p>Auth: No</p>\n<p>HTTPS: Yes</p>\n<p>CORS: Yes</p>\n</li>\n</ul>\n",
      "date_published": "2022-01-26T11:31:52.000Z",
      "date_modified": "2022-01-26T11:31:52.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/vert-x3/vertx-awesome/",
      "title": "Vertx Awesome",
      "_slug": "vert-x3/vertx-awesome/",
      "_filepath": "/content/vert-x3/vertx-awesome/README.md",
      "url": "https://www.trackawesomelist.com/vert-x3/vertx-awesome/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Web Frameworks\n\n*   [SCX (‚≠ê4)](https://github.com/scx567888/scx) - An open and easy-to-use web framework, most functions are based on annotations.",
      "content_html": "<h3><p>Web Frameworks</p>\n</h3><ul>\n<li><a href=\"https://github.com/scx567888/scx\" rel=\"noopener noreferrer\">SCX (‚≠ê4)</a> - An open and easy-to-use web framework, most functions are based on annotations.</li>\n</ul>\n",
      "date_published": "2022-01-26T08:49:15.000Z",
      "date_modified": "2022-01-26T08:49:15.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/cpuu/awesome-fuzzing/",
      "title": "Awesome Fuzzing",
      "_slug": "cpuu/awesome-fuzzing/",
      "_filepath": "/content/cpuu/awesome-fuzzing/README.md",
      "url": "https://www.trackawesomelist.com/cpuu/awesome-fuzzing/",
      "summary": "3 awesome projects updated",
      "content_text": "\n\n### Papers / IEEE Symposium on Security and Privacy (IEEE S&P)\n\n*   [STOCHFUZZ: Sound and Cost-effective Fuzzing of Stripped Binaries by Incremental and Stochastic Rewriting, 2021](https://www.cs.purdue.edu/homes/zhan3299/res/SP21b.pdf)\n*   [One Engine to Fuzz 'em All: Generic Language Processor Testing with Semantic Validation, 2021](https://huhong789.github.io/papers/polyglot-oakland2021.pdf)\n*   [NTFUZZ: Enabling Type-Aware Kernel Fuzzing on Windows with Static Binary Analysis, 2021](https://softsec.kaist.ac.kr/~jschoi/data/oakland2021.pdf)\n*   [DIFUZZRTL: Differential Fuzz Testing to Find CPU Bugs, 2021](https://lifeasageek.github.io/papers/jaewon-difuzzrtl.pdf)\n*   [DIANE: Identifying Fuzzing Triggers in Apps to Generate Under-constrained Inputs for IoT Devices, 2021](https://conand.me/publications/redini-diane-2021.pdf)\n\n### Papers / USENIX Security\n\n*   [Breaking Through Binaries: Compiler-quality Instrumentation for Better Binary-only Fuzzing, 2021](https://www.usenix.org/conference/usenixsecurity21/presentation/nagy)\n*   [ICSFuzz: Manipulating I/Os and Repurposing Binary Code to Enable Instrumented Fuzzing in ICS Control Applications, 2021](https://www.usenix.org/conference/usenixsecurity21/presentation/tychalas)\n*   [Android SmartTVs Vulnerability Discovery via Log-Guided Fuzzing, 2021](https://www.usenix.org/conference/usenixsecurity21/presentation/aafer)\n*   [Constraint-guided Directed Greybox Fuzzing, 2021](https://www.usenix.org/conference/usenixsecurity21/presentation/lee-gwangmu)\n*   [Nyx: Greybox Hypervisor Fuzzing using Fast Snapshots and Affine Types, 2021](https://www.usenix.org/conference/usenixsecurity21/presentation/schumilo)\n*   [UNIFUZZ: A Holistic and Pragmatic Metrics-Driven Platform for Evaluating Fuzzers, 2021](https://www.usenix.org/conference/usenixsecurity21/presentation/li-yuwei)\n\n### Papers / ACM Conference on Computer and Communications Security (ACM CCS)\n\n*   [SoFi: Reflection-Augmented Fuzzing for JavaScript Engines, 2021](https://dl.acm.org/doi/pdf/10.1145/3460120.3484823)\n*   [T-Reqs: HTTP Request Smuggling with Differential Fuzzing, 2021](https://bahruz.me/papers/ccs2021treqs.pdf)\n*   [V-SHUTTLE: Scalable and Semantics-Aware Hypervisor Fuzzing, 2021](https://nesa.zju.edu.cn/download/ppt/pgn_slides_V-SHUTTLE.pdf)\n*   [Same Coverage, Less Bloat: Accelerating Binary-only Fuzzing with Coverage-preserving Coverage-guided Tracing, 2021](https://people.cs.vt.edu/snagy2/papers/21CCS.pdf)\n*   [HyperFuzzer: An Efficient Hybrid Fuzzer For Virtual CPUs, 2021](https://www.microsoft.com/en-us/research/uploads/prod/2021/09/hyperfuzzer-ccs21.pdf)\n*   [Regression Greybox Fuzzing, 2021](https://mboehme.github.io/paper/CCS21.pdf)\n*   [Hardware Support to Improve Fuzzing Performance and Precision, 2021](https://gts3.org/assets/papers/2021/ding:snap.pdf)\n*   [SNIPUZZ: Black-box Fuzzing of IoT Firmware via Message Snippet Inference, 2021](https://arxiv.org/pdf/2105.05445.pdf)\n*   [FREEDOM: Engineering a State-of-the-Art DOM Fuzzer, 2020](https://gts3.org/assets/papers/2020/xu:freedom.pdf)",
      "content_html": "<h3><p>Papers / IEEE Symposium on Security and Privacy (IEEE S&amp;P)</p>\n</h3><ul>\n<li><a href=\"https://www.cs.purdue.edu/homes/zhan3299/res/SP21b.pdf\" rel=\"noopener noreferrer\">STOCHFUZZ: Sound and Cost-effective Fuzzing of Stripped Binaries by Incremental and Stochastic Rewriting, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://huhong789.github.io/papers/polyglot-oakland2021.pdf\" rel=\"noopener noreferrer\">One Engine to Fuzz 'em All: Generic Language Processor Testing with Semantic Validation, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://softsec.kaist.ac.kr/~jschoi/data/oakland2021.pdf\" rel=\"noopener noreferrer\">NTFUZZ: Enabling Type-Aware Kernel Fuzzing on Windows with Static Binary Analysis, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://lifeasageek.github.io/papers/jaewon-difuzzrtl.pdf\" rel=\"noopener noreferrer\">DIFUZZRTL: Differential Fuzz Testing to Find CPU Bugs, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://conand.me/publications/redini-diane-2021.pdf\" rel=\"noopener noreferrer\">DIANE: Identifying Fuzzing Triggers in Apps to Generate Under-constrained Inputs for IoT Devices, 2021</a></li>\n</ul>\n<h3><p>Papers / USENIX Security</p>\n</h3><ul>\n<li><a href=\"https://www.usenix.org/conference/usenixsecurity21/presentation/nagy\" rel=\"noopener noreferrer\">Breaking Through Binaries: Compiler-quality Instrumentation for Better Binary-only Fuzzing, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://www.usenix.org/conference/usenixsecurity21/presentation/tychalas\" rel=\"noopener noreferrer\">ICSFuzz: Manipulating I/Os and Repurposing Binary Code to Enable Instrumented Fuzzing in ICS Control Applications, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://www.usenix.org/conference/usenixsecurity21/presentation/aafer\" rel=\"noopener noreferrer\">Android SmartTVs Vulnerability Discovery via Log-Guided Fuzzing, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://www.usenix.org/conference/usenixsecurity21/presentation/lee-gwangmu\" rel=\"noopener noreferrer\">Constraint-guided Directed Greybox Fuzzing, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://www.usenix.org/conference/usenixsecurity21/presentation/schumilo\" rel=\"noopener noreferrer\">Nyx: Greybox Hypervisor Fuzzing using Fast Snapshots and Affine Types, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://www.usenix.org/conference/usenixsecurity21/presentation/li-yuwei\" rel=\"noopener noreferrer\">UNIFUZZ: A Holistic and Pragmatic Metrics-Driven Platform for Evaluating Fuzzers, 2021</a></li>\n</ul>\n<h3><p>Papers / ACM Conference on Computer and Communications Security (ACM CCS)</p>\n</h3><ul>\n<li><a href=\"https://dl.acm.org/doi/pdf/10.1145/3460120.3484823\" rel=\"noopener noreferrer\">SoFi: Reflection-Augmented Fuzzing for JavaScript Engines, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://bahruz.me/papers/ccs2021treqs.pdf\" rel=\"noopener noreferrer\">T-Reqs: HTTP Request Smuggling with Differential Fuzzing, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://nesa.zju.edu.cn/download/ppt/pgn_slides_V-SHUTTLE.pdf\" rel=\"noopener noreferrer\">V-SHUTTLE: Scalable and Semantics-Aware Hypervisor Fuzzing, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://people.cs.vt.edu/snagy2/papers/21CCS.pdf\" rel=\"noopener noreferrer\">Same Coverage, Less Bloat: Accelerating Binary-only Fuzzing with Coverage-preserving Coverage-guided Tracing, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://www.microsoft.com/en-us/research/uploads/prod/2021/09/hyperfuzzer-ccs21.pdf\" rel=\"noopener noreferrer\">HyperFuzzer: An Efficient Hybrid Fuzzer For Virtual CPUs, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://mboehme.github.io/paper/CCS21.pdf\" rel=\"noopener noreferrer\">Regression Greybox Fuzzing, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://gts3.org/assets/papers/2021/ding:snap.pdf\" rel=\"noopener noreferrer\">Hardware Support to Improve Fuzzing Performance and Precision, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://arxiv.org/pdf/2105.05445.pdf\" rel=\"noopener noreferrer\">SNIPUZZ: Black-box Fuzzing of IoT Firmware via Message Snippet Inference, 2021</a></li>\n</ul>\n<ul>\n<li><a href=\"https://gts3.org/assets/papers/2020/xu:freedom.pdf\" rel=\"noopener noreferrer\">FREEDOM: Engineering a State-of-the-Art DOM Fuzzer, 2020</a></li>\n</ul>\n",
      "date_published": "2022-01-26T00:00:00.000Z",
      "date_modified": "2022-01-26T00:40:55.000Z"
    }
  ]
}
