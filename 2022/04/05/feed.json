{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Apr 05, 2022",
  "_site_title": "Track Awesome List",
  "description": "5 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Apr 05, 2022 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/dersvenhesse/awesome-scriptable/",
      "title": "Awesome Scriptable",
      "_slug": "dersvenhesse/awesome-scriptable/",
      "_filepath": "/content/dersvenhesse/awesome-scriptable/README.md",
      "url": "https://www.trackawesomelist.com/dersvenhesse/awesome-scriptable/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Traveling\n\n*   [location-location-location (⭐48)](https://github.com/doersino/scriptable-widgets/tree/main/location-location-location) - Show Google Maps image from current location.",
      "content_html": "<h3><p>Traveling</p>\n</h3><ul>\n<li><a href=\"https://github.com/doersino/scriptable-widgets/tree/main/location-location-location\" rel=\"noopener noreferrer\">location-location-location (⭐48)</a> - Show Google Maps image from current location.</li>\n</ul>\n",
      "date_published": "2022-04-05T15:25:16.000Z",
      "date_modified": "2022-04-05T15:25:16.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/automata/awesome-jamstack/",
      "title": "Awesome Jamstack",
      "_slug": "automata/awesome-jamstack/",
      "_filepath": "/content/automata/awesome-jamstack/README.md",
      "url": "https://www.trackawesomelist.com/automata/awesome-jamstack/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### CMS\n\n*   [Contember](https://www.contember.com) - Bespoke content management. Build and run GraphQL API and user-centric administration without any hassle.",
      "content_html": "<h3><p>CMS</p>\n</h3><ul>\n<li><a href=\"https://www.contember.com\" rel=\"noopener noreferrer\">Contember</a> - Bespoke content management. Build and run GraphQL API and user-centric administration without any hassle.</li>\n</ul>\n",
      "date_published": "2022-04-05T13:37:10.000Z",
      "date_modified": "2022-04-05T13:37:10.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/rockerBOO/awesome-neovim/",
      "title": "Awesome Neovim",
      "_slug": "rockerBOO/awesome-neovim/",
      "_filepath": "/content/rockerBOO/awesome-neovim/README.md",
      "url": "https://www.trackawesomelist.com/rockerBOO/awesome-neovim/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Tree-sitter Supported Colorscheme / Diagnostics\n\n*   [phha/zenburn.nvim (⭐100)](https://github.com/phha/zenburn.nvim) - A low-contrast dark colorscheme with support for various plugins.",
      "content_html": "<h3><p>Tree-sitter Supported Colorscheme / Diagnostics</p>\n</h3><ul>\n<li><a href=\"https://github.com/phha/zenburn.nvim\" rel=\"noopener noreferrer\">phha/zenburn.nvim (⭐100)</a> - A low-contrast dark colorscheme with support for various plugins.</li>\n</ul>\n",
      "date_published": "2022-04-05T10:44:43.000Z",
      "date_modified": "2022-04-05T10:44:43.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/avelino/awesome-go/",
      "title": "Awesome Go",
      "_slug": "avelino/awesome-go/",
      "_filepath": "/content/avelino/awesome-go/README.md",
      "url": "https://www.trackawesomelist.com/avelino/awesome-go/",
      "summary": "18 awesome projects updated",
      "content_text": "\n\n### Bit-packing and Compression\n\n*   [crunch (⭐100)](https://github.com/superwhiskers/crunch) - Go package implementing buffers for handling various datatypes easily.\n*   [go-ef (⭐39)](https://github.com/amallia/go-ef) - A Go implementation of the Elias-Fano encoding.\n*   [roaring (⭐2.7k)](https://github.com/RoaringBitmap/roaring) - Go package implementing compressed bitsets.\n\n### Bloom and Cuckoo Filters\n\n*   [cuckoofilter (⭐1.2k)](https://github.com/seiflotfy/cuckoofilter) - Cuckoo filter: a good alternative to a counting bloom filter implemented in Go.\n*   [ring (⭐141)](https://github.com/TheTannerRyan/ring) - Go implementation of a high performance, thread safe bloom filter.\n\n### Data Structure and Algorithm Collections\n\n*   [algorithms (⭐821)](https://github.com/shady831213/algorithms) - Algorithms and data structures.CLRS study.\n*   [go-datastructures (⭐7.8k)](https://github.com/Workiva/go-datastructures) - Collection of useful, performant, and thread-safe data structures.\n*   [gods (⭐17k)](https://github.com/emirpasic/gods) - Go Data Structures. Containers, Sets, Lists, Stacks, Maps, BidiMaps, Trees, HashSet etc.\n*   [gostl (⭐1.1k)](https://github.com/liyue201/gostl) - Data structure and algorithm library for go, designed to provide functions similar to C++ STL.\n\n### Iterators\n\n*   [goterator (⭐17)](https://github.com/yaa110/goterator) - Iterator implementation to provide map and reduce functionalities.\n*   [iter (⭐191)](https://github.com/disksing/iter) - Go implementation of C++ STL iterators and algorithms.\n\n### Maps\n\n*   [dict (⭐47)](https://github.com/srfrog/dict) - Python-like dictionaries (dict) for Go.\n\n### Nullable Types\n\n*   [nan (⭐87)](https://github.com/kak-tus/nan) - Zero allocation Nullable structures in one library with handy conversion functions, marshallers and unmarshallers.\n*   [null (⭐38)](https://github.com/emvi/null) - Nullable Go types that can be marshalled/unmarshalled to/from JSON.\n*   [typ (⭐46)](https://github.com/gurukami/typ) - Null Types, Safe primitive type conversion and fetching value from complex structures.\n\n### Queues\n\n*   [deque (⭐200)](https://github.com/edwingeng/deque) - A highly optimized double-ended queue.\n*   [deque (⭐690)](https://github.com/gammazero/deque) - Fast ring-buffer deque (double-ended queue).\n*   [goconcurrentqueue (⭐427)](https://github.com/enriquebris/goconcurrentqueue) - Concurrent FIFO queue.\n*   [memlog (⭐133)](https://github.com/embano1/memlog) - An easy to use, lightweight, thread-safe and append-only in-memory data structure inspired by Apache Kafka.\n\n### Sets\n\n*   [dsu (⭐15)](https://github.com/ihebu/dsu) - Disjoint Set data structure implementation in Go.\n*   [golang-set (⭐4.5k)](https://github.com/deckarep/golang-set) - Thread-Safe and Non-Thread-Safe high-performance sets for Go.\n*   [goset (⭐52)](https://github.com/zoumo/goset) - A useful Set collection implementation for Go.\n*   [set (⭐29)](https://github.com/StudioSol/set) - Simple set data structure implementation in Go using LinkedHashMap.\n\n### Text Analysis\n\n*   [bleve (⭐10k)](https://github.com/blevesearch/bleve) - Modern text indexing library for go.\n*   [go-adaptive-radix-tree (⭐392)](https://github.com/plar/go-adaptive-radix-tree) - Go implementation of Adaptive Radix Tree.\n*   [go-edlib (⭐517)](https://github.com/hbollon/go-edlib) - Go string comparison and edit distance algorithms library (Levenshtein, LCS, Hamming, Damerau levenshtein, Jaro-Winkler, etc.) compatible with Unicode.\n*   [trie (⭐776)](https://github.com/derekparker/trie) - Trie implementation in Go.\n\n### Trees\n\n*   [hashsplit (⭐31)](http://github.com/bobg/hashsplit) - Split byte streams into chunks, and arrange chunks into trees, with boundaries determined by content, not position.\n*   [merkle (⭐19)](https://github.com/bobg/merkle) - Space-efficient computation of Merkle root hashes and inclusion proofs.\n\n### Pipes\n\n*   [ordered-concurrently (⭐41)](https://github.com/tejzpr/ordered-concurrently) - Go module that processes work concurrently and returns output in a channel in the order of input.\n*   [parapipe (⭐37)](https://github.com/nazar256/parapipe) - FIFO Pipeline which parallels execution on each stage while maintaining the order of messages and results.\n*   [pipeline (⭐58)](https://github.com/hyfather/pipeline) - An implementation of pipelines with fan-in and fan-out.\n\n### Caches\n\n*   [2q (⭐47)](https://github.com/floatdrop/2q) - 2Q in-memory cache implementation.\n*   [couchcache (⭐67)](https://github.com/codingsince1985/couchcache) - RESTful caching micro-service backed by Couchbase server.\n*   [fastcache (⭐2.2k)](https://github.com/VictoriaMetrics/fastcache) - fast thread-safe inmemory cache for big number of entries. Minimizes GC overhead.\n*   [GCache (⭐2.7k)](https://github.com/bluele/gcache) - Cache library with support for expirable Cache, LFU, LRU and ARC.\n*   [gdcache (⭐13)](https://github.com/ulovecode/gdcache) - A pure non-intrusive cache library implemented by golang, you can use it to implement your own distributed cache.\n*   [go-mcache (⭐98)](https://github.com/OrlovEvgeny/go-mcache) - Fast in-memory key:value store/cache library. Pointer caches.\n*   [groupcache (⭐13k)](https://github.com/golang/groupcache) - Groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases.\n*   [timedmap (⭐75)](https://github.com/zekroTJA/timedmap) - Map with expiring key-value pairs.\n*   [ttlcache (⭐1.1k)](https://github.com/jellydator/ttlcache) - An in-memory cache with item expiration and generics.\n*   [ttlcache (⭐10)](https://github.com/cheshir/ttlcache) - In-memory key value storage with TTL for each record.\n\n### Databases Implemented in Go\n\n*   [badger (⭐15k)](https://github.com/dgraph-io/badger) - Fast key-value store in Go.\n*   [bbolt (⭐8.9k)](https://github.com/etcd-io/bbolt) - An embedded key/value database for Go.\n*   [Bitcask](https://git.mills.io/prologic/bitcask) - Bitcask is an embeddable, persistent and fast key-value (KV) database written in pure Go with predictable read/write performance, low latency and high throughput thanks to the bitcask on-disk layout (LSM+WAL).\n*   [buntdb (⭐4.7k)](https://github.com/tidwall/buntdb) - Fast, embeddable, in-memory key/value database for Go with custom indexing and spatial support.\n*   [clover (⭐760)](https://github.com/ostafen/clover) - A lightweight document-oriented NoSQL database written in pure Golang.\n*   [pudge (⭐373)](https://github.com/recoilme/pudge) - Fast and simple key/value store written using Go's standard library.\n\n### Database Tools\n\n*   [clickhouse-bulk (⭐498)](https://github.com/nikepan/clickhouse-bulk) - Collects small inserts and sends big requests to ClickHouse servers.\n\n### Interfaces to Multiple Backends\n\n*   [cayley (⭐15k)](https://github.com/google/cayley) - Graph database with support for multiple backends.\n*   [dsc (⭐34)](https://github.com/viant/dsc) - Datastore connectivity for SQL, NoSQL, structured files.\n*   [gokv (⭐801)](https://github.com/philippgille/gokv) - Simple key-value store abstraction and implementations for Go (Redis, Consul, etcd, bbolt, BadgerDB, LevelDB, Memcached, DynamoDB, S3, PostgreSQL, MongoDB, CockroachDB and many more).\n\n### Relational Database Drivers\n\n*   [avatica (⭐122)](https://github.com/apache/calcite-avatica-go) - Apache Avatica/Phoenix SQL driver for database/sql.\n*   [bgc (⭐21)](https://github.com/viant/bgc) - Datastore Connectivity for BigQuery for go.\n*   [firebirdsql (⭐243)](https://github.com/nakagami/firebirdsql) - Firebird RDBMS SQL driver for Go.\n*   [go-adodb (⭐148)](https://github.com/mattn/go-adodb) - Microsoft ActiveX Object DataBase driver for go that uses database/sql.\n*   [go-mssqldb (⭐1.9k)](https://github.com/denisenkom/go-mssqldb) - Microsoft MSSQL driver for Go.\n*   [go-oci8 (⭐634)](https://github.com/mattn/go-oci8) - Oracle driver for go that uses database/sql.\n*   [go-sql-driver/mysql (⭐15k)](https://github.com/go-sql-driver/mysql) - MySQL driver for Go.\n*   [go-sqlite3 (⭐8.6k)](https://github.com/mattn/go-sqlite3) - SQLite3 driver for go that uses database/sql.\n*   [godror (⭐559)](https://github.com/godror/godror) - Oracle driver for Go, using the ODPI-C driver.\n*   [gofreetds (⭐113)](https://github.com/minus5/gofreetds) - Microsoft MSSQL driver. Go wrapper over [FreeTDS](https://www.freetds.org).\n*   [pgx (⭐12k)](https://github.com/jackc/pgx) - PostgreSQL driver supporting features beyond those exposed by database/sql.\n*   [pig (⭐17)](https://github.com/alexeyco/pig) - Simple [pgx (⭐12k)](https://github.com/jackc/pgx) wrapper to execute and [scan (⭐1.4k)](https://github.com/georgysavva/scany) query results easily.\n*   [pq (⭐9.5k)](https://github.com/lib/pq) - Pure Go Postgres driver for database/sql.\n*   [Sqinn-Go (⭐450)](https://github.com/cvilsmeier/sqinn-go) - SQLite with pure Go.\n*   [sqlhooks (⭐656)](https://github.com/qustavo/sqlhooks) - Attach hooks to any database/sql driver.\n\n### NoSQL Database Drivers\n\n*   [aerospike-client-go (⭐450)](https://github.com/aerospike/aerospike-client-go) - Aerospike client in Go language.\n*   [arangolite (⭐72)](https://github.com/solher/arangolite) - Lightweight golang driver for ArangoDB.\n*   [asc (⭐11)](https://github.com/viant/asc) - Datastore Connectivity for Aerospike for go.\n*   [forestdb (⭐36)](https://github.com/couchbase/goforestdb) - Go bindings for ForestDB.\n*   [go-couchbase (⭐323)](https://github.com/couchbase/go-couchbase) - Couchbase client in Go.\n*   [go-pilosa (⭐57)](https://github.com/pilosa/go-pilosa) - Go client library for Pilosa.\n*   [go-rejson (⭐343)](https://github.com/nitishm/go-rejson) - Golang client for redislabs' ReJSON module using Redigo golang client. Store and manipulate structs as JSON objects in redis with ease.\n*   [gocb (⭐373)](https://github.com/couchbase/gocb) - Official Couchbase Go SDK.\n*   [gocosmos (⭐22)](https://github.com/btnguyen2k/gocosmos) - REST client and standard `database/sql` driver for Azure Cosmos DB.\n*   [gocql](https://gocql.github.io) - Go language driver for Apache Cassandra.\n*   [godis (⭐113)](https://github.com/piaohao/godis) - redis client implement by golang, inspired by jedis.\n*   [godscache (⭐11)](https://github.com/defcronyke/godscache) - A wrapper for the Google Cloud Platform Go Datastore package that adds caching using memcached.\n*   [gomemcache (⭐1.8k)](https://github.com/bradfitz/gomemcache/) - memcache client library for the Go programming language.\n*   [gorethink (⭐1.7k)](https://github.com/dancannon/gorethink) - Go language driver for RethinkDB.\n*   [goriak (⭐30)](https://github.com/zegl/goriak) - Go language driver for Riak KV.\n*   [neo4j (⭐29)](https://github.com/cihangir/neo4j) - Neo4j Rest API Bindings for Golang.\n*   [neoism (⭐390)](https://github.com/jmcvetta/neoism) - Neo4j client for Golang.\n*   [qmgo (⭐1.3k)](https://github.com/qiniu/qmgo) - The MongoDB driver for Go. It‘s based on official MongoDB driver but easier to use like Mgo.\n*   [redeo (⭐445)](https://github.com/bsm/redeo) - Redis-protocol compatible TCP servers/services.\n*   [redigo (⭐9.8k)](https://github.com/gomodule/redigo) - Redigo is a Go client for the Redis database.\n*   [rueidis (⭐2.7k)](http://github.com/rueian/rueidis) - Fast Redis RESP3 client with auto pipelining and server-assisted client side caching.\n*   [xredis (⭐19)](https://github.com/shomali11/xredis) - Typesafe, customizable, clean & easy to use Redis client.\n\n### Search and Analytic Databases\n\n*   [elastic (⭐7.5k)](https://github.com/olivere/elastic) - Elasticsearch client for Go.\n*   [elasticsql (⭐1.2k)](https://github.com/cch123/elasticsql) - Convert sql to elasticsearch dsl in Go.\n*   [elastigo (⭐942)](https://github.com/mattbaird/elastigo) - Elasticsearch client library.\n*   [go-elasticsearch (⭐5.9k)](https://github.com/elastic/go-elasticsearch) - Official Elasticsearch client for Go.\n*   [goes (⭐31)](https://github.com/OwnLocal/goes) - Library to interact with Elasticsearch.\n*   [skizze (⭐92)](https://github.com/seiflotfy/skizze) - probabilistic data-structures service and storage.",
      "content_html": "<h3><p>Bit-packing and Compression</p>\n</h3><ul>\n<li><a href=\"https://github.com/superwhiskers/crunch\" rel=\"noopener noreferrer\">crunch (⭐100)</a> - Go package implementing buffers for handling various datatypes easily.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/amallia/go-ef\" rel=\"noopener noreferrer\">go-ef (⭐39)</a> - A Go implementation of the Elias-Fano encoding.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/RoaringBitmap/roaring\" rel=\"noopener noreferrer\">roaring (⭐2.7k)</a> - Go package implementing compressed bitsets.</li>\n</ul>\n<h3><p>Bloom and Cuckoo Filters</p>\n</h3><ul>\n<li><a href=\"https://github.com/seiflotfy/cuckoofilter\" rel=\"noopener noreferrer\">cuckoofilter (⭐1.2k)</a> - Cuckoo filter: a good alternative to a counting bloom filter implemented in Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/TheTannerRyan/ring\" rel=\"noopener noreferrer\">ring (⭐141)</a> - Go implementation of a high performance, thread safe bloom filter.</li>\n</ul>\n<h3><p>Data Structure and Algorithm Collections</p>\n</h3><ul>\n<li><a href=\"https://github.com/shady831213/algorithms\" rel=\"noopener noreferrer\">algorithms (⭐821)</a> - Algorithms and data structures.CLRS study.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Workiva/go-datastructures\" rel=\"noopener noreferrer\">go-datastructures (⭐7.8k)</a> - Collection of useful, performant, and thread-safe data structures.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/emirpasic/gods\" rel=\"noopener noreferrer\">gods (⭐17k)</a> - Go Data Structures. Containers, Sets, Lists, Stacks, Maps, BidiMaps, Trees, HashSet etc.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/liyue201/gostl\" rel=\"noopener noreferrer\">gostl (⭐1.1k)</a> - Data structure and algorithm library for go, designed to provide functions similar to C++ STL.</li>\n</ul>\n<h3><p>Iterators</p>\n</h3><ul>\n<li><a href=\"https://github.com/yaa110/goterator\" rel=\"noopener noreferrer\">goterator (⭐17)</a> - Iterator implementation to provide map and reduce functionalities.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/disksing/iter\" rel=\"noopener noreferrer\">iter (⭐191)</a> - Go implementation of C++ STL iterators and algorithms.</li>\n</ul>\n<h3><p>Maps</p>\n</h3><ul>\n<li><a href=\"https://github.com/srfrog/dict\" rel=\"noopener noreferrer\">dict (⭐47)</a> - Python-like dictionaries (dict) for Go.</li>\n</ul>\n<h3><p>Nullable Types</p>\n</h3><ul>\n<li><a href=\"https://github.com/kak-tus/nan\" rel=\"noopener noreferrer\">nan (⭐87)</a> - Zero allocation Nullable structures in one library with handy conversion functions, marshallers and unmarshallers.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/emvi/null\" rel=\"noopener noreferrer\">null (⭐38)</a> - Nullable Go types that can be marshalled/unmarshalled to/from JSON.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/gurukami/typ\" rel=\"noopener noreferrer\">typ (⭐46)</a> - Null Types, Safe primitive type conversion and fetching value from complex structures.</li>\n</ul>\n<h3><p>Queues</p>\n</h3><ul>\n<li><a href=\"https://github.com/edwingeng/deque\" rel=\"noopener noreferrer\">deque (⭐200)</a> - A highly optimized double-ended queue.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/gammazero/deque\" rel=\"noopener noreferrer\">deque (⭐690)</a> - Fast ring-buffer deque (double-ended queue).</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/enriquebris/goconcurrentqueue\" rel=\"noopener noreferrer\">goconcurrentqueue (⭐427)</a> - Concurrent FIFO queue.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/embano1/memlog\" rel=\"noopener noreferrer\">memlog (⭐133)</a> - An easy to use, lightweight, thread-safe and append-only in-memory data structure inspired by Apache Kafka.</li>\n</ul>\n<h3><p>Sets</p>\n</h3><ul>\n<li><a href=\"https://github.com/ihebu/dsu\" rel=\"noopener noreferrer\">dsu (⭐15)</a> - Disjoint Set data structure implementation in Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/deckarep/golang-set\" rel=\"noopener noreferrer\">golang-set (⭐4.5k)</a> - Thread-Safe and Non-Thread-Safe high-performance sets for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/zoumo/goset\" rel=\"noopener noreferrer\">goset (⭐52)</a> - A useful Set collection implementation for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/StudioSol/set\" rel=\"noopener noreferrer\">set (⭐29)</a> - Simple set data structure implementation in Go using LinkedHashMap.</li>\n</ul>\n<h3><p>Text Analysis</p>\n</h3><ul>\n<li><a href=\"https://github.com/blevesearch/bleve\" rel=\"noopener noreferrer\">bleve (⭐10k)</a> - Modern text indexing library for go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/plar/go-adaptive-radix-tree\" rel=\"noopener noreferrer\">go-adaptive-radix-tree (⭐392)</a> - Go implementation of Adaptive Radix Tree.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/hbollon/go-edlib\" rel=\"noopener noreferrer\">go-edlib (⭐517)</a> - Go string comparison and edit distance algorithms library (Levenshtein, LCS, Hamming, Damerau levenshtein, Jaro-Winkler, etc.) compatible with Unicode.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/derekparker/trie\" rel=\"noopener noreferrer\">trie (⭐776)</a> - Trie implementation in Go.</li>\n</ul>\n<h3><p>Trees</p>\n</h3><ul>\n<li><a href=\"http://github.com/bobg/hashsplit\" rel=\"noopener noreferrer\">hashsplit (⭐31)</a> - Split byte streams into chunks, and arrange chunks into trees, with boundaries determined by content, not position.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/bobg/merkle\" rel=\"noopener noreferrer\">merkle (⭐19)</a> - Space-efficient computation of Merkle root hashes and inclusion proofs.</li>\n</ul>\n<h3><p>Pipes</p>\n</h3><ul>\n<li><a href=\"https://github.com/tejzpr/ordered-concurrently\" rel=\"noopener noreferrer\">ordered-concurrently (⭐41)</a> - Go module that processes work concurrently and returns output in a channel in the order of input.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/nazar256/parapipe\" rel=\"noopener noreferrer\">parapipe (⭐37)</a> - FIFO Pipeline which parallels execution on each stage while maintaining the order of messages and results.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/hyfather/pipeline\" rel=\"noopener noreferrer\">pipeline (⭐58)</a> - An implementation of pipelines with fan-in and fan-out.</li>\n</ul>\n<h3><p>Caches</p>\n</h3><ul>\n<li><a href=\"https://github.com/floatdrop/2q\" rel=\"noopener noreferrer\">2q (⭐47)</a> - 2Q in-memory cache implementation.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/codingsince1985/couchcache\" rel=\"noopener noreferrer\">couchcache (⭐67)</a> - RESTful caching micro-service backed by Couchbase server.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/VictoriaMetrics/fastcache\" rel=\"noopener noreferrer\">fastcache (⭐2.2k)</a> - fast thread-safe inmemory cache for big number of entries. Minimizes GC overhead.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/bluele/gcache\" rel=\"noopener noreferrer\">GCache (⭐2.7k)</a> - Cache library with support for expirable Cache, LFU, LRU and ARC.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ulovecode/gdcache\" rel=\"noopener noreferrer\">gdcache (⭐13)</a> - A pure non-intrusive cache library implemented by golang, you can use it to implement your own distributed cache.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/OrlovEvgeny/go-mcache\" rel=\"noopener noreferrer\">go-mcache (⭐98)</a> - Fast in-memory key:value store/cache library. Pointer caches.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/golang/groupcache\" rel=\"noopener noreferrer\">groupcache (⭐13k)</a> - Groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/zekroTJA/timedmap\" rel=\"noopener noreferrer\">timedmap (⭐75)</a> - Map with expiring key-value pairs.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/jellydator/ttlcache\" rel=\"noopener noreferrer\">ttlcache (⭐1.1k)</a> - An in-memory cache with item expiration and generics.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/cheshir/ttlcache\" rel=\"noopener noreferrer\">ttlcache (⭐10)</a> - In-memory key value storage with TTL for each record.</li>\n</ul>\n<h3><p>Databases Implemented in Go</p>\n</h3><ul>\n<li><a href=\"https://github.com/dgraph-io/badger\" rel=\"noopener noreferrer\">badger (⭐15k)</a> - Fast key-value store in Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/etcd-io/bbolt\" rel=\"noopener noreferrer\">bbolt (⭐8.9k)</a> - An embedded key/value database for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://git.mills.io/prologic/bitcask\" rel=\"noopener noreferrer\">Bitcask</a> - Bitcask is an embeddable, persistent and fast key-value (KV) database written in pure Go with predictable read/write performance, low latency and high throughput thanks to the bitcask on-disk layout (LSM+WAL).</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/tidwall/buntdb\" rel=\"noopener noreferrer\">buntdb (⭐4.7k)</a> - Fast, embeddable, in-memory key/value database for Go with custom indexing and spatial support.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/ostafen/clover\" rel=\"noopener noreferrer\">clover (⭐760)</a> - A lightweight document-oriented NoSQL database written in pure Golang.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/recoilme/pudge\" rel=\"noopener noreferrer\">pudge (⭐373)</a> - Fast and simple key/value store written using Go's standard library.</li>\n</ul>\n<h3><p>Database Tools</p>\n</h3><ul>\n<li><a href=\"https://github.com/nikepan/clickhouse-bulk\" rel=\"noopener noreferrer\">clickhouse-bulk (⭐498)</a> - Collects small inserts and sends big requests to ClickHouse servers.</li>\n</ul>\n<h3><p>Interfaces to Multiple Backends</p>\n</h3><ul>\n<li><a href=\"https://github.com/google/cayley\" rel=\"noopener noreferrer\">cayley (⭐15k)</a> - Graph database with support for multiple backends.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/viant/dsc\" rel=\"noopener noreferrer\">dsc (⭐34)</a> - Datastore connectivity for SQL, NoSQL, structured files.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/philippgille/gokv\" rel=\"noopener noreferrer\">gokv (⭐801)</a> - Simple key-value store abstraction and implementations for Go (Redis, Consul, etcd, bbolt, BadgerDB, LevelDB, Memcached, DynamoDB, S3, PostgreSQL, MongoDB, CockroachDB and many more).</li>\n</ul>\n<h3><p>Relational Database Drivers</p>\n</h3><ul>\n<li><a href=\"https://github.com/apache/calcite-avatica-go\" rel=\"noopener noreferrer\">avatica (⭐122)</a> - Apache Avatica/Phoenix SQL driver for database/sql.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/viant/bgc\" rel=\"noopener noreferrer\">bgc (⭐21)</a> - Datastore Connectivity for BigQuery for go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/nakagami/firebirdsql\" rel=\"noopener noreferrer\">firebirdsql (⭐243)</a> - Firebird RDBMS SQL driver for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mattn/go-adodb\" rel=\"noopener noreferrer\">go-adodb (⭐148)</a> - Microsoft ActiveX Object DataBase driver for go that uses database/sql.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/denisenkom/go-mssqldb\" rel=\"noopener noreferrer\">go-mssqldb (⭐1.9k)</a> - Microsoft MSSQL driver for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mattn/go-oci8\" rel=\"noopener noreferrer\">go-oci8 (⭐634)</a> - Oracle driver for go that uses database/sql.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/go-sql-driver/mysql\" rel=\"noopener noreferrer\">go-sql-driver/mysql (⭐15k)</a> - MySQL driver for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mattn/go-sqlite3\" rel=\"noopener noreferrer\">go-sqlite3 (⭐8.6k)</a> - SQLite3 driver for go that uses database/sql.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/godror/godror\" rel=\"noopener noreferrer\">godror (⭐559)</a> - Oracle driver for Go, using the ODPI-C driver.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/minus5/gofreetds\" rel=\"noopener noreferrer\">gofreetds (⭐113)</a> - Microsoft MSSQL driver. Go wrapper over <a href=\"https://www.freetds.org\" rel=\"noopener noreferrer\">FreeTDS</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/jackc/pgx\" rel=\"noopener noreferrer\">pgx (⭐12k)</a> - PostgreSQL driver supporting features beyond those exposed by database/sql.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/alexeyco/pig\" rel=\"noopener noreferrer\">pig (⭐17)</a> - Simple <a href=\"https://github.com/jackc/pgx\" rel=\"noopener noreferrer\">pgx (⭐12k)</a> wrapper to execute and <a href=\"https://github.com/georgysavva/scany\" rel=\"noopener noreferrer\">scan (⭐1.4k)</a> query results easily.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/lib/pq\" rel=\"noopener noreferrer\">pq (⭐9.5k)</a> - Pure Go Postgres driver for database/sql.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/cvilsmeier/sqinn-go\" rel=\"noopener noreferrer\">Sqinn-Go (⭐450)</a> - SQLite with pure Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/qustavo/sqlhooks\" rel=\"noopener noreferrer\">sqlhooks (⭐656)</a> - Attach hooks to any database/sql driver.</li>\n</ul>\n<h3><p>NoSQL Database Drivers</p>\n</h3><ul>\n<li><a href=\"https://github.com/aerospike/aerospike-client-go\" rel=\"noopener noreferrer\">aerospike-client-go (⭐450)</a> - Aerospike client in Go language.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/solher/arangolite\" rel=\"noopener noreferrer\">arangolite (⭐72)</a> - Lightweight golang driver for ArangoDB.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/viant/asc\" rel=\"noopener noreferrer\">asc (⭐11)</a> - Datastore Connectivity for Aerospike for go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/couchbase/goforestdb\" rel=\"noopener noreferrer\">forestdb (⭐36)</a> - Go bindings for ForestDB.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/couchbase/go-couchbase\" rel=\"noopener noreferrer\">go-couchbase (⭐323)</a> - Couchbase client in Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/pilosa/go-pilosa\" rel=\"noopener noreferrer\">go-pilosa (⭐57)</a> - Go client library for Pilosa.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/nitishm/go-rejson\" rel=\"noopener noreferrer\">go-rejson (⭐343)</a> - Golang client for redislabs' ReJSON module using Redigo golang client. Store and manipulate structs as JSON objects in redis with ease.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/couchbase/gocb\" rel=\"noopener noreferrer\">gocb (⭐373)</a> - Official Couchbase Go SDK.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/btnguyen2k/gocosmos\" rel=\"noopener noreferrer\">gocosmos (⭐22)</a> - REST client and standard <code>database/sql</code> driver for Azure Cosmos DB.</li>\n</ul>\n<ul>\n<li><a href=\"https://gocql.github.io\" rel=\"noopener noreferrer\">gocql</a> - Go language driver for Apache Cassandra.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/piaohao/godis\" rel=\"noopener noreferrer\">godis (⭐113)</a> - redis client implement by golang, inspired by jedis.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/defcronyke/godscache\" rel=\"noopener noreferrer\">godscache (⭐11)</a> - A wrapper for the Google Cloud Platform Go Datastore package that adds caching using memcached.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/bradfitz/gomemcache/\" rel=\"noopener noreferrer\">gomemcache (⭐1.8k)</a> - memcache client library for the Go programming language.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/dancannon/gorethink\" rel=\"noopener noreferrer\">gorethink (⭐1.7k)</a> - Go language driver for RethinkDB.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/zegl/goriak\" rel=\"noopener noreferrer\">goriak (⭐30)</a> - Go language driver for Riak KV.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/cihangir/neo4j\" rel=\"noopener noreferrer\">neo4j (⭐29)</a> - Neo4j Rest API Bindings for Golang.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/jmcvetta/neoism\" rel=\"noopener noreferrer\">neoism (⭐390)</a> - Neo4j client for Golang.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/qiniu/qmgo\" rel=\"noopener noreferrer\">qmgo (⭐1.3k)</a> - The MongoDB driver for Go. It‘s based on official MongoDB driver but easier to use like Mgo.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/bsm/redeo\" rel=\"noopener noreferrer\">redeo (⭐445)</a> - Redis-protocol compatible TCP servers/services.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/gomodule/redigo\" rel=\"noopener noreferrer\">redigo (⭐9.8k)</a> - Redigo is a Go client for the Redis database.</li>\n</ul>\n<ul>\n<li><a href=\"http://github.com/rueian/rueidis\" rel=\"noopener noreferrer\">rueidis (⭐2.7k)</a> - Fast Redis RESP3 client with auto pipelining and server-assisted client side caching.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/shomali11/xredis\" rel=\"noopener noreferrer\">xredis (⭐19)</a> - Typesafe, customizable, clean &amp; easy to use Redis client.</li>\n</ul>\n<h3><p>Search and Analytic Databases</p>\n</h3><ul>\n<li><a href=\"https://github.com/olivere/elastic\" rel=\"noopener noreferrer\">elastic (⭐7.5k)</a> - Elasticsearch client for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/cch123/elasticsql\" rel=\"noopener noreferrer\">elasticsql (⭐1.2k)</a> - Convert sql to elasticsearch dsl in Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mattbaird/elastigo\" rel=\"noopener noreferrer\">elastigo (⭐942)</a> - Elasticsearch client library.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/elastic/go-elasticsearch\" rel=\"noopener noreferrer\">go-elasticsearch (⭐5.9k)</a> - Official Elasticsearch client for Go.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/OwnLocal/goes\" rel=\"noopener noreferrer\">goes (⭐31)</a> - Library to interact with Elasticsearch.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/seiflotfy/skizze\" rel=\"noopener noreferrer\">skizze (⭐92)</a> - probabilistic data-structures service and storage.</li>\n</ul>\n",
      "date_published": "2022-04-05T03:55:36.000Z",
      "date_modified": "2022-04-05T03:55:36.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/mgramin/awesome-db-tools/",
      "title": "Awesome Db Tools",
      "_slug": "mgramin/awesome-db-tools/",
      "_filepath": "/content/mgramin/awesome-db-tools/README.md",
      "url": "https://www.trackawesomelist.com/mgramin/awesome-db-tools/",
      "summary": "6 awesome projects updated",
      "content_text": "\n\n### Schema / Changes\n\n*   [pg-osc (⭐586)](https://github.com/shayonj/pg-osc) - Easy CLI tool for making zero downtime schema changes and backfills in PostgreSQL.\n\n### Schema / Design\n\n*   [Database Design (⭐488)](https://github.com/alextanhongpin/database-design) - Useful tips for designing robust database schema.\n\n### Monitoring/Statistics/Perfomance / Samples\n\n*   [pgMonitor (⭐658)](https://github.com/CrunchyData/pgmonitor) - All-in-one tool to easily create an environment to visualize the health and performance of your PostgreSQL cluster.\n*   [PostgreSQL Metrics (⭐596)](https://github.com/spotify/postgresql-metrics) - Service to extract and provide metrics on your PostgreSQL database.\n*   [postgres-checkup](https://gitlab.com/postgres-ai/postgres-checkup) - New-generation diagnostics tool that allows users to do a deep analysis of the health of Postgres databases.\n\n### SQL / Parsers\n\n*   [libpg\\_query (⭐1.3k)](https://github.com/pganalyze/libpg_query) - C library for accessing the PostgreSQL parser outside of the server environment.\n\n### SQL / Plan\n\n*   [pev2 (⭐3k)](https://github.com/dalibo/pev2) - A VueJS component to show a graphical vizualization of a PostgreSQL execution plan.\n*   [pg\\_flame (⭐1.6k)](https://github.com/mgartner/pg_flame) - A flamegraph generator for Postgres `EXPLAIN ANALYZE` output.\n\n### Data / Catalog\n\n*   [Amundsen (⭐4.6k)](https://github.com/amundsen-io/amundsen) - Metadata driven application for improving the productivity of data analysts, data scientists and engineers when interacting with data.\n*   [DataHub (⭐11k)](https://github.com/datahub-project/datahub) - The Metadata Platform for the Modern Data Stack.\n*   [Marquez (⭐2k)](https://github.com/MarquezProject/marquez) - Collect, aggregate, and visualize a data ecosystem's metadata.",
      "content_html": "<h3><p>Schema / Changes</p>\n</h3><ul>\n<li><a href=\"https://github.com/shayonj/pg-osc\" rel=\"noopener noreferrer\">pg-osc (⭐586)</a> - Easy CLI tool for making zero downtime schema changes and backfills in PostgreSQL.</li>\n</ul>\n<h3><p>Schema / Design</p>\n</h3><ul>\n<li><a href=\"https://github.com/alextanhongpin/database-design\" rel=\"noopener noreferrer\">Database Design (⭐488)</a> - Useful tips for designing robust database schema.</li>\n</ul>\n<h3><p>Monitoring/Statistics/Perfomance / Samples</p>\n</h3><ul>\n<li><a href=\"https://github.com/CrunchyData/pgmonitor\" rel=\"noopener noreferrer\">pgMonitor (⭐658)</a> - All-in-one tool to easily create an environment to visualize the health and performance of your PostgreSQL cluster.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/spotify/postgresql-metrics\" rel=\"noopener noreferrer\">PostgreSQL Metrics (⭐596)</a> - Service to extract and provide metrics on your PostgreSQL database.</li>\n</ul>\n<ul>\n<li><a href=\"https://gitlab.com/postgres-ai/postgres-checkup\" rel=\"noopener noreferrer\">postgres-checkup</a> - New-generation diagnostics tool that allows users to do a deep analysis of the health of Postgres databases.</li>\n</ul>\n<h3><p>SQL / Parsers</p>\n</h3><ul>\n<li><a href=\"https://github.com/pganalyze/libpg_query\" rel=\"noopener noreferrer\">libpg_query (⭐1.3k)</a> - C library for accessing the PostgreSQL parser outside of the server environment.</li>\n</ul>\n<h3><p>SQL / Plan</p>\n</h3><ul>\n<li><a href=\"https://github.com/dalibo/pev2\" rel=\"noopener noreferrer\">pev2 (⭐3k)</a> - A VueJS component to show a graphical vizualization of a PostgreSQL execution plan.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/mgartner/pg_flame\" rel=\"noopener noreferrer\">pg_flame (⭐1.6k)</a> - A flamegraph generator for Postgres <code>EXPLAIN ANALYZE</code> output.</li>\n</ul>\n<h3><p>Data / Catalog</p>\n</h3><ul>\n<li><a href=\"https://github.com/amundsen-io/amundsen\" rel=\"noopener noreferrer\">Amundsen (⭐4.6k)</a> - Metadata driven application for improving the productivity of data analysts, data scientists and engineers when interacting with data.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/datahub-project/datahub\" rel=\"noopener noreferrer\">DataHub (⭐11k)</a> - The Metadata Platform for the Modern Data Stack.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/MarquezProject/marquez\" rel=\"noopener noreferrer\">Marquez (⭐2k)</a> - Collect, aggregate, and visualize a data ecosystem's metadata.</li>\n</ul>\n",
      "date_published": "2022-04-05T00:39:59.000Z",
      "date_modified": "2022-04-05T16:55:12.000Z"
    }
  ]
}
