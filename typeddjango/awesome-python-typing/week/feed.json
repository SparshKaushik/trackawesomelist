{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Track Awesome Python Typing Updates Weekly",
  "_seo_title": "Track Awesome Python Typing (typeddjango/awesome-python-typing) Updates Weekly - Track Awesome List",
  "_site_title": "Track Awesome List",
  "description": "Collection of awesome Python types, stubs, plugins, and tools to work with them.",
  "home_page_url": "https://www.trackawesomelist.com/typeddjango/awesome-python-typing/week/",
  "feed_url": "https://www.trackawesomelist.com/typeddjango/awesome-python-typing/week/feed.json",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/2025/5/",
      "title": "Awesome Python Typing Updates on Feb 03 - Feb 09, 2025",
      "_short_title": "Feb 03 - Feb 09, 2025",
      "_slug": "2025/5/",
      "summary": "1 awesome projects updated on Feb 03 - Feb 09, 2025",
      "_filepath": "/content/2025/5/README.md",
      "url": "https://www.trackawesomelist.com/2025/5/",
      "date_published": "2025-01-30T13:22:16.000Z",
      "date_modified": "2025-01-30T13:22:16.000Z",
      "content_text": "\n\n### Tools / Mypy plugins\n\n*   [pydantic](https://docs.pydantic.dev/latest/integrations/mypy/) - Plugin for additional [Pydantic](https://docs.pydantic.dev/latest/) support.",
      "content_html": "<h3><p>Tools / Mypy plugins</p>\n</h3>\n<ul>\n<li><a href=\"https://docs.pydantic.dev/latest/integrations/mypy/\" rel=\"noopener noreferrer\">pydantic</a> - Plugin for additional <a href=\"https://docs.pydantic.dev/latest/\" rel=\"noopener noreferrer\">Pydantic</a> support.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/52/",
      "title": "Awesome Python Typing Updates on Dec 23 - Dec 29, 2024",
      "_short_title": "Dec 23 - Dec 29, 2024",
      "_slug": "2024/52/",
      "summary": "1 awesome projects updated on Dec 23 - Dec 29, 2024",
      "_filepath": "/content/2024/52/README.md",
      "url": "https://www.trackawesomelist.com/2024/52/",
      "date_published": "2024-12-23T19:34:03.000Z",
      "date_modified": "2024-12-23T19:34:03.000Z",
      "content_text": "\n\n### Tools / Helper tools to add annotations to existing code\n\n*   [RightTyper (⭐325)](https://github.com/RightTyper/RightTyper) - A tool that generates types for your function arguments and return values. RightTyper lets your code run at nearly full speed with almost no memory overhead.",
      "content_html": "<h3><p>Tools / Helper tools to add annotations to existing code</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/RightTyper/RightTyper\" rel=\"noopener noreferrer\">RightTyper (⭐325)</a> - A tool that generates types for your function arguments and return values. RightTyper lets your code run at nearly full speed with almost no memory overhead.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/37/",
      "title": "Awesome Python Typing Updates on Sep 09 - Sep 15, 2024",
      "_short_title": "Sep 09 - Sep 15, 2024",
      "_slug": "2024/37/",
      "summary": "1 awesome projects updated on Sep 09 - Sep 15, 2024",
      "_filepath": "/content/2024/37/README.md",
      "url": "https://www.trackawesomelist.com/2024/37/",
      "date_published": "2024-09-10T07:15:53.000Z",
      "date_modified": "2024-09-10T07:15:53.000Z",
      "content_text": "\n\n### Stub packages\n\n*   [scipy-stubs (⭐55)](https://github.com/jorenham/scipy-stubs) - Stubs for [SciPy (⭐14k)](https://github.com/scipy/scipy).",
      "content_html": "<h3><p>Stub packages</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/jorenham/scipy-stubs\" rel=\"noopener noreferrer\">scipy-stubs (⭐55)</a> - Stubs for <a href=\"https://github.com/scipy/scipy\" rel=\"noopener noreferrer\">SciPy (⭐14k)</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/28/",
      "title": "Awesome Python Typing Updates on Jul 08 - Jul 14, 2024",
      "_short_title": "Jul 08 - Jul 14, 2024",
      "_slug": "2024/28/",
      "summary": "1 awesome projects updated on Jul 08 - Jul 14, 2024",
      "_filepath": "/content/2024/28/README.md",
      "url": "https://www.trackawesomelist.com/2024/28/",
      "date_published": "2024-07-11T15:57:10.000Z",
      "date_modified": "2024-07-11T15:57:10.000Z",
      "content_text": "\n\n### Backports and improvements\n\n*   [typing-extensions (⭐507)](https://github.com/python/typing_extensions) - Backported and experimental type hints.",
      "content_html": "<h3><p>Backports and improvements</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/python/typing_extensions\" rel=\"noopener noreferrer\">typing-extensions (⭐507)</a> - Backported and experimental type hints.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/25/",
      "title": "Awesome Python Typing Updates on Jun 17 - Jun 23, 2024",
      "_short_title": "Jun 17 - Jun 23, 2024",
      "_slug": "2024/25/",
      "summary": "1 awesome projects updated on Jun 17 - Jun 23, 2024",
      "_filepath": "/content/2024/25/README.md",
      "url": "https://www.trackawesomelist.com/2024/25/",
      "date_published": "2024-06-22T05:45:49.000Z",
      "date_modified": "2024-06-22T05:45:49.000Z",
      "content_text": "\n\n### Tools / Linters\n\n*   [Ruff (⭐41k)](https://github.com/astral-sh/ruff/) - Extremely fast linter which supports lint rules from many other lint tools, such as flake8.",
      "content_html": "<h3><p>Tools / Linters</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/astral-sh/ruff/\" rel=\"noopener noreferrer\">Ruff (⭐41k)</a> - Extremely fast linter which supports lint rules from many other lint tools, such as flake8.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/15/",
      "title": "Awesome Python Typing Updates on Apr 08 - Apr 14, 2024",
      "_short_title": "Apr 08 - Apr 14, 2024",
      "_slug": "2024/15/",
      "summary": "1 awesome projects updated on Apr 08 - Apr 14, 2024",
      "_filepath": "/content/2024/15/README.md",
      "url": "https://www.trackawesomelist.com/2024/15/",
      "date_published": "2024-04-10T14:15:32.000Z",
      "date_modified": "2024-04-10T14:15:32.000Z",
      "content_text": "\n\n### Tools / Helper tools to add annotations to existing code\n\n*   [no\\_implicit\\_optional (⭐95)](https://github.com/hauntsaninja/no_implicit_optional) - A codemod to make your implicit optional type hints [PEP 484](https://peps.python.org/pep-0484/#union-types) compliant.",
      "content_html": "<h3><p>Tools / Helper tools to add annotations to existing code</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/hauntsaninja/no_implicit_optional\" rel=\"noopener noreferrer\">no_implicit_optional (⭐95)</a> - A codemod to make your implicit optional type hints <a href=\"https://peps.python.org/pep-0484/#union-types\" rel=\"noopener noreferrer\">PEP 484</a> compliant.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/14/",
      "title": "Awesome Python Typing Updates on Apr 01 - Apr 07, 2024",
      "_short_title": "Apr 01 - Apr 07, 2024",
      "_slug": "2024/14/",
      "summary": "1 awesome projects updated on Apr 01 - Apr 07, 2024",
      "_filepath": "/content/2024/14/README.md",
      "url": "https://www.trackawesomelist.com/2024/14/",
      "date_published": "2024-04-01T19:03:19.000Z",
      "date_modified": "2024-04-01T19:03:19.000Z",
      "content_text": "\n\n### Additional types\n\n*   [optype (⭐47)](https://github.com/jorenham/optype) - Opinionated `collections.abc` and `operators` alternative: Flexible single-method protocols and typed operators with predictable names.",
      "content_html": "<h3><p>Additional types</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/jorenham/optype\" rel=\"noopener noreferrer\">optype (⭐47)</a> - Opinionated <code>collections.abc</code> and <code>operators</code> alternative: Flexible single-method protocols and typed operators with predictable names.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2024/10/",
      "title": "Awesome Python Typing Updates on Mar 04 - Mar 10, 2024",
      "_short_title": "Mar 04 - Mar 10, 2024",
      "_slug": "2024/10/",
      "summary": "1 awesome projects updated on Mar 04 - Mar 10, 2024",
      "_filepath": "/content/2024/10/README.md",
      "url": "https://www.trackawesomelist.com/2024/10/",
      "date_published": "2024-03-05T09:27:02.000Z",
      "date_modified": "2024-03-05T09:27:02.000Z",
      "content_text": "\n\n### Static type checkers\n\n*   [basedpyright (⭐2.2k)](https://github.com/detachhead/basedpyright) - Pyright fork with improvements to VSCode support and various other fixes.",
      "content_html": "<h3><p>Static type checkers</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/detachhead/basedpyright\" rel=\"noopener noreferrer\">basedpyright (⭐2.2k)</a> - Pyright fork with improvements to VSCode support and various other fixes.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/46/",
      "title": "Awesome Python Typing Updates on Nov 13 - Nov 19, 2023",
      "_short_title": "Nov 13 - Nov 19, 2023",
      "_slug": "2023/46/",
      "summary": "3 awesome projects updated on Nov 13 - Nov 19, 2023",
      "_filepath": "/content/2023/46/README.md",
      "url": "https://www.trackawesomelist.com/2023/46/",
      "date_published": "2023-11-14T07:02:29.000Z",
      "date_modified": "2023-11-14T07:02:29.000Z",
      "content_text": "\n\n### Stub packages\n\n*   [python-phonenumbers-stubs (⭐1)](https://github.com/AA-Turner/python-phonenumbers-stubs) - Stubs for [phonenumbers (⭐3.6k)](https://github.com/daviddrysdale/python-phonenumbers).\n*   [types-aiobotocore](https://vemel.github.io/types_aiobotocore_docs/) - Stubs for [aiobotocore (⭐1.3k)](https://github.com/aio-libs/aiobotocore).\n\n### Additional types\n\n*   [useful-types (⭐135)](https://github.com/hauntsaninja/useful_types) - Collection of useful protocols and type aliases.",
      "content_html": "<h3><p>Stub packages</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/AA-Turner/python-phonenumbers-stubs\" rel=\"noopener noreferrer\">python-phonenumbers-stubs (⭐1)</a> - Stubs for <a href=\"https://github.com/daviddrysdale/python-phonenumbers\" rel=\"noopener noreferrer\">phonenumbers (⭐3.6k)</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://vemel.github.io/types_aiobotocore_docs/\" rel=\"noopener noreferrer\">types-aiobotocore</a> - Stubs for <a href=\"https://github.com/aio-libs/aiobotocore\" rel=\"noopener noreferrer\">aiobotocore (⭐1.3k)</a>.</li>\n</ul>\n<h3><p>Additional types</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/hauntsaninja/useful_types\" rel=\"noopener noreferrer\">useful-types (⭐135)</a> - Collection of useful protocols and type aliases.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/27/",
      "title": "Awesome Python Typing Updates on Jul 03 - Jul 09, 2023",
      "_short_title": "Jul 03 - Jul 09, 2023",
      "_slug": "2023/27/",
      "summary": "1 awesome projects updated on Jul 03 - Jul 09, 2023",
      "_filepath": "/content/2023/27/README.md",
      "url": "https://www.trackawesomelist.com/2023/27/",
      "date_published": "2023-07-08T05:33:37.000Z",
      "date_modified": "2023-07-08T05:33:37.000Z",
      "content_text": "\n\n### Static type checkers\n\n*   [basedmypy (⭐189)](https://github.com/KotlinIsland/basedmypy) - Based static typing with baseline functionality.",
      "content_html": "<h3><p>Static type checkers</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/KotlinIsland/basedmypy\" rel=\"noopener noreferrer\">basedmypy (⭐189)</a> - Based static typing with baseline functionality.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/22/",
      "title": "Awesome Python Typing Updates on May 29 - Jun 04, 2023",
      "_short_title": "May 29 - Jun 04, 2023",
      "_slug": "2023/22/",
      "summary": "1 awesome projects updated on May 29 - Jun 04, 2023",
      "_filepath": "/content/2023/22/README.md",
      "url": "https://www.trackawesomelist.com/2023/22/",
      "date_published": "2023-05-30T06:34:38.000Z",
      "date_modified": "2023-05-30T06:34:38.000Z",
      "content_text": "\n\n### Static type checkers\n\n*   [pylyzer (⭐2.9k)](https://github.com/mtshiba/pylyzer/) - A fast static code analyzer & language server for Python, written in Rust.",
      "content_html": "<h3><p>Static type checkers</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/mtshiba/pylyzer/\" rel=\"noopener noreferrer\">pylyzer (⭐2.9k)</a> - A fast static code analyzer &amp; language server for Python, written in Rust.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2023/6/",
      "title": "Awesome Python Typing Updates on Feb 06 - Feb 12, 2023",
      "_short_title": "Feb 06 - Feb 12, 2023",
      "_slug": "2023/6/",
      "summary": "2 awesome projects updated on Feb 06 - Feb 12, 2023",
      "_filepath": "/content/2023/6/README.md",
      "url": "https://www.trackawesomelist.com/2023/6/",
      "date_published": "2023-02-08T12:48:02.000Z",
      "date_modified": "2023-02-09T07:32:31.000Z",
      "content_text": "\n\n### Tools / Helper tools to add annotations to existing code\n\n*   [jsonschema-gentypes (⭐46)](https://github.com/camptocamp/jsonschema-gentypes) - Generate Python types based on TypedDict from a JSON Schema.\n\n### Articles / Third-party articles\n\n*   [Our journey to type checking 4 million lines of Python](https://dropbox.tech/application/our-journey-to-type-checking-4-million-lines-of-python) - Dropbox has been one of the first companies to adopt Python static type checking at this scale.",
      "content_html": "<h3><p>Tools / Helper tools to add annotations to existing code</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/camptocamp/jsonschema-gentypes\" rel=\"noopener noreferrer\">jsonschema-gentypes (⭐46)</a> - Generate Python types based on TypedDict from a JSON Schema.</li>\n</ul>\n<h3><p>Articles / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://dropbox.tech/application/our-journey-to-type-checking-4-million-lines-of-python\" rel=\"noopener noreferrer\">Our journey to type checking 4 million lines of Python</a> - Dropbox has been one of the first companies to adopt Python static type checking at this scale.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/48/",
      "title": "Awesome Python Typing Updates on Nov 28 - Dec 04, 2022",
      "_short_title": "Nov 28 - Dec 04, 2022",
      "_slug": "2022/48/",
      "summary": "1 awesome projects updated on Nov 28 - Dec 04, 2022",
      "_filepath": "/content/2022/48/README.md",
      "url": "https://www.trackawesomelist.com/2022/48/",
      "date_published": "2022-11-29T11:10:43.000Z",
      "date_modified": "2022-11-29T11:10:43.000Z",
      "content_text": "\n\n### Articles / Third-party articles\n\n*   [Python Type Checking (Guide)](https://realpython.com/python-type-checking/) - In this guide, you will get a look into Python type checking.",
      "content_html": "<h3><p>Articles / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://realpython.com/python-type-checking/\" rel=\"noopener noreferrer\">Python Type Checking (Guide)</a> - In this guide, you will get a look into Python type checking.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/40/",
      "title": "Awesome Python Typing Updates on Oct 03 - Oct 09, 2022",
      "_short_title": "Oct 03 - Oct 09, 2022",
      "_slug": "2022/40/",
      "summary": "1 awesome projects updated on Oct 03 - Oct 09, 2022",
      "_filepath": "/content/2022/40/README.md",
      "url": "https://www.trackawesomelist.com/2022/40/",
      "date_published": "2022-10-05T11:31:42.000Z",
      "date_modified": "2022-10-05T11:31:42.000Z",
      "content_text": "\n\n### Tools / Helper tools to add annotations to existing code\n\n*   [PyTypes (⭐11)](https://github.com/pvs-hd-tea/PyTypes) - Infer Types by Python Tracing.",
      "content_html": "<h3><p>Tools / Helper tools to add annotations to existing code</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/pvs-hd-tea/PyTypes\" rel=\"noopener noreferrer\">PyTypes (⭐11)</a> - Infer Types by Python Tracing.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/35/",
      "title": "Awesome Python Typing Updates on Aug 29 - Sep 04, 2022",
      "_short_title": "Aug 29 - Sep 04, 2022",
      "_slug": "2022/35/",
      "summary": "5 awesome projects updated on Aug 29 - Sep 04, 2022",
      "_filepath": "/content/2022/35/README.md",
      "url": "https://www.trackawesomelist.com/2022/35/",
      "date_published": "2022-08-31T08:58:07.000Z",
      "date_modified": "2022-09-02T12:14:16.000Z",
      "content_text": "\n\n### Backports and improvements\n\n*   [future-typing (⭐18)](https://github.com/PrettyWood/future-typing) - Backport for type hinting generics in standard collections and union types as `X | Y`.\n\n### Tools / Working with types\n\n*   [mypy-baseline (⭐66)](https://github.com/orsinium-labs/mypy-baseline) - Integrate mypy with existing codebase. A CLI tool that filters out existing type errors and reports only new ones.\n*   [retype (⭐143)](https://github.com/ambv/retype) - Another tool to apply stubs to code.\n*   [typesplainer (⭐82)](https://github.com/wasi-master/typesplainer) - A Python type explainer.\n\n### Tools / Helper tools to add annotations to existing code\n\n*   [infer-types (⭐90)](https://github.com/orsinium-labs/infer-types) - CLI tool to automatically infer and add type annotations into Python code.",
      "content_html": "<h3><p>Backports and improvements</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/PrettyWood/future-typing\" rel=\"noopener noreferrer\">future-typing (⭐18)</a> - Backport for type hinting generics in standard collections and union types as <code>X | Y</code>.</li>\n</ul>\n<h3><p>Tools / Working with types</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/orsinium-labs/mypy-baseline\" rel=\"noopener noreferrer\">mypy-baseline (⭐66)</a> - Integrate mypy with existing codebase. A CLI tool that filters out existing type errors and reports only new ones.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ambv/retype\" rel=\"noopener noreferrer\">retype (⭐143)</a> - Another tool to apply stubs to code.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/wasi-master/typesplainer\" rel=\"noopener noreferrer\">typesplainer (⭐82)</a> - A Python type explainer.</li>\n</ul>\n<h3><p>Tools / Helper tools to add annotations to existing code</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/orsinium-labs/infer-types\" rel=\"noopener noreferrer\">infer-types (⭐90)</a> - CLI tool to automatically infer and add type annotations into Python code.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/9/",
      "title": "Awesome Python Typing Updates on Feb 28 - Mar 06, 2022",
      "_short_title": "Feb 28 - Mar 06, 2022",
      "_slug": "2022/9/",
      "summary": "1 awesome projects updated on Feb 28 - Mar 06, 2022",
      "_filepath": "/content/2022/9/README.md",
      "url": "https://www.trackawesomelist.com/2022/9/",
      "date_published": "2022-03-02T21:19:31.000Z",
      "date_modified": "2022-03-02T21:19:31.000Z",
      "content_text": "\n\n### Tools / Helper tools to add annotations to existing code\n\n*   [autotyping (⭐261)](https://github.com/JelleZijlstra/autotyping) - Automatically add simple return type annotations for functions (bool, None, Optional).",
      "content_html": "<h3><p>Tools / Helper tools to add annotations to existing code</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/JelleZijlstra/autotyping\" rel=\"noopener noreferrer\">autotyping (⭐261)</a> - Automatically add simple return type annotations for functions (bool, None, Optional).</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/6/",
      "title": "Awesome Python Typing Updates on Feb 07 - Feb 13, 2022",
      "_short_title": "Feb 07 - Feb 13, 2022",
      "_slug": "2022/6/",
      "summary": "1 awesome projects updated on Feb 07 - Feb 13, 2022",
      "_filepath": "/content/2022/6/README.md",
      "url": "https://www.trackawesomelist.com/2022/6/",
      "date_published": "2022-02-12T14:16:18.000Z",
      "date_modified": "2022-02-12T14:16:18.000Z",
      "content_text": "\n\n### Stub packages\n\n*   [boto3-stubs](https://vemel.github.io/boto3_stubs_docs/) - Stubs for [boto3 (⭐9.4k)](https://github.com/boto/boto3).",
      "content_html": "<h3><p>Stub packages</p>\n</h3>\n<ul>\n<li><a href=\"https://vemel.github.io/boto3_stubs_docs/\" rel=\"noopener noreferrer\">boto3-stubs</a> - Stubs for <a href=\"https://github.com/boto/boto3\" rel=\"noopener noreferrer\">boto3 (⭐9.4k)</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/4/",
      "title": "Awesome Python Typing Updates on Jan 24 - Jan 30, 2022",
      "_short_title": "Jan 24 - Jan 30, 2022",
      "_slug": "2022/4/",
      "summary": "3 awesome projects updated on Jan 24 - Jan 30, 2022",
      "_filepath": "/content/2022/4/README.md",
      "url": "https://www.trackawesomelist.com/2022/4/",
      "date_published": "2022-01-25T19:35:38.000Z",
      "date_modified": "2022-01-25T20:50:22.000Z",
      "content_text": "\n\n### Dynamic type checkers\n\n*   [typedpy (⭐18)](https://github.com/loyada/typedpy) - Type-safe, strict Python. Works well with standard Python.\n\n### Stub packages\n\n*   [celery-types (⭐109)](https://github.com/sbdchd/celery-types) - Type stubs for [Celery (⭐27k)](https://github.com/celery/celery) and its related packages [django-celery-results (⭐742)](https://github.com/celery/django-celery-results), [ampq (⭐312)](https://github.com/celery/py-amqp), [kombu (⭐3k)](https://github.com/celery/kombu), [billiard (⭐425)](https://github.com/celery/billiard), [vine (⭐125)](https://github.com/celery/vine) and [ephem (⭐846)](https://github.com/brandon-rhodes/pyephem).\n\n### Articles / Third-party articles\n\n*   [Static Typing Python Decorators](https://rednafi.github.io/reflections/static-typing-python-decorators.html) - Accurately static typing decorators in Python is an icky business. The wrapper function obfuscates type information required to statically determine the types of the parameters and the return values of the wrapped function.",
      "content_html": "<h3><p>Dynamic type checkers</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/loyada/typedpy\" rel=\"noopener noreferrer\">typedpy (⭐18)</a> - Type-safe, strict Python. Works well with standard Python.</li>\n</ul>\n<h3><p>Stub packages</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/sbdchd/celery-types\" rel=\"noopener noreferrer\">celery-types (⭐109)</a> - Type stubs for <a href=\"https://github.com/celery/celery\" rel=\"noopener noreferrer\">Celery (⭐27k)</a> and its related packages <a href=\"https://github.com/celery/django-celery-results\" rel=\"noopener noreferrer\">django-celery-results (⭐742)</a>, <a href=\"https://github.com/celery/py-amqp\" rel=\"noopener noreferrer\">ampq (⭐312)</a>, <a href=\"https://github.com/celery/kombu\" rel=\"noopener noreferrer\">kombu (⭐3k)</a>, <a href=\"https://github.com/celery/billiard\" rel=\"noopener noreferrer\">billiard (⭐425)</a>, <a href=\"https://github.com/celery/vine\" rel=\"noopener noreferrer\">vine (⭐125)</a> and <a href=\"https://github.com/brandon-rhodes/pyephem\" rel=\"noopener noreferrer\">ephem (⭐846)</a>.</li>\n</ul>\n<h3><p>Articles / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://rednafi.github.io/reflections/static-typing-python-decorators.html\" rel=\"noopener noreferrer\">Static Typing Python Decorators</a> - Accurately static typing decorators in Python is an icky business. The wrapper function obfuscates type information required to statically determine the types of the parameters and the return values of the wrapped function.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/3/",
      "title": "Awesome Python Typing Updates on Jan 17 - Jan 23, 2022",
      "_short_title": "Jan 17 - Jan 23, 2022",
      "_slug": "2022/3/",
      "summary": "2 awesome projects updated on Jan 17 - Jan 23, 2022",
      "_filepath": "/content/2022/3/README.md",
      "url": "https://www.trackawesomelist.com/2022/3/",
      "date_published": "2022-01-19T10:46:07.000Z",
      "date_modified": "2022-01-19T10:47:04.000Z",
      "content_text": "\n\n### Tools / Testing\n\n*   [mypy-test (⭐6)](https://github.com/orsinium-labs/mypy-test) - Test mypy plugins, stubs, custom types.\n\n### Tools / Working with types\n\n*   [typeforce (⭐20)](https://github.com/orsinium-labs/typeforce) - CLI tool that enriches your Python environment with type annotations, empowering mypy.",
      "content_html": "<h3><p>Tools / Testing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/orsinium-labs/mypy-test\" rel=\"noopener noreferrer\">mypy-test (⭐6)</a> - Test mypy plugins, stubs, custom types.</li>\n</ul>\n<h3><p>Tools / Working with types</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/orsinium-labs/typeforce\" rel=\"noopener noreferrer\">typeforce (⭐20)</a> - CLI tool that enriches your Python environment with type annotations, empowering mypy.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2022/2/",
      "title": "Awesome Python Typing Updates on Jan 10 - Jan 16, 2022",
      "_short_title": "Jan 10 - Jan 16, 2022",
      "_slug": "2022/2/",
      "summary": "7 awesome projects updated on Jan 10 - Jan 16, 2022",
      "_filepath": "/content/2022/2/README.md",
      "url": "https://www.trackawesomelist.com/2022/2/",
      "date_published": "2022-01-13T11:37:53.000Z",
      "date_modified": "2022-01-13T12:03:14.000Z",
      "content_text": "\n\n### Dynamic type checkers\n\n*   [trycast (⭐83)](https://github.com/davidfstr/trycast) - Parse JSON-like values whose shape is defined by typed dictionaries (TypedDicts) and other standard Python type hints.\n\n### Tools / Linters\n\n*   [flake8-type-ignore](https://gitlab.com/jonafato/flake8-type-ignore/) - flake8 plugin to disallow type: ignore comments in your typed Python code.\n\n### Tools / Helper tools to add annotations to existing code\n\n*   [auto-optional (⭐17)](https://github.com/Luttik/auto-optional) - Makes typed arguments Optional when the default argument is `None`.\n\n### Articles / Third-party articles\n\n*   [Python-typing-koans (⭐118)](https://github.com/kracekumar/python-typing-koans/) - A set of examples to learn optional static typing in Python.\n*   [Adding type hints to urllib3](https://sethmlarson.dev/blog/2021-10-18/tests-arent-enough-case-study-after-adding-types-to-urllib3) - Tests are not enough: Case study adding type hints to urllib3.\n*   [Adam Johnsons Blog](https://adamj.eu/tech/tag/mypy/) - Adam Johnson blogs about typing practices.\n*   [ParamSpec Guide](https://sobolevn.me/2021/12/paramspec-guide) - Newly released feature in `PEP612` allows you do a lot of advanced typing things with functions and their signatures.",
      "content_html": "<h3><p>Dynamic type checkers</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/davidfstr/trycast\" rel=\"noopener noreferrer\">trycast (⭐83)</a> - Parse JSON-like values whose shape is defined by typed dictionaries (TypedDicts) and other standard Python type hints.</li>\n</ul>\n<h3><p>Tools / Linters</p>\n</h3>\n<ul>\n<li><a href=\"https://gitlab.com/jonafato/flake8-type-ignore/\" rel=\"noopener noreferrer\">flake8-type-ignore</a> - flake8 plugin to disallow type: ignore comments in your typed Python code.</li>\n</ul>\n<h3><p>Tools / Helper tools to add annotations to existing code</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Luttik/auto-optional\" rel=\"noopener noreferrer\">auto-optional (⭐17)</a> - Makes typed arguments Optional when the default argument is <code>None</code>.</li>\n</ul>\n<h3><p>Articles / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/kracekumar/python-typing-koans/\" rel=\"noopener noreferrer\">Python-typing-koans (⭐118)</a> - A set of examples to learn optional static typing in Python.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://sethmlarson.dev/blog/2021-10-18/tests-arent-enough-case-study-after-adding-types-to-urllib3\" rel=\"noopener noreferrer\">Adding type hints to urllib3</a> - Tests are not enough: Case study adding type hints to urllib3.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://adamj.eu/tech/tag/mypy/\" rel=\"noopener noreferrer\">Adam Johnsons Blog</a> - Adam Johnson blogs about typing practices.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://sobolevn.me/2021/12/paramspec-guide\" rel=\"noopener noreferrer\">ParamSpec Guide</a> - Newly released feature in <code>PEP612</code> allows you do a lot of advanced typing things with functions and their signatures.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/48/",
      "title": "Awesome Python Typing Updates on Nov 29 - Dec 05, 2021",
      "_short_title": "Nov 29 - Dec 05, 2021",
      "_slug": "2021/48/",
      "summary": "1 awesome projects updated on Nov 29 - Dec 05, 2021",
      "_filepath": "/content/2021/48/README.md",
      "url": "https://www.trackawesomelist.com/2021/48/",
      "date_published": "2021-12-02T13:50:22.000Z",
      "date_modified": "2021-12-02T13:50:22.000Z",
      "content_text": "\n\n### Tools / Linters\n\n*   [flake8-type-checking (⭐118)](https://github.com/snok/flake8-type-checking) - Plugin to help you guard any type-annotation-only import correctly.",
      "content_html": "<h3><p>Tools / Linters</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/snok/flake8-type-checking\" rel=\"noopener noreferrer\">flake8-type-checking (⭐118)</a> - Plugin to help you guard any type-annotation-only import correctly.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/39/",
      "title": "Awesome Python Typing Updates on Sep 27 - Oct 03, 2021",
      "_short_title": "Sep 27 - Oct 03, 2021",
      "_slug": "2021/39/",
      "summary": "2 awesome projects updated on Sep 27 - Oct 03, 2021",
      "_filepath": "/content/2021/39/README.md",
      "url": "https://www.trackawesomelist.com/2021/39/",
      "date_published": "2021-10-02T07:02:21.000Z",
      "date_modified": "2021-10-02T07:02:21.000Z",
      "content_text": "\n\n### Articles / Third-party articles\n\n*   [PyTest MonkeyType Introduction](https://dev.to/ldrscke/type-annotate-an-existing-python-django-codebase-with-monkeytype-254i) - Type Annotate an existing Python Django Codebase with MonkeyType.\n*   [Type Check Your Django Application](https://kracekumar.com/post/type_check_your_django_app/) - An article based on two recent talks on adding type checks to Django.",
      "content_html": "<h3><p>Articles / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://dev.to/ldrscke/type-annotate-an-existing-python-django-codebase-with-monkeytype-254i\" rel=\"noopener noreferrer\">PyTest MonkeyType Introduction</a> - Type Annotate an existing Python Django Codebase with MonkeyType.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://kracekumar.com/post/type_check_your_django_app/\" rel=\"noopener noreferrer\">Type Check Your Django Application</a> - An article based on two recent talks on adding type checks to Django.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/36/",
      "title": "Awesome Python Typing Updates on Sep 06 - Sep 12, 2021",
      "_short_title": "Sep 06 - Sep 12, 2021",
      "_slug": "2021/36/",
      "summary": "1 awesome projects updated on Sep 06 - Sep 12, 2021",
      "_filepath": "/content/2021/36/README.md",
      "url": "https://www.trackawesomelist.com/2021/36/",
      "date_published": "2021-09-05T19:22:46.000Z",
      "date_modified": "2021-09-05T19:22:46.000Z",
      "content_text": "\n\n### Tools / Mypy plugins\n\n*   [kubernetes-typed (⭐25)](https://github.com/gordonbondon/kubernetes-typed) - Plugin for kubernetes [CRD](https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/) type checking.",
      "content_html": "<h3><p>Tools / Mypy plugins</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/gordonbondon/kubernetes-typed\" rel=\"noopener noreferrer\">kubernetes-typed (⭐25)</a> - Plugin for kubernetes <a href=\"https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/\" rel=\"noopener noreferrer\">CRD</a> type checking.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/29/",
      "title": "Awesome Python Typing Updates on Jul 19 - Jul 25, 2021",
      "_short_title": "Jul 19 - Jul 25, 2021",
      "_slug": "2021/29/",
      "summary": "3 awesome projects updated on Jul 19 - Jul 25, 2021",
      "_filepath": "/content/2021/29/README.md",
      "url": "https://www.trackawesomelist.com/2021/29/",
      "date_published": "2021-07-20T12:05:24.000Z",
      "date_modified": "2021-07-21T13:10:22.000Z",
      "content_text": "\n\n### Stub packages\n\n*   [sqlalchemy2-stubs](https://docs.sqlalchemy.org/en/14/orm/extensions/mypy.html) - Official stubs and mypy plugin for [SQLAlchemy](https://www.sqlalchemy.org).\n\n### Tools / Mypy plugins\n\n*   [numpy](https://numpy.org/devdocs/reference/typing.html) - Plugin for [NumPy](https://numpy.org) support.\n\n### Integrations / Mypy plugins\n\n*   [nbQA (⭐1.1k)](https://github.com/nbQA-dev/nbQA) - Run type checkers (e.g. Mypy) on Jupyter Notebooks.",
      "content_html": "<h3><p>Stub packages</p>\n</h3>\n<ul>\n<li><a href=\"https://docs.sqlalchemy.org/en/14/orm/extensions/mypy.html\" rel=\"noopener noreferrer\">sqlalchemy2-stubs</a> - Official stubs and mypy plugin for <a href=\"https://www.sqlalchemy.org\" rel=\"noopener noreferrer\">SQLAlchemy</a>.</li>\n</ul>\n<h3><p>Tools / Mypy plugins</p>\n</h3>\n<ul>\n<li><a href=\"https://numpy.org/devdocs/reference/typing.html\" rel=\"noopener noreferrer\">numpy</a> - Plugin for <a href=\"https://numpy.org\" rel=\"noopener noreferrer\">NumPy</a> support.</li>\n</ul>\n<h3><p>Integrations / Mypy plugins</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/nbQA-dev/nbQA\" rel=\"noopener noreferrer\">nbQA (⭐1.1k)</a> - Run type checkers (e.g. Mypy) on Jupyter Notebooks.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/28/",
      "title": "Awesome Python Typing Updates on Jul 12 - Jul 18, 2021",
      "_short_title": "Jul 12 - Jul 18, 2021",
      "_slug": "2021/28/",
      "summary": "41 awesome projects updated on Jul 12 - Jul 18, 2021",
      "_filepath": "/content/2021/28/README.md",
      "url": "https://www.trackawesomelist.com/2021/28/",
      "date_published": "2021-07-15T12:01:47.000Z",
      "date_modified": "2021-07-16T18:56:29.000Z",
      "content_text": "\n\n### Static type checkers\n\n*   [mypy (⭐19k)](https://github.com/python/mypy) - Optional static typing (PEP 484).\n*   [pyanalyze (⭐369)](https://github.com/quora/pyanalyze) - Extensible static analyzer and type checker.\n*   [pycharm](https://www.jetbrains.com/pycharm/) - IDE for Professional Developers.\n*   [pyre](https://pyre-check.org/) - Performant type-checker.\n*   [pytype (⭐4.9k)](https://github.com/google/pytype) - Tool to check and infer types - without requiring type annotations.\n\n### Dynamic type checkers\n\n*   [pytypes (⭐199)](https://github.com/Stewori/pytypes) - Provides a rich set of utilities for runtime typechecking.\n*   [strongtyping (⭐112)](https://github.com/FelixTheC/strongtyping) - Decorator which checks whether the function is called with the correct type of parameters.\n\n### Stub packages\n\n*   [asgiref (⭐1.6k)](https://github.com/django/asgiref) - ASGI specification, provides [asgiref.typing (⭐1.6k)](https://github.com/django/asgiref/blob/main/asgiref/typing.py) module with type annotations for ASGI servers.\n*   [botostubs (⭐94)](https://github.com/jeshan/botostubs) - Gives you code assistance for any boto3 API in any IDE.\n*   [PyQt5-stubs (⭐69)](https://github.com/stlehmann/PyQt5-stubs) - Stubs for [PyQt5](https://www.riverbankcomputing.com/software/pyqt/intro).\n*   [sqlalchemy-stubs (⭐578)](https://github.com/dropbox/sqlalchemy-stubs) - Stubs for [SQLAlchemy (⭐11k)](https://github.com/sqlalchemy/sqlalchemy).\n*   [typeshed (⭐4.7k)](https://github.com/python/typeshed) - Collection of library stubs, with static types.\n\n### Additional types\n\n*   [meiga (⭐80)](https://github.com/alice-biometrics/meiga) - Simple, typed and monad-based Result type.\n*   [option (⭐96)](https://github.com/MaT1g3R/option) - Rust like Option and Result types.\n*   [phantom-types (⭐220)](https://github.com/antonagestam/phantom-types) - Phantom types.\n*   [returns (⭐4k)](https://github.com/dry-python/returns) - Make your functions return something meaningful, typed, and safe.\n*   [safetywrap (⭐46)](https://github.com/mplanchard/safetywrap) - Fully typesafe, Rust-like Result and Option types.\n*   [typet (⭐23)](https://github.com/contains-io/typet) - Length-bounded types, dynamic object validation.\n\n### Backports and improvements\n\n*   [typing-utils (⭐12)](https://github.com/bojiang/typing_utils) - Backport 3.8+ runtime typing utils(for eg: get\\_origin) & add issubtype & more.\n\n### Tools / Linters\n\n*   [flake8-pyi (⭐77)](https://github.com/ambv/flake8-pyi) - Plugin for Flake8 that provides specializations for type hinting stub files.\n*   [wemake-python-styleguide (⭐2.7k)](https://github.com/wemake-services/wemake-python-styleguide) - The strictest and most opinionated Python linter ever.\n\n### Tools / Testing\n\n*   [pytest-mypy (⭐254)](https://github.com/dbader/pytest-mypy) - Mypy static type checker plugin for Pytest.\n\n### Tools / Working with types\n\n*   [com2ann (⭐151)](https://github.com/ilevkivskyi/com2ann) - Tool for translation of type comments to type annotations.\n*   [merge-pyi (⭐4.9k)](https://github.com/google/pytype/tree/master/pytype/tools/merge_pyi) - Part of pytype toolchain, applies stub files onto source code.\n*   [mypy-silent (⭐18)](https://github.com/whtsky/mypy-silent/) - Silence mypy by adding or removing code comments.\n*   [typing-inspect (⭐364)](https://github.com/ilevkivskyi/typing_inspect) - The typing\\_inspect module defines experimental API for runtime inspection of types defined in the `typing` module.\n\n### Tools / Helper tools to add annotations to existing code\n\n*   [monkeytype (⭐4.9k)](https://github.com/instagram/MonkeyType) - Collects runtime types of function arguments and return values, and can automatically generate stub files or even add draft type annotations directly to your code based on the types collected at runtime.\n*   [pytest-annotate (⭐110)](https://github.com/kensho-technologies/pytest-annotate) - Pyannotate plugin for pytest.\n*   [pytest-monkeytype (⭐46)](https://github.com/mariusvniekerk/pytest-monkeytype) - MonkeyType plugin for pytest.\n*   [type4py (⭐65)](https://github.com/saltudelft/type4py) - Deep Similarity Learning-Based Type Inference.\n*   [typilus (⭐61)](https://github.com/typilus/typilus) - A deep learning algorithm for predicting types in Python. Also available as a [GitHub action (⭐42)](https://github.com/typilus/typilus-action)\n\n### Tools / Mypy plugins\n\n*   [loguru-mypy (⭐20)](https://github.com/kornicameister/loguru-mypy) - Plugin for [loguru (⭐22k)](https://github.com/Delgan/loguru) support.\n*   [pynamodb-mypy (⭐5)](https://github.com/pynamodb/pynamodb-mypy) - Plugin for [PynamoDB (⭐2.5k)](https://github.com/pynamodb/PynamoDB) support.\n\n### Integrations / Mypy plugins\n\n*   [emacs-flycheck-mypy (⭐38)](https://github.com/lbolla/emacs-flycheck-mypy) - Mypy integration for Emacs.\n*   [mypy-playground (⭐75)](https://github.com/ymyzk/mypy-playground) - Online playground for mypy.\n*   [mypy-pycharm-plugin (⭐317)](https://github.com/dropbox/mypy-PyCharm-plugin) - Mypy integration for PyCharm.\n*   [pylance (⭐1.8k)](https://github.com/microsoft/pylance-release) - PyRight integration for VSCode.\n\n### Articles / Third-party articles\n\n*   [Type hints cheat sheet](https://mypy.readthedocs.io/en/latest/cheat_sheet_py3.html) - Cheat sheet on writing type annotations by MyPy team.\n*   [Typechecking Django and DRF](https://sobolevn.me/2019/08/typechecking-django-and-drf) - Full tutorial about type-checking django.\n*   [typing](https://docs.python.org/3/library/typing.html) - Official Python documentation for `typing` module.\n\n### Communities / Third-party articles\n\n*   [TypedDjango](https://gitter.im/mypy-django/Lobby) - Official organisation gitter chat.",
      "content_html": "<h3><p>Static type checkers</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/python/mypy\" rel=\"noopener noreferrer\">mypy (⭐19k)</a> - Optional static typing (PEP 484).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/quora/pyanalyze\" rel=\"noopener noreferrer\">pyanalyze (⭐369)</a> - Extensible static analyzer and type checker.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.jetbrains.com/pycharm/\" rel=\"noopener noreferrer\">pycharm</a> - IDE for Professional Developers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://pyre-check.org/\" rel=\"noopener noreferrer\">pyre</a> - Performant type-checker.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/google/pytype\" rel=\"noopener noreferrer\">pytype (⭐4.9k)</a> - Tool to check and infer types - without requiring type annotations.</li>\n</ul>\n<h3><p>Dynamic type checkers</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Stewori/pytypes\" rel=\"noopener noreferrer\">pytypes (⭐199)</a> - Provides a rich set of utilities for runtime typechecking.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/FelixTheC/strongtyping\" rel=\"noopener noreferrer\">strongtyping (⭐112)</a> - Decorator which checks whether the function is called with the correct type of parameters.</li>\n</ul>\n<h3><p>Stub packages</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/django/asgiref\" rel=\"noopener noreferrer\">asgiref (⭐1.6k)</a> - ASGI specification, provides <a href=\"https://github.com/django/asgiref/blob/main/asgiref/typing.py\" rel=\"noopener noreferrer\">asgiref.typing (⭐1.6k)</a> module with type annotations for ASGI servers.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/jeshan/botostubs\" rel=\"noopener noreferrer\">botostubs (⭐94)</a> - Gives you code assistance for any boto3 API in any IDE.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/stlehmann/PyQt5-stubs\" rel=\"noopener noreferrer\">PyQt5-stubs (⭐69)</a> - Stubs for <a href=\"https://www.riverbankcomputing.com/software/pyqt/intro\" rel=\"noopener noreferrer\">PyQt5</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dropbox/sqlalchemy-stubs\" rel=\"noopener noreferrer\">sqlalchemy-stubs (⭐578)</a> - Stubs for <a href=\"https://github.com/sqlalchemy/sqlalchemy\" rel=\"noopener noreferrer\">SQLAlchemy (⭐11k)</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/python/typeshed\" rel=\"noopener noreferrer\">typeshed (⭐4.7k)</a> - Collection of library stubs, with static types.</li>\n</ul>\n<h3><p>Additional types</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/alice-biometrics/meiga\" rel=\"noopener noreferrer\">meiga (⭐80)</a> - Simple, typed and monad-based Result type.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/MaT1g3R/option\" rel=\"noopener noreferrer\">option (⭐96)</a> - Rust like Option and Result types.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/antonagestam/phantom-types\" rel=\"noopener noreferrer\">phantom-types (⭐220)</a> - Phantom types.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dry-python/returns\" rel=\"noopener noreferrer\">returns (⭐4k)</a> - Make your functions return something meaningful, typed, and safe.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mplanchard/safetywrap\" rel=\"noopener noreferrer\">safetywrap (⭐46)</a> - Fully typesafe, Rust-like Result and Option types.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/contains-io/typet\" rel=\"noopener noreferrer\">typet (⭐23)</a> - Length-bounded types, dynamic object validation.</li>\n</ul>\n<h3><p>Backports and improvements</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/bojiang/typing_utils\" rel=\"noopener noreferrer\">typing-utils (⭐12)</a> - Backport 3.8+ runtime typing utils(for eg: get_origin) &amp; add issubtype &amp; more.</li>\n</ul>\n<h3><p>Tools / Linters</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ambv/flake8-pyi\" rel=\"noopener noreferrer\">flake8-pyi (⭐77)</a> - Plugin for Flake8 that provides specializations for type hinting stub files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/wemake-services/wemake-python-styleguide\" rel=\"noopener noreferrer\">wemake-python-styleguide (⭐2.7k)</a> - The strictest and most opinionated Python linter ever.</li>\n</ul>\n<h3><p>Tools / Testing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/dbader/pytest-mypy\" rel=\"noopener noreferrer\">pytest-mypy (⭐254)</a> - Mypy static type checker plugin for Pytest.</li>\n</ul>\n<h3><p>Tools / Working with types</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/ilevkivskyi/com2ann\" rel=\"noopener noreferrer\">com2ann (⭐151)</a> - Tool for translation of type comments to type annotations.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/google/pytype/tree/master/pytype/tools/merge_pyi\" rel=\"noopener noreferrer\">merge-pyi (⭐4.9k)</a> - Part of pytype toolchain, applies stub files onto source code.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/whtsky/mypy-silent/\" rel=\"noopener noreferrer\">mypy-silent (⭐18)</a> - Silence mypy by adding or removing code comments.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ilevkivskyi/typing_inspect\" rel=\"noopener noreferrer\">typing-inspect (⭐364)</a> - The typing_inspect module defines experimental API for runtime inspection of types defined in the <code>typing</code> module.</li>\n</ul>\n<h3><p>Tools / Helper tools to add annotations to existing code</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/instagram/MonkeyType\" rel=\"noopener noreferrer\">monkeytype (⭐4.9k)</a> - Collects runtime types of function arguments and return values, and can automatically generate stub files or even add draft type annotations directly to your code based on the types collected at runtime.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/kensho-technologies/pytest-annotate\" rel=\"noopener noreferrer\">pytest-annotate (⭐110)</a> - Pyannotate plugin for pytest.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/mariusvniekerk/pytest-monkeytype\" rel=\"noopener noreferrer\">pytest-monkeytype (⭐46)</a> - MonkeyType plugin for pytest.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/saltudelft/type4py\" rel=\"noopener noreferrer\">type4py (⭐65)</a> - Deep Similarity Learning-Based Type Inference.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/typilus/typilus\" rel=\"noopener noreferrer\">typilus (⭐61)</a> - A deep learning algorithm for predicting types in Python. Also available as a <a href=\"https://github.com/typilus/typilus-action\" rel=\"noopener noreferrer\">GitHub action (⭐42)</a></li>\n</ul>\n<h3><p>Tools / Mypy plugins</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/kornicameister/loguru-mypy\" rel=\"noopener noreferrer\">loguru-mypy (⭐20)</a> - Plugin for <a href=\"https://github.com/Delgan/loguru\" rel=\"noopener noreferrer\">loguru (⭐22k)</a> support.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/pynamodb/pynamodb-mypy\" rel=\"noopener noreferrer\">pynamodb-mypy (⭐5)</a> - Plugin for <a href=\"https://github.com/pynamodb/PynamoDB\" rel=\"noopener noreferrer\">PynamoDB (⭐2.5k)</a> support.</li>\n</ul>\n<h3><p>Integrations / Mypy plugins</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/lbolla/emacs-flycheck-mypy\" rel=\"noopener noreferrer\">emacs-flycheck-mypy (⭐38)</a> - Mypy integration for Emacs.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ymyzk/mypy-playground\" rel=\"noopener noreferrer\">mypy-playground (⭐75)</a> - Online playground for mypy.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/dropbox/mypy-PyCharm-plugin\" rel=\"noopener noreferrer\">mypy-pycharm-plugin (⭐317)</a> - Mypy integration for PyCharm.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/microsoft/pylance-release\" rel=\"noopener noreferrer\">pylance (⭐1.8k)</a> - PyRight integration for VSCode.</li>\n</ul>\n<h3><p>Articles / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://mypy.readthedocs.io/en/latest/cheat_sheet_py3.html\" rel=\"noopener noreferrer\">Type hints cheat sheet</a> - Cheat sheet on writing type annotations by MyPy team.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://sobolevn.me/2019/08/typechecking-django-and-drf\" rel=\"noopener noreferrer\">Typechecking Django and DRF</a> - Full tutorial about type-checking django.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://docs.python.org/3/library/typing.html\" rel=\"noopener noreferrer\">typing</a> - Official Python documentation for <code>typing</code> module.</li>\n</ul>\n<h3><p>Communities / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://gitter.im/mypy-django/Lobby\" rel=\"noopener noreferrer\">TypedDjango</a> - Official organisation gitter chat.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/26/",
      "title": "Awesome Python Typing Updates on Jun 28 - Jul 04, 2021",
      "_short_title": "Jun 28 - Jul 04, 2021",
      "_slug": "2021/26/",
      "summary": "1 awesome projects updated on Jun 28 - Jul 04, 2021",
      "_filepath": "/content/2021/26/README.md",
      "url": "https://www.trackawesomelist.com/2021/26/",
      "date_published": "2021-06-29T16:46:49.000Z",
      "date_modified": "2021-06-29T16:46:49.000Z",
      "content_text": "\n\n### Stub packages\n\n*   [torchtyping (⭐1.4k)](https://github.com/patrick-kidger/torchtyping) - Enhanced type annotations for [pytorch](https://pytorch.org/).",
      "content_html": "<h3><p>Stub packages</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/patrick-kidger/torchtyping\" rel=\"noopener noreferrer\">torchtyping (⭐1.4k)</a> - Enhanced type annotations for <a href=\"https://pytorch.org/\" rel=\"noopener noreferrer\">pytorch</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/21/",
      "title": "Awesome Python Typing Updates on May 24 - May 30, 2021",
      "_short_title": "May 24 - May 30, 2021",
      "_slug": "2021/21/",
      "summary": "1 awesome projects updated on May 24 - May 30, 2021",
      "_filepath": "/content/2021/21/README.md",
      "url": "https://www.trackawesomelist.com/2021/21/",
      "date_published": "2021-05-27T22:20:46.000Z",
      "date_modified": "2021-05-27T22:20:46.000Z",
      "content_text": "\n\n### Articles / Third-party articles\n\n*   [The state of type hints in Python](https://bernat.tech/posts/the-state-of-type-hints-in-python/) - As of May 2018.",
      "content_html": "<h3><p>Articles / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://bernat.tech/posts/the-state-of-type-hints-in-python/\" rel=\"noopener noreferrer\">The state of type hints in Python</a> - As of May 2018.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/12/",
      "title": "Awesome Python Typing Updates on Mar 22 - Mar 28, 2021",
      "_short_title": "Mar 22 - Mar 28, 2021",
      "_slug": "2021/12/",
      "summary": "1 awesome projects updated on Mar 22 - Mar 28, 2021",
      "_filepath": "/content/2021/12/README.md",
      "url": "https://www.trackawesomelist.com/2021/12/",
      "date_published": "2021-03-24T11:06:43.000Z",
      "date_modified": "2021-03-24T11:06:43.000Z",
      "content_text": "\n\n### Stub packages\n\n*   [lxml-stubs (⭐46)](https://github.com/lxml/lxml-stubs) - Stubs for [lxml](https://lxml.de).",
      "content_html": "<h3><p>Stub packages</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/lxml/lxml-stubs\" rel=\"noopener noreferrer\">lxml-stubs (⭐46)</a> - Stubs for <a href=\"https://lxml.de\" rel=\"noopener noreferrer\">lxml</a>.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/10/",
      "title": "Awesome Python Typing Updates on Mar 08 - Mar 14, 2021",
      "_short_title": "Mar 08 - Mar 14, 2021",
      "_slug": "2021/10/",
      "summary": "2 awesome projects updated on Mar 08 - Mar 14, 2021",
      "_filepath": "/content/2021/10/README.md",
      "url": "https://www.trackawesomelist.com/2021/10/",
      "date_published": "2021-03-13T14:00:20.000Z",
      "date_modified": "2021-03-13T14:00:20.000Z",
      "content_text": "\n\n### Tools / Linters\n\n*   [flake8-typing-imports (⭐50)](https://github.com/asottile/flake8-typing-imports) - Plugin which checks that typing imports are properly guarded.\n*   [flake8-typing-only-imports (⭐118)](https://github.com/sondrelg/flake8-typing-only-imports) - flake8 plugin that helps identify which imports to put into type-checking blocks, and how to adjust your type annotations once imports are moved.",
      "content_html": "<h3><p>Tools / Linters</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/asottile/flake8-typing-imports\" rel=\"noopener noreferrer\">flake8-typing-imports (⭐50)</a> - Plugin which checks that typing imports are properly guarded.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/sondrelg/flake8-typing-only-imports\" rel=\"noopener noreferrer\">flake8-typing-only-imports (⭐118)</a> - flake8 plugin that helps identify which imports to put into type-checking blocks, and how to adjust your type annotations once imports are moved.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2021/9/",
      "title": "Awesome Python Typing Updates on Mar 01 - Mar 07, 2021",
      "_short_title": "Mar 01 - Mar 07, 2021",
      "_slug": "2021/9/",
      "summary": "4 awesome projects updated on Mar 01 - Mar 07, 2021",
      "_filepath": "/content/2021/9/README.md",
      "url": "https://www.trackawesomelist.com/2021/9/",
      "date_published": "2021-03-03T16:58:33.000Z",
      "date_modified": "2021-03-03T16:58:33.000Z",
      "content_text": "\n\n### Dynamic type checkers\n\n*   [beartype (⭐3.1k)](https://github.com/beartype/beartype) - Unbearably fast `O(1)` runtime type-checking in pure Python.\n\n### Tools / Helper tools to add annotations to existing code\n\n*   [pyannotate (⭐1.4k)](https://github.com/dropbox/pyannotate) - Insert annotations into your source code based on call arguments and return types observed at runtime.\n*   [pyre infer (⭐7.1k)](https://github.com/facebook/pyre-check) - Pyre has a powerful feature for migrating codebases to a typed format. The [infer](https://pyre-check.org/docs/pysa-coverage/) command-line option ingests a file or directory, makes educated guesses about the types used, and applies the annotations to the files.\n*   [pytype annotate-ast (⭐4.9k)](https://github.com/google/pytype/tree/master/pytype/tools/annotate_ast) - A work-in-progress tool to annotate the nodes of an AST with their Python types.",
      "content_html": "<h3><p>Dynamic type checkers</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/beartype/beartype\" rel=\"noopener noreferrer\">beartype (⭐3.1k)</a> - Unbearably fast <code>O(1)</code> runtime type-checking in pure Python.</li>\n</ul>\n<h3><p>Tools / Helper tools to add annotations to existing code</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/dropbox/pyannotate\" rel=\"noopener noreferrer\">pyannotate (⭐1.4k)</a> - Insert annotations into your source code based on call arguments and return types observed at runtime.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/facebook/pyre-check\" rel=\"noopener noreferrer\">pyre infer (⭐7.1k)</a> - Pyre has a powerful feature for migrating codebases to a typed format. The <a href=\"https://pyre-check.org/docs/pysa-coverage/\" rel=\"noopener noreferrer\">infer</a> command-line option ingests a file or directory, makes educated guesses about the types used, and applies the annotations to the files.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/google/pytype/tree/master/pytype/tools/annotate_ast\" rel=\"noopener noreferrer\">pytype annotate-ast (⭐4.9k)</a> - A work-in-progress tool to annotate the nodes of an AST with their Python types.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/40/",
      "title": "Awesome Python Typing Updates on Oct 05 - Oct 11, 2020",
      "_short_title": "Oct 05 - Oct 11, 2020",
      "_slug": "2020/40/",
      "summary": "1 awesome projects updated on Oct 05 - Oct 11, 2020",
      "_filepath": "/content/2020/40/README.md",
      "url": "https://www.trackawesomelist.com/2020/40/",
      "date_published": "2020-10-01T19:50:43.000Z",
      "date_modified": "2020-10-01T19:50:43.000Z",
      "content_text": "\n\n### Tools / Working with types\n\n*   [typing-json](https://pypi.org/project/typing-json/) - Lib for working with typed objects and JSON.",
      "content_html": "<h3><p>Tools / Working with types</p>\n</h3>\n<ul>\n<li><a href=\"https://pypi.org/project/typing-json/\" rel=\"noopener noreferrer\">typing-json</a> - Lib for working with typed objects and JSON.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/38/",
      "title": "Awesome Python Typing Updates on Sep 21 - Sep 27, 2020",
      "_short_title": "Sep 21 - Sep 27, 2020",
      "_slug": "2020/38/",
      "summary": "1 awesome projects updated on Sep 21 - Sep 27, 2020",
      "_filepath": "/content/2020/38/README.md",
      "url": "https://www.trackawesomelist.com/2020/38/",
      "date_published": "2020-09-17T21:14:13.000Z",
      "date_modified": "2020-09-17T21:14:13.000Z",
      "content_text": "\n\n### Tools / Linters\n\n*   [flake8-annotations (⭐164)](https://github.com/sco1/flake8-annotations) - Plugin for flake8 to check for presence of type annotations in function definitions.",
      "content_html": "<h3><p>Tools / Linters</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/sco1/flake8-annotations\" rel=\"noopener noreferrer\">flake8-annotations (⭐164)</a> - Plugin for flake8 to check for presence of type annotations in function definitions.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/23/",
      "title": "Awesome Python Typing Updates on Jun 08 - Jun 14, 2020",
      "_short_title": "Jun 08 - Jun 14, 2020",
      "_slug": "2020/23/",
      "summary": "1 awesome projects updated on Jun 08 - Jun 14, 2020",
      "_filepath": "/content/2020/23/README.md",
      "url": "https://www.trackawesomelist.com/2020/23/",
      "date_published": "2020-06-01T08:37:29.000Z",
      "date_modified": "2020-06-01T08:37:29.000Z",
      "content_text": "\n\n### Tools / Testing\n\n*   [pytest-mypy-testing (⭐33)](https://github.com/davidfritzsche/pytest-mypy-testing) - Pytest plugin to test mypy static type analysis.",
      "content_html": "<h3><p>Tools / Testing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/davidfritzsche/pytest-mypy-testing\" rel=\"noopener noreferrer\">pytest-mypy-testing (⭐33)</a> - Pytest plugin to test mypy static type analysis.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2020/21/",
      "title": "Awesome Python Typing Updates on May 25 - May 31, 2020",
      "_short_title": "May 25 - May 31, 2020",
      "_slug": "2020/21/",
      "summary": "18 awesome projects updated on May 25 - May 31, 2020",
      "_filepath": "/content/2020/21/README.md",
      "url": "https://www.trackawesomelist.com/2020/21/",
      "date_published": "2020-05-19T14:29:16.000Z",
      "date_modified": "2020-05-19T14:29:16.000Z",
      "content_text": "\n\n### Articles / PEPs\n\n*   [PEP-3107](https://www.python.org/dev/peps/pep-3107) - Function Annotations.\n*   [PEP-482](https://www.python.org/dev/peps/pep-0482/) - Literature Overview for Type Hints.\n*   [PEP-483](https://www.python.org/dev/peps/pep-0483/) - The Theory of Type Hints.\n*   [PEP-484](https://www.python.org/dev/peps/pep-0484/) - Type Hints.\n*   [PEP-526](https://www.python.org/dev/peps/pep-0526/) - Syntax for Variable Annotations.\n*   [PEP-544](https://www.python.org/dev/peps/pep-0544/) - Protocols: Structural subtyping (static duck typing).\n*   [PEP-557](https://www.python.org/dev/peps/pep-0557/) - Data Classes.\n*   [PEP-560](https://www.python.org/dev/peps/pep-0560/) - Core support for typing module and generic types.\n*   [PEP-561](https://www.python.org/dev/peps/pep-0561/) - Distributing and Packaging Type Information.\n*   [PEP-563](https://www.python.org/dev/peps/pep-0563/) - Postponed Evaluation of Annotations.\n*   [PEP-585](https://www.python.org/dev/peps/pep-0585/) - Type Hinting Generics In Standard Collections.\n*   [PEP-586](https://www.python.org/dev/peps/pep-0586/) - Literal Types.\n*   [PEP-589](https://www.python.org/dev/peps/pep-0589/) - TypedDict: Type Hints for Dictionaries with a Fixed Set of Keys.\n*   [PEP-591](https://www.python.org/dev/peps/pep-0591/) - Adding a final qualifier to typing.\n*   [PEP-593](https://www.python.org/dev/peps/pep-0593/) - Flexible function and variable annotations.\n*   [PEP-604](https://www.python.org/dev/peps/pep-0604/) - Complementary syntax for Union\\[].\n*   [PEP-612](https://www.python.org/dev/peps/pep-0612/) - Parameter Specification Variables.\n*   [PEP-613](https://www.python.org/dev/peps/pep-0613/) - Explicit Type Aliases.",
      "content_html": "<h3><p>Articles / PEPs</p>\n</h3>\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-3107\" rel=\"noopener noreferrer\">PEP-3107</a> - Function Annotations.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0482/\" rel=\"noopener noreferrer\">PEP-482</a> - Literature Overview for Type Hints.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0483/\" rel=\"noopener noreferrer\">PEP-483</a> - The Theory of Type Hints.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0484/\" rel=\"noopener noreferrer\">PEP-484</a> - Type Hints.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0526/\" rel=\"noopener noreferrer\">PEP-526</a> - Syntax for Variable Annotations.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0544/\" rel=\"noopener noreferrer\">PEP-544</a> - Protocols: Structural subtyping (static duck typing).</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0557/\" rel=\"noopener noreferrer\">PEP-557</a> - Data Classes.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0560/\" rel=\"noopener noreferrer\">PEP-560</a> - Core support for typing module and generic types.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0561/\" rel=\"noopener noreferrer\">PEP-561</a> - Distributing and Packaging Type Information.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0563/\" rel=\"noopener noreferrer\">PEP-563</a> - Postponed Evaluation of Annotations.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0585/\" rel=\"noopener noreferrer\">PEP-585</a> - Type Hinting Generics In Standard Collections.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0586/\" rel=\"noopener noreferrer\">PEP-586</a> - Literal Types.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0589/\" rel=\"noopener noreferrer\">PEP-589</a> - TypedDict: Type Hints for Dictionaries with a Fixed Set of Keys.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0591/\" rel=\"noopener noreferrer\">PEP-591</a> - Adding a final qualifier to typing.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0593/\" rel=\"noopener noreferrer\">PEP-593</a> - Flexible function and variable annotations.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0604/\" rel=\"noopener noreferrer\">PEP-604</a> - Complementary syntax for Union[].</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0612/\" rel=\"noopener noreferrer\">PEP-612</a> - Parameter Specification Variables.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0613/\" rel=\"noopener noreferrer\">PEP-613</a> - Explicit Type Aliases.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/51/",
      "title": "Awesome Python Typing Updates on Dec 23 - Dec 29, 2019",
      "_short_title": "Dec 23 - Dec 29, 2019",
      "_slug": "2019/51/",
      "summary": "1 awesome projects updated on Dec 23 - Dec 29, 2019",
      "_filepath": "/content/2019/51/README.md",
      "url": "https://www.trackawesomelist.com/2019/51/",
      "date_published": "2019-12-17T17:37:59.000Z",
      "date_modified": "2019-12-17T17:37:59.000Z",
      "content_text": "\n\n### Dynamic type checkers\n\n*   [typical (⭐180)](https://github.com/seandstewart/typical/) - Data parsing and automatic type-coercion using type hinting. Supports dataclasses, standard classes, function signatures, and more.",
      "content_html": "<h3><p>Dynamic type checkers</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/seandstewart/typical/\" rel=\"noopener noreferrer\">typical (⭐180)</a> - Data parsing and automatic type-coercion using type hinting. Supports dataclasses, standard classes, function signatures, and more.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/41/",
      "title": "Awesome Python Typing Updates on Oct 14 - Oct 20, 2019",
      "_short_title": "Oct 14 - Oct 20, 2019",
      "_slug": "2019/41/",
      "summary": "2 awesome projects updated on Oct 14 - Oct 20, 2019",
      "_filepath": "/content/2019/41/README.md",
      "url": "https://www.trackawesomelist.com/2019/41/",
      "date_published": "2019-10-08T08:22:47.000Z",
      "date_modified": "2019-10-08T08:22:47.000Z",
      "content_text": "\n\n### Dynamic type checkers\n\n*   [pydantic (⭐24k)](https://github.com/samuelcolvin/pydantic) - Data parsing using Python type hinting. Supports dataclasses.\n*   [typeguard (⭐1.7k)](https://github.com/agronholm/typeguard) - Another one runtime type checker.",
      "content_html": "<h3><p>Dynamic type checkers</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/samuelcolvin/pydantic\" rel=\"noopener noreferrer\">pydantic (⭐24k)</a> - Data parsing using Python type hinting. Supports dataclasses.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/agronholm/typeguard\" rel=\"noopener noreferrer\">typeguard (⭐1.7k)</a> - Another one runtime type checker.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/40/",
      "title": "Awesome Python Typing Updates on Oct 07 - Oct 13, 2019",
      "_short_title": "Oct 07 - Oct 13, 2019",
      "_slug": "2019/40/",
      "summary": "2 awesome projects updated on Oct 07 - Oct 13, 2019",
      "_filepath": "/content/2019/40/README.md",
      "url": "https://www.trackawesomelist.com/2019/40/",
      "date_published": "2019-10-02T07:16:13.000Z",
      "date_modified": "2019-10-06T17:45:56.000Z",
      "content_text": "\n\n### Stub packages\n\n*   [pythonista-stubs (⭐13)](https://github.com/hbmartin/pythonista-stubs) - Stubs for [Pythonista](http://omz-software.com/pythonista/docs/ios/).\n\n### Tools / Working with types\n\n*   [mypyc (⭐19k)](https://github.com/python/mypy/tree/master/mypyc) - Compiles mypy-annotated, statically typed Python modules into CPython C extensions.",
      "content_html": "<h3><p>Stub packages</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/hbmartin/pythonista-stubs\" rel=\"noopener noreferrer\">pythonista-stubs (⭐13)</a> - Stubs for <a href=\"http://omz-software.com/pythonista/docs/ios/\" rel=\"noopener noreferrer\">Pythonista</a>.</li>\n</ul>\n<h3><p>Tools / Working with types</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/python/mypy/tree/master/mypyc\" rel=\"noopener noreferrer\">mypyc (⭐19k)</a> - Compiles mypy-annotated, statically typed Python modules into CPython C extensions.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/39/",
      "title": "Awesome Python Typing Updates on Sep 30 - Oct 06, 2019",
      "_short_title": "Sep 30 - Oct 06, 2019",
      "_slug": "2019/39/",
      "summary": "2 awesome projects updated on Sep 30 - Oct 06, 2019",
      "_filepath": "/content/2019/39/README.md",
      "url": "https://www.trackawesomelist.com/2019/39/",
      "date_published": "2019-09-28T09:49:09.000Z",
      "date_modified": "2019-09-28T09:49:09.000Z",
      "content_text": "\n\n### Articles / Third-party articles\n\n*   [1-minute guide to real constants in Python](https://sobolevn.me/2018/07/real-python-contants) - Full tutorial about `Final` constants and inheritance.\n*   [Simple dependent types in Python](https://sobolevn.me/2019/01/simple-dependent-types-in-python) - Full tutorial about `Literal` types.",
      "content_html": "<h3><p>Articles / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://sobolevn.me/2018/07/real-python-contants\" rel=\"noopener noreferrer\">1-minute guide to real constants in Python</a> - Full tutorial about <code>Final</code> constants and inheritance.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://sobolevn.me/2019/01/simple-dependent-types-in-python\" rel=\"noopener noreferrer\">Simple dependent types in Python</a> - Full tutorial about <code>Literal</code> types.</li>\n</ul>\n"
    },
    {
      "id": "https://www.trackawesomelist.com/2019/38/",
      "title": "Awesome Python Typing Updates on Sep 23 - Sep 29, 2019",
      "_short_title": "Sep 23 - Sep 29, 2019",
      "_slug": "2019/38/",
      "summary": "15 awesome projects updated on Sep 23 - Sep 29, 2019",
      "_filepath": "/content/2019/38/README.md",
      "url": "https://www.trackawesomelist.com/2019/38/",
      "date_published": "2019-09-19T15:39:25.000Z",
      "date_modified": "2019-09-19T15:39:25.000Z",
      "content_text": "\n\n### Static type checkers\n\n*   [pyright (⭐15k)](https://github.com/Microsoft/pyright) - Fast type checker meant for large Python source bases. It can run in a “watch” mode and performs fast incremental updates when files are modified.\n\n### Stub packages\n\n*   [django-stubs (⭐1.8k)](https://github.com/typeddjango/django-stubs) - Stubs for [Django (⭐84k)](https://github.com/django/django).\n*   [djangorestframework-stubs (⭐500)](https://github.com/typeddjango/djangorestframework-stubs) - Stubs for [DRF (⭐29k)](https://github.com/encode/django-rest-framework).\n*   [grpc-stubs (⭐40)](https://github.com/shabbyrobe/grpc-stubs) - Stubs for [grpc (⭐43k)](https://github.com/grpc/grpc).\n\n### Tools / Linters\n\n*   [flake8-annotations-complexity (⭐48)](https://github.com/best-doctor/flake8-annotations-complexity) - Plugin for flake8 to validate annotations complexity.\n\n### Tools / Testing\n\n*   [pytest-mypy-plugins (⭐115)](https://github.com/typeddjango/pytest-mypy-plugins) - Pytest plugin for testing mypy types, stubs, and plugins.\n\n### Tools / Working with types\n\n*   [mypy-protobuf (⭐685)](https://github.com/dropbox/mypy-protobuf) - Tool to generate mypy stubs from protobufs.\n\n### Tools / Mypy plugins\n\n*   [mypy-zope (⭐40)](https://github.com/Shoobx/mypy-zope) - Plugin for [zope.interface](https://zopeinterface.readthedocs.io/en/latest/) support.\n*   [mypy/plugins (⭐19k)](https://github.com/python/mypy/tree/master/mypy/plugins) - Plugins already integrated into mypy.\n\n### Integrations / Mypy plugins\n\n*   [vim-mypy (⭐100)](https://github.com/Integralist/vim-mypy) - Mypy integration for Vim.\n\n### Articles / Third-party articles\n\n*   [Testing mypy stubs, plugins, and types](https://sobolevn.me/2019/08/testing-mypy-types) - Full tutorial about testing mypy types.\n\n### Communities / Third-party articles\n\n*   [python/typing](https://gitter.im/python/typing) - Official typing gitter chat.\n*   [PythonRu#typing](https://python-ru.slack.com) - Russian slack chat (invites are [here](https://slack.python.ru/)) about types.\n\n### Related / Third-party articles\n\n*   [awesome-python (⭐250k)](https://github.com/vinta/awesome-python) - Curated list of awesome Python frameworks, libraries, software and resources.\n*   [python-typecheckers (⭐67)](https://github.com/ethanhs/python-typecheckers) - List of Python type checkers: static and runtime.",
      "content_html": "<h3><p>Static type checkers</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Microsoft/pyright\" rel=\"noopener noreferrer\">pyright (⭐15k)</a> - Fast type checker meant for large Python source bases. It can run in a “watch” mode and performs fast incremental updates when files are modified.</li>\n</ul>\n<h3><p>Stub packages</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/typeddjango/django-stubs\" rel=\"noopener noreferrer\">django-stubs (⭐1.8k)</a> - Stubs for <a href=\"https://github.com/django/django\" rel=\"noopener noreferrer\">Django (⭐84k)</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/typeddjango/djangorestframework-stubs\" rel=\"noopener noreferrer\">djangorestframework-stubs (⭐500)</a> - Stubs for <a href=\"https://github.com/encode/django-rest-framework\" rel=\"noopener noreferrer\">DRF (⭐29k)</a>.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/shabbyrobe/grpc-stubs\" rel=\"noopener noreferrer\">grpc-stubs (⭐40)</a> - Stubs for <a href=\"https://github.com/grpc/grpc\" rel=\"noopener noreferrer\">grpc (⭐43k)</a>.</li>\n</ul>\n<h3><p>Tools / Linters</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/best-doctor/flake8-annotations-complexity\" rel=\"noopener noreferrer\">flake8-annotations-complexity (⭐48)</a> - Plugin for flake8 to validate annotations complexity.</li>\n</ul>\n<h3><p>Tools / Testing</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/typeddjango/pytest-mypy-plugins\" rel=\"noopener noreferrer\">pytest-mypy-plugins (⭐115)</a> - Pytest plugin for testing mypy types, stubs, and plugins.</li>\n</ul>\n<h3><p>Tools / Working with types</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/dropbox/mypy-protobuf\" rel=\"noopener noreferrer\">mypy-protobuf (⭐685)</a> - Tool to generate mypy stubs from protobufs.</li>\n</ul>\n<h3><p>Tools / Mypy plugins</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Shoobx/mypy-zope\" rel=\"noopener noreferrer\">mypy-zope (⭐40)</a> - Plugin for <a href=\"https://zopeinterface.readthedocs.io/en/latest/\" rel=\"noopener noreferrer\">zope.interface</a> support.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/python/mypy/tree/master/mypy/plugins\" rel=\"noopener noreferrer\">mypy/plugins (⭐19k)</a> - Plugins already integrated into mypy.</li>\n</ul>\n<h3><p>Integrations / Mypy plugins</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/Integralist/vim-mypy\" rel=\"noopener noreferrer\">vim-mypy (⭐100)</a> - Mypy integration for Vim.</li>\n</ul>\n<h3><p>Articles / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://sobolevn.me/2019/08/testing-mypy-types\" rel=\"noopener noreferrer\">Testing mypy stubs, plugins, and types</a> - Full tutorial about testing mypy types.</li>\n</ul>\n<h3><p>Communities / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://gitter.im/python/typing\" rel=\"noopener noreferrer\">python/typing</a> - Official typing gitter chat.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://python-ru.slack.com\" rel=\"noopener noreferrer\">PythonRu#typing</a> - Russian slack chat (invites are <a href=\"https://slack.python.ru/\" rel=\"noopener noreferrer\">here</a>) about types.</li>\n</ul>\n<h3><p>Related / Third-party articles</p>\n</h3>\n<ul>\n<li><a href=\"https://github.com/vinta/awesome-python\" rel=\"noopener noreferrer\">awesome-python (⭐250k)</a> - Curated list of awesome Python frameworks, libraries, software and resources.</li>\n</ul>\n\n<ul>\n<li><a href=\"https://github.com/ethanhs/python-typecheckers\" rel=\"noopener noreferrer\">python-typecheckers (⭐67)</a> - List of Python type checkers: static and runtime.</li>\n</ul>\n"
    }
  ]
}
