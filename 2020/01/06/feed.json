{
  "version": "https://jsonfeed.org/version/1",
  "icon": "https://www.trackawesomelist.com/icon.png",
  "favicon": "https://www.trackawesomelist.com/favicon.ico",
  "language": "en",
  "title": "Awesome List Updates on Jan 06, 2020",
  "_site_title": "Track Awesome List",
  "description": "10 awesome lists updated today.",
  "_seo_title": "Awesome List Updates on Jan 06, 2020 - Track Awesome List",
  "feed_url": "https://www.trackawesomelist.com/feed.json",
  "home_page_url": "https://www.trackawesomelist.com",
  "items": [
    {
      "id": "https://www.trackawesomelist.com/fffaraz/awesome-cpp/",
      "title": "Awesome Cpp",
      "_slug": "fffaraz/awesome-cpp/",
      "_filepath": "/content/fffaraz/awesome-cpp/README.md",
      "url": "https://www.trackawesomelist.com/fffaraz/awesome-cpp/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Audio\n\n*   [LAME](https://lame.sourceforge.io/using.php) - LAME is a high quality MPEG Audio Layer III (MP3) encoder. \\[LGPL]",
      "content_html": "<h3><p>Audio</p>\n</h3><ul>\n<li><a href=\"https://lame.sourceforge.io/using.php\" rel=\"noopener noreferrer\">LAME</a> - LAME is a high quality MPEG Audio Layer III (MP3) encoder. [LGPL]</li>\n</ul>\n",
      "date_published": "2020-01-06T23:54:39.000Z",
      "date_modified": "2020-01-06T23:54:39.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/GustavBertram/awesome-common-lisp-learning/",
      "title": "Awesome Common Lisp Learning",
      "_slug": "GustavBertram/awesome-common-lisp-learning/",
      "_filepath": "/content/GustavBertram/awesome-common-lisp-learning/README.md",
      "url": "https://www.trackawesomelist.com/GustavBertram/awesome-common-lisp-learning/",
      "summary": "8 awesome projects updated",
      "content_text": "\n\n### How To Use\n\n*   If you get stuck, find an online community and [ask smart questions](http://www.catb.org/esr/faqs/smart-questions.html).\n\n### Lisp Environments\n\n*   Prepackaged environments\n    *   [Portacle](https://shinmera.github.io/portacle/) - A portable and multiplatform Common Lisp environment. It ships a slightly customized Emacs with SLIME, SBCL (a popular Common Lisp implementation), Quicklisp and Git. No installation needed, so it's a very quick and easy way to get going.\n    *   [Lispbox](https://common-lisp.net/project/lispbox/) - An IDE (Emacs + SLIME), Common Lisp implementation (Clozure Common Lisp) and library manager (Quicklisp), pre-packaged as archives for Windows, macOS and Linux. Descendant of \"Lisp in a Box\" [mentioned](http://www.gigamonkeys.com/book/lather-rinse-repeat-a-tour-of-the-repl.html) in Practical Common Lisp.\n    *   [Lispworks Personal Edition](http://www.lispworks.com/downloads/) - A non-Emacs based IDE for LispWorks Lisp, with some restrictions.\n    *   [Allegro Common Lisp](https://franz.com/products/allegrocl/) - Has a free [Express Edition](https://franz.com/downloads/clp/survey) IDE, and [training videos on YouTube](https://www.youtube.com/channel/UCN36UrxtyNBJPaG0kmBJNRw).\n*   For advanced users\n    *   [Articulate Common Lisp](http://articulate-lisp.com) - A HOWTO for putting together a Lisp environment, and has information on [useful libraries](http://articulate-lisp.com/project/abcs.html) and how to [structure projects](http://articulate-lisp.com/project/new-project.html).\n    *   If you're an experienced [Emacs](https://www.gnu.org/software/emacs/) user, you can just install [SLIME](https://common-lisp.net/project/slime/) and a [supported Common Lisp implementation](https://common-lisp.net/project/slime/doc/html/Platforms.html#Platforms). See the [SLIME manual](https://common-lisp.net/project/slime/doc/html/) for more details.\n    *   The Common Lisp Cookbook has more information about [installing an implementation](https://lispcookbook.github.io/cl-cookbook/getting-started.html) using an implementation manager like [Roswell (⭐1.8k)](https://github.com/roswell/roswell/wiki), or on Docker.\n\n### Online References\n\n*   [The Common Lisp Hyperspec (CLHS)](http://www.lispworks.com/documentation/common-lisp.html) - *The* language reference document for Common Lisp. Bookmark it now.\n    *   [Chapter 7](http://www.lispworks.com/documentation/HyperSpec/Body/07_.htm) - Covers the Common Lisp Object System (CLOS).\n*   [The ANSI Common Lisp Standard Draft](http://cberr.us/tech_writings/notes/common_lisp_standard_draft.html) - The last draft version of the ANSI INCITS 226-1994 (previously ANSI X3.226-1994) standard.\n    *   The draft is free, the standard isn't.\n    *   It's pretty much the same as the official standard, and some people prefer it to the CLHS.\n*   [The Common Lisp Cookbook](http://lispcookbook.github.io/cl-cookbook/) - A list of useful Lisp recipes. Also contains a list of other online sources of CL information.\n*   [Common Lisp the Language (2nd Edition) by Guy L. Steele](https://www.cs.cmu.edu/Groups/AI/html/cltl/cltl2.html) - A description of the Common Lisp language from just before it was standardized by ANSI. Don't use it as a reference.\n    *   [Cliki on CLtL2](https://cliki.net/Getting+Started) - Claims it has more useful descriptions of [LOOP](http://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node235.html#SECTION003000000000000000000) and [FORMAT](http://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node200.html) than the CLHS does.\n    *   [Stack Overflow on CLtL2](https://stackoverflow.com/questions/108537/what-are-the-main-differences-between-cltl2-and-ansi-cl) - Some recommend using CLtL2 for insight and inspiration, but to use the CLHS when programming.\n    *   [A list of differences between CLtL2 and the ANSI Common Lisp specification.](http://linuxfinances.info/info/commonlisp.html#AEN9679)\n    *   [Chapter 28](https://www.cs.cmu.edu/Groups/AI/html/cltl/clm/node260.html#SECTION003200000000000000000) - Covers the Common Lisp Object System.\n\n### Online Books\n\n*   [Common Lisp: A Gentle Introduction to Symbolic Computation by David S. Touretzky](http://www.cs.cmu.edu/~dst/LispBook/) - a good introduction for people new to programming. Contains code for really useful utilities like [DTRACE](http://www.cs.cmu.edu/~dst/Lisp/dtrace/) and [SDRAW](http://www.cs.cmu.edu/~dst/Lisp/sdraw/).\n*   [Common Lisp: An interactive approach by Stuart C. Shapiro](https://www.cse.buffalo.edu/~shapiro/Commonlisp/) - A textbook that teaches mainly through the use of exercises.\n*   [Practical Common Lisp by Peter Seibel](http://www.gigamonkeys.com/book/) - A great introduction for experienced programmers, and tries to highlight from the very beginning what makes CL different to other languages.\n*   [Common Lisp Koans (⭐3.2k)](https://github.com/google/lisp-koans) - Not exactly a book, but a set of koans to help you learn the language.\n*   [On Lisp by Paul Graham](http://www.paulgraham.com/onlisp.html) - A great book for intermediately experienced Lispers.\n*   [Let Over Lambda by Doug Hoyte](https://letoverlambda.com) - An advanced book on Lisp Macros.\n    *   The first six chapters are available online.\n    *   [Comments on Let Over Lambda](https://www.reddit.com/r/lisp/comments/3actsc/let_over_lambda/) - Several people recommend that you be comfortable with On Lisp before reading this book, and that the start is slow.\n    *   [The chapter on closures](https://letoverlambda.com/index.cl/guest/chap2.html) - Has several non-trivial examples, and demonstrates the power of this feature.\n*   [Paradigms of Artificial Intelligence Programming by Peter Norvig (⭐7.3k)](https://github.com/norvig/paip-lisp) - Has many interesting applications of Lisp, but is no longer a good reference for AI.\n\n### Offline Books\n\n*   [Land of Lisp by Conrad Barski, MD](http://landoflisp.com) - A fun introduction to Lisp that uses comics and has you writing games.\n    *   Available as an [ebook](https://www.nostarch.com/lisp.htm).\n    *   A couple of the LOOP macros are written `for x for y...` which you can change to `for x from 0 for y...` to make them work in SBCL.\n    *   Has an [errata page](http://landoflisp.com/errata.html).\n    *   Most of the book is entertaining and fairly easy, but gets hairy from about Chapter 18. It doesn't feel like later chapters introduce much, so I recommend switching to a different book at that point.\n    *   The Web server example in Ch 13, 19 and 20 will only work on CLISP, and needs the addition of HTTP response headers to render the HTML properly.\n*   [ANSI Common Lisp by Paul Graham](http://www.paulgraham.com/acl.html) - Good as a reference, covers CLOS, and has several example program implementations.\n    *   Plaintext versions of [Chapter 1](http://lib.store.yahoo.net/lib/paulgraham/acl1.txt) and [Chapter 2](http://lib.store.yahoo.net/lib/paulgraham/acl2.txt) are available online.\n*   [Common Lisp Recipes by Edmund Weitz](http://weitz.de/cl-recipes/) - A great set of Common Lisp patterns.\n*   [Object-Oriented Programming in Common Lisp by Sonya E. Keene](https://www.amazon.com/Object-Oriented-Programming-COMMON-LISP-Programmers/dp/0201175894) - An in-depth description of the CLOS, and shows how to use it with example applications.\n*   [The Art of the Metaobject Protocol by Gregor Kiczales, Jim des Rivieres, and Daniel G. Bobrow](https://www.amazon.com/Art-Metaobject-Protocol-Gregor-Kiczales/dp/0262610744/) - Describes the CLOS Metaobject Protocol (MOP).\n    *   [Chapters 5 and 6 (available online)](http://metamodular.com/CLOS-MOP/) - The specification of a metaobject protocol extension to CLOS, by Robert Strandh.\n        *   Superseded by the [modern public domain CLOS MOP specification](https://clos-mop.hexstreamsoft.com/) by Jean-Philippe Paradis ([Hexstream](https://github.com/Hexstream)).\n    *   [Adam Tornhill on AMOP](http://www.adamtornhill.com/reviews/amop.htm) - Recommends reading Practical Common Lisp, then  Object-Oriented Programming in Common Lisp, and then AMOP.\n\n### Online Community\n\n*   The [Cliki](http://cliki.net) - The Common Lisp Wiki. A great resource for all things CL. Has a great [Getting Started](http://cliki.net/Getting+Started) page and an extensive list of [Lisp books](http://cliki.net/Lisp%20books).\n*   [Lisp Subreddit](http://www.reddit.com/r/lisp/) - An active community, and has loads of useful links and reference documents in the sidebar.\n    *   [Common Lisp Subreddit](https://www.reddit.com/r/Common_Lisp) - The Subreddit for Common Lisp.\n\n### Library Management\n\n*   [Quicklisp](https://www.quicklisp.org/beta) - A package management platform for Lisp libraries.\n*   [Quickdocs](http://quickdocs.org) - Documentation for projects in Quicklisp.\n*   [State of the Common Lisp Ecosystem, 2015](http://borretti.me/article/common-lisp-sotu-2015) - Article about what libraries you should use, and why.\n*   [Articulate Common Lisp](http://articulate-lisp.com/project/abcs.html) - Lists some useful libraries.\n\n### Common Lisp Implementations\n\n*   [Allegro Common Lisp (ACL)](https://franz.com/products/allegrocl/) - Commercial, but has a free [Express Edition](https://franz.com/downloads/clp/survey).\n    *   [ACL manual](https://franz.com/support/documentation/)\n    *   [Training videos on YouTube](https://www.youtube.com/channel/UCN36UrxtyNBJPaG0kmBJNRw)\n*   [CLISP](https://clisp.sourceforge.io)\n    *   [CLISP Manual](https://clisp.sourceforge.io/impnotes.html)\n*   [Clozure Common Lisp (CCL)](https://ccl.clozure.com)\n    *   [CCL manual](https://ccl.clozure.com/manual/)\n*   [Carnegie Mellon University Common Lisp (CMUCL)](https://www.cons.org/cmucl/)\n    *   [CMUCL manual and other useful information](https://www.cons.org/cmucl/doc/index.html)\n*   [Embeddable Common Lisp (ECL)](https://common-lisp.net/project/ecl/)\n    *   [ECL manual](https://common-lisp.net/project/ecl/static/manual/)\n*   [LispWorks](http://www.lispworks.com/products/index.html) - Commercial, but as mentioned previously, has a [Personal Edition](http://www.lispworks.com/downloads/index.html) with minor limitations.\n    *   [LispWorks manual](http://www.lispworks.com/documentation/index.html)\n*   [Steel Bank Common Lisp (SBCL)](http://www.sbcl.org) - My personal favorite.\n    *   [SBCL manual](http://www.sbcl.org/manual/index.html)\n*   [Scieneer Common Lisp (SCL)](http://web.archive.org/web/20171014210404/http://www.scieneer.com/scl/) - A commercial Linux and Unix implementation, but has an unrestricted free evaluation and non-commercial use version.\n    *   [SCL manual](http://web.archive.org/web/20171014210404/http://www.scieneer.com/scl/doc/)",
      "content_html": "<h3><p>How To Use</p>\n</h3><ul>\n<li>If you get stuck, find an online community and <a href=\"http://www.catb.org/esr/faqs/smart-questions.html\" rel=\"noopener noreferrer\">ask smart questions</a>.</li>\n</ul>\n<h3><p>Lisp Environments</p>\n</h3><ul>\n<li>Prepackaged environments<ul>\n<li><a href=\"https://shinmera.github.io/portacle/\" rel=\"noopener noreferrer\">Portacle</a> - A portable and multiplatform Common Lisp environment. It ships a slightly customized Emacs with SLIME, SBCL (a popular Common Lisp implementation), Quicklisp and Git. No installation needed, so it's a very quick and easy way to get going.</li>\n<li><a href=\"https://common-lisp.net/project/lispbox/\" rel=\"noopener noreferrer\">Lispbox</a> - An IDE (Emacs + SLIME), Common Lisp implementation (Clozure Common Lisp) and library manager (Quicklisp), pre-packaged as archives for Windows, macOS and Linux. Descendant of \"Lisp in a Box\" <a href=\"http://www.gigamonkeys.com/book/lather-rinse-repeat-a-tour-of-the-repl.html\" rel=\"noopener noreferrer\">mentioned</a> in Practical Common Lisp.</li>\n<li><a href=\"http://www.lispworks.com/downloads/\" rel=\"noopener noreferrer\">Lispworks Personal Edition</a> - A non-Emacs based IDE for LispWorks Lisp, with some restrictions.</li>\n<li><a href=\"https://franz.com/products/allegrocl/\" rel=\"noopener noreferrer\">Allegro Common Lisp</a> - Has a free <a href=\"https://franz.com/downloads/clp/survey\" rel=\"noopener noreferrer\">Express Edition</a> IDE, and <a href=\"https://www.youtube.com/channel/UCN36UrxtyNBJPaG0kmBJNRw\" rel=\"noopener noreferrer\">training videos on YouTube</a>.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>For advanced users<ul>\n<li><a href=\"http://articulate-lisp.com\" rel=\"noopener noreferrer\">Articulate Common Lisp</a> - A HOWTO for putting together a Lisp environment, and has information on <a href=\"http://articulate-lisp.com/project/abcs.html\" rel=\"noopener noreferrer\">useful libraries</a> and how to <a href=\"http://articulate-lisp.com/project/new-project.html\" rel=\"noopener noreferrer\">structure projects</a>.</li>\n<li>If you're an experienced <a href=\"https://www.gnu.org/software/emacs/\" rel=\"noopener noreferrer\">Emacs</a> user, you can just install <a href=\"https://common-lisp.net/project/slime/\" rel=\"noopener noreferrer\">SLIME</a> and a <a href=\"https://common-lisp.net/project/slime/doc/html/Platforms.html#Platforms\" rel=\"noopener noreferrer\">supported Common Lisp implementation</a>. See the <a href=\"https://common-lisp.net/project/slime/doc/html/\" rel=\"noopener noreferrer\">SLIME manual</a> for more details.</li>\n<li>The Common Lisp Cookbook has more information about <a href=\"https://lispcookbook.github.io/cl-cookbook/getting-started.html\" rel=\"noopener noreferrer\">installing an implementation</a> using an implementation manager like <a href=\"https://github.com/roswell/roswell/wiki\" rel=\"noopener noreferrer\">Roswell (⭐1.8k)</a>, or on Docker.</li>\n</ul>\n</li>\n</ul>\n<h3><p>Online References</p>\n</h3><ul>\n<li><a href=\"http://www.lispworks.com/documentation/common-lisp.html\" rel=\"noopener noreferrer\">The Common Lisp Hyperspec (CLHS)</a> - <em>The</em> language reference document for Common Lisp. Bookmark it now.<ul>\n<li><a href=\"http://www.lispworks.com/documentation/HyperSpec/Body/07_.htm\" rel=\"noopener noreferrer\">Chapter 7</a> - Covers the Common Lisp Object System (CLOS).</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"http://cberr.us/tech_writings/notes/common_lisp_standard_draft.html\" rel=\"noopener noreferrer\">The ANSI Common Lisp Standard Draft</a> - The last draft version of the ANSI INCITS 226-1994 (previously ANSI X3.226-1994) standard.<ul>\n<li>The draft is free, the standard isn't.</li>\n<li>It's pretty much the same as the official standard, and some people prefer it to the CLHS.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"http://lispcookbook.github.io/cl-cookbook/\" rel=\"noopener noreferrer\">The Common Lisp Cookbook</a> - A list of useful Lisp recipes. Also contains a list of other online sources of CL information.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.cs.cmu.edu/Groups/AI/html/cltl/cltl2.html\" rel=\"noopener noreferrer\">Common Lisp the Language (2nd Edition) by Guy L. Steele</a> - A description of the Common Lisp language from just before it was standardized by ANSI. Don't use it as a reference.<ul>\n<li><a href=\"https://cliki.net/Getting+Started\" rel=\"noopener noreferrer\">Cliki on CLtL2</a> - Claims it has more useful descriptions of <a href=\"http://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node235.html#SECTION003000000000000000000\" rel=\"noopener noreferrer\">LOOP</a> and <a href=\"http://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node200.html\" rel=\"noopener noreferrer\">FORMAT</a> than the CLHS does.</li>\n<li><a href=\"https://stackoverflow.com/questions/108537/what-are-the-main-differences-between-cltl2-and-ansi-cl\" rel=\"noopener noreferrer\">Stack Overflow on CLtL2</a> - Some recommend using CLtL2 for insight and inspiration, but to use the CLHS when programming.</li>\n<li><a href=\"http://linuxfinances.info/info/commonlisp.html#AEN9679\" rel=\"noopener noreferrer\">A list of differences between CLtL2 and the ANSI Common Lisp specification.</a></li>\n<li><a href=\"https://www.cs.cmu.edu/Groups/AI/html/cltl/clm/node260.html#SECTION003200000000000000000\" rel=\"noopener noreferrer\">Chapter 28</a> - Covers the Common Lisp Object System.</li>\n</ul>\n</li>\n</ul>\n<h3><p>Online Books</p>\n</h3><ul>\n<li><a href=\"http://www.cs.cmu.edu/~dst/LispBook/\" rel=\"noopener noreferrer\">Common Lisp: A Gentle Introduction to Symbolic Computation by David S. Touretzky</a> - a good introduction for people new to programming. Contains code for really useful utilities like <a href=\"http://www.cs.cmu.edu/~dst/Lisp/dtrace/\" rel=\"noopener noreferrer\">DTRACE</a> and <a href=\"http://www.cs.cmu.edu/~dst/Lisp/sdraw/\" rel=\"noopener noreferrer\">SDRAW</a>.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.cse.buffalo.edu/~shapiro/Commonlisp/\" rel=\"noopener noreferrer\">Common Lisp: An interactive approach by Stuart C. Shapiro</a> - A textbook that teaches mainly through the use of exercises.</li>\n</ul>\n<ul>\n<li><a href=\"http://www.gigamonkeys.com/book/\" rel=\"noopener noreferrer\">Practical Common Lisp by Peter Seibel</a> - A great introduction for experienced programmers, and tries to highlight from the very beginning what makes CL different to other languages.</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/google/lisp-koans\" rel=\"noopener noreferrer\">Common Lisp Koans (⭐3.2k)</a> - Not exactly a book, but a set of koans to help you learn the language.</li>\n</ul>\n<ul>\n<li><a href=\"http://www.paulgraham.com/onlisp.html\" rel=\"noopener noreferrer\">On Lisp by Paul Graham</a> - A great book for intermediately experienced Lispers.</li>\n</ul>\n<ul>\n<li><a href=\"https://letoverlambda.com\" rel=\"noopener noreferrer\">Let Over Lambda by Doug Hoyte</a> - An advanced book on Lisp Macros.<ul>\n<li>The first six chapters are available online.</li>\n<li><a href=\"https://www.reddit.com/r/lisp/comments/3actsc/let_over_lambda/\" rel=\"noopener noreferrer\">Comments on Let Over Lambda</a> - Several people recommend that you be comfortable with On Lisp before reading this book, and that the start is slow.</li>\n<li><a href=\"https://letoverlambda.com/index.cl/guest/chap2.html\" rel=\"noopener noreferrer\">The chapter on closures</a> - Has several non-trivial examples, and demonstrates the power of this feature.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/norvig/paip-lisp\" rel=\"noopener noreferrer\">Paradigms of Artificial Intelligence Programming by Peter Norvig (⭐7.3k)</a> - Has many interesting applications of Lisp, but is no longer a good reference for AI.</li>\n</ul>\n<h3><p>Offline Books</p>\n</h3><ul>\n<li><a href=\"http://landoflisp.com\" rel=\"noopener noreferrer\">Land of Lisp by Conrad Barski, MD</a> - A fun introduction to Lisp that uses comics and has you writing games.<ul>\n<li>Available as an <a href=\"https://www.nostarch.com/lisp.htm\" rel=\"noopener noreferrer\">ebook</a>.</li>\n<li>A couple of the LOOP macros are written <code>for x for y...</code> which you can change to <code>for x from 0 for y...</code> to make them work in SBCL.</li>\n<li>Has an <a href=\"http://landoflisp.com/errata.html\" rel=\"noopener noreferrer\">errata page</a>.</li>\n<li>Most of the book is entertaining and fairly easy, but gets hairy from about Chapter 18. It doesn't feel like later chapters introduce much, so I recommend switching to a different book at that point.</li>\n<li>The Web server example in Ch 13, 19 and 20 will only work on CLISP, and needs the addition of HTTP response headers to render the HTML properly.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"http://www.paulgraham.com/acl.html\" rel=\"noopener noreferrer\">ANSI Common Lisp by Paul Graham</a> - Good as a reference, covers CLOS, and has several example program implementations.<ul>\n<li>Plaintext versions of <a href=\"http://lib.store.yahoo.net/lib/paulgraham/acl1.txt\" rel=\"noopener noreferrer\">Chapter 1</a> and <a href=\"http://lib.store.yahoo.net/lib/paulgraham/acl2.txt\" rel=\"noopener noreferrer\">Chapter 2</a> are available online.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"http://weitz.de/cl-recipes/\" rel=\"noopener noreferrer\">Common Lisp Recipes by Edmund Weitz</a> - A great set of Common Lisp patterns.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.amazon.com/Object-Oriented-Programming-COMMON-LISP-Programmers/dp/0201175894\" rel=\"noopener noreferrer\">Object-Oriented Programming in Common Lisp by Sonya E. Keene</a> - An in-depth description of the CLOS, and shows how to use it with example applications.</li>\n</ul>\n<ul>\n<li><a href=\"https://www.amazon.com/Art-Metaobject-Protocol-Gregor-Kiczales/dp/0262610744/\" rel=\"noopener noreferrer\">The Art of the Metaobject Protocol by Gregor Kiczales, Jim des Rivieres, and Daniel G. Bobrow</a> - Describes the CLOS Metaobject Protocol (MOP).<ul>\n<li><a href=\"http://metamodular.com/CLOS-MOP/\" rel=\"noopener noreferrer\">Chapters 5 and 6 (available online)</a> - The specification of a metaobject protocol extension to CLOS, by Robert Strandh.<ul>\n<li>Superseded by the <a href=\"https://clos-mop.hexstreamsoft.com/\" rel=\"noopener noreferrer\">modern public domain CLOS MOP specification</a> by Jean-Philippe Paradis (<a href=\"https://github.com/Hexstream\" rel=\"noopener noreferrer\">Hexstream</a>).</li>\n</ul>\n</li>\n<li><a href=\"http://www.adamtornhill.com/reviews/amop.htm\" rel=\"noopener noreferrer\">Adam Tornhill on AMOP</a> - Recommends reading Practical Common Lisp, then  Object-Oriented Programming in Common Lisp, and then AMOP.</li>\n</ul>\n</li>\n</ul>\n<h3><p>Online Community</p>\n</h3><ul>\n<li>The <a href=\"http://cliki.net\" rel=\"noopener noreferrer\">Cliki</a> - The Common Lisp Wiki. A great resource for all things CL. Has a great <a href=\"http://cliki.net/Getting+Started\" rel=\"noopener noreferrer\">Getting Started</a> page and an extensive list of <a href=\"http://cliki.net/Lisp%20books\" rel=\"noopener noreferrer\">Lisp books</a>.</li>\n</ul>\n<ul>\n<li><a href=\"http://www.reddit.com/r/lisp/\" rel=\"noopener noreferrer\">Lisp Subreddit</a> - An active community, and has loads of useful links and reference documents in the sidebar.<ul>\n<li><a href=\"https://www.reddit.com/r/Common_Lisp\" rel=\"noopener noreferrer\">Common Lisp Subreddit</a> - The Subreddit for Common Lisp.</li>\n</ul>\n</li>\n</ul>\n<h3><p>Library Management</p>\n</h3><ul>\n<li><a href=\"https://www.quicklisp.org/beta\" rel=\"noopener noreferrer\">Quicklisp</a> - A package management platform for Lisp libraries.</li>\n</ul>\n<ul>\n<li><a href=\"http://quickdocs.org\" rel=\"noopener noreferrer\">Quickdocs</a> - Documentation for projects in Quicklisp.</li>\n</ul>\n<ul>\n<li><a href=\"http://borretti.me/article/common-lisp-sotu-2015\" rel=\"noopener noreferrer\">State of the Common Lisp Ecosystem, 2015</a> - Article about what libraries you should use, and why.</li>\n</ul>\n<ul>\n<li><a href=\"http://articulate-lisp.com/project/abcs.html\" rel=\"noopener noreferrer\">Articulate Common Lisp</a> - Lists some useful libraries.</li>\n</ul>\n<h3><p>Common Lisp Implementations</p>\n</h3><ul>\n<li><a href=\"https://franz.com/products/allegrocl/\" rel=\"noopener noreferrer\">Allegro Common Lisp (ACL)</a> - Commercial, but has a free <a href=\"https://franz.com/downloads/clp/survey\" rel=\"noopener noreferrer\">Express Edition</a>.<ul>\n<li><a href=\"https://franz.com/support/documentation/\" rel=\"noopener noreferrer\">ACL manual</a></li>\n<li><a href=\"https://www.youtube.com/channel/UCN36UrxtyNBJPaG0kmBJNRw\" rel=\"noopener noreferrer\">Training videos on YouTube</a></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://clisp.sourceforge.io\" rel=\"noopener noreferrer\">CLISP</a><ul>\n<li><a href=\"https://clisp.sourceforge.io/impnotes.html\" rel=\"noopener noreferrer\">CLISP Manual</a></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://ccl.clozure.com\" rel=\"noopener noreferrer\">Clozure Common Lisp (CCL)</a><ul>\n<li><a href=\"https://ccl.clozure.com/manual/\" rel=\"noopener noreferrer\">CCL manual</a></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://www.cons.org/cmucl/\" rel=\"noopener noreferrer\">Carnegie Mellon University Common Lisp (CMUCL)</a><ul>\n<li><a href=\"https://www.cons.org/cmucl/doc/index.html\" rel=\"noopener noreferrer\">CMUCL manual and other useful information</a></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://common-lisp.net/project/ecl/\" rel=\"noopener noreferrer\">Embeddable Common Lisp (ECL)</a><ul>\n<li><a href=\"https://common-lisp.net/project/ecl/static/manual/\" rel=\"noopener noreferrer\">ECL manual</a></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"http://www.lispworks.com/products/index.html\" rel=\"noopener noreferrer\">LispWorks</a> - Commercial, but as mentioned previously, has a <a href=\"http://www.lispworks.com/downloads/index.html\" rel=\"noopener noreferrer\">Personal Edition</a> with minor limitations.<ul>\n<li><a href=\"http://www.lispworks.com/documentation/index.html\" rel=\"noopener noreferrer\">LispWorks manual</a></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"http://www.sbcl.org\" rel=\"noopener noreferrer\">Steel Bank Common Lisp (SBCL)</a> - My personal favorite.<ul>\n<li><a href=\"http://www.sbcl.org/manual/index.html\" rel=\"noopener noreferrer\">SBCL manual</a></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"http://web.archive.org/web/20171014210404/http://www.scieneer.com/scl/\" rel=\"noopener noreferrer\">Scieneer Common Lisp (SCL)</a> - A commercial Linux and Unix implementation, but has an unrestricted free evaluation and non-commercial use version.<ul>\n<li><a href=\"http://web.archive.org/web/20171014210404/http://www.scieneer.com/scl/doc/\" rel=\"noopener noreferrer\">SCL manual</a></li>\n</ul>\n</li>\n</ul>\n",
      "date_published": "2020-01-06T20:18:17.000Z",
      "date_modified": "2020-01-06T20:18:17.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/veelenga/awesome-crystal/",
      "title": "Awesome Crystal",
      "_slug": "veelenga/awesome-crystal/",
      "_filepath": "/content/veelenga/awesome-crystal/README.md",
      "url": "https://www.trackawesomelist.com/veelenga/awesome-crystal/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Data Formats\n\n*   [JSON::OnSteroids (⭐25)](https://github.com/anykeyh/json_on_steroids) - handle and mutate JSON document easily",
      "content_html": "<h3><p>Data Formats</p>\n</h3><ul>\n<li><a href=\"https://github.com/anykeyh/json_on_steroids\" rel=\"noopener noreferrer\">JSON::OnSteroids (⭐25)</a> - handle and mutate JSON document easily</li>\n</ul>\n",
      "date_published": "2020-01-06T15:16:13.000Z",
      "date_modified": "2020-01-06T15:16:13.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/accelerated-text/awesome-nlg/",
      "title": "Awesome Nlg",
      "_slug": "accelerated-text/awesome-nlg/",
      "_filepath": "/content/accelerated-text/awesome-nlg/README.md",
      "url": "https://www.trackawesomelist.com/accelerated-text/awesome-nlg/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Neural Natural Language Generation\n\n*   [Texar (⭐2.4k)](https://github.com/asyml/texar) - Texar is a toolkit aiming to support a broad set of machine learning, especially natural language processing and text generation tasks.",
      "content_html": "<h3><p>Neural Natural Language Generation</p>\n</h3><ul>\n<li><a href=\"https://github.com/asyml/texar\" rel=\"noopener noreferrer\">Texar (⭐2.4k)</a> - Texar is a toolkit aiming to support a broad set of machine learning, especially natural language processing and text generation tasks.</li>\n</ul>\n",
      "date_published": "2020-01-06T15:07:36.000Z",
      "date_modified": "2020-01-06T15:07:36.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/CodyReichert/awesome-cl/",
      "title": "Awesome Cl",
      "_slug": "CodyReichert/awesome-cl/",
      "_filepath": "/content/CodyReichert/awesome-cl/README.md",
      "url": "https://www.trackawesomelist.com/CodyReichert/awesome-cl/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### YAML\n\n*   [base-lisp-image (⭐40)](https://github.com/40ants/base-lisp-image) - base\n    Docker image for Common Lisp projects with SBCL or CCL and the latest\n    ASDF, Qlot and Roswell.\n\n### Online editors / Third-party APIs\n\n*   [Judge0 IDE](https://ide.judge0.com/?lUpj) is an online editor which supports Common Lisp (SBCL). [MIT](https://opensource.org/licenses/MIT).",
      "content_html": "<h3><p>YAML</p>\n</h3><ul>\n<li><a href=\"https://github.com/40ants/base-lisp-image\" rel=\"noopener noreferrer\">base-lisp-image (⭐40)</a> - base\nDocker image for Common Lisp projects with SBCL or CCL and the latest\nASDF, Qlot and Roswell.</li>\n</ul>\n<h3><p>Online editors / Third-party APIs</p>\n</h3><ul>\n<li><a href=\"https://ide.judge0.com/?lUpj\" rel=\"noopener noreferrer\">Judge0 IDE</a> is an online editor which supports Common Lisp (SBCL). <a href=\"https://opensource.org/licenses/MIT\" rel=\"noopener noreferrer\">MIT</a>.</li>\n</ul>\n",
      "date_published": "2020-01-06T13:29:25.000Z",
      "date_modified": "2020-01-06T13:29:25.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/sdras/awesome-actions/",
      "title": "Awesome Actions",
      "_slug": "sdras/awesome-actions/",
      "_filepath": "/content/sdras/awesome-actions/README.md",
      "url": "https://www.trackawesomelist.com/sdras/awesome-actions/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Tutorials / Terraform\n\n*   [GitHub Actions Advent Calendar](https://www.edwardthomson.com/blog/github_actions_advent_calendar.html)",
      "content_html": "<h3><p>Tutorials / Terraform</p>\n</h3><ul>\n<li><a href=\"https://www.edwardthomson.com/blog/github_actions_advent_calendar.html\" rel=\"noopener noreferrer\">GitHub Actions Advent Calendar</a></li>\n</ul>\n",
      "date_published": "2020-01-06T12:24:40.000Z",
      "date_modified": "2020-01-06T12:24:40.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/rothgar/awesome-tmux/",
      "title": "Awesome Tmux",
      "_slug": "rothgar/awesome-tmux/",
      "_filepath": "/content/rothgar/awesome-tmux/README.md",
      "url": "https://www.trackawesomelist.com/rothgar/awesome-tmux/",
      "summary": "2 awesome projects updated",
      "content_text": "\n\n### Status Bar\n\n*   [gitmux (⭐669)](https://github.com/arl/gitmux) Show Git status in tmux status bar\n\n### Plugins\n\n*   [tmux-spotify (⭐116)](https://github.com/xamut/tmux-spotify) Show a nice menu to manage Spotify application",
      "content_html": "<h3><p>Status Bar</p>\n</h3><ul>\n<li><a href=\"https://github.com/arl/gitmux\" rel=\"noopener noreferrer\">gitmux (⭐669)</a> Show Git status in tmux status bar</li>\n</ul>\n<h3><p>Plugins</p>\n</h3><ul>\n<li><a href=\"https://github.com/xamut/tmux-spotify\" rel=\"noopener noreferrer\">tmux-spotify (⭐116)</a> Show a nice menu to manage Spotify application</li>\n</ul>\n",
      "date_published": "2020-01-06T11:32:10.000Z",
      "date_modified": "2020-01-06T14:54:12.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/Siilwyn/awesome-pixel-art/",
      "title": "Awesome Pixel Art",
      "_slug": "Siilwyn/awesome-pixel-art/",
      "_filepath": "/content/Siilwyn/awesome-pixel-art/README.md",
      "url": "https://www.trackawesomelist.com/Siilwyn/awesome-pixel-art/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Tutorials / Basics\n\n*   [Getting started from scratch with Aseprite](https://medium.com/pixel-grimoire/how-to-start-making-pixel-art-2d1e31a5ceab)",
      "content_html": "<h3><p>Tutorials / Basics</p>\n</h3><ul>\n<li><a href=\"https://medium.com/pixel-grimoire/how-to-start-making-pixel-art-2d1e31a5ceab\" rel=\"noopener noreferrer\">Getting started from scratch with Aseprite</a></li>\n</ul>\n",
      "date_published": "2020-01-06T09:12:41.000Z",
      "date_modified": "2020-01-06T09:12:41.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/sindresorhus/amas/",
      "title": "Amas",
      "_slug": "sindresorhus/amas/",
      "_filepath": "/content/sindresorhus/amas/README.md",
      "url": "https://www.trackawesomelist.com/sindresorhus/amas/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### Ask these people anything!\n\n*   [Ahmad Ainul Rizki](https://github.com/awanisius/ama) - Full-stack developer, part-time open-sourcerer, and interested in functional languages.",
      "content_html": "<h3><p>Ask these people anything!</p>\n</h3><ul>\n<li><a href=\"https://github.com/awanisius/ama\" rel=\"noopener noreferrer\">Ahmad Ainul Rizki</a> - Full-stack developer, part-time open-sourcerer, and interested in functional languages.</li>\n</ul>\n",
      "date_published": "2020-01-06T07:12:08.000Z",
      "date_modified": "2020-01-06T07:12:08.000Z"
    },
    {
      "id": "https://www.trackawesomelist.com/cicdops/awesome-ciandcd/",
      "title": "Awesome Ciandcd",
      "_slug": "cicdops/awesome-ciandcd/",
      "_filepath": "/content/cicdops/awesome-ciandcd/README.md",
      "url": "https://www.trackawesomelist.com/cicdops/awesome-ciandcd/",
      "summary": "1 awesome projects updated",
      "content_text": "\n\n### secure tools\n\n*   [whitesource](https://www.whitesourcesoftware.com/) The simplest way to secure and manage open source components in your software.",
      "content_html": "<h3><p>secure tools</p>\n</h3><ul>\n<li><a href=\"https://www.whitesourcesoftware.com/\" rel=\"noopener noreferrer\">whitesource</a> The simplest way to secure and manage open source components in your software.</li>\n</ul>\n",
      "date_published": "2020-01-06T07:05:41.000Z",
      "date_modified": "2020-01-06T07:05:41.000Z"
    }
  ]
}
